Created by PLY version 3.7 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> SourceFile
Rule 1     SourceFile -> PackageClause SEMICOLON ImportDecl_curl TopLevelDecl_curl
Rule 2     OpenS -> <empty>
Rule 3     CloseS -> <empty>
Rule 4     OpenStructS -> <empty>
Rule 5     CloseStructS -> <empty>
Rule 6     TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON
Rule 7     TopLevelDecl_curl -> <empty>
Rule 8     ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON
Rule 9     ImportDecl_curl -> <empty>
Rule 10    PackageClause -> PACKAGE ID
Rule 11    ImportDecl -> IMPORT ImportSpec
Rule 12    ImportDecl -> IMPORT LPAREN ImportSpec_curl RPAREN
Rule 13    ImportSpec_curl -> ImportSpec_curl ImportSpec SEMICOLON
Rule 14    ImportSpec_curl -> <empty>
Rule 15    ImportSpec -> ID ImportPath
Rule 16    ImportSpec -> ImportPath
Rule 17    ImportPath -> STRING
Rule 18    TopLevelDecl -> Declaration
Rule 19    TopLevelDecl -> FunctionDecl
Rule 20    Declaration -> ConstDecl
Rule 21    Declaration -> StructDecl
Rule 22    Declaration -> VarDecl
Rule 23    ConstDecl -> CONST ConstSpec
Rule 24    ConstDecl -> CONST LPAREN ConstSpec_curl RPAREN
Rule 25    ConstSpec_curl -> ConstSpec_curl ConstSpec SEMICOLON
Rule 26    ConstSpec_curl -> <empty>
Rule 27    ConstSpec -> IdentifierList ID ASSIGN ExpressionList
Rule 28    IdentifierList -> ID
Rule 29    IdentifierList -> ID COMMA IdentifierList
Rule 30    ExpressionList -> Expression
Rule 31    ExpressionList -> ExpressionList COMMA Expression
Rule 32    StructDecl -> TYPE StructName StructType
Rule 33    StructName -> ID
Rule 34    VarDecl -> VAR VarSpec
Rule 35    VarDecl -> VAR LPAREN VarSpec_curl RPAREN
Rule 36    VarSpec_curl -> VarSpec_curl VarSpec SEMICOLON
Rule 37    VarSpec_curl -> <empty>
Rule 38    VarSpec -> IdentifierList Type ASSIGN ExpressionList
Rule 39    VarSpec -> IdentifierList ID ASSIGN ExpressionList
Rule 40    VarSpec -> IdentifierList ASSIGN ExpressionList
Rule 41    VarSpec -> IdentifierList ID
Rule 42    VarSpec -> IdentifierList Type
Rule 43    FunctionDecl -> FUNC SetBase FuncName OpenS Signature Block CloseBase CloseS
Rule 44    SetBase -> <empty>
Rule 45    CloseBase -> <empty>
Rule 46    FuncName -> ID
Rule 47    Type -> LPAREN Type RPAREN
Rule 48    Type -> LPAREN ID RPAREN
Rule 49    Type -> TypeLit
Rule 50    TypeLit -> ArrayType
Rule 51    TypeLit -> PointerType
Rule 52    ArrayType -> LBRACK INT RBRACK Type
Rule 53    ArrayType -> LBRACK INT RBRACK ID
Rule 54    StructType -> STRUCT OpenStructS LBRACE FieldDecl_curl RBRACE CloseStructS
Rule 55    FieldDecl_curl -> FieldDecl_curl FieldDecl SEMICOLON
Rule 56    FieldDecl_curl -> <empty>
Rule 57    FieldDecl -> ID COMMA IdentifierList Type
Rule 58    FieldDecl -> ID COMMA IdentifierList ID
Rule 59    FieldDecl -> ID Type
Rule 60    FieldDecl -> ID ID
Rule 61    FieldDecl -> ID STRUCT MUL ID
Rule 62    FieldDecl -> ID COMMA IdentifierList STRUCT MUL ID
Rule 63    PointerType -> MUL Type
Rule 64    PointerType -> MUL ID
Rule 65    Signature -> Parameters Result
Rule 66    Result -> LPAREN TypeList RPAREN
Rule 67    Result -> <empty>
Rule 68    TypeList -> ID
Rule 69    TypeList -> Type
Rule 70    TypeList -> TypeList COMMA ID
Rule 71    TypeList -> TypeList COMMA Type
Rule 72    Parameters -> LPAREN RPAREN
Rule 73    Parameters -> LPAREN ParameterList RPAREN
Rule 74    Parameters -> LPAREN ParameterList COMMA RPAREN
Rule 75    ParameterList -> ParameterDecl
Rule 76    ParameterList -> ParameterList COMMA ParameterDecl
Rule 77    ParameterDecl -> ParaIdList Type
Rule 78    ParameterDecl -> ID Type
Rule 79    ParameterDecl -> ParaIdList ID
Rule 80    ParameterDecl -> ID ID
Rule 81    ParaIdList -> ID COMMA ID
Rule 82    ParaIdList -> ParaIdList COMMA ID
Rule 83    Block -> LBRACE StatementList RBRACE
Rule 84    StatementList -> Statement_curl
Rule 85    Statement_curl -> Statement_curl Statement SEMICOLON
Rule 86    Statement_curl -> <empty>
Rule 87    Expression -> UnaryExpr
Rule 88    Expression -> Expression BinaryOp UnaryExpr
Rule 89    UnaryExpr -> PrimaryExpr
Rule 90    UnaryExpr -> UnaryOp UnaryExpr
Rule 91    BinaryOp -> LOR
Rule 92    BinaryOp -> LAND
Rule 93    BinaryOp -> RelOp
Rule 94    BinaryOp -> AddOp
Rule 95    BinaryOp -> MulOp
Rule 96    RelOp -> EQL
Rule 97    RelOp -> NEQ
Rule 98    RelOp -> LTN
Rule 99    RelOp -> LEQ
Rule 100   RelOp -> GTN
Rule 101   RelOp -> GEQ
Rule 102   AddOp -> ADD
Rule 103   AddOp -> SUB
Rule 104   AddOp -> OR
Rule 105   AddOp -> XOR
Rule 106   MulOp -> MUL
Rule 107   MulOp -> DIV
Rule 108   MulOp -> MOD
Rule 109   MulOp -> SHL
Rule 110   MulOp -> SHR
Rule 111   MulOp -> AND
Rule 112   MulOp -> AND_NOT
Rule 113   UnaryOp -> ADD
Rule 114   UnaryOp -> SUB
Rule 115   UnaryOp -> NOT
Rule 116   UnaryOp -> XOR
Rule 117   UnaryOp -> MUL
Rule 118   UnaryOp -> AND
Rule 119   PrimaryExpr -> Literal
Rule 120   PrimaryExpr -> ID
Rule 121   PrimaryExpr -> PrimaryExpr DOT ID
Rule 122   PrimaryExpr -> LPAREN Expression RPAREN
Rule 123   PrimaryExpr -> PrimaryExpr Index
Rule 124   PrimaryExpr -> PrimaryExpr Arguments
Rule 125   Index -> LBRACK Expression RBRACK
Rule 126   Arguments -> LPAREN RPAREN
Rule 127   Arguments -> LPAREN ExpressionList RPAREN
Rule 128   Arguments -> LPAREN ExpressionList COMMA RPAREN
Rule 129   Literal -> BasicLit
Rule 130   BasicLit -> IntLit
Rule 131   BasicLit -> FloatLit
Rule 132   BasicLit -> RuneLit
Rule 133   BasicLit -> StringLit
Rule 134   BasicLit -> TrueLit
Rule 135   BasicLit -> FalseLit
Rule 136   TrueLit -> TRUE
Rule 137   FalseLit -> FALSE
Rule 138   IntLit -> INT
Rule 139   FloatLit -> FLOAT
Rule 140   RuneLit -> RUNE
Rule 141   StringLit -> STRING
Rule 142   Statement -> Declaration
Rule 143   Statement -> SimpleStmt
Rule 144   Statement -> ReturnStmt
Rule 145   Statement -> BreakStmt
Rule 146   Statement -> ContinueStmt
Rule 147   Statement -> IfStmt
Rule 148   Statement -> OpenS Block CloseS
Rule 149   Statement -> SwitchStmt
Rule 150   Statement -> ForStmt
Rule 151   SimpleStmt -> Expression
Rule 152   SimpleStmt -> IncDecStmt
Rule 153   SimpleStmt -> Assignment
Rule 154   SimpleStmt -> ShortVarDecl
Rule 155   SimpleStmt -> <empty>
Rule 156   IncDecStmt -> Expression INC
Rule 157   IncDecStmt -> Expression DEC
Rule 158   Assignment -> ExpressionList AssignOp ExpressionList
Rule 159   AssignOp -> ADD_ASSIGN
Rule 160   AssignOp -> SUB_ASSIGN
Rule 161   AssignOp -> MUL_ASSIGN
Rule 162   AssignOp -> DIV_ASSIGN
Rule 163   AssignOp -> MOD_ASSIGN
Rule 164   AssignOp -> OR_ASSIGN
Rule 165   AssignOp -> XOR_ASSIGN
Rule 166   AssignOp -> SHL_ASSIGN
Rule 167   AssignOp -> SHR_ASSIGN
Rule 168   AssignOp -> ASSIGN
Rule 169   ReturnStmt -> RETURN ExpressionList
Rule 170   ReturnStmt -> RETURN
Rule 171   BreakStmt -> BREAK ID
Rule 172   BreakStmt -> BREAK
Rule 173   ContinueStmt -> CONTINUE ID
Rule 174   ContinueStmt -> CONTINUE
Rule 175   ShortVarDecl -> IdentifierList DEFINE ExpressionList
Rule 176   IfStmt -> IF OpenS Expression Block CloseS
Rule 177   IfStmt -> IF OpenS Expression Block CloseS ELSE IfStmt
Rule 178   IfStmt -> IF OpenS Expression Block CloseS ELSE OpenS Block CloseS
Rule 179   SwitchStmt -> SWITCH ExpressionName LBRACE OpenW ExprCaseClause_curl CloseW RBRACE
Rule 180   ExpressionName -> Expression
Rule 181   ExprCaseClause_curl -> ExprCaseClause ExprCaseClause_curl
Rule 182   ExprCaseClause_curl -> DefCaseClause
Rule 183   ExprCaseClause_curl -> ExprCaseClause
Rule 184   ExprCaseClause -> OpenS CASE Expression COLON StatementList CloseS
Rule 185   DefCaseClause -> DEFAULT COLON OpenS StatementList CloseS
Rule 186   ForStmt -> FOR OpenS OpenF Expression Block CloseF CloseS
Rule 187   ForStmt -> FOR OpenS OpenF ForClause Block CloseF CloseS
Rule 188   ForStmt -> FOR OpenS OpenF Block CloseF CloseS
Rule 189   OpenF -> <empty>
Rule 190   CloseF -> <empty>
Rule 191   OpenW -> <empty>
Rule 192   CloseW -> <empty>
Rule 193   ForClause -> SimpleStmt SEMICOLON SEMICOLON SimpleStmt
Rule 194   ForClause -> SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt

Terminals, with rules where they appear

ADD                  : 102 113
ADD_ASSIGN           : 159
AND                  : 111 118
AND_NOT              : 112
ASSIGN               : 27 38 39 40 168
BREAK                : 171 172
CASE                 : 184
COLON                : 184 185
COMMA                : 29 31 57 58 62 70 71 74 76 81 82 128
CONST                : 23 24
CONTINUE             : 173 174
DEC                  : 157
DEFAULT              : 185
DEFINE               : 175
DIV                  : 107
DIV_ASSIGN           : 162
DOT                  : 121
ELSE                 : 177 178
EQL                  : 96
FALSE                : 137
FLOAT                : 139
FOR                  : 186 187 188
FUNC                 : 43
GEQ                  : 101
GTN                  : 100
ID                   : 10 15 27 28 29 33 39 41 46 48 53 57 58 58 59 60 60 61 61 62 62 64 68 70 78 79 80 80 81 81 82 120 121 171 173
IF                   : 176 177 178
IMPORT               : 11 12
INC                  : 156
INT                  : 52 53 138
LAND                 : 92
LBRACE               : 54 83 179
LBRACK               : 52 53 125
LEQ                  : 99
LOR                  : 91
LPAREN               : 12 24 35 47 48 66 72 73 74 122 126 127 128
LTN                  : 98
MOD                  : 108
MOD_ASSIGN           : 163
MUL                  : 61 62 63 64 106 117
MUL_ASSIGN           : 161
NEQ                  : 97
NOT                  : 115
OR                   : 104
OR_ASSIGN            : 164
PACKAGE              : 10
RBRACE               : 54 83 179
RBRACK               : 52 53 125
RETURN               : 169 170
RPAREN               : 12 24 35 47 48 66 72 73 74 122 126 127 128
RUNE                 : 140
SEMICOLON            : 1 6 8 13 25 36 55 85 193 193 194 194
SHL                  : 109
SHL_ASSIGN           : 166
SHR                  : 110
SHR_ASSIGN           : 167
STRING               : 17 141
STRUCT               : 54 61 62
SUB                  : 103 114
SUB_ASSIGN           : 160
SWITCH               : 179
TRUE                 : 136
TYPE                 : 32
VAR                  : 34 35
XOR                  : 105 116
XOR_ASSIGN           : 165
error                : 

Nonterminals, with rules where they appear

AddOp                : 94
Arguments            : 124
ArrayType            : 50
AssignOp             : 158
Assignment           : 153
BasicLit             : 129
BinaryOp             : 88
Block                : 43 148 176 177 178 178 186 187 188
BreakStmt            : 145
CloseBase            : 43
CloseF               : 186 187 188
CloseS               : 43 148 176 177 178 178 184 185 186 187 188
CloseStructS         : 54
CloseW               : 179
ConstDecl            : 20
ConstSpec            : 23 25
ConstSpec_curl       : 24 25
ContinueStmt         : 146
Declaration          : 18 142
DefCaseClause        : 182
ExprCaseClause       : 181 183
ExprCaseClause_curl  : 179 181
Expression           : 30 31 88 122 125 151 156 157 176 177 178 180 184 186 194
ExpressionList       : 27 31 38 39 40 127 128 158 158 169 175
ExpressionName       : 179
FalseLit             : 135
FieldDecl            : 55
FieldDecl_curl       : 54 55
FloatLit             : 131
ForClause            : 187
ForStmt              : 150
FuncName             : 43
FunctionDecl         : 19
IdentifierList       : 27 29 38 39 40 41 42 57 58 62 175
IfStmt               : 147 177
ImportDecl           : 8
ImportDecl_curl      : 1 8
ImportPath           : 15 16
ImportSpec           : 11 13
ImportSpec_curl      : 12 13
IncDecStmt           : 152
Index                : 123
IntLit               : 130
Literal              : 119
MulOp                : 95
OpenF                : 186 187 188
OpenS                : 43 148 176 177 178 178 184 185 186 187 188
OpenStructS          : 54
OpenW                : 179
PackageClause        : 1
ParaIdList           : 77 79 82
ParameterDecl        : 75 76
ParameterList        : 73 74 76
Parameters           : 65
PointerType          : 51
PrimaryExpr          : 89 121 123 124
RelOp                : 93
Result               : 65
ReturnStmt           : 144
RuneLit              : 132
SetBase              : 43
ShortVarDecl         : 154
Signature            : 43
SimpleStmt           : 143 193 193 194 194
SourceFile           : 0
Statement            : 85
StatementList        : 83 184 185
Statement_curl       : 84 85
StringLit            : 133
StructDecl           : 21
StructName           : 32
StructType           : 32
SwitchStmt           : 149
TopLevelDecl         : 6
TopLevelDecl_curl    : 1 6
TrueLit              : 134
Type                 : 38 42 47 52 57 59 63 69 71 77 78
TypeList             : 66 70 71
TypeLit              : 49
UnaryExpr            : 87 88 90
UnaryOp              : 90
VarDecl              : 22
VarSpec              : 34 36
VarSpec_curl         : 35 36

Parsing method: LALR

state 0

    (0) S' -> . SourceFile
    (1) SourceFile -> . PackageClause SEMICOLON ImportDecl_curl TopLevelDecl_curl
    (10) PackageClause -> . PACKAGE ID

    PACKAGE         shift and go to state 3

    PackageClause                  shift and go to state 1
    SourceFile                     shift and go to state 2

state 1

    (1) SourceFile -> PackageClause . SEMICOLON ImportDecl_curl TopLevelDecl_curl

    SEMICOLON       shift and go to state 4


state 2

    (0) S' -> SourceFile .



state 3

    (10) PackageClause -> PACKAGE . ID

    ID              shift and go to state 5


state 4

    (1) SourceFile -> PackageClause SEMICOLON . ImportDecl_curl TopLevelDecl_curl
    (8) ImportDecl_curl -> . ImportDecl_curl ImportDecl SEMICOLON
    (9) ImportDecl_curl -> .

    IMPORT          reduce using rule 9 (ImportDecl_curl -> .)
    FUNC            reduce using rule 9 (ImportDecl_curl -> .)
    CONST           reduce using rule 9 (ImportDecl_curl -> .)
    TYPE            reduce using rule 9 (ImportDecl_curl -> .)
    VAR             reduce using rule 9 (ImportDecl_curl -> .)
    $end            reduce using rule 9 (ImportDecl_curl -> .)

    ImportDecl_curl                shift and go to state 6

state 5

    (10) PackageClause -> PACKAGE ID .

    SEMICOLON       reduce using rule 10 (PackageClause -> PACKAGE ID .)


state 6

    (1) SourceFile -> PackageClause SEMICOLON ImportDecl_curl . TopLevelDecl_curl
    (8) ImportDecl_curl -> ImportDecl_curl . ImportDecl SEMICOLON
    (6) TopLevelDecl_curl -> . TopLevelDecl_curl TopLevelDecl SEMICOLON
    (7) TopLevelDecl_curl -> .
    (11) ImportDecl -> . IMPORT ImportSpec
    (12) ImportDecl -> . IMPORT LPAREN ImportSpec_curl RPAREN

    FUNC            reduce using rule 7 (TopLevelDecl_curl -> .)
    CONST           reduce using rule 7 (TopLevelDecl_curl -> .)
    TYPE            reduce using rule 7 (TopLevelDecl_curl -> .)
    VAR             reduce using rule 7 (TopLevelDecl_curl -> .)
    $end            reduce using rule 7 (TopLevelDecl_curl -> .)
    IMPORT          shift and go to state 8

    TopLevelDecl_curl              shift and go to state 7
    ImportDecl                     shift and go to state 9

state 7

    (1) SourceFile -> PackageClause SEMICOLON ImportDecl_curl TopLevelDecl_curl .
    (6) TopLevelDecl_curl -> TopLevelDecl_curl . TopLevelDecl SEMICOLON
    (18) TopLevelDecl -> . Declaration
    (19) TopLevelDecl -> . FunctionDecl
    (20) Declaration -> . ConstDecl
    (21) Declaration -> . StructDecl
    (22) Declaration -> . VarDecl
    (43) FunctionDecl -> . FUNC SetBase FuncName OpenS Signature Block CloseBase CloseS
    (23) ConstDecl -> . CONST ConstSpec
    (24) ConstDecl -> . CONST LPAREN ConstSpec_curl RPAREN
    (32) StructDecl -> . TYPE StructName StructType
    (34) VarDecl -> . VAR VarSpec
    (35) VarDecl -> . VAR LPAREN VarSpec_curl RPAREN

    $end            reduce using rule 1 (SourceFile -> PackageClause SEMICOLON ImportDecl_curl TopLevelDecl_curl .)
    FUNC            shift and go to state 15
    CONST           shift and go to state 10
    TYPE            shift and go to state 17
    VAR             shift and go to state 16

    StructDecl                     shift and go to state 11
    FunctionDecl                   shift and go to state 12
    TopLevelDecl                   shift and go to state 13
    Declaration                    shift and go to state 14
    VarDecl                        shift and go to state 18
    ConstDecl                      shift and go to state 19

state 8

    (11) ImportDecl -> IMPORT . ImportSpec
    (12) ImportDecl -> IMPORT . LPAREN ImportSpec_curl RPAREN
    (15) ImportSpec -> . ID ImportPath
    (16) ImportSpec -> . ImportPath
    (17) ImportPath -> . STRING

    LPAREN          shift and go to state 23
    ID              shift and go to state 24
    STRING          shift and go to state 20

    ImportSpec                     shift and go to state 21
    ImportPath                     shift and go to state 22

state 9

    (8) ImportDecl_curl -> ImportDecl_curl ImportDecl . SEMICOLON

    SEMICOLON       shift and go to state 25


state 10

    (23) ConstDecl -> CONST . ConstSpec
    (24) ConstDecl -> CONST . LPAREN ConstSpec_curl RPAREN
    (27) ConstSpec -> . IdentifierList ID ASSIGN ExpressionList
    (28) IdentifierList -> . ID
    (29) IdentifierList -> . ID COMMA IdentifierList

    LPAREN          shift and go to state 27
    ID              shift and go to state 29

    ConstSpec                      shift and go to state 26
    IdentifierList                 shift and go to state 28

state 11

    (21) Declaration -> StructDecl .

    SEMICOLON       reduce using rule 21 (Declaration -> StructDecl .)


state 12

    (19) TopLevelDecl -> FunctionDecl .

    SEMICOLON       reduce using rule 19 (TopLevelDecl -> FunctionDecl .)


state 13

    (6) TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl . SEMICOLON

    SEMICOLON       shift and go to state 30


state 14

    (18) TopLevelDecl -> Declaration .

    SEMICOLON       reduce using rule 18 (TopLevelDecl -> Declaration .)


state 15

    (43) FunctionDecl -> FUNC . SetBase FuncName OpenS Signature Block CloseBase CloseS
    (44) SetBase -> .

    ID              reduce using rule 44 (SetBase -> .)

    SetBase                        shift and go to state 31

state 16

    (34) VarDecl -> VAR . VarSpec
    (35) VarDecl -> VAR . LPAREN VarSpec_curl RPAREN
    (38) VarSpec -> . IdentifierList Type ASSIGN ExpressionList
    (39) VarSpec -> . IdentifierList ID ASSIGN ExpressionList
    (40) VarSpec -> . IdentifierList ASSIGN ExpressionList
    (41) VarSpec -> . IdentifierList ID
    (42) VarSpec -> . IdentifierList Type
    (28) IdentifierList -> . ID
    (29) IdentifierList -> . ID COMMA IdentifierList

    LPAREN          shift and go to state 33
    ID              shift and go to state 29

    VarSpec                        shift and go to state 32
    IdentifierList                 shift and go to state 34

state 17

    (32) StructDecl -> TYPE . StructName StructType
    (33) StructName -> . ID

    ID              shift and go to state 36

    StructName                     shift and go to state 35

state 18

    (22) Declaration -> VarDecl .

    SEMICOLON       reduce using rule 22 (Declaration -> VarDecl .)


state 19

    (20) Declaration -> ConstDecl .

    SEMICOLON       reduce using rule 20 (Declaration -> ConstDecl .)


state 20

    (17) ImportPath -> STRING .

    SEMICOLON       reduce using rule 17 (ImportPath -> STRING .)


state 21

    (11) ImportDecl -> IMPORT ImportSpec .

    SEMICOLON       reduce using rule 11 (ImportDecl -> IMPORT ImportSpec .)


state 22

    (16) ImportSpec -> ImportPath .

    SEMICOLON       reduce using rule 16 (ImportSpec -> ImportPath .)


state 23

    (12) ImportDecl -> IMPORT LPAREN . ImportSpec_curl RPAREN
    (13) ImportSpec_curl -> . ImportSpec_curl ImportSpec SEMICOLON
    (14) ImportSpec_curl -> .

    RPAREN          reduce using rule 14 (ImportSpec_curl -> .)
    ID              reduce using rule 14 (ImportSpec_curl -> .)
    STRING          reduce using rule 14 (ImportSpec_curl -> .)

    ImportSpec_curl                shift and go to state 37

state 24

    (15) ImportSpec -> ID . ImportPath
    (17) ImportPath -> . STRING

    STRING          shift and go to state 20

    ImportPath                     shift and go to state 38

state 25

    (8) ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .

    IMPORT          reduce using rule 8 (ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .)
    FUNC            reduce using rule 8 (ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .)
    CONST           reduce using rule 8 (ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .)
    TYPE            reduce using rule 8 (ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .)
    VAR             reduce using rule 8 (ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .)
    $end            reduce using rule 8 (ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .)


state 26

    (23) ConstDecl -> CONST ConstSpec .

    SEMICOLON       reduce using rule 23 (ConstDecl -> CONST ConstSpec .)


state 27

    (24) ConstDecl -> CONST LPAREN . ConstSpec_curl RPAREN
    (25) ConstSpec_curl -> . ConstSpec_curl ConstSpec SEMICOLON
    (26) ConstSpec_curl -> .

    RPAREN          reduce using rule 26 (ConstSpec_curl -> .)
    ID              reduce using rule 26 (ConstSpec_curl -> .)

    ConstSpec_curl                 shift and go to state 39

state 28

    (27) ConstSpec -> IdentifierList . ID ASSIGN ExpressionList

    ID              shift and go to state 40


state 29

    (28) IdentifierList -> ID .
    (29) IdentifierList -> ID . COMMA IdentifierList

    ID              reduce using rule 28 (IdentifierList -> ID .)
    ASSIGN          reduce using rule 28 (IdentifierList -> ID .)
    LPAREN          reduce using rule 28 (IdentifierList -> ID .)
    LBRACK          reduce using rule 28 (IdentifierList -> ID .)
    MUL             reduce using rule 28 (IdentifierList -> ID .)
    DEFINE          reduce using rule 28 (IdentifierList -> ID .)
    STRUCT          reduce using rule 28 (IdentifierList -> ID .)
    COMMA           shift and go to state 41


state 30

    (6) TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON .

    FUNC            reduce using rule 6 (TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON .)
    CONST           reduce using rule 6 (TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON .)
    TYPE            reduce using rule 6 (TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON .)
    VAR             reduce using rule 6 (TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON .)
    $end            reduce using rule 6 (TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON .)


state 31

    (43) FunctionDecl -> FUNC SetBase . FuncName OpenS Signature Block CloseBase CloseS
    (46) FuncName -> . ID

    ID              shift and go to state 43

    FuncName                       shift and go to state 42

state 32

    (34) VarDecl -> VAR VarSpec .

    SEMICOLON       reduce using rule 34 (VarDecl -> VAR VarSpec .)


state 33

    (35) VarDecl -> VAR LPAREN . VarSpec_curl RPAREN
    (36) VarSpec_curl -> . VarSpec_curl VarSpec SEMICOLON
    (37) VarSpec_curl -> .

    RPAREN          reduce using rule 37 (VarSpec_curl -> .)
    ID              reduce using rule 37 (VarSpec_curl -> .)

    VarSpec_curl                   shift and go to state 44

state 34

    (38) VarSpec -> IdentifierList . Type ASSIGN ExpressionList
    (39) VarSpec -> IdentifierList . ID ASSIGN ExpressionList
    (40) VarSpec -> IdentifierList . ASSIGN ExpressionList
    (41) VarSpec -> IdentifierList . ID
    (42) VarSpec -> IdentifierList . Type
    (47) Type -> . LPAREN Type RPAREN
    (48) Type -> . LPAREN ID RPAREN
    (49) Type -> . TypeLit
    (50) TypeLit -> . ArrayType
    (51) TypeLit -> . PointerType
    (52) ArrayType -> . LBRACK INT RBRACK Type
    (53) ArrayType -> . LBRACK INT RBRACK ID
    (63) PointerType -> . MUL Type
    (64) PointerType -> . MUL ID

    ID              shift and go to state 53
    ASSIGN          shift and go to state 48
    LPAREN          shift and go to state 49
    LBRACK          shift and go to state 46
    MUL             shift and go to state 51

    Type                           shift and go to state 52
    ArrayType                      shift and go to state 47
    PointerType                    shift and go to state 50
    TypeLit                        shift and go to state 45

state 35

    (32) StructDecl -> TYPE StructName . StructType
    (54) StructType -> . STRUCT OpenStructS LBRACE FieldDecl_curl RBRACE CloseStructS

    STRUCT          shift and go to state 55

    StructType                     shift and go to state 54

state 36

    (33) StructName -> ID .

    STRUCT          reduce using rule 33 (StructName -> ID .)


state 37

    (12) ImportDecl -> IMPORT LPAREN ImportSpec_curl . RPAREN
    (13) ImportSpec_curl -> ImportSpec_curl . ImportSpec SEMICOLON
    (15) ImportSpec -> . ID ImportPath
    (16) ImportSpec -> . ImportPath
    (17) ImportPath -> . STRING

    RPAREN          shift and go to state 56
    ID              shift and go to state 24
    STRING          shift and go to state 20

    ImportSpec                     shift and go to state 57
    ImportPath                     shift and go to state 22

state 38

    (15) ImportSpec -> ID ImportPath .

    SEMICOLON       reduce using rule 15 (ImportSpec -> ID ImportPath .)


state 39

    (24) ConstDecl -> CONST LPAREN ConstSpec_curl . RPAREN
    (25) ConstSpec_curl -> ConstSpec_curl . ConstSpec SEMICOLON
    (27) ConstSpec -> . IdentifierList ID ASSIGN ExpressionList
    (28) IdentifierList -> . ID
    (29) IdentifierList -> . ID COMMA IdentifierList

    RPAREN          shift and go to state 58
    ID              shift and go to state 29

    ConstSpec                      shift and go to state 59
    IdentifierList                 shift and go to state 28

state 40

    (27) ConstSpec -> IdentifierList ID . ASSIGN ExpressionList

    ASSIGN          shift and go to state 60


state 41

    (29) IdentifierList -> ID COMMA . IdentifierList
    (28) IdentifierList -> . ID
    (29) IdentifierList -> . ID COMMA IdentifierList

    ID              shift and go to state 29

    IdentifierList                 shift and go to state 61

state 42

    (43) FunctionDecl -> FUNC SetBase FuncName . OpenS Signature Block CloseBase CloseS
    (2) OpenS -> .

    LPAREN          reduce using rule 2 (OpenS -> .)

    OpenS                          shift and go to state 62

state 43

    (46) FuncName -> ID .

    LPAREN          reduce using rule 46 (FuncName -> ID .)


state 44

    (35) VarDecl -> VAR LPAREN VarSpec_curl . RPAREN
    (36) VarSpec_curl -> VarSpec_curl . VarSpec SEMICOLON
    (38) VarSpec -> . IdentifierList Type ASSIGN ExpressionList
    (39) VarSpec -> . IdentifierList ID ASSIGN ExpressionList
    (40) VarSpec -> . IdentifierList ASSIGN ExpressionList
    (41) VarSpec -> . IdentifierList ID
    (42) VarSpec -> . IdentifierList Type
    (28) IdentifierList -> . ID
    (29) IdentifierList -> . ID COMMA IdentifierList

    RPAREN          shift and go to state 63
    ID              shift and go to state 29

    VarSpec                        shift and go to state 64
    IdentifierList                 shift and go to state 34

state 45

    (49) Type -> TypeLit .

    RPAREN          reduce using rule 49 (Type -> TypeLit .)
    COMMA           reduce using rule 49 (Type -> TypeLit .)
    ASSIGN          reduce using rule 49 (Type -> TypeLit .)
    SEMICOLON       reduce using rule 49 (Type -> TypeLit .)


state 46

    (52) ArrayType -> LBRACK . INT RBRACK Type
    (53) ArrayType -> LBRACK . INT RBRACK ID

    INT             shift and go to state 65


state 47

    (50) TypeLit -> ArrayType .

    ASSIGN          reduce using rule 50 (TypeLit -> ArrayType .)
    SEMICOLON       reduce using rule 50 (TypeLit -> ArrayType .)
    RPAREN          reduce using rule 50 (TypeLit -> ArrayType .)
    COMMA           reduce using rule 50 (TypeLit -> ArrayType .)


state 48

    (40) VarSpec -> IdentifierList ASSIGN . ExpressionList
    (30) ExpressionList -> . Expression
    (31) ExpressionList -> . ExpressionList COMMA Expression
    (87) Expression -> . UnaryExpr
    (88) Expression -> . Expression BinaryOp UnaryExpr
    (89) UnaryExpr -> . PrimaryExpr
    (90) UnaryExpr -> . UnaryOp UnaryExpr
    (119) PrimaryExpr -> . Literal
    (120) PrimaryExpr -> . ID
    (121) PrimaryExpr -> . PrimaryExpr DOT ID
    (122) PrimaryExpr -> . LPAREN Expression RPAREN
    (123) PrimaryExpr -> . PrimaryExpr Index
    (124) PrimaryExpr -> . PrimaryExpr Arguments
    (113) UnaryOp -> . ADD
    (114) UnaryOp -> . SUB
    (115) UnaryOp -> . NOT
    (116) UnaryOp -> . XOR
    (117) UnaryOp -> . MUL
    (118) UnaryOp -> . AND
    (129) Literal -> . BasicLit
    (130) BasicLit -> . IntLit
    (131) BasicLit -> . FloatLit
    (132) BasicLit -> . RuneLit
    (133) BasicLit -> . StringLit
    (134) BasicLit -> . TrueLit
    (135) BasicLit -> . FalseLit
    (138) IntLit -> . INT
    (139) FloatLit -> . FLOAT
    (140) RuneLit -> . RUNE
    (141) StringLit -> . STRING
    (136) TrueLit -> . TRUE
    (137) FalseLit -> . FALSE

    ID              shift and go to state 85
    LPAREN          shift and go to state 82
    ADD             shift and go to state 80
    SUB             shift and go to state 66
    NOT             shift and go to state 91
    XOR             shift and go to state 75
    MUL             shift and go to state 71
    AND             shift and go to state 86
    INT             shift and go to state 88
    FLOAT           shift and go to state 89
    RUNE            shift and go to state 74
    STRING          shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 87

    RuneLit                        shift and go to state 83
    UnaryOp                        shift and go to state 67
    TrueLit                        shift and go to state 92
    BasicLit                       shift and go to state 73
    UnaryExpr                      shift and go to state 77
    FloatLit                       shift and go to state 78
    FalseLit                       shift and go to state 68
    IntLit                         shift and go to state 70
    Literal                        shift and go to state 69
    ExpressionList                 shift and go to state 81
    PrimaryExpr                    shift and go to state 79
    StringLit                      shift and go to state 90
    Expression                     shift and go to state 84

state 49

    (47) Type -> LPAREN . Type RPAREN
    (48) Type -> LPAREN . ID RPAREN
    (47) Type -> . LPAREN Type RPAREN
    (48) Type -> . LPAREN ID RPAREN
    (49) Type -> . TypeLit
    (50) TypeLit -> . ArrayType
    (51) TypeLit -> . PointerType
    (52) ArrayType -> . LBRACK INT RBRACK Type
    (53) ArrayType -> . LBRACK INT RBRACK ID
    (63) PointerType -> . MUL Type
    (64) PointerType -> . MUL ID

    ID              shift and go to state 94
    LPAREN          shift and go to state 49
    LBRACK          shift and go to state 46
    MUL             shift and go to state 51

    PointerType                    shift and go to state 50
    TypeLit                        shift and go to state 45
    Type                           shift and go to state 93
    ArrayType                      shift and go to state 47

state 50

    (51) TypeLit -> PointerType .

    ASSIGN          reduce using rule 51 (TypeLit -> PointerType .)
    SEMICOLON       reduce using rule 51 (TypeLit -> PointerType .)
    RPAREN          reduce using rule 51 (TypeLit -> PointerType .)
    COMMA           reduce using rule 51 (TypeLit -> PointerType .)


state 51

    (63) PointerType -> MUL . Type
    (64) PointerType -> MUL . ID
    (47) Type -> . LPAREN Type RPAREN
    (48) Type -> . LPAREN ID RPAREN
    (49) Type -> . TypeLit
    (50) TypeLit -> . ArrayType
    (51) TypeLit -> . PointerType
    (52) ArrayType -> . LBRACK INT RBRACK Type
    (53) ArrayType -> . LBRACK INT RBRACK ID
    (63) PointerType -> . MUL Type
    (64) PointerType -> . MUL ID

    ID              shift and go to state 96
    LPAREN          shift and go to state 49
    LBRACK          shift and go to state 46
    MUL             shift and go to state 51

    PointerType                    shift and go to state 50
    TypeLit                        shift and go to state 45
    Type                           shift and go to state 95
    ArrayType                      shift and go to state 47

state 52

    (38) VarSpec -> IdentifierList Type . ASSIGN ExpressionList
    (42) VarSpec -> IdentifierList Type .

    ASSIGN          shift and go to state 97
    SEMICOLON       reduce using rule 42 (VarSpec -> IdentifierList Type .)


state 53

    (39) VarSpec -> IdentifierList ID . ASSIGN ExpressionList
    (41) VarSpec -> IdentifierList ID .

    ASSIGN          shift and go to state 98
    SEMICOLON       reduce using rule 41 (VarSpec -> IdentifierList ID .)


state 54

    (32) StructDecl -> TYPE StructName StructType .

    SEMICOLON       reduce using rule 32 (StructDecl -> TYPE StructName StructType .)


state 55

    (54) StructType -> STRUCT . OpenStructS LBRACE FieldDecl_curl RBRACE CloseStructS
    (4) OpenStructS -> .

    LBRACE          reduce using rule 4 (OpenStructS -> .)

    OpenStructS                    shift and go to state 99

state 56

    (12) ImportDecl -> IMPORT LPAREN ImportSpec_curl RPAREN .

    SEMICOLON       reduce using rule 12 (ImportDecl -> IMPORT LPAREN ImportSpec_curl RPAREN .)


state 57

    (13) ImportSpec_curl -> ImportSpec_curl ImportSpec . SEMICOLON

    SEMICOLON       shift and go to state 100


state 58

    (24) ConstDecl -> CONST LPAREN ConstSpec_curl RPAREN .

    SEMICOLON       reduce using rule 24 (ConstDecl -> CONST LPAREN ConstSpec_curl RPAREN .)


state 59

    (25) ConstSpec_curl -> ConstSpec_curl ConstSpec . SEMICOLON

    SEMICOLON       shift and go to state 101


state 60

    (27) ConstSpec -> IdentifierList ID ASSIGN . ExpressionList
    (30) ExpressionList -> . Expression
    (31) ExpressionList -> . ExpressionList COMMA Expression
    (87) Expression -> . UnaryExpr
    (88) Expression -> . Expression BinaryOp UnaryExpr
    (89) UnaryExpr -> . PrimaryExpr
    (90) UnaryExpr -> . UnaryOp UnaryExpr
    (119) PrimaryExpr -> . Literal
    (120) PrimaryExpr -> . ID
    (121) PrimaryExpr -> . PrimaryExpr DOT ID
    (122) PrimaryExpr -> . LPAREN Expression RPAREN
    (123) PrimaryExpr -> . PrimaryExpr Index
    (124) PrimaryExpr -> . PrimaryExpr Arguments
    (113) UnaryOp -> . ADD
    (114) UnaryOp -> . SUB
    (115) UnaryOp -> . NOT
    (116) UnaryOp -> . XOR
    (117) UnaryOp -> . MUL
    (118) UnaryOp -> . AND
    (129) Literal -> . BasicLit
    (130) BasicLit -> . IntLit
    (131) BasicLit -> . FloatLit
    (132) BasicLit -> . RuneLit
    (133) BasicLit -> . StringLit
    (134) BasicLit -> . TrueLit
    (135) BasicLit -> . FalseLit
    (138) IntLit -> . INT
    (139) FloatLit -> . FLOAT
    (140) RuneLit -> . RUNE
    (141) StringLit -> . STRING
    (136) TrueLit -> . TRUE
    (137) FalseLit -> . FALSE

    ID              shift and go to state 85
    LPAREN          shift and go to state 82
    ADD             shift and go to state 80
    SUB             shift and go to state 66
    NOT             shift and go to state 91
    XOR             shift and go to state 75
    MUL             shift and go to state 71
    AND             shift and go to state 86
    INT             shift and go to state 88
    FLOAT           shift and go to state 89
    RUNE            shift and go to state 74
    STRING          shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 87

    RuneLit                        shift and go to state 83
    UnaryOp                        shift and go to state 67
    TrueLit                        shift and go to state 92
    BasicLit                       shift and go to state 73
    UnaryExpr                      shift and go to state 77
    FloatLit                       shift and go to state 78
    FalseLit                       shift and go to state 68
    IntLit                         shift and go to state 70
    Literal                        shift and go to state 69
    ExpressionList                 shift and go to state 102
    PrimaryExpr                    shift and go to state 79
    StringLit                      shift and go to state 90
    Expression                     shift and go to state 84

state 61

    (29) IdentifierList -> ID COMMA IdentifierList .

    DEFINE          reduce using rule 29 (IdentifierList -> ID COMMA IdentifierList .)
    ID              reduce using rule 29 (IdentifierList -> ID COMMA IdentifierList .)
    ASSIGN          reduce using rule 29 (IdentifierList -> ID COMMA IdentifierList .)
    LPAREN          reduce using rule 29 (IdentifierList -> ID COMMA IdentifierList .)
    LBRACK          reduce using rule 29 (IdentifierList -> ID COMMA IdentifierList .)
    MUL             reduce using rule 29 (IdentifierList -> ID COMMA IdentifierList .)
    STRUCT          reduce using rule 29 (IdentifierList -> ID COMMA IdentifierList .)


state 62

    (43) FunctionDecl -> FUNC SetBase FuncName OpenS . Signature Block CloseBase CloseS
    (65) Signature -> . Parameters Result
    (72) Parameters -> . LPAREN RPAREN
    (73) Parameters -> . LPAREN ParameterList RPAREN
    (74) Parameters -> . LPAREN ParameterList COMMA RPAREN

    LPAREN          shift and go to state 103

    Parameters                     shift and go to state 104
    Signature                      shift and go to state 105

state 63

    (35) VarDecl -> VAR LPAREN VarSpec_curl RPAREN .

    SEMICOLON       reduce using rule 35 (VarDecl -> VAR LPAREN VarSpec_curl RPAREN .)


state 64

    (36) VarSpec_curl -> VarSpec_curl VarSpec . SEMICOLON

    SEMICOLON       shift and go to state 106


state 65

    (52) ArrayType -> LBRACK INT . RBRACK Type
    (53) ArrayType -> LBRACK INT . RBRACK ID

    RBRACK          shift and go to state 107


state 66

    (114) UnaryOp -> SUB .

    ID              reduce using rule 114 (UnaryOp -> SUB .)
    LPAREN          reduce using rule 114 (UnaryOp -> SUB .)
    ADD             reduce using rule 114 (UnaryOp -> SUB .)
    SUB             reduce using rule 114 (UnaryOp -> SUB .)
    NOT             reduce using rule 114 (UnaryOp -> SUB .)
    XOR             reduce using rule 114 (UnaryOp -> SUB .)
    MUL             reduce using rule 114 (UnaryOp -> SUB .)
    AND             reduce using rule 114 (UnaryOp -> SUB .)
    INT             reduce using rule 114 (UnaryOp -> SUB .)
    FLOAT           reduce using rule 114 (UnaryOp -> SUB .)
    RUNE            reduce using rule 114 (UnaryOp -> SUB .)
    STRING          reduce using rule 114 (UnaryOp -> SUB .)
    TRUE            reduce using rule 114 (UnaryOp -> SUB .)
    FALSE           reduce using rule 114 (UnaryOp -> SUB .)


state 67

    (90) UnaryExpr -> UnaryOp . UnaryExpr
    (89) UnaryExpr -> . PrimaryExpr
    (90) UnaryExpr -> . UnaryOp UnaryExpr
    (119) PrimaryExpr -> . Literal
    (120) PrimaryExpr -> . ID
    (121) PrimaryExpr -> . PrimaryExpr DOT ID
    (122) PrimaryExpr -> . LPAREN Expression RPAREN
    (123) PrimaryExpr -> . PrimaryExpr Index
    (124) PrimaryExpr -> . PrimaryExpr Arguments
    (113) UnaryOp -> . ADD
    (114) UnaryOp -> . SUB
    (115) UnaryOp -> . NOT
    (116) UnaryOp -> . XOR
    (117) UnaryOp -> . MUL
    (118) UnaryOp -> . AND
    (129) Literal -> . BasicLit
    (130) BasicLit -> . IntLit
    (131) BasicLit -> . FloatLit
    (132) BasicLit -> . RuneLit
    (133) BasicLit -> . StringLit
    (134) BasicLit -> . TrueLit
    (135) BasicLit -> . FalseLit
    (138) IntLit -> . INT
    (139) FloatLit -> . FLOAT
    (140) RuneLit -> . RUNE
    (141) StringLit -> . STRING
    (136) TrueLit -> . TRUE
    (137) FalseLit -> . FALSE

    ID              shift and go to state 85
    LPAREN          shift and go to state 82
    ADD             shift and go to state 80
    SUB             shift and go to state 66
    NOT             shift and go to state 91
    XOR             shift and go to state 75
    MUL             shift and go to state 71
    AND             shift and go to state 86
    INT             shift and go to state 88
    FLOAT           shift and go to state 89
    RUNE            shift and go to state 74
    STRING          shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 87

    RuneLit                        shift and go to state 83
    UnaryOp                        shift and go to state 67
    TrueLit                        shift and go to state 92
    BasicLit                       shift and go to state 73
    UnaryExpr                      shift and go to state 108
    FloatLit                       shift and go to state 78
    FalseLit                       shift and go to state 68
    IntLit                         shift and go to state 70
    Literal                        shift and go to state 69
    PrimaryExpr                    shift and go to state 79
    StringLit                      shift and go to state 90

state 68

    (135) BasicLit -> FalseLit .

    DOT             reduce using rule 135 (BasicLit -> FalseLit .)
    LBRACK          reduce using rule 135 (BasicLit -> FalseLit .)
    LPAREN          reduce using rule 135 (BasicLit -> FalseLit .)
    COLON           reduce using rule 135 (BasicLit -> FalseLit .)
    LOR             reduce using rule 135 (BasicLit -> FalseLit .)
    LAND            reduce using rule 135 (BasicLit -> FalseLit .)
    EQL             reduce using rule 135 (BasicLit -> FalseLit .)
    NEQ             reduce using rule 135 (BasicLit -> FalseLit .)
    LTN             reduce using rule 135 (BasicLit -> FalseLit .)
    LEQ             reduce using rule 135 (BasicLit -> FalseLit .)
    GTN             reduce using rule 135 (BasicLit -> FalseLit .)
    GEQ             reduce using rule 135 (BasicLit -> FalseLit .)
    ADD             reduce using rule 135 (BasicLit -> FalseLit .)
    SUB             reduce using rule 135 (BasicLit -> FalseLit .)
    OR              reduce using rule 135 (BasicLit -> FalseLit .)
    XOR             reduce using rule 135 (BasicLit -> FalseLit .)
    MUL             reduce using rule 135 (BasicLit -> FalseLit .)
    DIV             reduce using rule 135 (BasicLit -> FalseLit .)
    MOD             reduce using rule 135 (BasicLit -> FalseLit .)
    SHL             reduce using rule 135 (BasicLit -> FalseLit .)
    SHR             reduce using rule 135 (BasicLit -> FalseLit .)
    AND             reduce using rule 135 (BasicLit -> FalseLit .)
    AND_NOT         reduce using rule 135 (BasicLit -> FalseLit .)
    COMMA           reduce using rule 135 (BasicLit -> FalseLit .)
    SEMICOLON       reduce using rule 135 (BasicLit -> FalseLit .)
    RPAREN          reduce using rule 135 (BasicLit -> FalseLit .)
    RBRACK          reduce using rule 135 (BasicLit -> FalseLit .)
    ADD_ASSIGN      reduce using rule 135 (BasicLit -> FalseLit .)
    SUB_ASSIGN      reduce using rule 135 (BasicLit -> FalseLit .)
    MUL_ASSIGN      reduce using rule 135 (BasicLit -> FalseLit .)
    DIV_ASSIGN      reduce using rule 135 (BasicLit -> FalseLit .)
    MOD_ASSIGN      reduce using rule 135 (BasicLit -> FalseLit .)
    OR_ASSIGN       reduce using rule 135 (BasicLit -> FalseLit .)
    XOR_ASSIGN      reduce using rule 135 (BasicLit -> FalseLit .)
    SHL_ASSIGN      reduce using rule 135 (BasicLit -> FalseLit .)
    SHR_ASSIGN      reduce using rule 135 (BasicLit -> FalseLit .)
    ASSIGN          reduce using rule 135 (BasicLit -> FalseLit .)
    LBRACE          reduce using rule 135 (BasicLit -> FalseLit .)
    INC             reduce using rule 135 (BasicLit -> FalseLit .)
    DEC             reduce using rule 135 (BasicLit -> FalseLit .)


state 69

    (119) PrimaryExpr -> Literal .

    DOT             reduce using rule 119 (PrimaryExpr -> Literal .)
    LBRACK          reduce using rule 119 (PrimaryExpr -> Literal .)
    LPAREN          reduce using rule 119 (PrimaryExpr -> Literal .)
    LOR             reduce using rule 119 (PrimaryExpr -> Literal .)
    LAND            reduce using rule 119 (PrimaryExpr -> Literal .)
    EQL             reduce using rule 119 (PrimaryExpr -> Literal .)
    NEQ             reduce using rule 119 (PrimaryExpr -> Literal .)
    LTN             reduce using rule 119 (PrimaryExpr -> Literal .)
    LEQ             reduce using rule 119 (PrimaryExpr -> Literal .)
    GTN             reduce using rule 119 (PrimaryExpr -> Literal .)
    GEQ             reduce using rule 119 (PrimaryExpr -> Literal .)
    ADD             reduce using rule 119 (PrimaryExpr -> Literal .)
    SUB             reduce using rule 119 (PrimaryExpr -> Literal .)
    OR              reduce using rule 119 (PrimaryExpr -> Literal .)
    XOR             reduce using rule 119 (PrimaryExpr -> Literal .)
    MUL             reduce using rule 119 (PrimaryExpr -> Literal .)
    DIV             reduce using rule 119 (PrimaryExpr -> Literal .)
    MOD             reduce using rule 119 (PrimaryExpr -> Literal .)
    SHL             reduce using rule 119 (PrimaryExpr -> Literal .)
    SHR             reduce using rule 119 (PrimaryExpr -> Literal .)
    AND             reduce using rule 119 (PrimaryExpr -> Literal .)
    AND_NOT         reduce using rule 119 (PrimaryExpr -> Literal .)
    COMMA           reduce using rule 119 (PrimaryExpr -> Literal .)
    SEMICOLON       reduce using rule 119 (PrimaryExpr -> Literal .)
    ADD_ASSIGN      reduce using rule 119 (PrimaryExpr -> Literal .)
    SUB_ASSIGN      reduce using rule 119 (PrimaryExpr -> Literal .)
    MUL_ASSIGN      reduce using rule 119 (PrimaryExpr -> Literal .)
    DIV_ASSIGN      reduce using rule 119 (PrimaryExpr -> Literal .)
    MOD_ASSIGN      reduce using rule 119 (PrimaryExpr -> Literal .)
    OR_ASSIGN       reduce using rule 119 (PrimaryExpr -> Literal .)
    XOR_ASSIGN      reduce using rule 119 (PrimaryExpr -> Literal .)
    SHL_ASSIGN      reduce using rule 119 (PrimaryExpr -> Literal .)
    SHR_ASSIGN      reduce using rule 119 (PrimaryExpr -> Literal .)
    ASSIGN          reduce using rule 119 (PrimaryExpr -> Literal .)
    LBRACE          reduce using rule 119 (PrimaryExpr -> Literal .)
    RBRACK          reduce using rule 119 (PrimaryExpr -> Literal .)
    INC             reduce using rule 119 (PrimaryExpr -> Literal .)
    DEC             reduce using rule 119 (PrimaryExpr -> Literal .)
    RPAREN          reduce using rule 119 (PrimaryExpr -> Literal .)
    COLON           reduce using rule 119 (PrimaryExpr -> Literal .)


state 70

    (130) BasicLit -> IntLit .

    DOT             reduce using rule 130 (BasicLit -> IntLit .)
    LBRACK          reduce using rule 130 (BasicLit -> IntLit .)
    LPAREN          reduce using rule 130 (BasicLit -> IntLit .)
    COLON           reduce using rule 130 (BasicLit -> IntLit .)
    LOR             reduce using rule 130 (BasicLit -> IntLit .)
    LAND            reduce using rule 130 (BasicLit -> IntLit .)
    EQL             reduce using rule 130 (BasicLit -> IntLit .)
    NEQ             reduce using rule 130 (BasicLit -> IntLit .)
    LTN             reduce using rule 130 (BasicLit -> IntLit .)
    LEQ             reduce using rule 130 (BasicLit -> IntLit .)
    GTN             reduce using rule 130 (BasicLit -> IntLit .)
    GEQ             reduce using rule 130 (BasicLit -> IntLit .)
    ADD             reduce using rule 130 (BasicLit -> IntLit .)
    SUB             reduce using rule 130 (BasicLit -> IntLit .)
    OR              reduce using rule 130 (BasicLit -> IntLit .)
    XOR             reduce using rule 130 (BasicLit -> IntLit .)
    MUL             reduce using rule 130 (BasicLit -> IntLit .)
    DIV             reduce using rule 130 (BasicLit -> IntLit .)
    MOD             reduce using rule 130 (BasicLit -> IntLit .)
    SHL             reduce using rule 130 (BasicLit -> IntLit .)
    SHR             reduce using rule 130 (BasicLit -> IntLit .)
    AND             reduce using rule 130 (BasicLit -> IntLit .)
    AND_NOT         reduce using rule 130 (BasicLit -> IntLit .)
    COMMA           reduce using rule 130 (BasicLit -> IntLit .)
    SEMICOLON       reduce using rule 130 (BasicLit -> IntLit .)
    RPAREN          reduce using rule 130 (BasicLit -> IntLit .)
    RBRACK          reduce using rule 130 (BasicLit -> IntLit .)
    ADD_ASSIGN      reduce using rule 130 (BasicLit -> IntLit .)
    SUB_ASSIGN      reduce using rule 130 (BasicLit -> IntLit .)
    MUL_ASSIGN      reduce using rule 130 (BasicLit -> IntLit .)
    DIV_ASSIGN      reduce using rule 130 (BasicLit -> IntLit .)
    MOD_ASSIGN      reduce using rule 130 (BasicLit -> IntLit .)
    OR_ASSIGN       reduce using rule 130 (BasicLit -> IntLit .)
    XOR_ASSIGN      reduce using rule 130 (BasicLit -> IntLit .)
    SHL_ASSIGN      reduce using rule 130 (BasicLit -> IntLit .)
    SHR_ASSIGN      reduce using rule 130 (BasicLit -> IntLit .)
    ASSIGN          reduce using rule 130 (BasicLit -> IntLit .)
    LBRACE          reduce using rule 130 (BasicLit -> IntLit .)
    INC             reduce using rule 130 (BasicLit -> IntLit .)
    DEC             reduce using rule 130 (BasicLit -> IntLit .)


state 71

    (117) UnaryOp -> MUL .

    ID              reduce using rule 117 (UnaryOp -> MUL .)
    LPAREN          reduce using rule 117 (UnaryOp -> MUL .)
    ADD             reduce using rule 117 (UnaryOp -> MUL .)
    SUB             reduce using rule 117 (UnaryOp -> MUL .)
    NOT             reduce using rule 117 (UnaryOp -> MUL .)
    XOR             reduce using rule 117 (UnaryOp -> MUL .)
    MUL             reduce using rule 117 (UnaryOp -> MUL .)
    AND             reduce using rule 117 (UnaryOp -> MUL .)
    INT             reduce using rule 117 (UnaryOp -> MUL .)
    FLOAT           reduce using rule 117 (UnaryOp -> MUL .)
    RUNE            reduce using rule 117 (UnaryOp -> MUL .)
    STRING          reduce using rule 117 (UnaryOp -> MUL .)
    TRUE            reduce using rule 117 (UnaryOp -> MUL .)
    FALSE           reduce using rule 117 (UnaryOp -> MUL .)


state 72

    (136) TrueLit -> TRUE .

    DOT             reduce using rule 136 (TrueLit -> TRUE .)
    LBRACK          reduce using rule 136 (TrueLit -> TRUE .)
    LPAREN          reduce using rule 136 (TrueLit -> TRUE .)
    LOR             reduce using rule 136 (TrueLit -> TRUE .)
    LAND            reduce using rule 136 (TrueLit -> TRUE .)
    EQL             reduce using rule 136 (TrueLit -> TRUE .)
    NEQ             reduce using rule 136 (TrueLit -> TRUE .)
    LTN             reduce using rule 136 (TrueLit -> TRUE .)
    LEQ             reduce using rule 136 (TrueLit -> TRUE .)
    GTN             reduce using rule 136 (TrueLit -> TRUE .)
    GEQ             reduce using rule 136 (TrueLit -> TRUE .)
    ADD             reduce using rule 136 (TrueLit -> TRUE .)
    SUB             reduce using rule 136 (TrueLit -> TRUE .)
    OR              reduce using rule 136 (TrueLit -> TRUE .)
    XOR             reduce using rule 136 (TrueLit -> TRUE .)
    MUL             reduce using rule 136 (TrueLit -> TRUE .)
    DIV             reduce using rule 136 (TrueLit -> TRUE .)
    MOD             reduce using rule 136 (TrueLit -> TRUE .)
    SHL             reduce using rule 136 (TrueLit -> TRUE .)
    SHR             reduce using rule 136 (TrueLit -> TRUE .)
    AND             reduce using rule 136 (TrueLit -> TRUE .)
    AND_NOT         reduce using rule 136 (TrueLit -> TRUE .)
    COMMA           reduce using rule 136 (TrueLit -> TRUE .)
    SEMICOLON       reduce using rule 136 (TrueLit -> TRUE .)
    RPAREN          reduce using rule 136 (TrueLit -> TRUE .)
    LBRACE          reduce using rule 136 (TrueLit -> TRUE .)
    COLON           reduce using rule 136 (TrueLit -> TRUE .)
    INC             reduce using rule 136 (TrueLit -> TRUE .)
    DEC             reduce using rule 136 (TrueLit -> TRUE .)
    ADD_ASSIGN      reduce using rule 136 (TrueLit -> TRUE .)
    SUB_ASSIGN      reduce using rule 136 (TrueLit -> TRUE .)
    MUL_ASSIGN      reduce using rule 136 (TrueLit -> TRUE .)
    DIV_ASSIGN      reduce using rule 136 (TrueLit -> TRUE .)
    MOD_ASSIGN      reduce using rule 136 (TrueLit -> TRUE .)
    OR_ASSIGN       reduce using rule 136 (TrueLit -> TRUE .)
    XOR_ASSIGN      reduce using rule 136 (TrueLit -> TRUE .)
    SHL_ASSIGN      reduce using rule 136 (TrueLit -> TRUE .)
    SHR_ASSIGN      reduce using rule 136 (TrueLit -> TRUE .)
    ASSIGN          reduce using rule 136 (TrueLit -> TRUE .)
    RBRACK          reduce using rule 136 (TrueLit -> TRUE .)


state 73

    (129) Literal -> BasicLit .

    DOT             reduce using rule 129 (Literal -> BasicLit .)
    LBRACK          reduce using rule 129 (Literal -> BasicLit .)
    LPAREN          reduce using rule 129 (Literal -> BasicLit .)
    RBRACK          reduce using rule 129 (Literal -> BasicLit .)
    LOR             reduce using rule 129 (Literal -> BasicLit .)
    LAND            reduce using rule 129 (Literal -> BasicLit .)
    EQL             reduce using rule 129 (Literal -> BasicLit .)
    NEQ             reduce using rule 129 (Literal -> BasicLit .)
    LTN             reduce using rule 129 (Literal -> BasicLit .)
    LEQ             reduce using rule 129 (Literal -> BasicLit .)
    GTN             reduce using rule 129 (Literal -> BasicLit .)
    GEQ             reduce using rule 129 (Literal -> BasicLit .)
    ADD             reduce using rule 129 (Literal -> BasicLit .)
    SUB             reduce using rule 129 (Literal -> BasicLit .)
    OR              reduce using rule 129 (Literal -> BasicLit .)
    XOR             reduce using rule 129 (Literal -> BasicLit .)
    MUL             reduce using rule 129 (Literal -> BasicLit .)
    DIV             reduce using rule 129 (Literal -> BasicLit .)
    MOD             reduce using rule 129 (Literal -> BasicLit .)
    SHL             reduce using rule 129 (Literal -> BasicLit .)
    SHR             reduce using rule 129 (Literal -> BasicLit .)
    AND             reduce using rule 129 (Literal -> BasicLit .)
    AND_NOT         reduce using rule 129 (Literal -> BasicLit .)
    COLON           reduce using rule 129 (Literal -> BasicLit .)
    RPAREN          reduce using rule 129 (Literal -> BasicLit .)
    COMMA           reduce using rule 129 (Literal -> BasicLit .)
    SEMICOLON       reduce using rule 129 (Literal -> BasicLit .)
    INC             reduce using rule 129 (Literal -> BasicLit .)
    DEC             reduce using rule 129 (Literal -> BasicLit .)
    LBRACE          reduce using rule 129 (Literal -> BasicLit .)
    ADD_ASSIGN      reduce using rule 129 (Literal -> BasicLit .)
    SUB_ASSIGN      reduce using rule 129 (Literal -> BasicLit .)
    MUL_ASSIGN      reduce using rule 129 (Literal -> BasicLit .)
    DIV_ASSIGN      reduce using rule 129 (Literal -> BasicLit .)
    MOD_ASSIGN      reduce using rule 129 (Literal -> BasicLit .)
    OR_ASSIGN       reduce using rule 129 (Literal -> BasicLit .)
    XOR_ASSIGN      reduce using rule 129 (Literal -> BasicLit .)
    SHL_ASSIGN      reduce using rule 129 (Literal -> BasicLit .)
    SHR_ASSIGN      reduce using rule 129 (Literal -> BasicLit .)
    ASSIGN          reduce using rule 129 (Literal -> BasicLit .)


state 74

    (140) RuneLit -> RUNE .

    DOT             reduce using rule 140 (RuneLit -> RUNE .)
    LBRACK          reduce using rule 140 (RuneLit -> RUNE .)
    LPAREN          reduce using rule 140 (RuneLit -> RUNE .)
    LOR             reduce using rule 140 (RuneLit -> RUNE .)
    LAND            reduce using rule 140 (RuneLit -> RUNE .)
    EQL             reduce using rule 140 (RuneLit -> RUNE .)
    NEQ             reduce using rule 140 (RuneLit -> RUNE .)
    LTN             reduce using rule 140 (RuneLit -> RUNE .)
    LEQ             reduce using rule 140 (RuneLit -> RUNE .)
    GTN             reduce using rule 140 (RuneLit -> RUNE .)
    GEQ             reduce using rule 140 (RuneLit -> RUNE .)
    ADD             reduce using rule 140 (RuneLit -> RUNE .)
    SUB             reduce using rule 140 (RuneLit -> RUNE .)
    OR              reduce using rule 140 (RuneLit -> RUNE .)
    XOR             reduce using rule 140 (RuneLit -> RUNE .)
    MUL             reduce using rule 140 (RuneLit -> RUNE .)
    DIV             reduce using rule 140 (RuneLit -> RUNE .)
    MOD             reduce using rule 140 (RuneLit -> RUNE .)
    SHL             reduce using rule 140 (RuneLit -> RUNE .)
    SHR             reduce using rule 140 (RuneLit -> RUNE .)
    AND             reduce using rule 140 (RuneLit -> RUNE .)
    AND_NOT         reduce using rule 140 (RuneLit -> RUNE .)
    COMMA           reduce using rule 140 (RuneLit -> RUNE .)
    SEMICOLON       reduce using rule 140 (RuneLit -> RUNE .)
    LBRACE          reduce using rule 140 (RuneLit -> RUNE .)
    RBRACK          reduce using rule 140 (RuneLit -> RUNE .)
    ADD_ASSIGN      reduce using rule 140 (RuneLit -> RUNE .)
    SUB_ASSIGN      reduce using rule 140 (RuneLit -> RUNE .)
    MUL_ASSIGN      reduce using rule 140 (RuneLit -> RUNE .)
    DIV_ASSIGN      reduce using rule 140 (RuneLit -> RUNE .)
    MOD_ASSIGN      reduce using rule 140 (RuneLit -> RUNE .)
    OR_ASSIGN       reduce using rule 140 (RuneLit -> RUNE .)
    XOR_ASSIGN      reduce using rule 140 (RuneLit -> RUNE .)
    SHL_ASSIGN      reduce using rule 140 (RuneLit -> RUNE .)
    SHR_ASSIGN      reduce using rule 140 (RuneLit -> RUNE .)
    ASSIGN          reduce using rule 140 (RuneLit -> RUNE .)
    INC             reduce using rule 140 (RuneLit -> RUNE .)
    DEC             reduce using rule 140 (RuneLit -> RUNE .)
    RPAREN          reduce using rule 140 (RuneLit -> RUNE .)
    COLON           reduce using rule 140 (RuneLit -> RUNE .)


state 75

    (116) UnaryOp -> XOR .

    ID              reduce using rule 116 (UnaryOp -> XOR .)
    LPAREN          reduce using rule 116 (UnaryOp -> XOR .)
    ADD             reduce using rule 116 (UnaryOp -> XOR .)
    SUB             reduce using rule 116 (UnaryOp -> XOR .)
    NOT             reduce using rule 116 (UnaryOp -> XOR .)
    XOR             reduce using rule 116 (UnaryOp -> XOR .)
    MUL             reduce using rule 116 (UnaryOp -> XOR .)
    AND             reduce using rule 116 (UnaryOp -> XOR .)
    INT             reduce using rule 116 (UnaryOp -> XOR .)
    FLOAT           reduce using rule 116 (UnaryOp -> XOR .)
    RUNE            reduce using rule 116 (UnaryOp -> XOR .)
    STRING          reduce using rule 116 (UnaryOp -> XOR .)
    TRUE            reduce using rule 116 (UnaryOp -> XOR .)
    FALSE           reduce using rule 116 (UnaryOp -> XOR .)


state 76

    (141) StringLit -> STRING .

    DOT             reduce using rule 141 (StringLit -> STRING .)
    LBRACK          reduce using rule 141 (StringLit -> STRING .)
    LPAREN          reduce using rule 141 (StringLit -> STRING .)
    LOR             reduce using rule 141 (StringLit -> STRING .)
    LAND            reduce using rule 141 (StringLit -> STRING .)
    EQL             reduce using rule 141 (StringLit -> STRING .)
    NEQ             reduce using rule 141 (StringLit -> STRING .)
    LTN             reduce using rule 141 (StringLit -> STRING .)
    LEQ             reduce using rule 141 (StringLit -> STRING .)
    GTN             reduce using rule 141 (StringLit -> STRING .)
    GEQ             reduce using rule 141 (StringLit -> STRING .)
    ADD             reduce using rule 141 (StringLit -> STRING .)
    SUB             reduce using rule 141 (StringLit -> STRING .)
    OR              reduce using rule 141 (StringLit -> STRING .)
    XOR             reduce using rule 141 (StringLit -> STRING .)
    MUL             reduce using rule 141 (StringLit -> STRING .)
    DIV             reduce using rule 141 (StringLit -> STRING .)
    MOD             reduce using rule 141 (StringLit -> STRING .)
    SHL             reduce using rule 141 (StringLit -> STRING .)
    SHR             reduce using rule 141 (StringLit -> STRING .)
    AND             reduce using rule 141 (StringLit -> STRING .)
    AND_NOT         reduce using rule 141 (StringLit -> STRING .)
    COMMA           reduce using rule 141 (StringLit -> STRING .)
    SEMICOLON       reduce using rule 141 (StringLit -> STRING .)
    LBRACE          reduce using rule 141 (StringLit -> STRING .)
    INC             reduce using rule 141 (StringLit -> STRING .)
    DEC             reduce using rule 141 (StringLit -> STRING .)
    ADD_ASSIGN      reduce using rule 141 (StringLit -> STRING .)
    SUB_ASSIGN      reduce using rule 141 (StringLit -> STRING .)
    MUL_ASSIGN      reduce using rule 141 (StringLit -> STRING .)
    DIV_ASSIGN      reduce using rule 141 (StringLit -> STRING .)
    MOD_ASSIGN      reduce using rule 141 (StringLit -> STRING .)
    OR_ASSIGN       reduce using rule 141 (StringLit -> STRING .)
    XOR_ASSIGN      reduce using rule 141 (StringLit -> STRING .)
    SHL_ASSIGN      reduce using rule 141 (StringLit -> STRING .)
    SHR_ASSIGN      reduce using rule 141 (StringLit -> STRING .)
    ASSIGN          reduce using rule 141 (StringLit -> STRING .)
    RPAREN          reduce using rule 141 (StringLit -> STRING .)
    RBRACK          reduce using rule 141 (StringLit -> STRING .)
    COLON           reduce using rule 141 (StringLit -> STRING .)


state 77

    (87) Expression -> UnaryExpr .

    LOR             reduce using rule 87 (Expression -> UnaryExpr .)
    LAND            reduce using rule 87 (Expression -> UnaryExpr .)
    EQL             reduce using rule 87 (Expression -> UnaryExpr .)
    NEQ             reduce using rule 87 (Expression -> UnaryExpr .)
    LTN             reduce using rule 87 (Expression -> UnaryExpr .)
    LEQ             reduce using rule 87 (Expression -> UnaryExpr .)
    GTN             reduce using rule 87 (Expression -> UnaryExpr .)
    GEQ             reduce using rule 87 (Expression -> UnaryExpr .)
    ADD             reduce using rule 87 (Expression -> UnaryExpr .)
    SUB             reduce using rule 87 (Expression -> UnaryExpr .)
    OR              reduce using rule 87 (Expression -> UnaryExpr .)
    XOR             reduce using rule 87 (Expression -> UnaryExpr .)
    MUL             reduce using rule 87 (Expression -> UnaryExpr .)
    DIV             reduce using rule 87 (Expression -> UnaryExpr .)
    MOD             reduce using rule 87 (Expression -> UnaryExpr .)
    SHL             reduce using rule 87 (Expression -> UnaryExpr .)
    SHR             reduce using rule 87 (Expression -> UnaryExpr .)
    AND             reduce using rule 87 (Expression -> UnaryExpr .)
    AND_NOT         reduce using rule 87 (Expression -> UnaryExpr .)
    LBRACE          reduce using rule 87 (Expression -> UnaryExpr .)
    COMMA           reduce using rule 87 (Expression -> UnaryExpr .)
    SEMICOLON       reduce using rule 87 (Expression -> UnaryExpr .)
    ADD_ASSIGN      reduce using rule 87 (Expression -> UnaryExpr .)
    SUB_ASSIGN      reduce using rule 87 (Expression -> UnaryExpr .)
    MUL_ASSIGN      reduce using rule 87 (Expression -> UnaryExpr .)
    DIV_ASSIGN      reduce using rule 87 (Expression -> UnaryExpr .)
    MOD_ASSIGN      reduce using rule 87 (Expression -> UnaryExpr .)
    OR_ASSIGN       reduce using rule 87 (Expression -> UnaryExpr .)
    XOR_ASSIGN      reduce using rule 87 (Expression -> UnaryExpr .)
    SHL_ASSIGN      reduce using rule 87 (Expression -> UnaryExpr .)
    SHR_ASSIGN      reduce using rule 87 (Expression -> UnaryExpr .)
    ASSIGN          reduce using rule 87 (Expression -> UnaryExpr .)
    INC             reduce using rule 87 (Expression -> UnaryExpr .)
    DEC             reduce using rule 87 (Expression -> UnaryExpr .)
    RPAREN          reduce using rule 87 (Expression -> UnaryExpr .)
    COLON           reduce using rule 87 (Expression -> UnaryExpr .)
    RBRACK          reduce using rule 87 (Expression -> UnaryExpr .)


state 78

    (131) BasicLit -> FloatLit .

    DOT             reduce using rule 131 (BasicLit -> FloatLit .)
    LBRACK          reduce using rule 131 (BasicLit -> FloatLit .)
    LPAREN          reduce using rule 131 (BasicLit -> FloatLit .)
    COLON           reduce using rule 131 (BasicLit -> FloatLit .)
    LOR             reduce using rule 131 (BasicLit -> FloatLit .)
    LAND            reduce using rule 131 (BasicLit -> FloatLit .)
    EQL             reduce using rule 131 (BasicLit -> FloatLit .)
    NEQ             reduce using rule 131 (BasicLit -> FloatLit .)
    LTN             reduce using rule 131 (BasicLit -> FloatLit .)
    LEQ             reduce using rule 131 (BasicLit -> FloatLit .)
    GTN             reduce using rule 131 (BasicLit -> FloatLit .)
    GEQ             reduce using rule 131 (BasicLit -> FloatLit .)
    ADD             reduce using rule 131 (BasicLit -> FloatLit .)
    SUB             reduce using rule 131 (BasicLit -> FloatLit .)
    OR              reduce using rule 131 (BasicLit -> FloatLit .)
    XOR             reduce using rule 131 (BasicLit -> FloatLit .)
    MUL             reduce using rule 131 (BasicLit -> FloatLit .)
    DIV             reduce using rule 131 (BasicLit -> FloatLit .)
    MOD             reduce using rule 131 (BasicLit -> FloatLit .)
    SHL             reduce using rule 131 (BasicLit -> FloatLit .)
    SHR             reduce using rule 131 (BasicLit -> FloatLit .)
    AND             reduce using rule 131 (BasicLit -> FloatLit .)
    AND_NOT         reduce using rule 131 (BasicLit -> FloatLit .)
    COMMA           reduce using rule 131 (BasicLit -> FloatLit .)
    SEMICOLON       reduce using rule 131 (BasicLit -> FloatLit .)
    RPAREN          reduce using rule 131 (BasicLit -> FloatLit .)
    RBRACK          reduce using rule 131 (BasicLit -> FloatLit .)
    ADD_ASSIGN      reduce using rule 131 (BasicLit -> FloatLit .)
    SUB_ASSIGN      reduce using rule 131 (BasicLit -> FloatLit .)
    MUL_ASSIGN      reduce using rule 131 (BasicLit -> FloatLit .)
    DIV_ASSIGN      reduce using rule 131 (BasicLit -> FloatLit .)
    MOD_ASSIGN      reduce using rule 131 (BasicLit -> FloatLit .)
    OR_ASSIGN       reduce using rule 131 (BasicLit -> FloatLit .)
    XOR_ASSIGN      reduce using rule 131 (BasicLit -> FloatLit .)
    SHL_ASSIGN      reduce using rule 131 (BasicLit -> FloatLit .)
    SHR_ASSIGN      reduce using rule 131 (BasicLit -> FloatLit .)
    ASSIGN          reduce using rule 131 (BasicLit -> FloatLit .)
    LBRACE          reduce using rule 131 (BasicLit -> FloatLit .)
    INC             reduce using rule 131 (BasicLit -> FloatLit .)
    DEC             reduce using rule 131 (BasicLit -> FloatLit .)


state 79

    (89) UnaryExpr -> PrimaryExpr .
    (121) PrimaryExpr -> PrimaryExpr . DOT ID
    (123) PrimaryExpr -> PrimaryExpr . Index
    (124) PrimaryExpr -> PrimaryExpr . Arguments
    (125) Index -> . LBRACK Expression RBRACK
    (126) Arguments -> . LPAREN RPAREN
    (127) Arguments -> . LPAREN ExpressionList RPAREN
    (128) Arguments -> . LPAREN ExpressionList COMMA RPAREN

    LOR             reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    LAND            reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    EQL             reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    NEQ             reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    LTN             reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    LEQ             reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    GTN             reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    GEQ             reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    ADD             reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    SUB             reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    XOR             reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    MUL             reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    DIV             reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    MOD             reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    SHL             reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    SHR             reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    AND             reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    AND_NOT         reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    SEMICOLON       reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    RPAREN          reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    RBRACK          reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    ADD_ASSIGN      reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    SUB_ASSIGN      reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    MUL_ASSIGN      reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    DIV_ASSIGN      reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    MOD_ASSIGN      reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    OR_ASSIGN       reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    XOR_ASSIGN      reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    SHL_ASSIGN      reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    SHR_ASSIGN      reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    ASSIGN          reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    LBRACE          reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    INC             reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    DEC             reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    COLON           reduce using rule 89 (UnaryExpr -> PrimaryExpr .)
    DOT             shift and go to state 113
    LBRACK          shift and go to state 110
    LPAREN          shift and go to state 112

    Index                          shift and go to state 109
    Arguments                      shift and go to state 111

state 80

    (113) UnaryOp -> ADD .

    ID              reduce using rule 113 (UnaryOp -> ADD .)
    LPAREN          reduce using rule 113 (UnaryOp -> ADD .)
    ADD             reduce using rule 113 (UnaryOp -> ADD .)
    SUB             reduce using rule 113 (UnaryOp -> ADD .)
    NOT             reduce using rule 113 (UnaryOp -> ADD .)
    XOR             reduce using rule 113 (UnaryOp -> ADD .)
    MUL             reduce using rule 113 (UnaryOp -> ADD .)
    AND             reduce using rule 113 (UnaryOp -> ADD .)
    INT             reduce using rule 113 (UnaryOp -> ADD .)
    FLOAT           reduce using rule 113 (UnaryOp -> ADD .)
    RUNE            reduce using rule 113 (UnaryOp -> ADD .)
    STRING          reduce using rule 113 (UnaryOp -> ADD .)
    TRUE            reduce using rule 113 (UnaryOp -> ADD .)
    FALSE           reduce using rule 113 (UnaryOp -> ADD .)


state 81

    (40) VarSpec -> IdentifierList ASSIGN ExpressionList .
    (31) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 40 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    COMMA           shift and go to state 114


state 82

    (122) PrimaryExpr -> LPAREN . Expression RPAREN
    (87) Expression -> . UnaryExpr
    (88) Expression -> . Expression BinaryOp UnaryExpr
    (89) UnaryExpr -> . PrimaryExpr
    (90) UnaryExpr -> . UnaryOp UnaryExpr
    (119) PrimaryExpr -> . Literal
    (120) PrimaryExpr -> . ID
    (121) PrimaryExpr -> . PrimaryExpr DOT ID
    (122) PrimaryExpr -> . LPAREN Expression RPAREN
    (123) PrimaryExpr -> . PrimaryExpr Index
    (124) PrimaryExpr -> . PrimaryExpr Arguments
    (113) UnaryOp -> . ADD
    (114) UnaryOp -> . SUB
    (115) UnaryOp -> . NOT
    (116) UnaryOp -> . XOR
    (117) UnaryOp -> . MUL
    (118) UnaryOp -> . AND
    (129) Literal -> . BasicLit
    (130) BasicLit -> . IntLit
    (131) BasicLit -> . FloatLit
    (132) BasicLit -> . RuneLit
    (133) BasicLit -> . StringLit
    (134) BasicLit -> . TrueLit
    (135) BasicLit -> . FalseLit
    (138) IntLit -> . INT
    (139) FloatLit -> . FLOAT
    (140) RuneLit -> . RUNE
    (141) StringLit -> . STRING
    (136) TrueLit -> . TRUE
    (137) FalseLit -> . FALSE

    ID              shift and go to state 85
    LPAREN          shift and go to state 82
    ADD             shift and go to state 80
    SUB             shift and go to state 66
    NOT             shift and go to state 91
    XOR             shift and go to state 75
    MUL             shift and go to state 71
    AND             shift and go to state 86
    INT             shift and go to state 88
    FLOAT           shift and go to state 89
    RUNE            shift and go to state 74
    STRING          shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 87

    RuneLit                        shift and go to state 83
    UnaryOp                        shift and go to state 67
    TrueLit                        shift and go to state 92
    BasicLit                       shift and go to state 73
    UnaryExpr                      shift and go to state 77
    FloatLit                       shift and go to state 78
    FalseLit                       shift and go to state 68
    IntLit                         shift and go to state 70
    Literal                        shift and go to state 69
    PrimaryExpr                    shift and go to state 79
    StringLit                      shift and go to state 90
    Expression                     shift and go to state 115

state 83

    (132) BasicLit -> RuneLit .

    DOT             reduce using rule 132 (BasicLit -> RuneLit .)
    LBRACK          reduce using rule 132 (BasicLit -> RuneLit .)
    LPAREN          reduce using rule 132 (BasicLit -> RuneLit .)
    COLON           reduce using rule 132 (BasicLit -> RuneLit .)
    LOR             reduce using rule 132 (BasicLit -> RuneLit .)
    LAND            reduce using rule 132 (BasicLit -> RuneLit .)
    EQL             reduce using rule 132 (BasicLit -> RuneLit .)
    NEQ             reduce using rule 132 (BasicLit -> RuneLit .)
    LTN             reduce using rule 132 (BasicLit -> RuneLit .)
    LEQ             reduce using rule 132 (BasicLit -> RuneLit .)
    GTN             reduce using rule 132 (BasicLit -> RuneLit .)
    GEQ             reduce using rule 132 (BasicLit -> RuneLit .)
    ADD             reduce using rule 132 (BasicLit -> RuneLit .)
    SUB             reduce using rule 132 (BasicLit -> RuneLit .)
    OR              reduce using rule 132 (BasicLit -> RuneLit .)
    XOR             reduce using rule 132 (BasicLit -> RuneLit .)
    MUL             reduce using rule 132 (BasicLit -> RuneLit .)
    DIV             reduce using rule 132 (BasicLit -> RuneLit .)
    MOD             reduce using rule 132 (BasicLit -> RuneLit .)
    SHL             reduce using rule 132 (BasicLit -> RuneLit .)
    SHR             reduce using rule 132 (BasicLit -> RuneLit .)
    AND             reduce using rule 132 (BasicLit -> RuneLit .)
    AND_NOT         reduce using rule 132 (BasicLit -> RuneLit .)
    COMMA           reduce using rule 132 (BasicLit -> RuneLit .)
    SEMICOLON       reduce using rule 132 (BasicLit -> RuneLit .)
    RPAREN          reduce using rule 132 (BasicLit -> RuneLit .)
    RBRACK          reduce using rule 132 (BasicLit -> RuneLit .)
    ADD_ASSIGN      reduce using rule 132 (BasicLit -> RuneLit .)
    SUB_ASSIGN      reduce using rule 132 (BasicLit -> RuneLit .)
    MUL_ASSIGN      reduce using rule 132 (BasicLit -> RuneLit .)
    DIV_ASSIGN      reduce using rule 132 (BasicLit -> RuneLit .)
    MOD_ASSIGN      reduce using rule 132 (BasicLit -> RuneLit .)
    OR_ASSIGN       reduce using rule 132 (BasicLit -> RuneLit .)
    XOR_ASSIGN      reduce using rule 132 (BasicLit -> RuneLit .)
    SHL_ASSIGN      reduce using rule 132 (BasicLit -> RuneLit .)
    SHR_ASSIGN      reduce using rule 132 (BasicLit -> RuneLit .)
    ASSIGN          reduce using rule 132 (BasicLit -> RuneLit .)
    LBRACE          reduce using rule 132 (BasicLit -> RuneLit .)
    INC             reduce using rule 132 (BasicLit -> RuneLit .)
    DEC             reduce using rule 132 (BasicLit -> RuneLit .)


state 84

    (30) ExpressionList -> Expression .
    (88) Expression -> Expression . BinaryOp UnaryExpr
    (91) BinaryOp -> . LOR
    (92) BinaryOp -> . LAND
    (93) BinaryOp -> . RelOp
    (94) BinaryOp -> . AddOp
    (95) BinaryOp -> . MulOp
    (96) RelOp -> . EQL
    (97) RelOp -> . NEQ
    (98) RelOp -> . LTN
    (99) RelOp -> . LEQ
    (100) RelOp -> . GTN
    (101) RelOp -> . GEQ
    (102) AddOp -> . ADD
    (103) AddOp -> . SUB
    (104) AddOp -> . OR
    (105) AddOp -> . XOR
    (106) MulOp -> . MUL
    (107) MulOp -> . DIV
    (108) MulOp -> . MOD
    (109) MulOp -> . SHL
    (110) MulOp -> . SHR
    (111) MulOp -> . AND
    (112) MulOp -> . AND_NOT

    COMMA           reduce using rule 30 (ExpressionList -> Expression .)
    SEMICOLON       reduce using rule 30 (ExpressionList -> Expression .)
    LBRACE          reduce using rule 30 (ExpressionList -> Expression .)
    RPAREN          reduce using rule 30 (ExpressionList -> Expression .)
    LOR             shift and go to state 117
    LAND            shift and go to state 122
    EQL             shift and go to state 131
    NEQ             shift and go to state 120
    LTN             shift and go to state 133
    LEQ             shift and go to state 136
    GTN             shift and go to state 129
    GEQ             shift and go to state 121
    ADD             shift and go to state 130
    SUB             shift and go to state 116
    OR              shift and go to state 137
    XOR             shift and go to state 127
    MUL             shift and go to state 118
    DIV             shift and go to state 119
    MOD             shift and go to state 138
    SHL             shift and go to state 132
    SHR             shift and go to state 126
    AND             shift and go to state 134
    AND_NOT         shift and go to state 123

    AddOp                          shift and go to state 125
    BinaryOp                       shift and go to state 124
    MulOp                          shift and go to state 128
    RelOp                          shift and go to state 135

state 85

    (120) PrimaryExpr -> ID .

    DOT             reduce using rule 120 (PrimaryExpr -> ID .)
    LBRACK          reduce using rule 120 (PrimaryExpr -> ID .)
    LPAREN          reduce using rule 120 (PrimaryExpr -> ID .)
    LOR             reduce using rule 120 (PrimaryExpr -> ID .)
    LAND            reduce using rule 120 (PrimaryExpr -> ID .)
    EQL             reduce using rule 120 (PrimaryExpr -> ID .)
    NEQ             reduce using rule 120 (PrimaryExpr -> ID .)
    LTN             reduce using rule 120 (PrimaryExpr -> ID .)
    LEQ             reduce using rule 120 (PrimaryExpr -> ID .)
    GTN             reduce using rule 120 (PrimaryExpr -> ID .)
    GEQ             reduce using rule 120 (PrimaryExpr -> ID .)
    ADD             reduce using rule 120 (PrimaryExpr -> ID .)
    SUB             reduce using rule 120 (PrimaryExpr -> ID .)
    OR              reduce using rule 120 (PrimaryExpr -> ID .)
    XOR             reduce using rule 120 (PrimaryExpr -> ID .)
    MUL             reduce using rule 120 (PrimaryExpr -> ID .)
    DIV             reduce using rule 120 (PrimaryExpr -> ID .)
    MOD             reduce using rule 120 (PrimaryExpr -> ID .)
    SHL             reduce using rule 120 (PrimaryExpr -> ID .)
    SHR             reduce using rule 120 (PrimaryExpr -> ID .)
    AND             reduce using rule 120 (PrimaryExpr -> ID .)
    AND_NOT         reduce using rule 120 (PrimaryExpr -> ID .)
    COMMA           reduce using rule 120 (PrimaryExpr -> ID .)
    SEMICOLON       reduce using rule 120 (PrimaryExpr -> ID .)
    ADD_ASSIGN      reduce using rule 120 (PrimaryExpr -> ID .)
    SUB_ASSIGN      reduce using rule 120 (PrimaryExpr -> ID .)
    MUL_ASSIGN      reduce using rule 120 (PrimaryExpr -> ID .)
    DIV_ASSIGN      reduce using rule 120 (PrimaryExpr -> ID .)
    MOD_ASSIGN      reduce using rule 120 (PrimaryExpr -> ID .)
    OR_ASSIGN       reduce using rule 120 (PrimaryExpr -> ID .)
    XOR_ASSIGN      reduce using rule 120 (PrimaryExpr -> ID .)
    SHL_ASSIGN      reduce using rule 120 (PrimaryExpr -> ID .)
    SHR_ASSIGN      reduce using rule 120 (PrimaryExpr -> ID .)
    ASSIGN          reduce using rule 120 (PrimaryExpr -> ID .)
    LBRACE          reduce using rule 120 (PrimaryExpr -> ID .)
    RBRACK          reduce using rule 120 (PrimaryExpr -> ID .)
    RPAREN          reduce using rule 120 (PrimaryExpr -> ID .)
    COLON           reduce using rule 120 (PrimaryExpr -> ID .)
    INC             reduce using rule 120 (PrimaryExpr -> ID .)
    DEC             reduce using rule 120 (PrimaryExpr -> ID .)


state 86

    (118) UnaryOp -> AND .

    ID              reduce using rule 118 (UnaryOp -> AND .)
    LPAREN          reduce using rule 118 (UnaryOp -> AND .)
    ADD             reduce using rule 118 (UnaryOp -> AND .)
    SUB             reduce using rule 118 (UnaryOp -> AND .)
    NOT             reduce using rule 118 (UnaryOp -> AND .)
    XOR             reduce using rule 118 (UnaryOp -> AND .)
    MUL             reduce using rule 118 (UnaryOp -> AND .)
    AND             reduce using rule 118 (UnaryOp -> AND .)
    INT             reduce using rule 118 (UnaryOp -> AND .)
    FLOAT           reduce using rule 118 (UnaryOp -> AND .)
    RUNE            reduce using rule 118 (UnaryOp -> AND .)
    STRING          reduce using rule 118 (UnaryOp -> AND .)
    TRUE            reduce using rule 118 (UnaryOp -> AND .)
    FALSE           reduce using rule 118 (UnaryOp -> AND .)


state 87

    (137) FalseLit -> FALSE .

    DOT             reduce using rule 137 (FalseLit -> FALSE .)
    LBRACK          reduce using rule 137 (FalseLit -> FALSE .)
    LPAREN          reduce using rule 137 (FalseLit -> FALSE .)
    LOR             reduce using rule 137 (FalseLit -> FALSE .)
    LAND            reduce using rule 137 (FalseLit -> FALSE .)
    EQL             reduce using rule 137 (FalseLit -> FALSE .)
    NEQ             reduce using rule 137 (FalseLit -> FALSE .)
    LTN             reduce using rule 137 (FalseLit -> FALSE .)
    LEQ             reduce using rule 137 (FalseLit -> FALSE .)
    GTN             reduce using rule 137 (FalseLit -> FALSE .)
    GEQ             reduce using rule 137 (FalseLit -> FALSE .)
    ADD             reduce using rule 137 (FalseLit -> FALSE .)
    SUB             reduce using rule 137 (FalseLit -> FALSE .)
    OR              reduce using rule 137 (FalseLit -> FALSE .)
    XOR             reduce using rule 137 (FalseLit -> FALSE .)
    MUL             reduce using rule 137 (FalseLit -> FALSE .)
    DIV             reduce using rule 137 (FalseLit -> FALSE .)
    MOD             reduce using rule 137 (FalseLit -> FALSE .)
    SHL             reduce using rule 137 (FalseLit -> FALSE .)
    SHR             reduce using rule 137 (FalseLit -> FALSE .)
    AND             reduce using rule 137 (FalseLit -> FALSE .)
    AND_NOT         reduce using rule 137 (FalseLit -> FALSE .)
    COMMA           reduce using rule 137 (FalseLit -> FALSE .)
    SEMICOLON       reduce using rule 137 (FalseLit -> FALSE .)
    RPAREN          reduce using rule 137 (FalseLit -> FALSE .)
    INC             reduce using rule 137 (FalseLit -> FALSE .)
    DEC             reduce using rule 137 (FalseLit -> FALSE .)
    LBRACE          reduce using rule 137 (FalseLit -> FALSE .)
    ADD_ASSIGN      reduce using rule 137 (FalseLit -> FALSE .)
    SUB_ASSIGN      reduce using rule 137 (FalseLit -> FALSE .)
    MUL_ASSIGN      reduce using rule 137 (FalseLit -> FALSE .)
    DIV_ASSIGN      reduce using rule 137 (FalseLit -> FALSE .)
    MOD_ASSIGN      reduce using rule 137 (FalseLit -> FALSE .)
    OR_ASSIGN       reduce using rule 137 (FalseLit -> FALSE .)
    XOR_ASSIGN      reduce using rule 137 (FalseLit -> FALSE .)
    SHL_ASSIGN      reduce using rule 137 (FalseLit -> FALSE .)
    SHR_ASSIGN      reduce using rule 137 (FalseLit -> FALSE .)
    ASSIGN          reduce using rule 137 (FalseLit -> FALSE .)
    RBRACK          reduce using rule 137 (FalseLit -> FALSE .)
    COLON           reduce using rule 137 (FalseLit -> FALSE .)


state 88

    (138) IntLit -> INT .

    DOT             reduce using rule 138 (IntLit -> INT .)
    LBRACK          reduce using rule 138 (IntLit -> INT .)
    LPAREN          reduce using rule 138 (IntLit -> INT .)
    LOR             reduce using rule 138 (IntLit -> INT .)
    LAND            reduce using rule 138 (IntLit -> INT .)
    EQL             reduce using rule 138 (IntLit -> INT .)
    NEQ             reduce using rule 138 (IntLit -> INT .)
    LTN             reduce using rule 138 (IntLit -> INT .)
    LEQ             reduce using rule 138 (IntLit -> INT .)
    GTN             reduce using rule 138 (IntLit -> INT .)
    GEQ             reduce using rule 138 (IntLit -> INT .)
    ADD             reduce using rule 138 (IntLit -> INT .)
    SUB             reduce using rule 138 (IntLit -> INT .)
    OR              reduce using rule 138 (IntLit -> INT .)
    XOR             reduce using rule 138 (IntLit -> INT .)
    MUL             reduce using rule 138 (IntLit -> INT .)
    DIV             reduce using rule 138 (IntLit -> INT .)
    MOD             reduce using rule 138 (IntLit -> INT .)
    SHL             reduce using rule 138 (IntLit -> INT .)
    SHR             reduce using rule 138 (IntLit -> INT .)
    AND             reduce using rule 138 (IntLit -> INT .)
    AND_NOT         reduce using rule 138 (IntLit -> INT .)
    LBRACE          reduce using rule 138 (IntLit -> INT .)
    COMMA           reduce using rule 138 (IntLit -> INT .)
    SEMICOLON       reduce using rule 138 (IntLit -> INT .)
    RPAREN          reduce using rule 138 (IntLit -> INT .)
    RBRACK          reduce using rule 138 (IntLit -> INT .)
    ADD_ASSIGN      reduce using rule 138 (IntLit -> INT .)
    SUB_ASSIGN      reduce using rule 138 (IntLit -> INT .)
    MUL_ASSIGN      reduce using rule 138 (IntLit -> INT .)
    DIV_ASSIGN      reduce using rule 138 (IntLit -> INT .)
    MOD_ASSIGN      reduce using rule 138 (IntLit -> INT .)
    OR_ASSIGN       reduce using rule 138 (IntLit -> INT .)
    XOR_ASSIGN      reduce using rule 138 (IntLit -> INT .)
    SHL_ASSIGN      reduce using rule 138 (IntLit -> INT .)
    SHR_ASSIGN      reduce using rule 138 (IntLit -> INT .)
    ASSIGN          reduce using rule 138 (IntLit -> INT .)
    INC             reduce using rule 138 (IntLit -> INT .)
    DEC             reduce using rule 138 (IntLit -> INT .)
    COLON           reduce using rule 138 (IntLit -> INT .)


state 89

    (139) FloatLit -> FLOAT .

    DOT             reduce using rule 139 (FloatLit -> FLOAT .)
    LBRACK          reduce using rule 139 (FloatLit -> FLOAT .)
    LPAREN          reduce using rule 139 (FloatLit -> FLOAT .)
    LOR             reduce using rule 139 (FloatLit -> FLOAT .)
    LAND            reduce using rule 139 (FloatLit -> FLOAT .)
    EQL             reduce using rule 139 (FloatLit -> FLOAT .)
    NEQ             reduce using rule 139 (FloatLit -> FLOAT .)
    LTN             reduce using rule 139 (FloatLit -> FLOAT .)
    LEQ             reduce using rule 139 (FloatLit -> FLOAT .)
    GTN             reduce using rule 139 (FloatLit -> FLOAT .)
    GEQ             reduce using rule 139 (FloatLit -> FLOAT .)
    ADD             reduce using rule 139 (FloatLit -> FLOAT .)
    SUB             reduce using rule 139 (FloatLit -> FLOAT .)
    OR              reduce using rule 139 (FloatLit -> FLOAT .)
    XOR             reduce using rule 139 (FloatLit -> FLOAT .)
    MUL             reduce using rule 139 (FloatLit -> FLOAT .)
    DIV             reduce using rule 139 (FloatLit -> FLOAT .)
    MOD             reduce using rule 139 (FloatLit -> FLOAT .)
    SHL             reduce using rule 139 (FloatLit -> FLOAT .)
    SHR             reduce using rule 139 (FloatLit -> FLOAT .)
    AND             reduce using rule 139 (FloatLit -> FLOAT .)
    AND_NOT         reduce using rule 139 (FloatLit -> FLOAT .)
    COMMA           reduce using rule 139 (FloatLit -> FLOAT .)
    SEMICOLON       reduce using rule 139 (FloatLit -> FLOAT .)
    ADD_ASSIGN      reduce using rule 139 (FloatLit -> FLOAT .)
    SUB_ASSIGN      reduce using rule 139 (FloatLit -> FLOAT .)
    MUL_ASSIGN      reduce using rule 139 (FloatLit -> FLOAT .)
    DIV_ASSIGN      reduce using rule 139 (FloatLit -> FLOAT .)
    MOD_ASSIGN      reduce using rule 139 (FloatLit -> FLOAT .)
    OR_ASSIGN       reduce using rule 139 (FloatLit -> FLOAT .)
    XOR_ASSIGN      reduce using rule 139 (FloatLit -> FLOAT .)
    SHL_ASSIGN      reduce using rule 139 (FloatLit -> FLOAT .)
    SHR_ASSIGN      reduce using rule 139 (FloatLit -> FLOAT .)
    ASSIGN          reduce using rule 139 (FloatLit -> FLOAT .)
    LBRACE          reduce using rule 139 (FloatLit -> FLOAT .)
    RPAREN          reduce using rule 139 (FloatLit -> FLOAT .)
    RBRACK          reduce using rule 139 (FloatLit -> FLOAT .)
    INC             reduce using rule 139 (FloatLit -> FLOAT .)
    DEC             reduce using rule 139 (FloatLit -> FLOAT .)
    COLON           reduce using rule 139 (FloatLit -> FLOAT .)


state 90

    (133) BasicLit -> StringLit .

    DOT             reduce using rule 133 (BasicLit -> StringLit .)
    LBRACK          reduce using rule 133 (BasicLit -> StringLit .)
    LPAREN          reduce using rule 133 (BasicLit -> StringLit .)
    COLON           reduce using rule 133 (BasicLit -> StringLit .)
    LOR             reduce using rule 133 (BasicLit -> StringLit .)
    LAND            reduce using rule 133 (BasicLit -> StringLit .)
    EQL             reduce using rule 133 (BasicLit -> StringLit .)
    NEQ             reduce using rule 133 (BasicLit -> StringLit .)
    LTN             reduce using rule 133 (BasicLit -> StringLit .)
    LEQ             reduce using rule 133 (BasicLit -> StringLit .)
    GTN             reduce using rule 133 (BasicLit -> StringLit .)
    GEQ             reduce using rule 133 (BasicLit -> StringLit .)
    ADD             reduce using rule 133 (BasicLit -> StringLit .)
    SUB             reduce using rule 133 (BasicLit -> StringLit .)
    OR              reduce using rule 133 (BasicLit -> StringLit .)
    XOR             reduce using rule 133 (BasicLit -> StringLit .)
    MUL             reduce using rule 133 (BasicLit -> StringLit .)
    DIV             reduce using rule 133 (BasicLit -> StringLit .)
    MOD             reduce using rule 133 (BasicLit -> StringLit .)
    SHL             reduce using rule 133 (BasicLit -> StringLit .)
    SHR             reduce using rule 133 (BasicLit -> StringLit .)
    AND             reduce using rule 133 (BasicLit -> StringLit .)
    AND_NOT         reduce using rule 133 (BasicLit -> StringLit .)
    COMMA           reduce using rule 133 (BasicLit -> StringLit .)
    SEMICOLON       reduce using rule 133 (BasicLit -> StringLit .)
    RPAREN          reduce using rule 133 (BasicLit -> StringLit .)
    RBRACK          reduce using rule 133 (BasicLit -> StringLit .)
    ADD_ASSIGN      reduce using rule 133 (BasicLit -> StringLit .)
    SUB_ASSIGN      reduce using rule 133 (BasicLit -> StringLit .)
    MUL_ASSIGN      reduce using rule 133 (BasicLit -> StringLit .)
    DIV_ASSIGN      reduce using rule 133 (BasicLit -> StringLit .)
    MOD_ASSIGN      reduce using rule 133 (BasicLit -> StringLit .)
    OR_ASSIGN       reduce using rule 133 (BasicLit -> StringLit .)
    XOR_ASSIGN      reduce using rule 133 (BasicLit -> StringLit .)
    SHL_ASSIGN      reduce using rule 133 (BasicLit -> StringLit .)
    SHR_ASSIGN      reduce using rule 133 (BasicLit -> StringLit .)
    ASSIGN          reduce using rule 133 (BasicLit -> StringLit .)
    LBRACE          reduce using rule 133 (BasicLit -> StringLit .)
    INC             reduce using rule 133 (BasicLit -> StringLit .)
    DEC             reduce using rule 133 (BasicLit -> StringLit .)


state 91

    (115) UnaryOp -> NOT .

    ID              reduce using rule 115 (UnaryOp -> NOT .)
    LPAREN          reduce using rule 115 (UnaryOp -> NOT .)
    ADD             reduce using rule 115 (UnaryOp -> NOT .)
    SUB             reduce using rule 115 (UnaryOp -> NOT .)
    NOT             reduce using rule 115 (UnaryOp -> NOT .)
    XOR             reduce using rule 115 (UnaryOp -> NOT .)
    MUL             reduce using rule 115 (UnaryOp -> NOT .)
    AND             reduce using rule 115 (UnaryOp -> NOT .)
    INT             reduce using rule 115 (UnaryOp -> NOT .)
    FLOAT           reduce using rule 115 (UnaryOp -> NOT .)
    RUNE            reduce using rule 115 (UnaryOp -> NOT .)
    STRING          reduce using rule 115 (UnaryOp -> NOT .)
    TRUE            reduce using rule 115 (UnaryOp -> NOT .)
    FALSE           reduce using rule 115 (UnaryOp -> NOT .)


state 92

    (134) BasicLit -> TrueLit .

    DOT             reduce using rule 134 (BasicLit -> TrueLit .)
    LBRACK          reduce using rule 134 (BasicLit -> TrueLit .)
    LPAREN          reduce using rule 134 (BasicLit -> TrueLit .)
    COLON           reduce using rule 134 (BasicLit -> TrueLit .)
    LOR             reduce using rule 134 (BasicLit -> TrueLit .)
    LAND            reduce using rule 134 (BasicLit -> TrueLit .)
    EQL             reduce using rule 134 (BasicLit -> TrueLit .)
    NEQ             reduce using rule 134 (BasicLit -> TrueLit .)
    LTN             reduce using rule 134 (BasicLit -> TrueLit .)
    LEQ             reduce using rule 134 (BasicLit -> TrueLit .)
    GTN             reduce using rule 134 (BasicLit -> TrueLit .)
    GEQ             reduce using rule 134 (BasicLit -> TrueLit .)
    ADD             reduce using rule 134 (BasicLit -> TrueLit .)
    SUB             reduce using rule 134 (BasicLit -> TrueLit .)
    OR              reduce using rule 134 (BasicLit -> TrueLit .)
    XOR             reduce using rule 134 (BasicLit -> TrueLit .)
    MUL             reduce using rule 134 (BasicLit -> TrueLit .)
    DIV             reduce using rule 134 (BasicLit -> TrueLit .)
    MOD             reduce using rule 134 (BasicLit -> TrueLit .)
    SHL             reduce using rule 134 (BasicLit -> TrueLit .)
    SHR             reduce using rule 134 (BasicLit -> TrueLit .)
    AND             reduce using rule 134 (BasicLit -> TrueLit .)
    AND_NOT         reduce using rule 134 (BasicLit -> TrueLit .)
    COMMA           reduce using rule 134 (BasicLit -> TrueLit .)
    SEMICOLON       reduce using rule 134 (BasicLit -> TrueLit .)
    RPAREN          reduce using rule 134 (BasicLit -> TrueLit .)
    RBRACK          reduce using rule 134 (BasicLit -> TrueLit .)
    ADD_ASSIGN      reduce using rule 134 (BasicLit -> TrueLit .)
    SUB_ASSIGN      reduce using rule 134 (BasicLit -> TrueLit .)
    MUL_ASSIGN      reduce using rule 134 (BasicLit -> TrueLit .)
    DIV_ASSIGN      reduce using rule 134 (BasicLit -> TrueLit .)
    MOD_ASSIGN      reduce using rule 134 (BasicLit -> TrueLit .)
    OR_ASSIGN       reduce using rule 134 (BasicLit -> TrueLit .)
    XOR_ASSIGN      reduce using rule 134 (BasicLit -> TrueLit .)
    SHL_ASSIGN      reduce using rule 134 (BasicLit -> TrueLit .)
    SHR_ASSIGN      reduce using rule 134 (BasicLit -> TrueLit .)
    ASSIGN          reduce using rule 134 (BasicLit -> TrueLit .)
    LBRACE          reduce using rule 134 (BasicLit -> TrueLit .)
    INC             reduce using rule 134 (BasicLit -> TrueLit .)
    DEC             reduce using rule 134 (BasicLit -> TrueLit .)


state 93

    (47) Type -> LPAREN Type . RPAREN

    RPAREN          shift and go to state 139


state 94

    (48) Type -> LPAREN ID . RPAREN

    RPAREN          shift and go to state 140


state 95

    (63) PointerType -> MUL Type .

    SEMICOLON       reduce using rule 63 (PointerType -> MUL Type .)
    RPAREN          reduce using rule 63 (PointerType -> MUL Type .)
    COMMA           reduce using rule 63 (PointerType -> MUL Type .)
    ASSIGN          reduce using rule 63 (PointerType -> MUL Type .)


state 96

    (64) PointerType -> MUL ID .

    SEMICOLON       reduce using rule 64 (PointerType -> MUL ID .)
    RPAREN          reduce using rule 64 (PointerType -> MUL ID .)
    COMMA           reduce using rule 64 (PointerType -> MUL ID .)
    ASSIGN          reduce using rule 64 (PointerType -> MUL ID .)


state 97

    (38) VarSpec -> IdentifierList Type ASSIGN . ExpressionList
    (30) ExpressionList -> . Expression
    (31) ExpressionList -> . ExpressionList COMMA Expression
    (87) Expression -> . UnaryExpr
    (88) Expression -> . Expression BinaryOp UnaryExpr
    (89) UnaryExpr -> . PrimaryExpr
    (90) UnaryExpr -> . UnaryOp UnaryExpr
    (119) PrimaryExpr -> . Literal
    (120) PrimaryExpr -> . ID
    (121) PrimaryExpr -> . PrimaryExpr DOT ID
    (122) PrimaryExpr -> . LPAREN Expression RPAREN
    (123) PrimaryExpr -> . PrimaryExpr Index
    (124) PrimaryExpr -> . PrimaryExpr Arguments
    (113) UnaryOp -> . ADD
    (114) UnaryOp -> . SUB
    (115) UnaryOp -> . NOT
    (116) UnaryOp -> . XOR
    (117) UnaryOp -> . MUL
    (118) UnaryOp -> . AND
    (129) Literal -> . BasicLit
    (130) BasicLit -> . IntLit
    (131) BasicLit -> . FloatLit
    (132) BasicLit -> . RuneLit
    (133) BasicLit -> . StringLit
    (134) BasicLit -> . TrueLit
    (135) BasicLit -> . FalseLit
    (138) IntLit -> . INT
    (139) FloatLit -> . FLOAT
    (140) RuneLit -> . RUNE
    (141) StringLit -> . STRING
    (136) TrueLit -> . TRUE
    (137) FalseLit -> . FALSE

    ID              shift and go to state 85
    LPAREN          shift and go to state 82
    ADD             shift and go to state 80
    SUB             shift and go to state 66
    NOT             shift and go to state 91
    XOR             shift and go to state 75
    MUL             shift and go to state 71
    AND             shift and go to state 86
    INT             shift and go to state 88
    FLOAT           shift and go to state 89
    RUNE            shift and go to state 74
    STRING          shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 87

    BasicLit                       shift and go to state 73
    RuneLit                        shift and go to state 83
    UnaryOp                        shift and go to state 67
    TrueLit                        shift and go to state 92
    UnaryExpr                      shift and go to state 77
    FloatLit                       shift and go to state 78
    FalseLit                       shift and go to state 68
    IntLit                         shift and go to state 70
    Literal                        shift and go to state 69
    ExpressionList                 shift and go to state 141
    PrimaryExpr                    shift and go to state 79
    StringLit                      shift and go to state 90
    Expression                     shift and go to state 84

state 98

    (39) VarSpec -> IdentifierList ID ASSIGN . ExpressionList
    (30) ExpressionList -> . Expression
    (31) ExpressionList -> . ExpressionList COMMA Expression
    (87) Expression -> . UnaryExpr
    (88) Expression -> . Expression BinaryOp UnaryExpr
    (89) UnaryExpr -> . PrimaryExpr
    (90) UnaryExpr -> . UnaryOp UnaryExpr
    (119) PrimaryExpr -> . Literal
    (120) PrimaryExpr -> . ID
    (121) PrimaryExpr -> . PrimaryExpr DOT ID
    (122) PrimaryExpr -> . LPAREN Expression RPAREN
    (123) PrimaryExpr -> . PrimaryExpr Index
    (124) PrimaryExpr -> . PrimaryExpr Arguments
    (113) UnaryOp -> . ADD
    (114) UnaryOp -> . SUB
    (115) UnaryOp -> . NOT
    (116) UnaryOp -> . XOR
    (117) UnaryOp -> . MUL
    (118) UnaryOp -> . AND
    (129) Literal -> . BasicLit
    (130) BasicLit -> . IntLit
    (131) BasicLit -> . FloatLit
    (132) BasicLit -> . RuneLit
    (133) BasicLit -> . StringLit
    (134) BasicLit -> . TrueLit
    (135) BasicLit -> . FalseLit
    (138) IntLit -> . INT
    (139) FloatLit -> . FLOAT
    (140) RuneLit -> . RUNE
    (141) StringLit -> . STRING
    (136) TrueLit -> . TRUE
    (137) FalseLit -> . FALSE

    ID              shift and go to state 85
    LPAREN          shift and go to state 82
    ADD             shift and go to state 80
    SUB             shift and go to state 66
    NOT             shift and go to state 91
    XOR             shift and go to state 75
    MUL             shift and go to state 71
    AND             shift and go to state 86
    INT             shift and go to state 88
    FLOAT           shift and go to state 89
    RUNE            shift and go to state 74
    STRING          shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 87

    RuneLit                        shift and go to state 83
    UnaryOp                        shift and go to state 67
    TrueLit                        shift and go to state 92
    BasicLit                       shift and go to state 73
    UnaryExpr                      shift and go to state 77
    FloatLit                       shift and go to state 78
    FalseLit                       shift and go to state 68
    IntLit                         shift and go to state 70
    Literal                        shift and go to state 69
    ExpressionList                 shift and go to state 142
    PrimaryExpr                    shift and go to state 79
    StringLit                      shift and go to state 90
    Expression                     shift and go to state 84

state 99

    (54) StructType -> STRUCT OpenStructS . LBRACE FieldDecl_curl RBRACE CloseStructS

    LBRACE          shift and go to state 143


state 100

    (13) ImportSpec_curl -> ImportSpec_curl ImportSpec SEMICOLON .

    RPAREN          reduce using rule 13 (ImportSpec_curl -> ImportSpec_curl ImportSpec SEMICOLON .)
    ID              reduce using rule 13 (ImportSpec_curl -> ImportSpec_curl ImportSpec SEMICOLON .)
    STRING          reduce using rule 13 (ImportSpec_curl -> ImportSpec_curl ImportSpec SEMICOLON .)


state 101

    (25) ConstSpec_curl -> ConstSpec_curl ConstSpec SEMICOLON .

    RPAREN          reduce using rule 25 (ConstSpec_curl -> ConstSpec_curl ConstSpec SEMICOLON .)
    ID              reduce using rule 25 (ConstSpec_curl -> ConstSpec_curl ConstSpec SEMICOLON .)


state 102

    (27) ConstSpec -> IdentifierList ID ASSIGN ExpressionList .
    (31) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 27 (ConstSpec -> IdentifierList ID ASSIGN ExpressionList .)
    COMMA           shift and go to state 114


state 103

    (72) Parameters -> LPAREN . RPAREN
    (73) Parameters -> LPAREN . ParameterList RPAREN
    (74) Parameters -> LPAREN . ParameterList COMMA RPAREN
    (75) ParameterList -> . ParameterDecl
    (76) ParameterList -> . ParameterList COMMA ParameterDecl
    (77) ParameterDecl -> . ParaIdList Type
    (78) ParameterDecl -> . ID Type
    (79) ParameterDecl -> . ParaIdList ID
    (80) ParameterDecl -> . ID ID
    (81) ParaIdList -> . ID COMMA ID
    (82) ParaIdList -> . ParaIdList COMMA ID

    RPAREN          shift and go to state 144
    ID              shift and go to state 148

    ParameterList                  shift and go to state 145
    ParaIdList                     shift and go to state 146
    ParameterDecl                  shift and go to state 147

state 104

    (65) Signature -> Parameters . Result
    (66) Result -> . LPAREN TypeList RPAREN
    (67) Result -> .

    LPAREN          shift and go to state 149
    LBRACE          reduce using rule 67 (Result -> .)

    Result                         shift and go to state 150

state 105

    (43) FunctionDecl -> FUNC SetBase FuncName OpenS Signature . Block CloseBase CloseS
    (83) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 151

    Block                          shift and go to state 152

state 106

    (36) VarSpec_curl -> VarSpec_curl VarSpec SEMICOLON .

    RPAREN          reduce using rule 36 (VarSpec_curl -> VarSpec_curl VarSpec SEMICOLON .)
    ID              reduce using rule 36 (VarSpec_curl -> VarSpec_curl VarSpec SEMICOLON .)


state 107

    (52) ArrayType -> LBRACK INT RBRACK . Type
    (53) ArrayType -> LBRACK INT RBRACK . ID
    (47) Type -> . LPAREN Type RPAREN
    (48) Type -> . LPAREN ID RPAREN
    (49) Type -> . TypeLit
    (50) TypeLit -> . ArrayType
    (51) TypeLit -> . PointerType
    (52) ArrayType -> . LBRACK INT RBRACK Type
    (53) ArrayType -> . LBRACK INT RBRACK ID
    (63) PointerType -> . MUL Type
    (64) PointerType -> . MUL ID

    ID              shift and go to state 154
    LPAREN          shift and go to state 49
    LBRACK          shift and go to state 46
    MUL             shift and go to state 51

    PointerType                    shift and go to state 50
    TypeLit                        shift and go to state 45
    Type                           shift and go to state 153
    ArrayType                      shift and go to state 47

state 108

    (90) UnaryExpr -> UnaryOp UnaryExpr .

    LOR             reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    LAND            reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    EQL             reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    NEQ             reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    LTN             reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    LEQ             reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    GTN             reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    GEQ             reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    ADD             reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    SUB             reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR              reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    XOR             reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    MUL             reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIV             reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    MOD             reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHL             reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHR             reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND             reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND_NOT         reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    COMMA           reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    SEMICOLON       reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    RPAREN          reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    RBRACK          reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    ADD_ASSIGN      reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    SUB_ASSIGN      reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    MUL_ASSIGN      reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIV_ASSIGN      reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    MOD_ASSIGN      reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR_ASSIGN       reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    XOR_ASSIGN      reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHL_ASSIGN      reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHR_ASSIGN      reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    ASSIGN          reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    LBRACE          reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    INC             reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    DEC             reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)
    COLON           reduce using rule 90 (UnaryExpr -> UnaryOp UnaryExpr .)


state 109

    (123) PrimaryExpr -> PrimaryExpr Index .

    DOT             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACK          reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    LPAREN          reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    LOR             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    LAND            reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    EQL             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    NEQ             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    LTN             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    LEQ             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    GTN             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    GEQ             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    ADD             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    SUB             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    OR              reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    XOR             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    MUL             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    DIV             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    MOD             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    SHL             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    SHR             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    AND             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    AND_NOT         reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    COMMA           reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    SEMICOLON       reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    ADD_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    SUB_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    MUL_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    DIV_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    MOD_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    OR_ASSIGN       reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    XOR_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    SHL_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    SHR_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    ASSIGN          reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACE          reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    RBRACK          reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    INC             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    DEC             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    RPAREN          reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)
    COLON           reduce using rule 123 (PrimaryExpr -> PrimaryExpr Index .)


state 110

    (125) Index -> LBRACK . Expression RBRACK
    (87) Expression -> . UnaryExpr
    (88) Expression -> . Expression BinaryOp UnaryExpr
    (89) UnaryExpr -> . PrimaryExpr
    (90) UnaryExpr -> . UnaryOp UnaryExpr
    (119) PrimaryExpr -> . Literal
    (120) PrimaryExpr -> . ID
    (121) PrimaryExpr -> . PrimaryExpr DOT ID
    (122) PrimaryExpr -> . LPAREN Expression RPAREN
    (123) PrimaryExpr -> . PrimaryExpr Index
    (124) PrimaryExpr -> . PrimaryExpr Arguments
    (113) UnaryOp -> . ADD
    (114) UnaryOp -> . SUB
    (115) UnaryOp -> . NOT
    (116) UnaryOp -> . XOR
    (117) UnaryOp -> . MUL
    (118) UnaryOp -> . AND
    (129) Literal -> . BasicLit
    (130) BasicLit -> . IntLit
    (131) BasicLit -> . FloatLit
    (132) BasicLit -> . RuneLit
    (133) BasicLit -> . StringLit
    (134) BasicLit -> . TrueLit
    (135) BasicLit -> . FalseLit
    (138) IntLit -> . INT
    (139) FloatLit -> . FLOAT
    (140) RuneLit -> . RUNE
    (141) StringLit -> . STRING
    (136) TrueLit -> . TRUE
    (137) FalseLit -> . FALSE

    ID              shift and go to state 85
    LPAREN          shift and go to state 82
    ADD             shift and go to state 80
    SUB             shift and go to state 66
    NOT             shift and go to state 91
    XOR             shift and go to state 75
    MUL             shift and go to state 71
    AND             shift and go to state 86
    INT             shift and go to state 88
    FLOAT           shift and go to state 89
    RUNE            shift and go to state 74
    STRING          shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 87

    RuneLit                        shift and go to state 83
    UnaryOp                        shift and go to state 67
    TrueLit                        shift and go to state 92
    BasicLit                       shift and go to state 73
    UnaryExpr                      shift and go to state 77
    FloatLit                       shift and go to state 78
    FalseLit                       shift and go to state 68
    IntLit                         shift and go to state 70
    Literal                        shift and go to state 69
    PrimaryExpr                    shift and go to state 79
    StringLit                      shift and go to state 90
    Expression                     shift and go to state 155

state 111

    (124) PrimaryExpr -> PrimaryExpr Arguments .

    DOT             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACK          reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    LPAREN          reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    LOR             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    LAND            reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQL             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    NEQ             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    LTN             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    LEQ             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    GTN             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    GEQ             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    ADD             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    SUB             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR              reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    MUL             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    DIV             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    MOD             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHL             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHR             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_NOT         reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    COMMA           reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    SEMICOLON       reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    ADD_ASSIGN      reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    SUB_ASSIGN      reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    MUL_ASSIGN      reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    DIV_ASSIGN      reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    MOD_ASSIGN      reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR_ASSIGN       reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR_ASSIGN      reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHL_ASSIGN      reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHR_ASSIGN      reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    ASSIGN          reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACE          reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    RBRACK          reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    INC             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    DEC             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    RPAREN          reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)
    COLON           reduce using rule 124 (PrimaryExpr -> PrimaryExpr Arguments .)


state 112

    (126) Arguments -> LPAREN . RPAREN
    (127) Arguments -> LPAREN . ExpressionList RPAREN
    (128) Arguments -> LPAREN . ExpressionList COMMA RPAREN
    (30) ExpressionList -> . Expression
    (31) ExpressionList -> . ExpressionList COMMA Expression
    (87) Expression -> . UnaryExpr
    (88) Expression -> . Expression BinaryOp UnaryExpr
    (89) UnaryExpr -> . PrimaryExpr
    (90) UnaryExpr -> . UnaryOp UnaryExpr
    (119) PrimaryExpr -> . Literal
    (120) PrimaryExpr -> . ID
    (121) PrimaryExpr -> . PrimaryExpr DOT ID
    (122) PrimaryExpr -> . LPAREN Expression RPAREN
    (123) PrimaryExpr -> . PrimaryExpr Index
    (124) PrimaryExpr -> . PrimaryExpr Arguments
    (113) UnaryOp -> . ADD
    (114) UnaryOp -> . SUB
    (115) UnaryOp -> . NOT
    (116) UnaryOp -> . XOR
    (117) UnaryOp -> . MUL
    (118) UnaryOp -> . AND
    (129) Literal -> . BasicLit
    (130) BasicLit -> . IntLit
    (131) BasicLit -> . FloatLit
    (132) BasicLit -> . RuneLit
    (133) BasicLit -> . StringLit
    (134) BasicLit -> . TrueLit
    (135) BasicLit -> . FalseLit
    (138) IntLit -> . INT
    (139) FloatLit -> . FLOAT
    (140) RuneLit -> . RUNE
    (141) StringLit -> . STRING
    (136) TrueLit -> . TRUE
    (137) FalseLit -> . FALSE

    RPAREN          shift and go to state 156
    ID              shift and go to state 85
    LPAREN          shift and go to state 82
    ADD             shift and go to state 80
    SUB             shift and go to state 66
    NOT             shift and go to state 91
    XOR             shift and go to state 75
    MUL             shift and go to state 71
    AND             shift and go to state 86
    INT             shift and go to state 88
    FLOAT           shift and go to state 89
    RUNE            shift and go to state 74
    STRING          shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 87

    RuneLit                        shift and go to state 83
    UnaryOp                        shift and go to state 67
    TrueLit                        shift and go to state 92
    BasicLit                       shift and go to state 73
    UnaryExpr                      shift and go to state 77
    FloatLit                       shift and go to state 78
    FalseLit                       shift and go to state 68
    IntLit                         shift and go to state 70
    Literal                        shift and go to state 69
    ExpressionList                 shift and go to state 157
    PrimaryExpr                    shift and go to state 79
    StringLit                      shift and go to state 90
    Expression                     shift and go to state 84

state 113

    (121) PrimaryExpr -> PrimaryExpr DOT . ID

    ID              shift and go to state 158


state 114

    (31) ExpressionList -> ExpressionList COMMA . Expression
    (87) Expression -> . UnaryExpr
    (88) Expression -> . Expression BinaryOp UnaryExpr
    (89) UnaryExpr -> . PrimaryExpr
    (90) UnaryExpr -> . UnaryOp UnaryExpr
    (119) PrimaryExpr -> . Literal
    (120) PrimaryExpr -> . ID
    (121) PrimaryExpr -> . PrimaryExpr DOT ID
    (122) PrimaryExpr -> . LPAREN Expression RPAREN
    (123) PrimaryExpr -> . PrimaryExpr Index
    (124) PrimaryExpr -> . PrimaryExpr Arguments
    (113) UnaryOp -> . ADD
    (114) UnaryOp -> . SUB
    (115) UnaryOp -> . NOT
    (116) UnaryOp -> . XOR
    (117) UnaryOp -> . MUL
    (118) UnaryOp -> . AND
    (129) Literal -> . BasicLit
    (130) BasicLit -> . IntLit
    (131) BasicLit -> . FloatLit
    (132) BasicLit -> . RuneLit
    (133) BasicLit -> . StringLit
    (134) BasicLit -> . TrueLit
    (135) BasicLit -> . FalseLit
    (138) IntLit -> . INT
    (139) FloatLit -> . FLOAT
    (140) RuneLit -> . RUNE
    (141) StringLit -> . STRING
    (136) TrueLit -> . TRUE
    (137) FalseLit -> . FALSE

    ID              shift and go to state 85
    LPAREN          shift and go to state 82
    ADD             shift and go to state 80
    SUB             shift and go to state 66
    NOT             shift and go to state 91
    XOR             shift and go to state 75
    MUL             shift and go to state 71
    AND             shift and go to state 86
    INT             shift and go to state 88
    FLOAT           shift and go to state 89
    RUNE            shift and go to state 74
    STRING          shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 87

    RuneLit                        shift and go to state 83
    UnaryOp                        shift and go to state 67
    TrueLit                        shift and go to state 92
    BasicLit                       shift and go to state 73
    UnaryExpr                      shift and go to state 77
    FloatLit                       shift and go to state 78
    FalseLit                       shift and go to state 68
    IntLit                         shift and go to state 70
    Literal                        shift and go to state 69
    PrimaryExpr                    shift and go to state 79
    StringLit                      shift and go to state 90
    Expression                     shift and go to state 159

state 115

    (122) PrimaryExpr -> LPAREN Expression . RPAREN
    (88) Expression -> Expression . BinaryOp UnaryExpr
    (91) BinaryOp -> . LOR
    (92) BinaryOp -> . LAND
    (93) BinaryOp -> . RelOp
    (94) BinaryOp -> . AddOp
    (95) BinaryOp -> . MulOp
    (96) RelOp -> . EQL
    (97) RelOp -> . NEQ
    (98) RelOp -> . LTN
    (99) RelOp -> . LEQ
    (100) RelOp -> . GTN
    (101) RelOp -> . GEQ
    (102) AddOp -> . ADD
    (103) AddOp -> . SUB
    (104) AddOp -> . OR
    (105) AddOp -> . XOR
    (106) MulOp -> . MUL
    (107) MulOp -> . DIV
    (108) MulOp -> . MOD
    (109) MulOp -> . SHL
    (110) MulOp -> . SHR
    (111) MulOp -> . AND
    (112) MulOp -> . AND_NOT

    RPAREN          shift and go to state 160
    LOR             shift and go to state 117
    LAND            shift and go to state 122
    EQL             shift and go to state 131
    NEQ             shift and go to state 120
    LTN             shift and go to state 133
    LEQ             shift and go to state 136
    GTN             shift and go to state 129
    GEQ             shift and go to state 121
    ADD             shift and go to state 130
    SUB             shift and go to state 116
    OR              shift and go to state 137
    XOR             shift and go to state 127
    MUL             shift and go to state 118
    DIV             shift and go to state 119
    MOD             shift and go to state 138
    SHL             shift and go to state 132
    SHR             shift and go to state 126
    AND             shift and go to state 134
    AND_NOT         shift and go to state 123

    AddOp                          shift and go to state 125
    BinaryOp                       shift and go to state 124
    MulOp                          shift and go to state 128
    RelOp                          shift and go to state 135

state 116

    (103) AddOp -> SUB .

    ID              reduce using rule 103 (AddOp -> SUB .)
    LPAREN          reduce using rule 103 (AddOp -> SUB .)
    ADD             reduce using rule 103 (AddOp -> SUB .)
    SUB             reduce using rule 103 (AddOp -> SUB .)
    NOT             reduce using rule 103 (AddOp -> SUB .)
    XOR             reduce using rule 103 (AddOp -> SUB .)
    MUL             reduce using rule 103 (AddOp -> SUB .)
    AND             reduce using rule 103 (AddOp -> SUB .)
    INT             reduce using rule 103 (AddOp -> SUB .)
    FLOAT           reduce using rule 103 (AddOp -> SUB .)
    RUNE            reduce using rule 103 (AddOp -> SUB .)
    STRING          reduce using rule 103 (AddOp -> SUB .)
    TRUE            reduce using rule 103 (AddOp -> SUB .)
    FALSE           reduce using rule 103 (AddOp -> SUB .)


state 117

    (91) BinaryOp -> LOR .

    ID              reduce using rule 91 (BinaryOp -> LOR .)
    LPAREN          reduce using rule 91 (BinaryOp -> LOR .)
    ADD             reduce using rule 91 (BinaryOp -> LOR .)
    SUB             reduce using rule 91 (BinaryOp -> LOR .)
    NOT             reduce using rule 91 (BinaryOp -> LOR .)
    XOR             reduce using rule 91 (BinaryOp -> LOR .)
    MUL             reduce using rule 91 (BinaryOp -> LOR .)
    AND             reduce using rule 91 (BinaryOp -> LOR .)
    INT             reduce using rule 91 (BinaryOp -> LOR .)
    FLOAT           reduce using rule 91 (BinaryOp -> LOR .)
    RUNE            reduce using rule 91 (BinaryOp -> LOR .)
    STRING          reduce using rule 91 (BinaryOp -> LOR .)
    TRUE            reduce using rule 91 (BinaryOp -> LOR .)
    FALSE           reduce using rule 91 (BinaryOp -> LOR .)


state 118

    (106) MulOp -> MUL .

    ID              reduce using rule 106 (MulOp -> MUL .)
    LPAREN          reduce using rule 106 (MulOp -> MUL .)
    ADD             reduce using rule 106 (MulOp -> MUL .)
    SUB             reduce using rule 106 (MulOp -> MUL .)
    NOT             reduce using rule 106 (MulOp -> MUL .)
    XOR             reduce using rule 106 (MulOp -> MUL .)
    MUL             reduce using rule 106 (MulOp -> MUL .)
    AND             reduce using rule 106 (MulOp -> MUL .)
    INT             reduce using rule 106 (MulOp -> MUL .)
    FLOAT           reduce using rule 106 (MulOp -> MUL .)
    RUNE            reduce using rule 106 (MulOp -> MUL .)
    STRING          reduce using rule 106 (MulOp -> MUL .)
    TRUE            reduce using rule 106 (MulOp -> MUL .)
    FALSE           reduce using rule 106 (MulOp -> MUL .)


state 119

    (107) MulOp -> DIV .

    ID              reduce using rule 107 (MulOp -> DIV .)
    LPAREN          reduce using rule 107 (MulOp -> DIV .)
    ADD             reduce using rule 107 (MulOp -> DIV .)
    SUB             reduce using rule 107 (MulOp -> DIV .)
    NOT             reduce using rule 107 (MulOp -> DIV .)
    XOR             reduce using rule 107 (MulOp -> DIV .)
    MUL             reduce using rule 107 (MulOp -> DIV .)
    AND             reduce using rule 107 (MulOp -> DIV .)
    INT             reduce using rule 107 (MulOp -> DIV .)
    FLOAT           reduce using rule 107 (MulOp -> DIV .)
    RUNE            reduce using rule 107 (MulOp -> DIV .)
    STRING          reduce using rule 107 (MulOp -> DIV .)
    TRUE            reduce using rule 107 (MulOp -> DIV .)
    FALSE           reduce using rule 107 (MulOp -> DIV .)


state 120

    (97) RelOp -> NEQ .

    ID              reduce using rule 97 (RelOp -> NEQ .)
    LPAREN          reduce using rule 97 (RelOp -> NEQ .)
    ADD             reduce using rule 97 (RelOp -> NEQ .)
    SUB             reduce using rule 97 (RelOp -> NEQ .)
    NOT             reduce using rule 97 (RelOp -> NEQ .)
    XOR             reduce using rule 97 (RelOp -> NEQ .)
    MUL             reduce using rule 97 (RelOp -> NEQ .)
    AND             reduce using rule 97 (RelOp -> NEQ .)
    INT             reduce using rule 97 (RelOp -> NEQ .)
    FLOAT           reduce using rule 97 (RelOp -> NEQ .)
    RUNE            reduce using rule 97 (RelOp -> NEQ .)
    STRING          reduce using rule 97 (RelOp -> NEQ .)
    TRUE            reduce using rule 97 (RelOp -> NEQ .)
    FALSE           reduce using rule 97 (RelOp -> NEQ .)


state 121

    (101) RelOp -> GEQ .

    ID              reduce using rule 101 (RelOp -> GEQ .)
    LPAREN          reduce using rule 101 (RelOp -> GEQ .)
    ADD             reduce using rule 101 (RelOp -> GEQ .)
    SUB             reduce using rule 101 (RelOp -> GEQ .)
    NOT             reduce using rule 101 (RelOp -> GEQ .)
    XOR             reduce using rule 101 (RelOp -> GEQ .)
    MUL             reduce using rule 101 (RelOp -> GEQ .)
    AND             reduce using rule 101 (RelOp -> GEQ .)
    INT             reduce using rule 101 (RelOp -> GEQ .)
    FLOAT           reduce using rule 101 (RelOp -> GEQ .)
    RUNE            reduce using rule 101 (RelOp -> GEQ .)
    STRING          reduce using rule 101 (RelOp -> GEQ .)
    TRUE            reduce using rule 101 (RelOp -> GEQ .)
    FALSE           reduce using rule 101 (RelOp -> GEQ .)


state 122

    (92) BinaryOp -> LAND .

    ID              reduce using rule 92 (BinaryOp -> LAND .)
    LPAREN          reduce using rule 92 (BinaryOp -> LAND .)
    ADD             reduce using rule 92 (BinaryOp -> LAND .)
    SUB             reduce using rule 92 (BinaryOp -> LAND .)
    NOT             reduce using rule 92 (BinaryOp -> LAND .)
    XOR             reduce using rule 92 (BinaryOp -> LAND .)
    MUL             reduce using rule 92 (BinaryOp -> LAND .)
    AND             reduce using rule 92 (BinaryOp -> LAND .)
    INT             reduce using rule 92 (BinaryOp -> LAND .)
    FLOAT           reduce using rule 92 (BinaryOp -> LAND .)
    RUNE            reduce using rule 92 (BinaryOp -> LAND .)
    STRING          reduce using rule 92 (BinaryOp -> LAND .)
    TRUE            reduce using rule 92 (BinaryOp -> LAND .)
    FALSE           reduce using rule 92 (BinaryOp -> LAND .)


state 123

    (112) MulOp -> AND_NOT .

    ID              reduce using rule 112 (MulOp -> AND_NOT .)
    LPAREN          reduce using rule 112 (MulOp -> AND_NOT .)
    ADD             reduce using rule 112 (MulOp -> AND_NOT .)
    SUB             reduce using rule 112 (MulOp -> AND_NOT .)
    NOT             reduce using rule 112 (MulOp -> AND_NOT .)
    XOR             reduce using rule 112 (MulOp -> AND_NOT .)
    MUL             reduce using rule 112 (MulOp -> AND_NOT .)
    AND             reduce using rule 112 (MulOp -> AND_NOT .)
    INT             reduce using rule 112 (MulOp -> AND_NOT .)
    FLOAT           reduce using rule 112 (MulOp -> AND_NOT .)
    RUNE            reduce using rule 112 (MulOp -> AND_NOT .)
    STRING          reduce using rule 112 (MulOp -> AND_NOT .)
    TRUE            reduce using rule 112 (MulOp -> AND_NOT .)
    FALSE           reduce using rule 112 (MulOp -> AND_NOT .)


state 124

    (88) Expression -> Expression BinaryOp . UnaryExpr
    (89) UnaryExpr -> . PrimaryExpr
    (90) UnaryExpr -> . UnaryOp UnaryExpr
    (119) PrimaryExpr -> . Literal
    (120) PrimaryExpr -> . ID
    (121) PrimaryExpr -> . PrimaryExpr DOT ID
    (122) PrimaryExpr -> . LPAREN Expression RPAREN
    (123) PrimaryExpr -> . PrimaryExpr Index
    (124) PrimaryExpr -> . PrimaryExpr Arguments
    (113) UnaryOp -> . ADD
    (114) UnaryOp -> . SUB
    (115) UnaryOp -> . NOT
    (116) UnaryOp -> . XOR
    (117) UnaryOp -> . MUL
    (118) UnaryOp -> . AND
    (129) Literal -> . BasicLit
    (130) BasicLit -> . IntLit
    (131) BasicLit -> . FloatLit
    (132) BasicLit -> . RuneLit
    (133) BasicLit -> . StringLit
    (134) BasicLit -> . TrueLit
    (135) BasicLit -> . FalseLit
    (138) IntLit -> . INT
    (139) FloatLit -> . FLOAT
    (140) RuneLit -> . RUNE
    (141) StringLit -> . STRING
    (136) TrueLit -> . TRUE
    (137) FalseLit -> . FALSE

    ID              shift and go to state 85
    LPAREN          shift and go to state 82
    ADD             shift and go to state 80
    SUB             shift and go to state 66
    NOT             shift and go to state 91
    XOR             shift and go to state 75
    MUL             shift and go to state 71
    AND             shift and go to state 86
    INT             shift and go to state 88
    FLOAT           shift and go to state 89
    RUNE            shift and go to state 74
    STRING          shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 87

    RuneLit                        shift and go to state 83
    UnaryOp                        shift and go to state 67
    TrueLit                        shift and go to state 92
    BasicLit                       shift and go to state 73
    UnaryExpr                      shift and go to state 161
    FloatLit                       shift and go to state 78
    FalseLit                       shift and go to state 68
    IntLit                         shift and go to state 70
    Literal                        shift and go to state 69
    PrimaryExpr                    shift and go to state 79
    StringLit                      shift and go to state 90

state 125

    (94) BinaryOp -> AddOp .

    ID              reduce using rule 94 (BinaryOp -> AddOp .)
    LPAREN          reduce using rule 94 (BinaryOp -> AddOp .)
    ADD             reduce using rule 94 (BinaryOp -> AddOp .)
    SUB             reduce using rule 94 (BinaryOp -> AddOp .)
    NOT             reduce using rule 94 (BinaryOp -> AddOp .)
    XOR             reduce using rule 94 (BinaryOp -> AddOp .)
    MUL             reduce using rule 94 (BinaryOp -> AddOp .)
    AND             reduce using rule 94 (BinaryOp -> AddOp .)
    INT             reduce using rule 94 (BinaryOp -> AddOp .)
    FLOAT           reduce using rule 94 (BinaryOp -> AddOp .)
    RUNE            reduce using rule 94 (BinaryOp -> AddOp .)
    STRING          reduce using rule 94 (BinaryOp -> AddOp .)
    TRUE            reduce using rule 94 (BinaryOp -> AddOp .)
    FALSE           reduce using rule 94 (BinaryOp -> AddOp .)


state 126

    (110) MulOp -> SHR .

    ID              reduce using rule 110 (MulOp -> SHR .)
    LPAREN          reduce using rule 110 (MulOp -> SHR .)
    ADD             reduce using rule 110 (MulOp -> SHR .)
    SUB             reduce using rule 110 (MulOp -> SHR .)
    NOT             reduce using rule 110 (MulOp -> SHR .)
    XOR             reduce using rule 110 (MulOp -> SHR .)
    MUL             reduce using rule 110 (MulOp -> SHR .)
    AND             reduce using rule 110 (MulOp -> SHR .)
    INT             reduce using rule 110 (MulOp -> SHR .)
    FLOAT           reduce using rule 110 (MulOp -> SHR .)
    RUNE            reduce using rule 110 (MulOp -> SHR .)
    STRING          reduce using rule 110 (MulOp -> SHR .)
    TRUE            reduce using rule 110 (MulOp -> SHR .)
    FALSE           reduce using rule 110 (MulOp -> SHR .)


state 127

    (105) AddOp -> XOR .

    ID              reduce using rule 105 (AddOp -> XOR .)
    LPAREN          reduce using rule 105 (AddOp -> XOR .)
    ADD             reduce using rule 105 (AddOp -> XOR .)
    SUB             reduce using rule 105 (AddOp -> XOR .)
    NOT             reduce using rule 105 (AddOp -> XOR .)
    XOR             reduce using rule 105 (AddOp -> XOR .)
    MUL             reduce using rule 105 (AddOp -> XOR .)
    AND             reduce using rule 105 (AddOp -> XOR .)
    INT             reduce using rule 105 (AddOp -> XOR .)
    FLOAT           reduce using rule 105 (AddOp -> XOR .)
    RUNE            reduce using rule 105 (AddOp -> XOR .)
    STRING          reduce using rule 105 (AddOp -> XOR .)
    TRUE            reduce using rule 105 (AddOp -> XOR .)
    FALSE           reduce using rule 105 (AddOp -> XOR .)


state 128

    (95) BinaryOp -> MulOp .

    ID              reduce using rule 95 (BinaryOp -> MulOp .)
    LPAREN          reduce using rule 95 (BinaryOp -> MulOp .)
    ADD             reduce using rule 95 (BinaryOp -> MulOp .)
    SUB             reduce using rule 95 (BinaryOp -> MulOp .)
    NOT             reduce using rule 95 (BinaryOp -> MulOp .)
    XOR             reduce using rule 95 (BinaryOp -> MulOp .)
    MUL             reduce using rule 95 (BinaryOp -> MulOp .)
    AND             reduce using rule 95 (BinaryOp -> MulOp .)
    INT             reduce using rule 95 (BinaryOp -> MulOp .)
    FLOAT           reduce using rule 95 (BinaryOp -> MulOp .)
    RUNE            reduce using rule 95 (BinaryOp -> MulOp .)
    STRING          reduce using rule 95 (BinaryOp -> MulOp .)
    TRUE            reduce using rule 95 (BinaryOp -> MulOp .)
    FALSE           reduce using rule 95 (BinaryOp -> MulOp .)


state 129

    (100) RelOp -> GTN .

    ID              reduce using rule 100 (RelOp -> GTN .)
    LPAREN          reduce using rule 100 (RelOp -> GTN .)
    ADD             reduce using rule 100 (RelOp -> GTN .)
    SUB             reduce using rule 100 (RelOp -> GTN .)
    NOT             reduce using rule 100 (RelOp -> GTN .)
    XOR             reduce using rule 100 (RelOp -> GTN .)
    MUL             reduce using rule 100 (RelOp -> GTN .)
    AND             reduce using rule 100 (RelOp -> GTN .)
    INT             reduce using rule 100 (RelOp -> GTN .)
    FLOAT           reduce using rule 100 (RelOp -> GTN .)
    RUNE            reduce using rule 100 (RelOp -> GTN .)
    STRING          reduce using rule 100 (RelOp -> GTN .)
    TRUE            reduce using rule 100 (RelOp -> GTN .)
    FALSE           reduce using rule 100 (RelOp -> GTN .)


state 130

    (102) AddOp -> ADD .

    ID              reduce using rule 102 (AddOp -> ADD .)
    LPAREN          reduce using rule 102 (AddOp -> ADD .)
    ADD             reduce using rule 102 (AddOp -> ADD .)
    SUB             reduce using rule 102 (AddOp -> ADD .)
    NOT             reduce using rule 102 (AddOp -> ADD .)
    XOR             reduce using rule 102 (AddOp -> ADD .)
    MUL             reduce using rule 102 (AddOp -> ADD .)
    AND             reduce using rule 102 (AddOp -> ADD .)
    INT             reduce using rule 102 (AddOp -> ADD .)
    FLOAT           reduce using rule 102 (AddOp -> ADD .)
    RUNE            reduce using rule 102 (AddOp -> ADD .)
    STRING          reduce using rule 102 (AddOp -> ADD .)
    TRUE            reduce using rule 102 (AddOp -> ADD .)
    FALSE           reduce using rule 102 (AddOp -> ADD .)


state 131

    (96) RelOp -> EQL .

    ID              reduce using rule 96 (RelOp -> EQL .)
    LPAREN          reduce using rule 96 (RelOp -> EQL .)
    ADD             reduce using rule 96 (RelOp -> EQL .)
    SUB             reduce using rule 96 (RelOp -> EQL .)
    NOT             reduce using rule 96 (RelOp -> EQL .)
    XOR             reduce using rule 96 (RelOp -> EQL .)
    MUL             reduce using rule 96 (RelOp -> EQL .)
    AND             reduce using rule 96 (RelOp -> EQL .)
    INT             reduce using rule 96 (RelOp -> EQL .)
    FLOAT           reduce using rule 96 (RelOp -> EQL .)
    RUNE            reduce using rule 96 (RelOp -> EQL .)
    STRING          reduce using rule 96 (RelOp -> EQL .)
    TRUE            reduce using rule 96 (RelOp -> EQL .)
    FALSE           reduce using rule 96 (RelOp -> EQL .)


state 132

    (109) MulOp -> SHL .

    ID              reduce using rule 109 (MulOp -> SHL .)
    LPAREN          reduce using rule 109 (MulOp -> SHL .)
    ADD             reduce using rule 109 (MulOp -> SHL .)
    SUB             reduce using rule 109 (MulOp -> SHL .)
    NOT             reduce using rule 109 (MulOp -> SHL .)
    XOR             reduce using rule 109 (MulOp -> SHL .)
    MUL             reduce using rule 109 (MulOp -> SHL .)
    AND             reduce using rule 109 (MulOp -> SHL .)
    INT             reduce using rule 109 (MulOp -> SHL .)
    FLOAT           reduce using rule 109 (MulOp -> SHL .)
    RUNE            reduce using rule 109 (MulOp -> SHL .)
    STRING          reduce using rule 109 (MulOp -> SHL .)
    TRUE            reduce using rule 109 (MulOp -> SHL .)
    FALSE           reduce using rule 109 (MulOp -> SHL .)


state 133

    (98) RelOp -> LTN .

    ID              reduce using rule 98 (RelOp -> LTN .)
    LPAREN          reduce using rule 98 (RelOp -> LTN .)
    ADD             reduce using rule 98 (RelOp -> LTN .)
    SUB             reduce using rule 98 (RelOp -> LTN .)
    NOT             reduce using rule 98 (RelOp -> LTN .)
    XOR             reduce using rule 98 (RelOp -> LTN .)
    MUL             reduce using rule 98 (RelOp -> LTN .)
    AND             reduce using rule 98 (RelOp -> LTN .)
    INT             reduce using rule 98 (RelOp -> LTN .)
    FLOAT           reduce using rule 98 (RelOp -> LTN .)
    RUNE            reduce using rule 98 (RelOp -> LTN .)
    STRING          reduce using rule 98 (RelOp -> LTN .)
    TRUE            reduce using rule 98 (RelOp -> LTN .)
    FALSE           reduce using rule 98 (RelOp -> LTN .)


state 134

    (111) MulOp -> AND .

    ID              reduce using rule 111 (MulOp -> AND .)
    LPAREN          reduce using rule 111 (MulOp -> AND .)
    ADD             reduce using rule 111 (MulOp -> AND .)
    SUB             reduce using rule 111 (MulOp -> AND .)
    NOT             reduce using rule 111 (MulOp -> AND .)
    XOR             reduce using rule 111 (MulOp -> AND .)
    MUL             reduce using rule 111 (MulOp -> AND .)
    AND             reduce using rule 111 (MulOp -> AND .)
    INT             reduce using rule 111 (MulOp -> AND .)
    FLOAT           reduce using rule 111 (MulOp -> AND .)
    RUNE            reduce using rule 111 (MulOp -> AND .)
    STRING          reduce using rule 111 (MulOp -> AND .)
    TRUE            reduce using rule 111 (MulOp -> AND .)
    FALSE           reduce using rule 111 (MulOp -> AND .)


state 135

    (93) BinaryOp -> RelOp .

    ID              reduce using rule 93 (BinaryOp -> RelOp .)
    LPAREN          reduce using rule 93 (BinaryOp -> RelOp .)
    ADD             reduce using rule 93 (BinaryOp -> RelOp .)
    SUB             reduce using rule 93 (BinaryOp -> RelOp .)
    NOT             reduce using rule 93 (BinaryOp -> RelOp .)
    XOR             reduce using rule 93 (BinaryOp -> RelOp .)
    MUL             reduce using rule 93 (BinaryOp -> RelOp .)
    AND             reduce using rule 93 (BinaryOp -> RelOp .)
    INT             reduce using rule 93 (BinaryOp -> RelOp .)
    FLOAT           reduce using rule 93 (BinaryOp -> RelOp .)
    RUNE            reduce using rule 93 (BinaryOp -> RelOp .)
    STRING          reduce using rule 93 (BinaryOp -> RelOp .)
    TRUE            reduce using rule 93 (BinaryOp -> RelOp .)
    FALSE           reduce using rule 93 (BinaryOp -> RelOp .)


state 136

    (99) RelOp -> LEQ .

    ID              reduce using rule 99 (RelOp -> LEQ .)
    LPAREN          reduce using rule 99 (RelOp -> LEQ .)
    ADD             reduce using rule 99 (RelOp -> LEQ .)
    SUB             reduce using rule 99 (RelOp -> LEQ .)
    NOT             reduce using rule 99 (RelOp -> LEQ .)
    XOR             reduce using rule 99 (RelOp -> LEQ .)
    MUL             reduce using rule 99 (RelOp -> LEQ .)
    AND             reduce using rule 99 (RelOp -> LEQ .)
    INT             reduce using rule 99 (RelOp -> LEQ .)
    FLOAT           reduce using rule 99 (RelOp -> LEQ .)
    RUNE            reduce using rule 99 (RelOp -> LEQ .)
    STRING          reduce using rule 99 (RelOp -> LEQ .)
    TRUE            reduce using rule 99 (RelOp -> LEQ .)
    FALSE           reduce using rule 99 (RelOp -> LEQ .)


state 137

    (104) AddOp -> OR .

    ID              reduce using rule 104 (AddOp -> OR .)
    LPAREN          reduce using rule 104 (AddOp -> OR .)
    ADD             reduce using rule 104 (AddOp -> OR .)
    SUB             reduce using rule 104 (AddOp -> OR .)
    NOT             reduce using rule 104 (AddOp -> OR .)
    XOR             reduce using rule 104 (AddOp -> OR .)
    MUL             reduce using rule 104 (AddOp -> OR .)
    AND             reduce using rule 104 (AddOp -> OR .)
    INT             reduce using rule 104 (AddOp -> OR .)
    FLOAT           reduce using rule 104 (AddOp -> OR .)
    RUNE            reduce using rule 104 (AddOp -> OR .)
    STRING          reduce using rule 104 (AddOp -> OR .)
    TRUE            reduce using rule 104 (AddOp -> OR .)
    FALSE           reduce using rule 104 (AddOp -> OR .)


state 138

    (108) MulOp -> MOD .

    ID              reduce using rule 108 (MulOp -> MOD .)
    LPAREN          reduce using rule 108 (MulOp -> MOD .)
    ADD             reduce using rule 108 (MulOp -> MOD .)
    SUB             reduce using rule 108 (MulOp -> MOD .)
    NOT             reduce using rule 108 (MulOp -> MOD .)
    XOR             reduce using rule 108 (MulOp -> MOD .)
    MUL             reduce using rule 108 (MulOp -> MOD .)
    AND             reduce using rule 108 (MulOp -> MOD .)
    INT             reduce using rule 108 (MulOp -> MOD .)
    FLOAT           reduce using rule 108 (MulOp -> MOD .)
    RUNE            reduce using rule 108 (MulOp -> MOD .)
    STRING          reduce using rule 108 (MulOp -> MOD .)
    TRUE            reduce using rule 108 (MulOp -> MOD .)
    FALSE           reduce using rule 108 (MulOp -> MOD .)


state 139

    (47) Type -> LPAREN Type RPAREN .

    RPAREN          reduce using rule 47 (Type -> LPAREN Type RPAREN .)
    COMMA           reduce using rule 47 (Type -> LPAREN Type RPAREN .)
    ASSIGN          reduce using rule 47 (Type -> LPAREN Type RPAREN .)
    SEMICOLON       reduce using rule 47 (Type -> LPAREN Type RPAREN .)


state 140

    (48) Type -> LPAREN ID RPAREN .

    RPAREN          reduce using rule 48 (Type -> LPAREN ID RPAREN .)
    COMMA           reduce using rule 48 (Type -> LPAREN ID RPAREN .)
    ASSIGN          reduce using rule 48 (Type -> LPAREN ID RPAREN .)
    SEMICOLON       reduce using rule 48 (Type -> LPAREN ID RPAREN .)


state 141

    (38) VarSpec -> IdentifierList Type ASSIGN ExpressionList .
    (31) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 38 (VarSpec -> IdentifierList Type ASSIGN ExpressionList .)
    COMMA           shift and go to state 114


state 142

    (39) VarSpec -> IdentifierList ID ASSIGN ExpressionList .
    (31) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 39 (VarSpec -> IdentifierList ID ASSIGN ExpressionList .)
    COMMA           shift and go to state 114


state 143

    (54) StructType -> STRUCT OpenStructS LBRACE . FieldDecl_curl RBRACE CloseStructS
    (55) FieldDecl_curl -> . FieldDecl_curl FieldDecl SEMICOLON
    (56) FieldDecl_curl -> .

    RBRACE          reduce using rule 56 (FieldDecl_curl -> .)
    ID              reduce using rule 56 (FieldDecl_curl -> .)

    FieldDecl_curl                 shift and go to state 162

state 144

    (72) Parameters -> LPAREN RPAREN .

    LPAREN          reduce using rule 72 (Parameters -> LPAREN RPAREN .)
    LBRACE          reduce using rule 72 (Parameters -> LPAREN RPAREN .)


state 145

    (73) Parameters -> LPAREN ParameterList . RPAREN
    (74) Parameters -> LPAREN ParameterList . COMMA RPAREN
    (76) ParameterList -> ParameterList . COMMA ParameterDecl

    RPAREN          shift and go to state 164
    COMMA           shift and go to state 163


state 146

    (77) ParameterDecl -> ParaIdList . Type
    (79) ParameterDecl -> ParaIdList . ID
    (82) ParaIdList -> ParaIdList . COMMA ID
    (47) Type -> . LPAREN Type RPAREN
    (48) Type -> . LPAREN ID RPAREN
    (49) Type -> . TypeLit
    (50) TypeLit -> . ArrayType
    (51) TypeLit -> . PointerType
    (52) ArrayType -> . LBRACK INT RBRACK Type
    (53) ArrayType -> . LBRACK INT RBRACK ID
    (63) PointerType -> . MUL Type
    (64) PointerType -> . MUL ID

    ID              shift and go to state 167
    COMMA           shift and go to state 165
    LPAREN          shift and go to state 49
    LBRACK          shift and go to state 46
    MUL             shift and go to state 51

    PointerType                    shift and go to state 50
    TypeLit                        shift and go to state 45
    Type                           shift and go to state 166
    ArrayType                      shift and go to state 47

state 147

    (75) ParameterList -> ParameterDecl .

    RPAREN          reduce using rule 75 (ParameterList -> ParameterDecl .)
    COMMA           reduce using rule 75 (ParameterList -> ParameterDecl .)


state 148

    (78) ParameterDecl -> ID . Type
    (80) ParameterDecl -> ID . ID
    (81) ParaIdList -> ID . COMMA ID
    (47) Type -> . LPAREN Type RPAREN
    (48) Type -> . LPAREN ID RPAREN
    (49) Type -> . TypeLit
    (50) TypeLit -> . ArrayType
    (51) TypeLit -> . PointerType
    (52) ArrayType -> . LBRACK INT RBRACK Type
    (53) ArrayType -> . LBRACK INT RBRACK ID
    (63) PointerType -> . MUL Type
    (64) PointerType -> . MUL ID

    ID              shift and go to state 170
    COMMA           shift and go to state 169
    LPAREN          shift and go to state 49
    LBRACK          shift and go to state 46
    MUL             shift and go to state 51

    PointerType                    shift and go to state 50
    TypeLit                        shift and go to state 45
    Type                           shift and go to state 168
    ArrayType                      shift and go to state 47

state 149

    (66) Result -> LPAREN . TypeList RPAREN
    (68) TypeList -> . ID
    (69) TypeList -> . Type
    (70) TypeList -> . TypeList COMMA ID
    (71) TypeList -> . TypeList COMMA Type
    (47) Type -> . LPAREN Type RPAREN
    (48) Type -> . LPAREN ID RPAREN
    (49) Type -> . TypeLit
    (50) TypeLit -> . ArrayType
    (51) TypeLit -> . PointerType
    (52) ArrayType -> . LBRACK INT RBRACK Type
    (53) ArrayType -> . LBRACK INT RBRACK ID
    (63) PointerType -> . MUL Type
    (64) PointerType -> . MUL ID

    ID              shift and go to state 173
    LPAREN          shift and go to state 49
    LBRACK          shift and go to state 46
    MUL             shift and go to state 51

    TypeList                       shift and go to state 171
    TypeLit                        shift and go to state 45
    PointerType                    shift and go to state 50
    Type                           shift and go to state 172
    ArrayType                      shift and go to state 47

state 150

    (65) Signature -> Parameters Result .

    LBRACE          reduce using rule 65 (Signature -> Parameters Result .)


state 151

    (83) Block -> LBRACE . StatementList RBRACE
    (84) StatementList -> . Statement_curl
    (85) Statement_curl -> . Statement_curl Statement SEMICOLON
    (86) Statement_curl -> .

    RETURN          reduce using rule 86 (Statement_curl -> .)
    BREAK           reduce using rule 86 (Statement_curl -> .)
    CONTINUE        reduce using rule 86 (Statement_curl -> .)
    IF              reduce using rule 86 (Statement_curl -> .)
    SWITCH          reduce using rule 86 (Statement_curl -> .)
    FOR             reduce using rule 86 (Statement_curl -> .)
    CONST           reduce using rule 86 (Statement_curl -> .)
    TYPE            reduce using rule 86 (Statement_curl -> .)
    VAR             reduce using rule 86 (Statement_curl -> .)
    ID              reduce using rule 86 (Statement_curl -> .)
    LPAREN          reduce using rule 86 (Statement_curl -> .)
    ADD             reduce using rule 86 (Statement_curl -> .)
    SUB             reduce using rule 86 (Statement_curl -> .)
    NOT             reduce using rule 86 (Statement_curl -> .)
    XOR             reduce using rule 86 (Statement_curl -> .)
    MUL             reduce using rule 86 (Statement_curl -> .)
    AND             reduce using rule 86 (Statement_curl -> .)
    INT             reduce using rule 86 (Statement_curl -> .)
    FLOAT           reduce using rule 86 (Statement_curl -> .)
    RUNE            reduce using rule 86 (Statement_curl -> .)
    STRING          reduce using rule 86 (Statement_curl -> .)
    TRUE            reduce using rule 86 (Statement_curl -> .)
    FALSE           reduce using rule 86 (Statement_curl -> .)
    SEMICOLON       reduce using rule 86 (Statement_curl -> .)
    LBRACE          reduce using rule 86 (Statement_curl -> .)
    RBRACE          reduce using rule 86 (Statement_curl -> .)

    Statement_curl                 shift and go to state 174
    StatementList                  shift and go to state 175

state 152

    (43) FunctionDecl -> FUNC SetBase FuncName OpenS Signature Block . CloseBase CloseS
    (45) CloseBase -> .

    SEMICOLON       reduce using rule 45 (CloseBase -> .)

    CloseBase                      shift and go to state 176

state 153

    (52) ArrayType -> LBRACK INT RBRACK Type .

    RPAREN          reduce using rule 52 (ArrayType -> LBRACK INT RBRACK Type .)
    COMMA           reduce using rule 52 (ArrayType -> LBRACK INT RBRACK Type .)
    ASSIGN          reduce using rule 52 (ArrayType -> LBRACK INT RBRACK Type .)
    SEMICOLON       reduce using rule 52 (ArrayType -> LBRACK INT RBRACK Type .)


state 154

    (53) ArrayType -> LBRACK INT RBRACK ID .

    RPAREN          reduce using rule 53 (ArrayType -> LBRACK INT RBRACK ID .)
    COMMA           reduce using rule 53 (ArrayType -> LBRACK INT RBRACK ID .)
    ASSIGN          reduce using rule 53 (ArrayType -> LBRACK INT RBRACK ID .)
    SEMICOLON       reduce using rule 53 (ArrayType -> LBRACK INT RBRACK ID .)


state 155

    (125) Index -> LBRACK Expression . RBRACK
    (88) Expression -> Expression . BinaryOp UnaryExpr
    (91) BinaryOp -> . LOR
    (92) BinaryOp -> . LAND
    (93) BinaryOp -> . RelOp
    (94) BinaryOp -> . AddOp
    (95) BinaryOp -> . MulOp
    (96) RelOp -> . EQL
    (97) RelOp -> . NEQ
    (98) RelOp -> . LTN
    (99) RelOp -> . LEQ
    (100) RelOp -> . GTN
    (101) RelOp -> . GEQ
    (102) AddOp -> . ADD
    (103) AddOp -> . SUB
    (104) AddOp -> . OR
    (105) AddOp -> . XOR
    (106) MulOp -> . MUL
    (107) MulOp -> . DIV
    (108) MulOp -> . MOD
    (109) MulOp -> . SHL
    (110) MulOp -> . SHR
    (111) MulOp -> . AND
    (112) MulOp -> . AND_NOT

    RBRACK          shift and go to state 177
    LOR             shift and go to state 117
    LAND            shift and go to state 122
    EQL             shift and go to state 131
    NEQ             shift and go to state 120
    LTN             shift and go to state 133
    LEQ             shift and go to state 136
    GTN             shift and go to state 129
    GEQ             shift and go to state 121
    ADD             shift and go to state 130
    SUB             shift and go to state 116
    OR              shift and go to state 137
    XOR             shift and go to state 127
    MUL             shift and go to state 118
    DIV             shift and go to state 119
    MOD             shift and go to state 138
    SHL             shift and go to state 132
    SHR             shift and go to state 126
    AND             shift and go to state 134
    AND_NOT         shift and go to state 123

    AddOp                          shift and go to state 125
    BinaryOp                       shift and go to state 124
    MulOp                          shift and go to state 128
    RelOp                          shift and go to state 135

state 156

    (126) Arguments -> LPAREN RPAREN .

    DOT             reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    LBRACK          reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    LPAREN          reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    LOR             reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    LAND            reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    EQL             reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    NEQ             reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    LTN             reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    LEQ             reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    GTN             reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    GEQ             reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    ADD             reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    SUB             reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    OR              reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    XOR             reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    MUL             reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    DIV             reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    MOD             reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    SHL             reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    SHR             reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    AND             reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    AND_NOT         reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    COMMA           reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    SEMICOLON       reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    RPAREN          reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    RBRACK          reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    ADD_ASSIGN      reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    SUB_ASSIGN      reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    MUL_ASSIGN      reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    DIV_ASSIGN      reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    MOD_ASSIGN      reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    OR_ASSIGN       reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    XOR_ASSIGN      reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    SHL_ASSIGN      reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    SHR_ASSIGN      reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    ASSIGN          reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    LBRACE          reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    INC             reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    DEC             reduce using rule 126 (Arguments -> LPAREN RPAREN .)
    COLON           reduce using rule 126 (Arguments -> LPAREN RPAREN .)


state 157

    (127) Arguments -> LPAREN ExpressionList . RPAREN
    (128) Arguments -> LPAREN ExpressionList . COMMA RPAREN
    (31) ExpressionList -> ExpressionList . COMMA Expression

    RPAREN          shift and go to state 178
    COMMA           shift and go to state 179


state 158

    (121) PrimaryExpr -> PrimaryExpr DOT ID .

    DOT             reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    LBRACK          reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    LPAREN          reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    LOR             reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    LAND            reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    EQL             reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    NEQ             reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    LTN             reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    LEQ             reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    GTN             reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    GEQ             reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    ADD             reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    SUB             reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    OR              reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    XOR             reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    MUL             reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    DIV             reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    MOD             reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    SHL             reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    SHR             reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    AND             reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    AND_NOT         reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    COMMA           reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    SEMICOLON       reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    ADD_ASSIGN      reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    SUB_ASSIGN      reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    MUL_ASSIGN      reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    DIV_ASSIGN      reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    MOD_ASSIGN      reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    OR_ASSIGN       reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    XOR_ASSIGN      reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    SHL_ASSIGN      reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    SHR_ASSIGN      reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    ASSIGN          reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    LBRACE          reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    RBRACK          reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    INC             reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    DEC             reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    RPAREN          reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)
    COLON           reduce using rule 121 (PrimaryExpr -> PrimaryExpr DOT ID .)


state 159

    (31) ExpressionList -> ExpressionList COMMA Expression .
    (88) Expression -> Expression . BinaryOp UnaryExpr
    (91) BinaryOp -> . LOR
    (92) BinaryOp -> . LAND
    (93) BinaryOp -> . RelOp
    (94) BinaryOp -> . AddOp
    (95) BinaryOp -> . MulOp
    (96) RelOp -> . EQL
    (97) RelOp -> . NEQ
    (98) RelOp -> . LTN
    (99) RelOp -> . LEQ
    (100) RelOp -> . GTN
    (101) RelOp -> . GEQ
    (102) AddOp -> . ADD
    (103) AddOp -> . SUB
    (104) AddOp -> . OR
    (105) AddOp -> . XOR
    (106) MulOp -> . MUL
    (107) MulOp -> . DIV
    (108) MulOp -> . MOD
    (109) MulOp -> . SHL
    (110) MulOp -> . SHR
    (111) MulOp -> . AND
    (112) MulOp -> . AND_NOT

    COMMA           reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    ADD_ASSIGN      reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    SUB_ASSIGN      reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    MUL_ASSIGN      reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    DIV_ASSIGN      reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    MOD_ASSIGN      reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    OR_ASSIGN       reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    XOR_ASSIGN      reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    SHL_ASSIGN      reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    SHR_ASSIGN      reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    ASSIGN          reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    SEMICOLON       reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    LBRACE          reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    RPAREN          reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    LOR             shift and go to state 117
    LAND            shift and go to state 122
    EQL             shift and go to state 131
    NEQ             shift and go to state 120
    LTN             shift and go to state 133
    LEQ             shift and go to state 136
    GTN             shift and go to state 129
    GEQ             shift and go to state 121
    ADD             shift and go to state 130
    SUB             shift and go to state 116
    OR              shift and go to state 137
    XOR             shift and go to state 127
    MUL             shift and go to state 118
    DIV             shift and go to state 119
    MOD             shift and go to state 138
    SHL             shift and go to state 132
    SHR             shift and go to state 126
    AND             shift and go to state 134
    AND_NOT         shift and go to state 123

    AddOp                          shift and go to state 125
    RelOp                          shift and go to state 135
    BinaryOp                       shift and go to state 124
    MulOp                          shift and go to state 128

state 160

    (122) PrimaryExpr -> LPAREN Expression RPAREN .

    DOT             reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LBRACK          reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LOR             reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LAND            reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    EQL             reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    NEQ             reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LTN             reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LEQ             reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    GTN             reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    GEQ             reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    ADD             reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SUB             reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    OR              reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    XOR             reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    MUL             reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    DIV             reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    MOD             reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SHL             reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SHR             reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    AND             reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    AND_NOT         reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    ADD_ASSIGN      reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SUB_ASSIGN      reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    MUL_ASSIGN      reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    DIV_ASSIGN      reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    MOD_ASSIGN      reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    OR_ASSIGN       reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    XOR_ASSIGN      reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SHL_ASSIGN      reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SHR_ASSIGN      reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    ASSIGN          reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    RBRACK          reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    INC             reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    DEC             reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)
    COLON           reduce using rule 122 (PrimaryExpr -> LPAREN Expression RPAREN .)


state 161

    (88) Expression -> Expression BinaryOp UnaryExpr .

    LOR             reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    LAND            reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    EQL             reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    NEQ             reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    LTN             reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    LEQ             reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    GTN             reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    GEQ             reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    ADD             reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    SUB             reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    OR              reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    XOR             reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    MUL             reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    DIV             reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    MOD             reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    SHL             reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    SHR             reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    AND             reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    AND_NOT         reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    LBRACE          reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    COMMA           reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    SEMICOLON       reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    ADD_ASSIGN      reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    SUB_ASSIGN      reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    MUL_ASSIGN      reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    DIV_ASSIGN      reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    MOD_ASSIGN      reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    OR_ASSIGN       reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    XOR_ASSIGN      reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    SHL_ASSIGN      reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    SHR_ASSIGN      reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    ASSIGN          reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    INC             reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    DEC             reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    RPAREN          reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    COLON           reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)
    RBRACK          reduce using rule 88 (Expression -> Expression BinaryOp UnaryExpr .)


state 162

    (54) StructType -> STRUCT OpenStructS LBRACE FieldDecl_curl . RBRACE CloseStructS
    (55) FieldDecl_curl -> FieldDecl_curl . FieldDecl SEMICOLON
    (57) FieldDecl -> . ID COMMA IdentifierList Type
    (58) FieldDecl -> . ID COMMA IdentifierList ID
    (59) FieldDecl -> . ID Type
    (60) FieldDecl -> . ID ID
    (61) FieldDecl -> . ID STRUCT MUL ID
    (62) FieldDecl -> . ID COMMA IdentifierList STRUCT MUL ID

    RBRACE          shift and go to state 182
    ID              shift and go to state 181

    FieldDecl                      shift and go to state 180

state 163

    (74) Parameters -> LPAREN ParameterList COMMA . RPAREN
    (76) ParameterList -> ParameterList COMMA . ParameterDecl
    (77) ParameterDecl -> . ParaIdList Type
    (78) ParameterDecl -> . ID Type
    (79) ParameterDecl -> . ParaIdList ID
    (80) ParameterDecl -> . ID ID
    (81) ParaIdList -> . ID COMMA ID
    (82) ParaIdList -> . ParaIdList COMMA ID

    RPAREN          shift and go to state 183
    ID              shift and go to state 148

    ParaIdList                     shift and go to state 146
    ParameterDecl                  shift and go to state 184

state 164

    (73) Parameters -> LPAREN ParameterList RPAREN .

    LPAREN          reduce using rule 73 (Parameters -> LPAREN ParameterList RPAREN .)
    LBRACE          reduce using rule 73 (Parameters -> LPAREN ParameterList RPAREN .)


state 165

    (82) ParaIdList -> ParaIdList COMMA . ID

    ID              shift and go to state 185


state 166

    (77) ParameterDecl -> ParaIdList Type .

    RPAREN          reduce using rule 77 (ParameterDecl -> ParaIdList Type .)
    COMMA           reduce using rule 77 (ParameterDecl -> ParaIdList Type .)


state 167

    (79) ParameterDecl -> ParaIdList ID .

    RPAREN          reduce using rule 79 (ParameterDecl -> ParaIdList ID .)
    COMMA           reduce using rule 79 (ParameterDecl -> ParaIdList ID .)


state 168

    (78) ParameterDecl -> ID Type .

    RPAREN          reduce using rule 78 (ParameterDecl -> ID Type .)
    COMMA           reduce using rule 78 (ParameterDecl -> ID Type .)


state 169

    (81) ParaIdList -> ID COMMA . ID

    ID              shift and go to state 186


state 170

    (80) ParameterDecl -> ID ID .

    RPAREN          reduce using rule 80 (ParameterDecl -> ID ID .)
    COMMA           reduce using rule 80 (ParameterDecl -> ID ID .)


state 171

    (66) Result -> LPAREN TypeList . RPAREN
    (70) TypeList -> TypeList . COMMA ID
    (71) TypeList -> TypeList . COMMA Type

    RPAREN          shift and go to state 187
    COMMA           shift and go to state 188


state 172

    (69) TypeList -> Type .

    RPAREN          reduce using rule 69 (TypeList -> Type .)
    COMMA           reduce using rule 69 (TypeList -> Type .)


state 173

    (68) TypeList -> ID .

    RPAREN          reduce using rule 68 (TypeList -> ID .)
    COMMA           reduce using rule 68 (TypeList -> ID .)


state 174

    (84) StatementList -> Statement_curl .
    (85) Statement_curl -> Statement_curl . Statement SEMICOLON
    (142) Statement -> . Declaration
    (143) Statement -> . SimpleStmt
    (144) Statement -> . ReturnStmt
    (145) Statement -> . BreakStmt
    (146) Statement -> . ContinueStmt
    (147) Statement -> . IfStmt
    (148) Statement -> . OpenS Block CloseS
    (149) Statement -> . SwitchStmt
    (150) Statement -> . ForStmt
    (20) Declaration -> . ConstDecl
    (21) Declaration -> . StructDecl
    (22) Declaration -> . VarDecl
    (151) SimpleStmt -> . Expression
    (152) SimpleStmt -> . IncDecStmt
    (153) SimpleStmt -> . Assignment
    (154) SimpleStmt -> . ShortVarDecl
    (155) SimpleStmt -> .
    (169) ReturnStmt -> . RETURN ExpressionList
    (170) ReturnStmt -> . RETURN
    (171) BreakStmt -> . BREAK ID
    (172) BreakStmt -> . BREAK
    (173) ContinueStmt -> . CONTINUE ID
    (174) ContinueStmt -> . CONTINUE
    (176) IfStmt -> . IF OpenS Expression Block CloseS
    (177) IfStmt -> . IF OpenS Expression Block CloseS ELSE IfStmt
    (178) IfStmt -> . IF OpenS Expression Block CloseS ELSE OpenS Block CloseS
    (2) OpenS -> .
    (179) SwitchStmt -> . SWITCH ExpressionName LBRACE OpenW ExprCaseClause_curl CloseW RBRACE
    (186) ForStmt -> . FOR OpenS OpenF Expression Block CloseF CloseS
    (187) ForStmt -> . FOR OpenS OpenF ForClause Block CloseF CloseS
    (188) ForStmt -> . FOR OpenS OpenF Block CloseF CloseS
    (23) ConstDecl -> . CONST ConstSpec
    (24) ConstDecl -> . CONST LPAREN ConstSpec_curl RPAREN
    (32) StructDecl -> . TYPE StructName StructType
    (34) VarDecl -> . VAR VarSpec
    (35) VarDecl -> . VAR LPAREN VarSpec_curl RPAREN
    (87) Expression -> . UnaryExpr
    (88) Expression -> . Expression BinaryOp UnaryExpr
    (156) IncDecStmt -> . Expression INC
    (157) IncDecStmt -> . Expression DEC
    (158) Assignment -> . ExpressionList AssignOp ExpressionList
    (175) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (89) UnaryExpr -> . PrimaryExpr
    (90) UnaryExpr -> . UnaryOp UnaryExpr
    (30) ExpressionList -> . Expression
    (31) ExpressionList -> . ExpressionList COMMA Expression
    (28) IdentifierList -> . ID
    (29) IdentifierList -> . ID COMMA IdentifierList
    (119) PrimaryExpr -> . Literal
    (120) PrimaryExpr -> . ID
    (121) PrimaryExpr -> . PrimaryExpr DOT ID
    (122) PrimaryExpr -> . LPAREN Expression RPAREN
    (123) PrimaryExpr -> . PrimaryExpr Index
    (124) PrimaryExpr -> . PrimaryExpr Arguments
    (113) UnaryOp -> . ADD
    (114) UnaryOp -> . SUB
    (115) UnaryOp -> . NOT
    (116) UnaryOp -> . XOR
    (117) UnaryOp -> . MUL
    (118) UnaryOp -> . AND
    (129) Literal -> . BasicLit
    (130) BasicLit -> . IntLit
    (131) BasicLit -> . FloatLit
    (132) BasicLit -> . RuneLit
    (133) BasicLit -> . StringLit
    (134) BasicLit -> . TrueLit
    (135) BasicLit -> . FalseLit
    (138) IntLit -> . INT
    (139) FloatLit -> . FLOAT
    (140) RuneLit -> . RUNE
    (141) StringLit -> . STRING
    (136) TrueLit -> . TRUE
    (137) FalseLit -> . FALSE

    RBRACE          reduce using rule 84 (StatementList -> Statement_curl .)
    DEFAULT         reduce using rule 84 (StatementList -> Statement_curl .)
    CASE            reduce using rule 84 (StatementList -> Statement_curl .)
    SEMICOLON       reduce using rule 155 (SimpleStmt -> .)
    RETURN          shift and go to state 189
    BREAK           shift and go to state 209
    CONTINUE        shift and go to state 210
    IF              shift and go to state 206
    LBRACE          reduce using rule 2 (OpenS -> .)
    SWITCH          shift and go to state 198
    FOR             shift and go to state 201
    CONST           shift and go to state 10
    TYPE            shift and go to state 17
    VAR             shift and go to state 16
    ID              shift and go to state 197
    LPAREN          shift and go to state 82
    ADD             shift and go to state 80
    SUB             shift and go to state 66
    NOT             shift and go to state 91
    XOR             shift and go to state 75
    MUL             shift and go to state 71
    AND             shift and go to state 86
    INT             shift and go to state 88
    FLOAT           shift and go to state 89
    RUNE            shift and go to state 74
    STRING          shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 87

    Statement                      shift and go to state 190
    UnaryOp                        shift and go to state 67
    ContinueStmt                   shift and go to state 191
    SimpleStmt                     shift and go to state 192
    FalseLit                       shift and go to state 68
    Literal                        shift and go to state 69
    ForStmt                        shift and go to state 193
    IdentifierList                 shift and go to state 194
    IntLit                         shift and go to state 70
    IfStmt                         shift and go to state 195
    RuneLit                        shift and go to state 83
    Assignment                     shift and go to state 196
    IncDecStmt                     shift and go to state 199
    StructDecl                     shift and go to state 11
    OpenS                          shift and go to state 200
    Declaration                    shift and go to state 202
    UnaryExpr                      shift and go to state 77
    FloatLit                       shift and go to state 78
    ExpressionList                 shift and go to state 203
    Expression                     shift and go to state 204
    ShortVarDecl                   shift and go to state 205
    TrueLit                        shift and go to state 92
    BreakStmt                      shift and go to state 207
    SwitchStmt                     shift and go to state 208
    StringLit                      shift and go to state 90
    VarDecl                        shift and go to state 18
    BasicLit                       shift and go to state 73
    PrimaryExpr                    shift and go to state 79
    ReturnStmt                     shift and go to state 211
    ConstDecl                      shift and go to state 19

state 175

    (83) Block -> LBRACE StatementList . RBRACE

    RBRACE          shift and go to state 212


state 176

    (43) FunctionDecl -> FUNC SetBase FuncName OpenS Signature Block CloseBase . CloseS
    (3) CloseS -> .

    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 213

state 177

    (125) Index -> LBRACK Expression RBRACK .

    DOT             reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    LBRACK          reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    LPAREN          reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    LOR             reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    LAND            reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    EQL             reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    NEQ             reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    LTN             reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    LEQ             reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    GTN             reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    GEQ             reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    ADD             reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    SUB             reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    OR              reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    XOR             reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    MUL             reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    DIV             reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    MOD             reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    SHL             reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    SHR             reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    AND             reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    AND_NOT         reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    COMMA           reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    SEMICOLON       reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    DIV_ASSIGN      reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    MOD_ASSIGN      reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    OR_ASSIGN       reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    SHL_ASSIGN      reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    SHR_ASSIGN      reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    ASSIGN          reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    LBRACE          reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    INC             reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    DEC             reduce using rule 125 (Index -> LBRACK Expression RBRACK .)
    COLON           reduce using rule 125 (Index -> LBRACK Expression RBRACK .)


state 178

    (127) Arguments -> LPAREN ExpressionList RPAREN .

    DOT             reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    LBRACK          reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    LPAREN          reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    LOR             reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    LAND            reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    EQL             reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    NEQ             reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    LTN             reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    LEQ             reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    GTN             reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    GEQ             reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    ADD             reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    SUB             reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    OR              reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    XOR             reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    MUL             reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    DIV             reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    MOD             reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHL             reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHR             reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    AND             reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    AND_NOT         reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    COMMA           reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    SEMICOLON       reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    RPAREN          reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    RBRACK          reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    ADD_ASSIGN      reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    SUB_ASSIGN      reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    MUL_ASSIGN      reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    DIV_ASSIGN      reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    MOD_ASSIGN      reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    OR_ASSIGN       reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    XOR_ASSIGN      reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHL_ASSIGN      reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHR_ASSIGN      reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    ASSIGN          reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    LBRACE          reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    INC             reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    DEC             reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)
    COLON           reduce using rule 127 (Arguments -> LPAREN ExpressionList RPAREN .)


state 179

    (128) Arguments -> LPAREN ExpressionList COMMA . RPAREN
    (31) ExpressionList -> ExpressionList COMMA . Expression
    (87) Expression -> . UnaryExpr
    (88) Expression -> . Expression BinaryOp UnaryExpr
    (89) UnaryExpr -> . PrimaryExpr
    (90) UnaryExpr -> . UnaryOp UnaryExpr
    (119) PrimaryExpr -> . Literal
    (120) PrimaryExpr -> . ID
    (121) PrimaryExpr -> . PrimaryExpr DOT ID
    (122) PrimaryExpr -> . LPAREN Expression RPAREN
    (123) PrimaryExpr -> . PrimaryExpr Index
    (124) PrimaryExpr -> . PrimaryExpr Arguments
    (113) UnaryOp -> . ADD
    (114) UnaryOp -> . SUB
    (115) UnaryOp -> . NOT
    (116) UnaryOp -> . XOR
    (117) UnaryOp -> . MUL
    (118) UnaryOp -> . AND
    (129) Literal -> . BasicLit
    (130) BasicLit -> . IntLit
    (131) BasicLit -> . FloatLit
    (132) BasicLit -> . RuneLit
    (133) BasicLit -> . StringLit
    (134) BasicLit -> . TrueLit
    (135) BasicLit -> . FalseLit
    (138) IntLit -> . INT
    (139) FloatLit -> . FLOAT
    (140) RuneLit -> . RUNE
    (141) StringLit -> . STRING
    (136) TrueLit -> . TRUE
    (137) FalseLit -> . FALSE

    RPAREN          shift and go to state 214
    ID              shift and go to state 85
    LPAREN          shift and go to state 82
    ADD             shift and go to state 80
    SUB             shift and go to state 66
    NOT             shift and go to state 91
    XOR             shift and go to state 75
    MUL             shift and go to state 71
    AND             shift and go to state 86
    INT             shift and go to state 88
    FLOAT           shift and go to state 89
    RUNE            shift and go to state 74
    STRING          shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 87

    RuneLit                        shift and go to state 83
    UnaryOp                        shift and go to state 67
    TrueLit                        shift and go to state 92
    BasicLit                       shift and go to state 73
    UnaryExpr                      shift and go to state 77
    FloatLit                       shift and go to state 78
    FalseLit                       shift and go to state 68
    IntLit                         shift and go to state 70
    Literal                        shift and go to state 69
    PrimaryExpr                    shift and go to state 79
    StringLit                      shift and go to state 90
    Expression                     shift and go to state 159

state 180

    (55) FieldDecl_curl -> FieldDecl_curl FieldDecl . SEMICOLON

    SEMICOLON       shift and go to state 215


state 181

    (57) FieldDecl -> ID . COMMA IdentifierList Type
    (58) FieldDecl -> ID . COMMA IdentifierList ID
    (59) FieldDecl -> ID . Type
    (60) FieldDecl -> ID . ID
    (61) FieldDecl -> ID . STRUCT MUL ID
    (62) FieldDecl -> ID . COMMA IdentifierList STRUCT MUL ID
    (47) Type -> . LPAREN Type RPAREN
    (48) Type -> . LPAREN ID RPAREN
    (49) Type -> . TypeLit
    (50) TypeLit -> . ArrayType
    (51) TypeLit -> . PointerType
    (52) ArrayType -> . LBRACK INT RBRACK Type
    (53) ArrayType -> . LBRACK INT RBRACK ID
    (63) PointerType -> . MUL Type
    (64) PointerType -> . MUL ID

    COMMA           shift and go to state 217
    ID              shift and go to state 219
    STRUCT          shift and go to state 216
    LPAREN          shift and go to state 49
    LBRACK          shift and go to state 46
    MUL             shift and go to state 51

    PointerType                    shift and go to state 50
    TypeLit                        shift and go to state 45
    Type                           shift and go to state 218
    ArrayType                      shift and go to state 47

state 182

    (54) StructType -> STRUCT OpenStructS LBRACE FieldDecl_curl RBRACE . CloseStructS
    (5) CloseStructS -> .

    SEMICOLON       reduce using rule 5 (CloseStructS -> .)

    CloseStructS                   shift and go to state 220

state 183

    (74) Parameters -> LPAREN ParameterList COMMA RPAREN .

    LPAREN          reduce using rule 74 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    LBRACE          reduce using rule 74 (Parameters -> LPAREN ParameterList COMMA RPAREN .)


state 184

    (76) ParameterList -> ParameterList COMMA ParameterDecl .

    RPAREN          reduce using rule 76 (ParameterList -> ParameterList COMMA ParameterDecl .)
    COMMA           reduce using rule 76 (ParameterList -> ParameterList COMMA ParameterDecl .)


state 185

    (82) ParaIdList -> ParaIdList COMMA ID .

    ID              reduce using rule 82 (ParaIdList -> ParaIdList COMMA ID .)
    COMMA           reduce using rule 82 (ParaIdList -> ParaIdList COMMA ID .)
    LPAREN          reduce using rule 82 (ParaIdList -> ParaIdList COMMA ID .)
    LBRACK          reduce using rule 82 (ParaIdList -> ParaIdList COMMA ID .)
    MUL             reduce using rule 82 (ParaIdList -> ParaIdList COMMA ID .)


state 186

    (81) ParaIdList -> ID COMMA ID .

    ID              reduce using rule 81 (ParaIdList -> ID COMMA ID .)
    COMMA           reduce using rule 81 (ParaIdList -> ID COMMA ID .)
    LPAREN          reduce using rule 81 (ParaIdList -> ID COMMA ID .)
    LBRACK          reduce using rule 81 (ParaIdList -> ID COMMA ID .)
    MUL             reduce using rule 81 (ParaIdList -> ID COMMA ID .)


state 187

    (66) Result -> LPAREN TypeList RPAREN .

    LBRACE          reduce using rule 66 (Result -> LPAREN TypeList RPAREN .)


state 188

    (70) TypeList -> TypeList COMMA . ID
    (71) TypeList -> TypeList COMMA . Type
    (47) Type -> . LPAREN Type RPAREN
    (48) Type -> . LPAREN ID RPAREN
    (49) Type -> . TypeLit
    (50) TypeLit -> . ArrayType
    (51) TypeLit -> . PointerType
    (52) ArrayType -> . LBRACK INT RBRACK Type
    (53) ArrayType -> . LBRACK INT RBRACK ID
    (63) PointerType -> . MUL Type
    (64) PointerType -> . MUL ID

    ID              shift and go to state 222
    LPAREN          shift and go to state 49
    LBRACK          shift and go to state 46
    MUL             shift and go to state 51

    TypeLit                        shift and go to state 45
    PointerType                    shift and go to state 50
    Type                           shift and go to state 221
    ArrayType                      shift and go to state 47

state 189

    (169) ReturnStmt -> RETURN . ExpressionList
    (170) ReturnStmt -> RETURN .
    (30) ExpressionList -> . Expression
    (31) ExpressionList -> . ExpressionList COMMA Expression
    (87) Expression -> . UnaryExpr
    (88) Expression -> . Expression BinaryOp UnaryExpr
    (89) UnaryExpr -> . PrimaryExpr
    (90) UnaryExpr -> . UnaryOp UnaryExpr
    (119) PrimaryExpr -> . Literal
    (120) PrimaryExpr -> . ID
    (121) PrimaryExpr -> . PrimaryExpr DOT ID
    (122) PrimaryExpr -> . LPAREN Expression RPAREN
    (123) PrimaryExpr -> . PrimaryExpr Index
    (124) PrimaryExpr -> . PrimaryExpr Arguments
    (113) UnaryOp -> . ADD
    (114) UnaryOp -> . SUB
    (115) UnaryOp -> . NOT
    (116) UnaryOp -> . XOR
    (117) UnaryOp -> . MUL
    (118) UnaryOp -> . AND
    (129) Literal -> . BasicLit
    (130) BasicLit -> . IntLit
    (131) BasicLit -> . FloatLit
    (132) BasicLit -> . RuneLit
    (133) BasicLit -> . StringLit
    (134) BasicLit -> . TrueLit
    (135) BasicLit -> . FalseLit
    (138) IntLit -> . INT
    (139) FloatLit -> . FLOAT
    (140) RuneLit -> . RUNE
    (141) StringLit -> . STRING
    (136) TrueLit -> . TRUE
    (137) FalseLit -> . FALSE

    SEMICOLON       reduce using rule 170 (ReturnStmt -> RETURN .)
    ID              shift and go to state 85
    LPAREN          shift and go to state 82
    ADD             shift and go to state 80
    SUB             shift and go to state 66
    NOT             shift and go to state 91
    XOR             shift and go to state 75
    MUL             shift and go to state 71
    AND             shift and go to state 86
    INT             shift and go to state 88
    FLOAT           shift and go to state 89
    RUNE            shift and go to state 74
    STRING          shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 87

    RuneLit                        shift and go to state 83
    UnaryOp                        shift and go to state 67
    TrueLit                        shift and go to state 92
    BasicLit                       shift and go to state 73
    UnaryExpr                      shift and go to state 77
    FloatLit                       shift and go to state 78
    FalseLit                       shift and go to state 68
    IntLit                         shift and go to state 70
    Literal                        shift and go to state 69
    ExpressionList                 shift and go to state 223
    PrimaryExpr                    shift and go to state 79
    StringLit                      shift and go to state 90
    Expression                     shift and go to state 84

state 190

    (85) Statement_curl -> Statement_curl Statement . SEMICOLON

    SEMICOLON       shift and go to state 224


state 191

    (146) Statement -> ContinueStmt .

    SEMICOLON       reduce using rule 146 (Statement -> ContinueStmt .)


state 192

    (143) Statement -> SimpleStmt .

    SEMICOLON       reduce using rule 143 (Statement -> SimpleStmt .)


state 193

    (150) Statement -> ForStmt .

    SEMICOLON       reduce using rule 150 (Statement -> ForStmt .)


state 194

    (175) ShortVarDecl -> IdentifierList . DEFINE ExpressionList

    DEFINE          shift and go to state 225


state 195

    (147) Statement -> IfStmt .

    SEMICOLON       reduce using rule 147 (Statement -> IfStmt .)


state 196

    (153) SimpleStmt -> Assignment .

    SEMICOLON       reduce using rule 153 (SimpleStmt -> Assignment .)
    LBRACE          reduce using rule 153 (SimpleStmt -> Assignment .)


state 197

    (28) IdentifierList -> ID .
    (29) IdentifierList -> ID . COMMA IdentifierList
    (120) PrimaryExpr -> ID .

    DEFINE          reduce using rule 28 (IdentifierList -> ID .)
    DOT             reduce using rule 120 (PrimaryExpr -> ID .)
    LBRACK          reduce using rule 120 (PrimaryExpr -> ID .)
    LPAREN          reduce using rule 120 (PrimaryExpr -> ID .)
    INC             reduce using rule 120 (PrimaryExpr -> ID .)
    DEC             reduce using rule 120 (PrimaryExpr -> ID .)
    LOR             reduce using rule 120 (PrimaryExpr -> ID .)
    LAND            reduce using rule 120 (PrimaryExpr -> ID .)
    EQL             reduce using rule 120 (PrimaryExpr -> ID .)
    NEQ             reduce using rule 120 (PrimaryExpr -> ID .)
    LTN             reduce using rule 120 (PrimaryExpr -> ID .)
    LEQ             reduce using rule 120 (PrimaryExpr -> ID .)
    GTN             reduce using rule 120 (PrimaryExpr -> ID .)
    GEQ             reduce using rule 120 (PrimaryExpr -> ID .)
    ADD             reduce using rule 120 (PrimaryExpr -> ID .)
    SUB             reduce using rule 120 (PrimaryExpr -> ID .)
    OR              reduce using rule 120 (PrimaryExpr -> ID .)
    XOR             reduce using rule 120 (PrimaryExpr -> ID .)
    MUL             reduce using rule 120 (PrimaryExpr -> ID .)
    DIV             reduce using rule 120 (PrimaryExpr -> ID .)
    MOD             reduce using rule 120 (PrimaryExpr -> ID .)
    SHL             reduce using rule 120 (PrimaryExpr -> ID .)
    SHR             reduce using rule 120 (PrimaryExpr -> ID .)
    AND             reduce using rule 120 (PrimaryExpr -> ID .)
    AND_NOT         reduce using rule 120 (PrimaryExpr -> ID .)
    LBRACE          reduce using rule 120 (PrimaryExpr -> ID .)
    COMMA           reduce using rule 120 (PrimaryExpr -> ID .)
    ADD_ASSIGN      reduce using rule 120 (PrimaryExpr -> ID .)
    SUB_ASSIGN      reduce using rule 120 (PrimaryExpr -> ID .)
    MUL_ASSIGN      reduce using rule 120 (PrimaryExpr -> ID .)
    DIV_ASSIGN      reduce using rule 120 (PrimaryExpr -> ID .)
    MOD_ASSIGN      reduce using rule 120 (PrimaryExpr -> ID .)
    OR_ASSIGN       reduce using rule 120 (PrimaryExpr -> ID .)
    XOR_ASSIGN      reduce using rule 120 (PrimaryExpr -> ID .)
    SHL_ASSIGN      reduce using rule 120 (PrimaryExpr -> ID .)
    SHR_ASSIGN      reduce using rule 120 (PrimaryExpr -> ID .)
    ASSIGN          reduce using rule 120 (PrimaryExpr -> ID .)
    SEMICOLON       reduce using rule 120 (PrimaryExpr -> ID .)

  ! COMMA           [ shift and go to state 41 ]


state 198

    (179) SwitchStmt -> SWITCH . ExpressionName LBRACE OpenW ExprCaseClause_curl CloseW RBRACE
    (180) ExpressionName -> . Expression
    (87) Expression -> . UnaryExpr
    (88) Expression -> . Expression BinaryOp UnaryExpr
    (89) UnaryExpr -> . PrimaryExpr
    (90) UnaryExpr -> . UnaryOp UnaryExpr
    (119) PrimaryExpr -> . Literal
    (120) PrimaryExpr -> . ID
    (121) PrimaryExpr -> . PrimaryExpr DOT ID
    (122) PrimaryExpr -> . LPAREN Expression RPAREN
    (123) PrimaryExpr -> . PrimaryExpr Index
    (124) PrimaryExpr -> . PrimaryExpr Arguments
    (113) UnaryOp -> . ADD
    (114) UnaryOp -> . SUB
    (115) UnaryOp -> . NOT
    (116) UnaryOp -> . XOR
    (117) UnaryOp -> . MUL
    (118) UnaryOp -> . AND
    (129) Literal -> . BasicLit
    (130) BasicLit -> . IntLit
    (131) BasicLit -> . FloatLit
    (132) BasicLit -> . RuneLit
    (133) BasicLit -> . StringLit
    (134) BasicLit -> . TrueLit
    (135) BasicLit -> . FalseLit
    (138) IntLit -> . INT
    (139) FloatLit -> . FLOAT
    (140) RuneLit -> . RUNE
    (141) StringLit -> . STRING
    (136) TrueLit -> . TRUE
    (137) FalseLit -> . FALSE

    ID              shift and go to state 85
    LPAREN          shift and go to state 82
    ADD             shift and go to state 80
    SUB             shift and go to state 66
    NOT             shift and go to state 91
    XOR             shift and go to state 75
    MUL             shift and go to state 71
    AND             shift and go to state 86
    INT             shift and go to state 88
    FLOAT           shift and go to state 89
    RUNE            shift and go to state 74
    STRING          shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 87

    TrueLit                        shift and go to state 92
    RuneLit                        shift and go to state 83
    FloatLit                       shift and go to state 78
    UnaryOp                        shift and go to state 67
    BasicLit                       shift and go to state 73
    ExpressionName                 shift and go to state 226
    UnaryExpr                      shift and go to state 77
    FalseLit                       shift and go to state 68
    IntLit                         shift and go to state 70
    Literal                        shift and go to state 69
    PrimaryExpr                    shift and go to state 79
    StringLit                      shift and go to state 90
    Expression                     shift and go to state 227

state 199

    (152) SimpleStmt -> IncDecStmt .

    SEMICOLON       reduce using rule 152 (SimpleStmt -> IncDecStmt .)
    LBRACE          reduce using rule 152 (SimpleStmt -> IncDecStmt .)


state 200

    (148) Statement -> OpenS . Block CloseS
    (83) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 151

    Block                          shift and go to state 228

state 201

    (186) ForStmt -> FOR . OpenS OpenF Expression Block CloseF CloseS
    (187) ForStmt -> FOR . OpenS OpenF ForClause Block CloseF CloseS
    (188) ForStmt -> FOR . OpenS OpenF Block CloseF CloseS
    (2) OpenS -> .

    LBRACE          reduce using rule 2 (OpenS -> .)
    ID              reduce using rule 2 (OpenS -> .)
    LPAREN          reduce using rule 2 (OpenS -> .)
    ADD             reduce using rule 2 (OpenS -> .)
    SUB             reduce using rule 2 (OpenS -> .)
    NOT             reduce using rule 2 (OpenS -> .)
    XOR             reduce using rule 2 (OpenS -> .)
    MUL             reduce using rule 2 (OpenS -> .)
    AND             reduce using rule 2 (OpenS -> .)
    INT             reduce using rule 2 (OpenS -> .)
    FLOAT           reduce using rule 2 (OpenS -> .)
    RUNE            reduce using rule 2 (OpenS -> .)
    STRING          reduce using rule 2 (OpenS -> .)
    TRUE            reduce using rule 2 (OpenS -> .)
    FALSE           reduce using rule 2 (OpenS -> .)
    SEMICOLON       reduce using rule 2 (OpenS -> .)

    OpenS                          shift and go to state 229

state 202

    (142) Statement -> Declaration .

    SEMICOLON       reduce using rule 142 (Statement -> Declaration .)


state 203

    (158) Assignment -> ExpressionList . AssignOp ExpressionList
    (31) ExpressionList -> ExpressionList . COMMA Expression
    (159) AssignOp -> . ADD_ASSIGN
    (160) AssignOp -> . SUB_ASSIGN
    (161) AssignOp -> . MUL_ASSIGN
    (162) AssignOp -> . DIV_ASSIGN
    (163) AssignOp -> . MOD_ASSIGN
    (164) AssignOp -> . OR_ASSIGN
    (165) AssignOp -> . XOR_ASSIGN
    (166) AssignOp -> . SHL_ASSIGN
    (167) AssignOp -> . SHR_ASSIGN
    (168) AssignOp -> . ASSIGN

    COMMA           shift and go to state 114
    ADD_ASSIGN      shift and go to state 240
    SUB_ASSIGN      shift and go to state 230
    MUL_ASSIGN      shift and go to state 232
    DIV_ASSIGN      shift and go to state 239
    MOD_ASSIGN      shift and go to state 237
    OR_ASSIGN       shift and go to state 236
    XOR_ASSIGN      shift and go to state 233
    SHL_ASSIGN      shift and go to state 238
    SHR_ASSIGN      shift and go to state 235
    ASSIGN          shift and go to state 234

    AssignOp                       shift and go to state 231

state 204

    (151) SimpleStmt -> Expression .
    (88) Expression -> Expression . BinaryOp UnaryExpr
    (156) IncDecStmt -> Expression . INC
    (157) IncDecStmt -> Expression . DEC
    (30) ExpressionList -> Expression .
    (91) BinaryOp -> . LOR
    (92) BinaryOp -> . LAND
    (93) BinaryOp -> . RelOp
    (94) BinaryOp -> . AddOp
    (95) BinaryOp -> . MulOp
    (96) RelOp -> . EQL
    (97) RelOp -> . NEQ
    (98) RelOp -> . LTN
    (99) RelOp -> . LEQ
    (100) RelOp -> . GTN
    (101) RelOp -> . GEQ
    (102) AddOp -> . ADD
    (103) AddOp -> . SUB
    (104) AddOp -> . OR
    (105) AddOp -> . XOR
    (106) MulOp -> . MUL
    (107) MulOp -> . DIV
    (108) MulOp -> . MOD
    (109) MulOp -> . SHL
    (110) MulOp -> . SHR
    (111) MulOp -> . AND
    (112) MulOp -> . AND_NOT

    SEMICOLON       reduce using rule 151 (SimpleStmt -> Expression .)
    LBRACE          reduce using rule 151 (SimpleStmt -> Expression .)
    INC             shift and go to state 242
    DEC             shift and go to state 241
    COMMA           reduce using rule 30 (ExpressionList -> Expression .)
    ADD_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    SUB_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    MUL_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    DIV_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    MOD_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    OR_ASSIGN       reduce using rule 30 (ExpressionList -> Expression .)
    XOR_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    SHL_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    SHR_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    ASSIGN          reduce using rule 30 (ExpressionList -> Expression .)
    LOR             shift and go to state 117
    LAND            shift and go to state 122
    EQL             shift and go to state 131
    NEQ             shift and go to state 120
    LTN             shift and go to state 133
    LEQ             shift and go to state 136
    GTN             shift and go to state 129
    GEQ             shift and go to state 121
    ADD             shift and go to state 130
    SUB             shift and go to state 116
    OR              shift and go to state 137
    XOR             shift and go to state 127
    MUL             shift and go to state 118
    DIV             shift and go to state 119
    MOD             shift and go to state 138
    SHL             shift and go to state 132
    SHR             shift and go to state 126
    AND             shift and go to state 134
    AND_NOT         shift and go to state 123

    AddOp                          shift and go to state 125
    BinaryOp                       shift and go to state 124
    MulOp                          shift and go to state 128
    RelOp                          shift and go to state 135

state 205

    (154) SimpleStmt -> ShortVarDecl .

    SEMICOLON       reduce using rule 154 (SimpleStmt -> ShortVarDecl .)
    LBRACE          reduce using rule 154 (SimpleStmt -> ShortVarDecl .)


state 206

    (176) IfStmt -> IF . OpenS Expression Block CloseS
    (177) IfStmt -> IF . OpenS Expression Block CloseS ELSE IfStmt
    (178) IfStmt -> IF . OpenS Expression Block CloseS ELSE OpenS Block CloseS
    (2) OpenS -> .

    ID              reduce using rule 2 (OpenS -> .)
    LPAREN          reduce using rule 2 (OpenS -> .)
    ADD             reduce using rule 2 (OpenS -> .)
    SUB             reduce using rule 2 (OpenS -> .)
    NOT             reduce using rule 2 (OpenS -> .)
    XOR             reduce using rule 2 (OpenS -> .)
    MUL             reduce using rule 2 (OpenS -> .)
    AND             reduce using rule 2 (OpenS -> .)
    INT             reduce using rule 2 (OpenS -> .)
    FLOAT           reduce using rule 2 (OpenS -> .)
    RUNE            reduce using rule 2 (OpenS -> .)
    STRING          reduce using rule 2 (OpenS -> .)
    TRUE            reduce using rule 2 (OpenS -> .)
    FALSE           reduce using rule 2 (OpenS -> .)

    OpenS                          shift and go to state 243

state 207

    (145) Statement -> BreakStmt .

    SEMICOLON       reduce using rule 145 (Statement -> BreakStmt .)


state 208

    (149) Statement -> SwitchStmt .

    SEMICOLON       reduce using rule 149 (Statement -> SwitchStmt .)


state 209

    (171) BreakStmt -> BREAK . ID
    (172) BreakStmt -> BREAK .

    ID              shift and go to state 244
    SEMICOLON       reduce using rule 172 (BreakStmt -> BREAK .)


state 210

    (173) ContinueStmt -> CONTINUE . ID
    (174) ContinueStmt -> CONTINUE .

    ID              shift and go to state 245
    SEMICOLON       reduce using rule 174 (ContinueStmt -> CONTINUE .)


state 211

    (144) Statement -> ReturnStmt .

    SEMICOLON       reduce using rule 144 (Statement -> ReturnStmt .)


state 212

    (83) Block -> LBRACE StatementList RBRACE .

    SEMICOLON       reduce using rule 83 (Block -> LBRACE StatementList RBRACE .)
    ELSE            reduce using rule 83 (Block -> LBRACE StatementList RBRACE .)


state 213

    (43) FunctionDecl -> FUNC SetBase FuncName OpenS Signature Block CloseBase CloseS .

    SEMICOLON       reduce using rule 43 (FunctionDecl -> FUNC SetBase FuncName OpenS Signature Block CloseBase CloseS .)


state 214

    (128) Arguments -> LPAREN ExpressionList COMMA RPAREN .

    DOT             reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LBRACK          reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LPAREN          reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LOR             reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LAND            reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    EQL             reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    NEQ             reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LTN             reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LEQ             reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    GTN             reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    GEQ             reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    ADD             reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SUB             reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    OR              reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    XOR             reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    MUL             reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    DIV             reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    MOD             reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHL             reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHR             reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    AND             reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    AND_NOT         reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    COMMA           reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SEMICOLON       reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    RPAREN          reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    RBRACK          reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    ADD_ASSIGN      reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SUB_ASSIGN      reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    MUL_ASSIGN      reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    DIV_ASSIGN      reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    MOD_ASSIGN      reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    OR_ASSIGN       reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    XOR_ASSIGN      reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHL_ASSIGN      reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHR_ASSIGN      reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    ASSIGN          reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LBRACE          reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    INC             reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    DEC             reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    COLON           reduce using rule 128 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)


state 215

    (55) FieldDecl_curl -> FieldDecl_curl FieldDecl SEMICOLON .

    RBRACE          reduce using rule 55 (FieldDecl_curl -> FieldDecl_curl FieldDecl SEMICOLON .)
    ID              reduce using rule 55 (FieldDecl_curl -> FieldDecl_curl FieldDecl SEMICOLON .)


state 216

    (61) FieldDecl -> ID STRUCT . MUL ID

    MUL             shift and go to state 246


state 217

    (57) FieldDecl -> ID COMMA . IdentifierList Type
    (58) FieldDecl -> ID COMMA . IdentifierList ID
    (62) FieldDecl -> ID COMMA . IdentifierList STRUCT MUL ID
    (28) IdentifierList -> . ID
    (29) IdentifierList -> . ID COMMA IdentifierList

    ID              shift and go to state 29

    IdentifierList                 shift and go to state 247

state 218

    (59) FieldDecl -> ID Type .

    SEMICOLON       reduce using rule 59 (FieldDecl -> ID Type .)


state 219

    (60) FieldDecl -> ID ID .

    SEMICOLON       reduce using rule 60 (FieldDecl -> ID ID .)


state 220

    (54) StructType -> STRUCT OpenStructS LBRACE FieldDecl_curl RBRACE CloseStructS .

    SEMICOLON       reduce using rule 54 (StructType -> STRUCT OpenStructS LBRACE FieldDecl_curl RBRACE CloseStructS .)


state 221

    (71) TypeList -> TypeList COMMA Type .

    RPAREN          reduce using rule 71 (TypeList -> TypeList COMMA Type .)
    COMMA           reduce using rule 71 (TypeList -> TypeList COMMA Type .)


state 222

    (70) TypeList -> TypeList COMMA ID .

    RPAREN          reduce using rule 70 (TypeList -> TypeList COMMA ID .)
    COMMA           reduce using rule 70 (TypeList -> TypeList COMMA ID .)


state 223

    (169) ReturnStmt -> RETURN ExpressionList .
    (31) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 169 (ReturnStmt -> RETURN ExpressionList .)
    COMMA           shift and go to state 114


state 224

    (85) Statement_curl -> Statement_curl Statement SEMICOLON .

    RETURN          reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    BREAK           reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    CONTINUE        reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    IF              reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    SWITCH          reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    FOR             reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    CONST           reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    TYPE            reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    VAR             reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    ID              reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    LPAREN          reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    ADD             reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    SUB             reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    NOT             reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    XOR             reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    MUL             reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    AND             reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    INT             reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    FLOAT           reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    RUNE            reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    STRING          reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    TRUE            reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    FALSE           reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    SEMICOLON       reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    LBRACE          reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    RBRACE          reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    DEFAULT         reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    CASE            reduce using rule 85 (Statement_curl -> Statement_curl Statement SEMICOLON .)


state 225

    (175) ShortVarDecl -> IdentifierList DEFINE . ExpressionList
    (30) ExpressionList -> . Expression
    (31) ExpressionList -> . ExpressionList COMMA Expression
    (87) Expression -> . UnaryExpr
    (88) Expression -> . Expression BinaryOp UnaryExpr
    (89) UnaryExpr -> . PrimaryExpr
    (90) UnaryExpr -> . UnaryOp UnaryExpr
    (119) PrimaryExpr -> . Literal
    (120) PrimaryExpr -> . ID
    (121) PrimaryExpr -> . PrimaryExpr DOT ID
    (122) PrimaryExpr -> . LPAREN Expression RPAREN
    (123) PrimaryExpr -> . PrimaryExpr Index
    (124) PrimaryExpr -> . PrimaryExpr Arguments
    (113) UnaryOp -> . ADD
    (114) UnaryOp -> . SUB
    (115) UnaryOp -> . NOT
    (116) UnaryOp -> . XOR
    (117) UnaryOp -> . MUL
    (118) UnaryOp -> . AND
    (129) Literal -> . BasicLit
    (130) BasicLit -> . IntLit
    (131) BasicLit -> . FloatLit
    (132) BasicLit -> . RuneLit
    (133) BasicLit -> . StringLit
    (134) BasicLit -> . TrueLit
    (135) BasicLit -> . FalseLit
    (138) IntLit -> . INT
    (139) FloatLit -> . FLOAT
    (140) RuneLit -> . RUNE
    (141) StringLit -> . STRING
    (136) TrueLit -> . TRUE
    (137) FalseLit -> . FALSE

    ID              shift and go to state 85
    LPAREN          shift and go to state 82
    ADD             shift and go to state 80
    SUB             shift and go to state 66
    NOT             shift and go to state 91
    XOR             shift and go to state 75
    MUL             shift and go to state 71
    AND             shift and go to state 86
    INT             shift and go to state 88
    FLOAT           shift and go to state 89
    RUNE            shift and go to state 74
    STRING          shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 87

    RuneLit                        shift and go to state 83
    UnaryOp                        shift and go to state 67
    TrueLit                        shift and go to state 92
    BasicLit                       shift and go to state 73
    UnaryExpr                      shift and go to state 77
    FloatLit                       shift and go to state 78
    FalseLit                       shift and go to state 68
    IntLit                         shift and go to state 70
    Literal                        shift and go to state 69
    ExpressionList                 shift and go to state 248
    PrimaryExpr                    shift and go to state 79
    StringLit                      shift and go to state 90
    Expression                     shift and go to state 84

state 226

    (179) SwitchStmt -> SWITCH ExpressionName . LBRACE OpenW ExprCaseClause_curl CloseW RBRACE

    LBRACE          shift and go to state 249


state 227

    (180) ExpressionName -> Expression .
    (88) Expression -> Expression . BinaryOp UnaryExpr
    (91) BinaryOp -> . LOR
    (92) BinaryOp -> . LAND
    (93) BinaryOp -> . RelOp
    (94) BinaryOp -> . AddOp
    (95) BinaryOp -> . MulOp
    (96) RelOp -> . EQL
    (97) RelOp -> . NEQ
    (98) RelOp -> . LTN
    (99) RelOp -> . LEQ
    (100) RelOp -> . GTN
    (101) RelOp -> . GEQ
    (102) AddOp -> . ADD
    (103) AddOp -> . SUB
    (104) AddOp -> . OR
    (105) AddOp -> . XOR
    (106) MulOp -> . MUL
    (107) MulOp -> . DIV
    (108) MulOp -> . MOD
    (109) MulOp -> . SHL
    (110) MulOp -> . SHR
    (111) MulOp -> . AND
    (112) MulOp -> . AND_NOT

    LBRACE          reduce using rule 180 (ExpressionName -> Expression .)
    LOR             shift and go to state 117
    LAND            shift and go to state 122
    EQL             shift and go to state 131
    NEQ             shift and go to state 120
    LTN             shift and go to state 133
    LEQ             shift and go to state 136
    GTN             shift and go to state 129
    GEQ             shift and go to state 121
    ADD             shift and go to state 130
    SUB             shift and go to state 116
    OR              shift and go to state 137
    XOR             shift and go to state 127
    MUL             shift and go to state 118
    DIV             shift and go to state 119
    MOD             shift and go to state 138
    SHL             shift and go to state 132
    SHR             shift and go to state 126
    AND             shift and go to state 134
    AND_NOT         shift and go to state 123

    AddOp                          shift and go to state 125
    BinaryOp                       shift and go to state 124
    MulOp                          shift and go to state 128
    RelOp                          shift and go to state 135

state 228

    (148) Statement -> OpenS Block . CloseS
    (3) CloseS -> .

    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 250

state 229

    (186) ForStmt -> FOR OpenS . OpenF Expression Block CloseF CloseS
    (187) ForStmt -> FOR OpenS . OpenF ForClause Block CloseF CloseS
    (188) ForStmt -> FOR OpenS . OpenF Block CloseF CloseS
    (189) OpenF -> .

    LBRACE          reduce using rule 189 (OpenF -> .)
    ID              reduce using rule 189 (OpenF -> .)
    LPAREN          reduce using rule 189 (OpenF -> .)
    ADD             reduce using rule 189 (OpenF -> .)
    SUB             reduce using rule 189 (OpenF -> .)
    NOT             reduce using rule 189 (OpenF -> .)
    XOR             reduce using rule 189 (OpenF -> .)
    MUL             reduce using rule 189 (OpenF -> .)
    AND             reduce using rule 189 (OpenF -> .)
    INT             reduce using rule 189 (OpenF -> .)
    FLOAT           reduce using rule 189 (OpenF -> .)
    RUNE            reduce using rule 189 (OpenF -> .)
    STRING          reduce using rule 189 (OpenF -> .)
    TRUE            reduce using rule 189 (OpenF -> .)
    FALSE           reduce using rule 189 (OpenF -> .)
    SEMICOLON       reduce using rule 189 (OpenF -> .)

    OpenF                          shift and go to state 251

state 230

    (160) AssignOp -> SUB_ASSIGN .

    ID              reduce using rule 160 (AssignOp -> SUB_ASSIGN .)
    LPAREN          reduce using rule 160 (AssignOp -> SUB_ASSIGN .)
    ADD             reduce using rule 160 (AssignOp -> SUB_ASSIGN .)
    SUB             reduce using rule 160 (AssignOp -> SUB_ASSIGN .)
    NOT             reduce using rule 160 (AssignOp -> SUB_ASSIGN .)
    XOR             reduce using rule 160 (AssignOp -> SUB_ASSIGN .)
    MUL             reduce using rule 160 (AssignOp -> SUB_ASSIGN .)
    AND             reduce using rule 160 (AssignOp -> SUB_ASSIGN .)
    INT             reduce using rule 160 (AssignOp -> SUB_ASSIGN .)
    FLOAT           reduce using rule 160 (AssignOp -> SUB_ASSIGN .)
    RUNE            reduce using rule 160 (AssignOp -> SUB_ASSIGN .)
    STRING          reduce using rule 160 (AssignOp -> SUB_ASSIGN .)
    TRUE            reduce using rule 160 (AssignOp -> SUB_ASSIGN .)
    FALSE           reduce using rule 160 (AssignOp -> SUB_ASSIGN .)


state 231

    (158) Assignment -> ExpressionList AssignOp . ExpressionList
    (30) ExpressionList -> . Expression
    (31) ExpressionList -> . ExpressionList COMMA Expression
    (87) Expression -> . UnaryExpr
    (88) Expression -> . Expression BinaryOp UnaryExpr
    (89) UnaryExpr -> . PrimaryExpr
    (90) UnaryExpr -> . UnaryOp UnaryExpr
    (119) PrimaryExpr -> . Literal
    (120) PrimaryExpr -> . ID
    (121) PrimaryExpr -> . PrimaryExpr DOT ID
    (122) PrimaryExpr -> . LPAREN Expression RPAREN
    (123) PrimaryExpr -> . PrimaryExpr Index
    (124) PrimaryExpr -> . PrimaryExpr Arguments
    (113) UnaryOp -> . ADD
    (114) UnaryOp -> . SUB
    (115) UnaryOp -> . NOT
    (116) UnaryOp -> . XOR
    (117) UnaryOp -> . MUL
    (118) UnaryOp -> . AND
    (129) Literal -> . BasicLit
    (130) BasicLit -> . IntLit
    (131) BasicLit -> . FloatLit
    (132) BasicLit -> . RuneLit
    (133) BasicLit -> . StringLit
    (134) BasicLit -> . TrueLit
    (135) BasicLit -> . FalseLit
    (138) IntLit -> . INT
    (139) FloatLit -> . FLOAT
    (140) RuneLit -> . RUNE
    (141) StringLit -> . STRING
    (136) TrueLit -> . TRUE
    (137) FalseLit -> . FALSE

    ID              shift and go to state 85
    LPAREN          shift and go to state 82
    ADD             shift and go to state 80
    SUB             shift and go to state 66
    NOT             shift and go to state 91
    XOR             shift and go to state 75
    MUL             shift and go to state 71
    AND             shift and go to state 86
    INT             shift and go to state 88
    FLOAT           shift and go to state 89
    RUNE            shift and go to state 74
    STRING          shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 87

    RuneLit                        shift and go to state 83
    UnaryOp                        shift and go to state 67
    TrueLit                        shift and go to state 92
    BasicLit                       shift and go to state 73
    UnaryExpr                      shift and go to state 77
    FloatLit                       shift and go to state 78
    FalseLit                       shift and go to state 68
    IntLit                         shift and go to state 70
    Literal                        shift and go to state 69
    ExpressionList                 shift and go to state 252
    PrimaryExpr                    shift and go to state 79
    StringLit                      shift and go to state 90
    Expression                     shift and go to state 84

state 232

    (161) AssignOp -> MUL_ASSIGN .

    ID              reduce using rule 161 (AssignOp -> MUL_ASSIGN .)
    LPAREN          reduce using rule 161 (AssignOp -> MUL_ASSIGN .)
    ADD             reduce using rule 161 (AssignOp -> MUL_ASSIGN .)
    SUB             reduce using rule 161 (AssignOp -> MUL_ASSIGN .)
    NOT             reduce using rule 161 (AssignOp -> MUL_ASSIGN .)
    XOR             reduce using rule 161 (AssignOp -> MUL_ASSIGN .)
    MUL             reduce using rule 161 (AssignOp -> MUL_ASSIGN .)
    AND             reduce using rule 161 (AssignOp -> MUL_ASSIGN .)
    INT             reduce using rule 161 (AssignOp -> MUL_ASSIGN .)
    FLOAT           reduce using rule 161 (AssignOp -> MUL_ASSIGN .)
    RUNE            reduce using rule 161 (AssignOp -> MUL_ASSIGN .)
    STRING          reduce using rule 161 (AssignOp -> MUL_ASSIGN .)
    TRUE            reduce using rule 161 (AssignOp -> MUL_ASSIGN .)
    FALSE           reduce using rule 161 (AssignOp -> MUL_ASSIGN .)


state 233

    (165) AssignOp -> XOR_ASSIGN .

    ID              reduce using rule 165 (AssignOp -> XOR_ASSIGN .)
    LPAREN          reduce using rule 165 (AssignOp -> XOR_ASSIGN .)
    ADD             reduce using rule 165 (AssignOp -> XOR_ASSIGN .)
    SUB             reduce using rule 165 (AssignOp -> XOR_ASSIGN .)
    NOT             reduce using rule 165 (AssignOp -> XOR_ASSIGN .)
    XOR             reduce using rule 165 (AssignOp -> XOR_ASSIGN .)
    MUL             reduce using rule 165 (AssignOp -> XOR_ASSIGN .)
    AND             reduce using rule 165 (AssignOp -> XOR_ASSIGN .)
    INT             reduce using rule 165 (AssignOp -> XOR_ASSIGN .)
    FLOAT           reduce using rule 165 (AssignOp -> XOR_ASSIGN .)
    RUNE            reduce using rule 165 (AssignOp -> XOR_ASSIGN .)
    STRING          reduce using rule 165 (AssignOp -> XOR_ASSIGN .)
    TRUE            reduce using rule 165 (AssignOp -> XOR_ASSIGN .)
    FALSE           reduce using rule 165 (AssignOp -> XOR_ASSIGN .)


state 234

    (168) AssignOp -> ASSIGN .

    ID              reduce using rule 168 (AssignOp -> ASSIGN .)
    LPAREN          reduce using rule 168 (AssignOp -> ASSIGN .)
    ADD             reduce using rule 168 (AssignOp -> ASSIGN .)
    SUB             reduce using rule 168 (AssignOp -> ASSIGN .)
    NOT             reduce using rule 168 (AssignOp -> ASSIGN .)
    XOR             reduce using rule 168 (AssignOp -> ASSIGN .)
    MUL             reduce using rule 168 (AssignOp -> ASSIGN .)
    AND             reduce using rule 168 (AssignOp -> ASSIGN .)
    INT             reduce using rule 168 (AssignOp -> ASSIGN .)
    FLOAT           reduce using rule 168 (AssignOp -> ASSIGN .)
    RUNE            reduce using rule 168 (AssignOp -> ASSIGN .)
    STRING          reduce using rule 168 (AssignOp -> ASSIGN .)
    TRUE            reduce using rule 168 (AssignOp -> ASSIGN .)
    FALSE           reduce using rule 168 (AssignOp -> ASSIGN .)


state 235

    (167) AssignOp -> SHR_ASSIGN .

    ID              reduce using rule 167 (AssignOp -> SHR_ASSIGN .)
    LPAREN          reduce using rule 167 (AssignOp -> SHR_ASSIGN .)
    ADD             reduce using rule 167 (AssignOp -> SHR_ASSIGN .)
    SUB             reduce using rule 167 (AssignOp -> SHR_ASSIGN .)
    NOT             reduce using rule 167 (AssignOp -> SHR_ASSIGN .)
    XOR             reduce using rule 167 (AssignOp -> SHR_ASSIGN .)
    MUL             reduce using rule 167 (AssignOp -> SHR_ASSIGN .)
    AND             reduce using rule 167 (AssignOp -> SHR_ASSIGN .)
    INT             reduce using rule 167 (AssignOp -> SHR_ASSIGN .)
    FLOAT           reduce using rule 167 (AssignOp -> SHR_ASSIGN .)
    RUNE            reduce using rule 167 (AssignOp -> SHR_ASSIGN .)
    STRING          reduce using rule 167 (AssignOp -> SHR_ASSIGN .)
    TRUE            reduce using rule 167 (AssignOp -> SHR_ASSIGN .)
    FALSE           reduce using rule 167 (AssignOp -> SHR_ASSIGN .)


state 236

    (164) AssignOp -> OR_ASSIGN .

    ID              reduce using rule 164 (AssignOp -> OR_ASSIGN .)
    LPAREN          reduce using rule 164 (AssignOp -> OR_ASSIGN .)
    ADD             reduce using rule 164 (AssignOp -> OR_ASSIGN .)
    SUB             reduce using rule 164 (AssignOp -> OR_ASSIGN .)
    NOT             reduce using rule 164 (AssignOp -> OR_ASSIGN .)
    XOR             reduce using rule 164 (AssignOp -> OR_ASSIGN .)
    MUL             reduce using rule 164 (AssignOp -> OR_ASSIGN .)
    AND             reduce using rule 164 (AssignOp -> OR_ASSIGN .)
    INT             reduce using rule 164 (AssignOp -> OR_ASSIGN .)
    FLOAT           reduce using rule 164 (AssignOp -> OR_ASSIGN .)
    RUNE            reduce using rule 164 (AssignOp -> OR_ASSIGN .)
    STRING          reduce using rule 164 (AssignOp -> OR_ASSIGN .)
    TRUE            reduce using rule 164 (AssignOp -> OR_ASSIGN .)
    FALSE           reduce using rule 164 (AssignOp -> OR_ASSIGN .)


state 237

    (163) AssignOp -> MOD_ASSIGN .

    ID              reduce using rule 163 (AssignOp -> MOD_ASSIGN .)
    LPAREN          reduce using rule 163 (AssignOp -> MOD_ASSIGN .)
    ADD             reduce using rule 163 (AssignOp -> MOD_ASSIGN .)
    SUB             reduce using rule 163 (AssignOp -> MOD_ASSIGN .)
    NOT             reduce using rule 163 (AssignOp -> MOD_ASSIGN .)
    XOR             reduce using rule 163 (AssignOp -> MOD_ASSIGN .)
    MUL             reduce using rule 163 (AssignOp -> MOD_ASSIGN .)
    AND             reduce using rule 163 (AssignOp -> MOD_ASSIGN .)
    INT             reduce using rule 163 (AssignOp -> MOD_ASSIGN .)
    FLOAT           reduce using rule 163 (AssignOp -> MOD_ASSIGN .)
    RUNE            reduce using rule 163 (AssignOp -> MOD_ASSIGN .)
    STRING          reduce using rule 163 (AssignOp -> MOD_ASSIGN .)
    TRUE            reduce using rule 163 (AssignOp -> MOD_ASSIGN .)
    FALSE           reduce using rule 163 (AssignOp -> MOD_ASSIGN .)


state 238

    (166) AssignOp -> SHL_ASSIGN .

    ID              reduce using rule 166 (AssignOp -> SHL_ASSIGN .)
    LPAREN          reduce using rule 166 (AssignOp -> SHL_ASSIGN .)
    ADD             reduce using rule 166 (AssignOp -> SHL_ASSIGN .)
    SUB             reduce using rule 166 (AssignOp -> SHL_ASSIGN .)
    NOT             reduce using rule 166 (AssignOp -> SHL_ASSIGN .)
    XOR             reduce using rule 166 (AssignOp -> SHL_ASSIGN .)
    MUL             reduce using rule 166 (AssignOp -> SHL_ASSIGN .)
    AND             reduce using rule 166 (AssignOp -> SHL_ASSIGN .)
    INT             reduce using rule 166 (AssignOp -> SHL_ASSIGN .)
    FLOAT           reduce using rule 166 (AssignOp -> SHL_ASSIGN .)
    RUNE            reduce using rule 166 (AssignOp -> SHL_ASSIGN .)
    STRING          reduce using rule 166 (AssignOp -> SHL_ASSIGN .)
    TRUE            reduce using rule 166 (AssignOp -> SHL_ASSIGN .)
    FALSE           reduce using rule 166 (AssignOp -> SHL_ASSIGN .)


state 239

    (162) AssignOp -> DIV_ASSIGN .

    ID              reduce using rule 162 (AssignOp -> DIV_ASSIGN .)
    LPAREN          reduce using rule 162 (AssignOp -> DIV_ASSIGN .)
    ADD             reduce using rule 162 (AssignOp -> DIV_ASSIGN .)
    SUB             reduce using rule 162 (AssignOp -> DIV_ASSIGN .)
    NOT             reduce using rule 162 (AssignOp -> DIV_ASSIGN .)
    XOR             reduce using rule 162 (AssignOp -> DIV_ASSIGN .)
    MUL             reduce using rule 162 (AssignOp -> DIV_ASSIGN .)
    AND             reduce using rule 162 (AssignOp -> DIV_ASSIGN .)
    INT             reduce using rule 162 (AssignOp -> DIV_ASSIGN .)
    FLOAT           reduce using rule 162 (AssignOp -> DIV_ASSIGN .)
    RUNE            reduce using rule 162 (AssignOp -> DIV_ASSIGN .)
    STRING          reduce using rule 162 (AssignOp -> DIV_ASSIGN .)
    TRUE            reduce using rule 162 (AssignOp -> DIV_ASSIGN .)
    FALSE           reduce using rule 162 (AssignOp -> DIV_ASSIGN .)


state 240

    (159) AssignOp -> ADD_ASSIGN .

    ID              reduce using rule 159 (AssignOp -> ADD_ASSIGN .)
    LPAREN          reduce using rule 159 (AssignOp -> ADD_ASSIGN .)
    ADD             reduce using rule 159 (AssignOp -> ADD_ASSIGN .)
    SUB             reduce using rule 159 (AssignOp -> ADD_ASSIGN .)
    NOT             reduce using rule 159 (AssignOp -> ADD_ASSIGN .)
    XOR             reduce using rule 159 (AssignOp -> ADD_ASSIGN .)
    MUL             reduce using rule 159 (AssignOp -> ADD_ASSIGN .)
    AND             reduce using rule 159 (AssignOp -> ADD_ASSIGN .)
    INT             reduce using rule 159 (AssignOp -> ADD_ASSIGN .)
    FLOAT           reduce using rule 159 (AssignOp -> ADD_ASSIGN .)
    RUNE            reduce using rule 159 (AssignOp -> ADD_ASSIGN .)
    STRING          reduce using rule 159 (AssignOp -> ADD_ASSIGN .)
    TRUE            reduce using rule 159 (AssignOp -> ADD_ASSIGN .)
    FALSE           reduce using rule 159 (AssignOp -> ADD_ASSIGN .)


state 241

    (157) IncDecStmt -> Expression DEC .

    SEMICOLON       reduce using rule 157 (IncDecStmt -> Expression DEC .)
    LBRACE          reduce using rule 157 (IncDecStmt -> Expression DEC .)


state 242

    (156) IncDecStmt -> Expression INC .

    SEMICOLON       reduce using rule 156 (IncDecStmt -> Expression INC .)
    LBRACE          reduce using rule 156 (IncDecStmt -> Expression INC .)


state 243

    (176) IfStmt -> IF OpenS . Expression Block CloseS
    (177) IfStmt -> IF OpenS . Expression Block CloseS ELSE IfStmt
    (178) IfStmt -> IF OpenS . Expression Block CloseS ELSE OpenS Block CloseS
    (87) Expression -> . UnaryExpr
    (88) Expression -> . Expression BinaryOp UnaryExpr
    (89) UnaryExpr -> . PrimaryExpr
    (90) UnaryExpr -> . UnaryOp UnaryExpr
    (119) PrimaryExpr -> . Literal
    (120) PrimaryExpr -> . ID
    (121) PrimaryExpr -> . PrimaryExpr DOT ID
    (122) PrimaryExpr -> . LPAREN Expression RPAREN
    (123) PrimaryExpr -> . PrimaryExpr Index
    (124) PrimaryExpr -> . PrimaryExpr Arguments
    (113) UnaryOp -> . ADD
    (114) UnaryOp -> . SUB
    (115) UnaryOp -> . NOT
    (116) UnaryOp -> . XOR
    (117) UnaryOp -> . MUL
    (118) UnaryOp -> . AND
    (129) Literal -> . BasicLit
    (130) BasicLit -> . IntLit
    (131) BasicLit -> . FloatLit
    (132) BasicLit -> . RuneLit
    (133) BasicLit -> . StringLit
    (134) BasicLit -> . TrueLit
    (135) BasicLit -> . FalseLit
    (138) IntLit -> . INT
    (139) FloatLit -> . FLOAT
    (140) RuneLit -> . RUNE
    (141) StringLit -> . STRING
    (136) TrueLit -> . TRUE
    (137) FalseLit -> . FALSE

    ID              shift and go to state 85
    LPAREN          shift and go to state 82
    ADD             shift and go to state 80
    SUB             shift and go to state 66
    NOT             shift and go to state 91
    XOR             shift and go to state 75
    MUL             shift and go to state 71
    AND             shift and go to state 86
    INT             shift and go to state 88
    FLOAT           shift and go to state 89
    RUNE            shift and go to state 74
    STRING          shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 87

    TrueLit                        shift and go to state 92
    RuneLit                        shift and go to state 83
    UnaryOp                        shift and go to state 67
    BasicLit                       shift and go to state 73
    UnaryExpr                      shift and go to state 77
    FloatLit                       shift and go to state 78
    FalseLit                       shift and go to state 68
    IntLit                         shift and go to state 70
    Literal                        shift and go to state 69
    PrimaryExpr                    shift and go to state 79
    StringLit                      shift and go to state 90
    Expression                     shift and go to state 253

state 244

    (171) BreakStmt -> BREAK ID .

    SEMICOLON       reduce using rule 171 (BreakStmt -> BREAK ID .)


state 245

    (173) ContinueStmt -> CONTINUE ID .

    SEMICOLON       reduce using rule 173 (ContinueStmt -> CONTINUE ID .)


state 246

    (61) FieldDecl -> ID STRUCT MUL . ID

    ID              shift and go to state 254


state 247

    (57) FieldDecl -> ID COMMA IdentifierList . Type
    (58) FieldDecl -> ID COMMA IdentifierList . ID
    (62) FieldDecl -> ID COMMA IdentifierList . STRUCT MUL ID
    (47) Type -> . LPAREN Type RPAREN
    (48) Type -> . LPAREN ID RPAREN
    (49) Type -> . TypeLit
    (50) TypeLit -> . ArrayType
    (51) TypeLit -> . PointerType
    (52) ArrayType -> . LBRACK INT RBRACK Type
    (53) ArrayType -> . LBRACK INT RBRACK ID
    (63) PointerType -> . MUL Type
    (64) PointerType -> . MUL ID

    ID              shift and go to state 257
    STRUCT          shift and go to state 255
    LPAREN          shift and go to state 49
    LBRACK          shift and go to state 46
    MUL             shift and go to state 51

    PointerType                    shift and go to state 50
    TypeLit                        shift and go to state 45
    Type                           shift and go to state 256
    ArrayType                      shift and go to state 47

state 248

    (175) ShortVarDecl -> IdentifierList DEFINE ExpressionList .
    (31) ExpressionList -> ExpressionList . COMMA Expression

    LBRACE          reduce using rule 175 (ShortVarDecl -> IdentifierList DEFINE ExpressionList .)
    SEMICOLON       reduce using rule 175 (ShortVarDecl -> IdentifierList DEFINE ExpressionList .)
    COMMA           shift and go to state 114


state 249

    (179) SwitchStmt -> SWITCH ExpressionName LBRACE . OpenW ExprCaseClause_curl CloseW RBRACE
    (191) OpenW -> .

    DEFAULT         reduce using rule 191 (OpenW -> .)
    CASE            reduce using rule 191 (OpenW -> .)

    OpenW                          shift and go to state 258

state 250

    (148) Statement -> OpenS Block CloseS .

    SEMICOLON       reduce using rule 148 (Statement -> OpenS Block CloseS .)


state 251

    (186) ForStmt -> FOR OpenS OpenF . Expression Block CloseF CloseS
    (187) ForStmt -> FOR OpenS OpenF . ForClause Block CloseF CloseS
    (188) ForStmt -> FOR OpenS OpenF . Block CloseF CloseS
    (87) Expression -> . UnaryExpr
    (88) Expression -> . Expression BinaryOp UnaryExpr
    (193) ForClause -> . SimpleStmt SEMICOLON SEMICOLON SimpleStmt
    (194) ForClause -> . SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt
    (83) Block -> . LBRACE StatementList RBRACE
    (89) UnaryExpr -> . PrimaryExpr
    (90) UnaryExpr -> . UnaryOp UnaryExpr
    (151) SimpleStmt -> . Expression
    (152) SimpleStmt -> . IncDecStmt
    (153) SimpleStmt -> . Assignment
    (154) SimpleStmt -> . ShortVarDecl
    (155) SimpleStmt -> .
    (119) PrimaryExpr -> . Literal
    (120) PrimaryExpr -> . ID
    (121) PrimaryExpr -> . PrimaryExpr DOT ID
    (122) PrimaryExpr -> . LPAREN Expression RPAREN
    (123) PrimaryExpr -> . PrimaryExpr Index
    (124) PrimaryExpr -> . PrimaryExpr Arguments
    (113) UnaryOp -> . ADD
    (114) UnaryOp -> . SUB
    (115) UnaryOp -> . NOT
    (116) UnaryOp -> . XOR
    (117) UnaryOp -> . MUL
    (118) UnaryOp -> . AND
    (156) IncDecStmt -> . Expression INC
    (157) IncDecStmt -> . Expression DEC
    (158) Assignment -> . ExpressionList AssignOp ExpressionList
    (175) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (129) Literal -> . BasicLit
    (30) ExpressionList -> . Expression
    (31) ExpressionList -> . ExpressionList COMMA Expression
    (28) IdentifierList -> . ID
    (29) IdentifierList -> . ID COMMA IdentifierList
    (130) BasicLit -> . IntLit
    (131) BasicLit -> . FloatLit
    (132) BasicLit -> . RuneLit
    (133) BasicLit -> . StringLit
    (134) BasicLit -> . TrueLit
    (135) BasicLit -> . FalseLit
    (138) IntLit -> . INT
    (139) FloatLit -> . FLOAT
    (140) RuneLit -> . RUNE
    (141) StringLit -> . STRING
    (136) TrueLit -> . TRUE
    (137) FalseLit -> . FALSE

    LBRACE          shift and go to state 151
    SEMICOLON       reduce using rule 155 (SimpleStmt -> .)
    ID              shift and go to state 262
    LPAREN          shift and go to state 82
    ADD             shift and go to state 80
    SUB             shift and go to state 66
    NOT             shift and go to state 91
    XOR             shift and go to state 75
    MUL             shift and go to state 71
    AND             shift and go to state 86
    INT             shift and go to state 88
    FLOAT           shift and go to state 89
    RUNE            shift and go to state 74
    STRING          shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 87

    UnaryOp                        shift and go to state 67
    SimpleStmt                     shift and go to state 259
    FalseLit                       shift and go to state 68
    Literal                        shift and go to state 69
    IdentifierList                 shift and go to state 194
    IntLit                         shift and go to state 70
    RuneLit                        shift and go to state 83
    Assignment                     shift and go to state 196
    IncDecStmt                     shift and go to state 199
    UnaryExpr                      shift and go to state 77
    FloatLit                       shift and go to state 78
    ExpressionList                 shift and go to state 203
    ForClause                      shift and go to state 260
    Expression                     shift and go to state 261
    ShortVarDecl                   shift and go to state 205
    Block                          shift and go to state 263
    StringLit                      shift and go to state 90
    BasicLit                       shift and go to state 73
    PrimaryExpr                    shift and go to state 79
    TrueLit                        shift and go to state 92

state 252

    (158) Assignment -> ExpressionList AssignOp ExpressionList .
    (31) ExpressionList -> ExpressionList . COMMA Expression

    LBRACE          reduce using rule 158 (Assignment -> ExpressionList AssignOp ExpressionList .)
    SEMICOLON       reduce using rule 158 (Assignment -> ExpressionList AssignOp ExpressionList .)
    COMMA           shift and go to state 114


state 253

    (176) IfStmt -> IF OpenS Expression . Block CloseS
    (177) IfStmt -> IF OpenS Expression . Block CloseS ELSE IfStmt
    (178) IfStmt -> IF OpenS Expression . Block CloseS ELSE OpenS Block CloseS
    (88) Expression -> Expression . BinaryOp UnaryExpr
    (83) Block -> . LBRACE StatementList RBRACE
    (91) BinaryOp -> . LOR
    (92) BinaryOp -> . LAND
    (93) BinaryOp -> . RelOp
    (94) BinaryOp -> . AddOp
    (95) BinaryOp -> . MulOp
    (96) RelOp -> . EQL
    (97) RelOp -> . NEQ
    (98) RelOp -> . LTN
    (99) RelOp -> . LEQ
    (100) RelOp -> . GTN
    (101) RelOp -> . GEQ
    (102) AddOp -> . ADD
    (103) AddOp -> . SUB
    (104) AddOp -> . OR
    (105) AddOp -> . XOR
    (106) MulOp -> . MUL
    (107) MulOp -> . DIV
    (108) MulOp -> . MOD
    (109) MulOp -> . SHL
    (110) MulOp -> . SHR
    (111) MulOp -> . AND
    (112) MulOp -> . AND_NOT

    LBRACE          shift and go to state 151
    LOR             shift and go to state 117
    LAND            shift and go to state 122
    EQL             shift and go to state 131
    NEQ             shift and go to state 120
    LTN             shift and go to state 133
    LEQ             shift and go to state 136
    GTN             shift and go to state 129
    GEQ             shift and go to state 121
    ADD             shift and go to state 130
    SUB             shift and go to state 116
    OR              shift and go to state 137
    XOR             shift and go to state 127
    MUL             shift and go to state 118
    DIV             shift and go to state 119
    MOD             shift and go to state 138
    SHL             shift and go to state 132
    SHR             shift and go to state 126
    AND             shift and go to state 134
    AND_NOT         shift and go to state 123

    RelOp                          shift and go to state 135
    AddOp                          shift and go to state 125
    BinaryOp                       shift and go to state 124
    MulOp                          shift and go to state 128
    Block                          shift and go to state 264

state 254

    (61) FieldDecl -> ID STRUCT MUL ID .

    SEMICOLON       reduce using rule 61 (FieldDecl -> ID STRUCT MUL ID .)


state 255

    (62) FieldDecl -> ID COMMA IdentifierList STRUCT . MUL ID

    MUL             shift and go to state 265


state 256

    (57) FieldDecl -> ID COMMA IdentifierList Type .

    SEMICOLON       reduce using rule 57 (FieldDecl -> ID COMMA IdentifierList Type .)


state 257

    (58) FieldDecl -> ID COMMA IdentifierList ID .

    SEMICOLON       reduce using rule 58 (FieldDecl -> ID COMMA IdentifierList ID .)


state 258

    (179) SwitchStmt -> SWITCH ExpressionName LBRACE OpenW . ExprCaseClause_curl CloseW RBRACE
    (181) ExprCaseClause_curl -> . ExprCaseClause ExprCaseClause_curl
    (182) ExprCaseClause_curl -> . DefCaseClause
    (183) ExprCaseClause_curl -> . ExprCaseClause
    (184) ExprCaseClause -> . OpenS CASE Expression COLON StatementList CloseS
    (185) DefCaseClause -> . DEFAULT COLON OpenS StatementList CloseS
    (2) OpenS -> .

    DEFAULT         shift and go to state 268
    CASE            reduce using rule 2 (OpenS -> .)

    DefCaseClause                  shift and go to state 266
    ExprCaseClause_curl            shift and go to state 267
    ExprCaseClause                 shift and go to state 269
    OpenS                          shift and go to state 270

state 259

    (193) ForClause -> SimpleStmt . SEMICOLON SEMICOLON SimpleStmt
    (194) ForClause -> SimpleStmt . SEMICOLON Expression SEMICOLON SimpleStmt

    SEMICOLON       shift and go to state 271


state 260

    (187) ForStmt -> FOR OpenS OpenF ForClause . Block CloseF CloseS
    (83) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 151

    Block                          shift and go to state 272

state 261

    (186) ForStmt -> FOR OpenS OpenF Expression . Block CloseF CloseS
    (88) Expression -> Expression . BinaryOp UnaryExpr
    (151) SimpleStmt -> Expression .
    (156) IncDecStmt -> Expression . INC
    (157) IncDecStmt -> Expression . DEC
    (30) ExpressionList -> Expression .
    (83) Block -> . LBRACE StatementList RBRACE
    (91) BinaryOp -> . LOR
    (92) BinaryOp -> . LAND
    (93) BinaryOp -> . RelOp
    (94) BinaryOp -> . AddOp
    (95) BinaryOp -> . MulOp
    (96) RelOp -> . EQL
    (97) RelOp -> . NEQ
    (98) RelOp -> . LTN
    (99) RelOp -> . LEQ
    (100) RelOp -> . GTN
    (101) RelOp -> . GEQ
    (102) AddOp -> . ADD
    (103) AddOp -> . SUB
    (104) AddOp -> . OR
    (105) AddOp -> . XOR
    (106) MulOp -> . MUL
    (107) MulOp -> . DIV
    (108) MulOp -> . MOD
    (109) MulOp -> . SHL
    (110) MulOp -> . SHR
    (111) MulOp -> . AND
    (112) MulOp -> . AND_NOT

    SEMICOLON       reduce using rule 151 (SimpleStmt -> Expression .)
    INC             shift and go to state 242
    DEC             shift and go to state 241
    COMMA           reduce using rule 30 (ExpressionList -> Expression .)
    ADD_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    SUB_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    MUL_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    DIV_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    MOD_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    OR_ASSIGN       reduce using rule 30 (ExpressionList -> Expression .)
    XOR_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    SHL_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    SHR_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    ASSIGN          reduce using rule 30 (ExpressionList -> Expression .)
    LBRACE          shift and go to state 151
    LOR             shift and go to state 117
    LAND            shift and go to state 122
    EQL             shift and go to state 131
    NEQ             shift and go to state 120
    LTN             shift and go to state 133
    LEQ             shift and go to state 136
    GTN             shift and go to state 129
    GEQ             shift and go to state 121
    ADD             shift and go to state 130
    SUB             shift and go to state 116
    OR              shift and go to state 137
    XOR             shift and go to state 127
    MUL             shift and go to state 118
    DIV             shift and go to state 119
    MOD             shift and go to state 138
    SHL             shift and go to state 132
    SHR             shift and go to state 126
    AND             shift and go to state 134
    AND_NOT         shift and go to state 123

    RelOp                          shift and go to state 135
    AddOp                          shift and go to state 125
    BinaryOp                       shift and go to state 124
    MulOp                          shift and go to state 128
    Block                          shift and go to state 273

state 262

    (120) PrimaryExpr -> ID .
    (28) IdentifierList -> ID .
    (29) IdentifierList -> ID . COMMA IdentifierList

    DOT             reduce using rule 120 (PrimaryExpr -> ID .)
    LBRACK          reduce using rule 120 (PrimaryExpr -> ID .)
    LPAREN          reduce using rule 120 (PrimaryExpr -> ID .)
    INC             reduce using rule 120 (PrimaryExpr -> ID .)
    DEC             reduce using rule 120 (PrimaryExpr -> ID .)
    LBRACE          reduce using rule 120 (PrimaryExpr -> ID .)
    LOR             reduce using rule 120 (PrimaryExpr -> ID .)
    LAND            reduce using rule 120 (PrimaryExpr -> ID .)
    EQL             reduce using rule 120 (PrimaryExpr -> ID .)
    NEQ             reduce using rule 120 (PrimaryExpr -> ID .)
    LTN             reduce using rule 120 (PrimaryExpr -> ID .)
    LEQ             reduce using rule 120 (PrimaryExpr -> ID .)
    GTN             reduce using rule 120 (PrimaryExpr -> ID .)
    GEQ             reduce using rule 120 (PrimaryExpr -> ID .)
    ADD             reduce using rule 120 (PrimaryExpr -> ID .)
    SUB             reduce using rule 120 (PrimaryExpr -> ID .)
    OR              reduce using rule 120 (PrimaryExpr -> ID .)
    XOR             reduce using rule 120 (PrimaryExpr -> ID .)
    MUL             reduce using rule 120 (PrimaryExpr -> ID .)
    DIV             reduce using rule 120 (PrimaryExpr -> ID .)
    MOD             reduce using rule 120 (PrimaryExpr -> ID .)
    SHL             reduce using rule 120 (PrimaryExpr -> ID .)
    SHR             reduce using rule 120 (PrimaryExpr -> ID .)
    AND             reduce using rule 120 (PrimaryExpr -> ID .)
    AND_NOT         reduce using rule 120 (PrimaryExpr -> ID .)
    SEMICOLON       reduce using rule 120 (PrimaryExpr -> ID .)
    ADD_ASSIGN      reduce using rule 120 (PrimaryExpr -> ID .)
    SUB_ASSIGN      reduce using rule 120 (PrimaryExpr -> ID .)
    MUL_ASSIGN      reduce using rule 120 (PrimaryExpr -> ID .)
    DIV_ASSIGN      reduce using rule 120 (PrimaryExpr -> ID .)
    MOD_ASSIGN      reduce using rule 120 (PrimaryExpr -> ID .)
    OR_ASSIGN       reduce using rule 120 (PrimaryExpr -> ID .)
    XOR_ASSIGN      reduce using rule 120 (PrimaryExpr -> ID .)
    SHL_ASSIGN      reduce using rule 120 (PrimaryExpr -> ID .)
    SHR_ASSIGN      reduce using rule 120 (PrimaryExpr -> ID .)
    ASSIGN          reduce using rule 120 (PrimaryExpr -> ID .)
    DEFINE          reduce using rule 28 (IdentifierList -> ID .)
    COMMA           shift and go to state 41

  ! COMMA           [ reduce using rule 120 (PrimaryExpr -> ID .) ]


state 263

    (188) ForStmt -> FOR OpenS OpenF Block . CloseF CloseS
    (190) CloseF -> .

    SEMICOLON       reduce using rule 190 (CloseF -> .)

    CloseF                         shift and go to state 274

state 264

    (176) IfStmt -> IF OpenS Expression Block . CloseS
    (177) IfStmt -> IF OpenS Expression Block . CloseS ELSE IfStmt
    (178) IfStmt -> IF OpenS Expression Block . CloseS ELSE OpenS Block CloseS
    (3) CloseS -> .

    ELSE            reduce using rule 3 (CloseS -> .)
    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 275

state 265

    (62) FieldDecl -> ID COMMA IdentifierList STRUCT MUL . ID

    ID              shift and go to state 276


state 266

    (182) ExprCaseClause_curl -> DefCaseClause .

    RBRACE          reduce using rule 182 (ExprCaseClause_curl -> DefCaseClause .)


state 267

    (179) SwitchStmt -> SWITCH ExpressionName LBRACE OpenW ExprCaseClause_curl . CloseW RBRACE
    (192) CloseW -> .

    RBRACE          reduce using rule 192 (CloseW -> .)

    CloseW                         shift and go to state 277

state 268

    (185) DefCaseClause -> DEFAULT . COLON OpenS StatementList CloseS

    COLON           shift and go to state 278


state 269

    (181) ExprCaseClause_curl -> ExprCaseClause . ExprCaseClause_curl
    (183) ExprCaseClause_curl -> ExprCaseClause .
    (181) ExprCaseClause_curl -> . ExprCaseClause ExprCaseClause_curl
    (182) ExprCaseClause_curl -> . DefCaseClause
    (183) ExprCaseClause_curl -> . ExprCaseClause
    (184) ExprCaseClause -> . OpenS CASE Expression COLON StatementList CloseS
    (185) DefCaseClause -> . DEFAULT COLON OpenS StatementList CloseS
    (2) OpenS -> .

    RBRACE          reduce using rule 183 (ExprCaseClause_curl -> ExprCaseClause .)
    DEFAULT         shift and go to state 268
    CASE            reduce using rule 2 (OpenS -> .)

    DefCaseClause                  shift and go to state 266
    ExprCaseClause_curl            shift and go to state 279
    ExprCaseClause                 shift and go to state 269
    OpenS                          shift and go to state 270

state 270

    (184) ExprCaseClause -> OpenS . CASE Expression COLON StatementList CloseS

    CASE            shift and go to state 280


state 271

    (193) ForClause -> SimpleStmt SEMICOLON . SEMICOLON SimpleStmt
    (194) ForClause -> SimpleStmt SEMICOLON . Expression SEMICOLON SimpleStmt
    (87) Expression -> . UnaryExpr
    (88) Expression -> . Expression BinaryOp UnaryExpr
    (89) UnaryExpr -> . PrimaryExpr
    (90) UnaryExpr -> . UnaryOp UnaryExpr
    (119) PrimaryExpr -> . Literal
    (120) PrimaryExpr -> . ID
    (121) PrimaryExpr -> . PrimaryExpr DOT ID
    (122) PrimaryExpr -> . LPAREN Expression RPAREN
    (123) PrimaryExpr -> . PrimaryExpr Index
    (124) PrimaryExpr -> . PrimaryExpr Arguments
    (113) UnaryOp -> . ADD
    (114) UnaryOp -> . SUB
    (115) UnaryOp -> . NOT
    (116) UnaryOp -> . XOR
    (117) UnaryOp -> . MUL
    (118) UnaryOp -> . AND
    (129) Literal -> . BasicLit
    (130) BasicLit -> . IntLit
    (131) BasicLit -> . FloatLit
    (132) BasicLit -> . RuneLit
    (133) BasicLit -> . StringLit
    (134) BasicLit -> . TrueLit
    (135) BasicLit -> . FalseLit
    (138) IntLit -> . INT
    (139) FloatLit -> . FLOAT
    (140) RuneLit -> . RUNE
    (141) StringLit -> . STRING
    (136) TrueLit -> . TRUE
    (137) FalseLit -> . FALSE

    SEMICOLON       shift and go to state 281
    ID              shift and go to state 85
    LPAREN          shift and go to state 82
    ADD             shift and go to state 80
    SUB             shift and go to state 66
    NOT             shift and go to state 91
    XOR             shift and go to state 75
    MUL             shift and go to state 71
    AND             shift and go to state 86
    INT             shift and go to state 88
    FLOAT           shift and go to state 89
    RUNE            shift and go to state 74
    STRING          shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 87

    RuneLit                        shift and go to state 83
    UnaryOp                        shift and go to state 67
    TrueLit                        shift and go to state 92
    BasicLit                       shift and go to state 73
    UnaryExpr                      shift and go to state 77
    FloatLit                       shift and go to state 78
    FalseLit                       shift and go to state 68
    IntLit                         shift and go to state 70
    Literal                        shift and go to state 69
    PrimaryExpr                    shift and go to state 79
    StringLit                      shift and go to state 90
    Expression                     shift and go to state 282

state 272

    (187) ForStmt -> FOR OpenS OpenF ForClause Block . CloseF CloseS
    (190) CloseF -> .

    SEMICOLON       reduce using rule 190 (CloseF -> .)

    CloseF                         shift and go to state 283

state 273

    (186) ForStmt -> FOR OpenS OpenF Expression Block . CloseF CloseS
    (190) CloseF -> .

    SEMICOLON       reduce using rule 190 (CloseF -> .)

    CloseF                         shift and go to state 284

state 274

    (188) ForStmt -> FOR OpenS OpenF Block CloseF . CloseS
    (3) CloseS -> .

    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 285

state 275

    (176) IfStmt -> IF OpenS Expression Block CloseS .
    (177) IfStmt -> IF OpenS Expression Block CloseS . ELSE IfStmt
    (178) IfStmt -> IF OpenS Expression Block CloseS . ELSE OpenS Block CloseS

    SEMICOLON       reduce using rule 176 (IfStmt -> IF OpenS Expression Block CloseS .)
    ELSE            shift and go to state 286


state 276

    (62) FieldDecl -> ID COMMA IdentifierList STRUCT MUL ID .

    SEMICOLON       reduce using rule 62 (FieldDecl -> ID COMMA IdentifierList STRUCT MUL ID .)


state 277

    (179) SwitchStmt -> SWITCH ExpressionName LBRACE OpenW ExprCaseClause_curl CloseW . RBRACE

    RBRACE          shift and go to state 287


state 278

    (185) DefCaseClause -> DEFAULT COLON . OpenS StatementList CloseS
    (2) OpenS -> .

    RETURN          reduce using rule 2 (OpenS -> .)
    BREAK           reduce using rule 2 (OpenS -> .)
    CONTINUE        reduce using rule 2 (OpenS -> .)
    IF              reduce using rule 2 (OpenS -> .)
    SWITCH          reduce using rule 2 (OpenS -> .)
    FOR             reduce using rule 2 (OpenS -> .)
    CONST           reduce using rule 2 (OpenS -> .)
    TYPE            reduce using rule 2 (OpenS -> .)
    VAR             reduce using rule 2 (OpenS -> .)
    ID              reduce using rule 2 (OpenS -> .)
    LPAREN          reduce using rule 2 (OpenS -> .)
    ADD             reduce using rule 2 (OpenS -> .)
    SUB             reduce using rule 2 (OpenS -> .)
    NOT             reduce using rule 2 (OpenS -> .)
    XOR             reduce using rule 2 (OpenS -> .)
    MUL             reduce using rule 2 (OpenS -> .)
    AND             reduce using rule 2 (OpenS -> .)
    INT             reduce using rule 2 (OpenS -> .)
    FLOAT           reduce using rule 2 (OpenS -> .)
    RUNE            reduce using rule 2 (OpenS -> .)
    STRING          reduce using rule 2 (OpenS -> .)
    TRUE            reduce using rule 2 (OpenS -> .)
    FALSE           reduce using rule 2 (OpenS -> .)
    SEMICOLON       reduce using rule 2 (OpenS -> .)
    LBRACE          reduce using rule 2 (OpenS -> .)
    RBRACE          reduce using rule 2 (OpenS -> .)

    OpenS                          shift and go to state 288

state 279

    (181) ExprCaseClause_curl -> ExprCaseClause ExprCaseClause_curl .

    RBRACE          reduce using rule 181 (ExprCaseClause_curl -> ExprCaseClause ExprCaseClause_curl .)


state 280

    (184) ExprCaseClause -> OpenS CASE . Expression COLON StatementList CloseS
    (87) Expression -> . UnaryExpr
    (88) Expression -> . Expression BinaryOp UnaryExpr
    (89) UnaryExpr -> . PrimaryExpr
    (90) UnaryExpr -> . UnaryOp UnaryExpr
    (119) PrimaryExpr -> . Literal
    (120) PrimaryExpr -> . ID
    (121) PrimaryExpr -> . PrimaryExpr DOT ID
    (122) PrimaryExpr -> . LPAREN Expression RPAREN
    (123) PrimaryExpr -> . PrimaryExpr Index
    (124) PrimaryExpr -> . PrimaryExpr Arguments
    (113) UnaryOp -> . ADD
    (114) UnaryOp -> . SUB
    (115) UnaryOp -> . NOT
    (116) UnaryOp -> . XOR
    (117) UnaryOp -> . MUL
    (118) UnaryOp -> . AND
    (129) Literal -> . BasicLit
    (130) BasicLit -> . IntLit
    (131) BasicLit -> . FloatLit
    (132) BasicLit -> . RuneLit
    (133) BasicLit -> . StringLit
    (134) BasicLit -> . TrueLit
    (135) BasicLit -> . FalseLit
    (138) IntLit -> . INT
    (139) FloatLit -> . FLOAT
    (140) RuneLit -> . RUNE
    (141) StringLit -> . STRING
    (136) TrueLit -> . TRUE
    (137) FalseLit -> . FALSE

    ID              shift and go to state 85
    LPAREN          shift and go to state 82
    ADD             shift and go to state 80
    SUB             shift and go to state 66
    NOT             shift and go to state 91
    XOR             shift and go to state 75
    MUL             shift and go to state 71
    AND             shift and go to state 86
    INT             shift and go to state 88
    FLOAT           shift and go to state 89
    RUNE            shift and go to state 74
    STRING          shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 87

    TrueLit                        shift and go to state 92
    RuneLit                        shift and go to state 83
    UnaryOp                        shift and go to state 67
    BasicLit                       shift and go to state 73
    UnaryExpr                      shift and go to state 77
    FloatLit                       shift and go to state 78
    FalseLit                       shift and go to state 68
    IntLit                         shift and go to state 70
    Literal                        shift and go to state 69
    PrimaryExpr                    shift and go to state 79
    StringLit                      shift and go to state 90
    Expression                     shift and go to state 289

state 281

    (193) ForClause -> SimpleStmt SEMICOLON SEMICOLON . SimpleStmt
    (151) SimpleStmt -> . Expression
    (152) SimpleStmt -> . IncDecStmt
    (153) SimpleStmt -> . Assignment
    (154) SimpleStmt -> . ShortVarDecl
    (155) SimpleStmt -> .
    (87) Expression -> . UnaryExpr
    (88) Expression -> . Expression BinaryOp UnaryExpr
    (156) IncDecStmt -> . Expression INC
    (157) IncDecStmt -> . Expression DEC
    (158) Assignment -> . ExpressionList AssignOp ExpressionList
    (175) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (89) UnaryExpr -> . PrimaryExpr
    (90) UnaryExpr -> . UnaryOp UnaryExpr
    (30) ExpressionList -> . Expression
    (31) ExpressionList -> . ExpressionList COMMA Expression
    (28) IdentifierList -> . ID
    (29) IdentifierList -> . ID COMMA IdentifierList
    (119) PrimaryExpr -> . Literal
    (120) PrimaryExpr -> . ID
    (121) PrimaryExpr -> . PrimaryExpr DOT ID
    (122) PrimaryExpr -> . LPAREN Expression RPAREN
    (123) PrimaryExpr -> . PrimaryExpr Index
    (124) PrimaryExpr -> . PrimaryExpr Arguments
    (113) UnaryOp -> . ADD
    (114) UnaryOp -> . SUB
    (115) UnaryOp -> . NOT
    (116) UnaryOp -> . XOR
    (117) UnaryOp -> . MUL
    (118) UnaryOp -> . AND
    (129) Literal -> . BasicLit
    (130) BasicLit -> . IntLit
    (131) BasicLit -> . FloatLit
    (132) BasicLit -> . RuneLit
    (133) BasicLit -> . StringLit
    (134) BasicLit -> . TrueLit
    (135) BasicLit -> . FalseLit
    (138) IntLit -> . INT
    (139) FloatLit -> . FLOAT
    (140) RuneLit -> . RUNE
    (141) StringLit -> . STRING
    (136) TrueLit -> . TRUE
    (137) FalseLit -> . FALSE

    LBRACE          reduce using rule 155 (SimpleStmt -> .)
    ID              shift and go to state 197
    LPAREN          shift and go to state 82
    ADD             shift and go to state 80
    SUB             shift and go to state 66
    NOT             shift and go to state 91
    XOR             shift and go to state 75
    MUL             shift and go to state 71
    AND             shift and go to state 86
    INT             shift and go to state 88
    FLOAT           shift and go to state 89
    RUNE            shift and go to state 74
    STRING          shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 87

    UnaryOp                        shift and go to state 67
    SimpleStmt                     shift and go to state 290
    FalseLit                       shift and go to state 68
    Literal                        shift and go to state 69
    IdentifierList                 shift and go to state 194
    IntLit                         shift and go to state 70
    RuneLit                        shift and go to state 83
    Assignment                     shift and go to state 196
    IncDecStmt                     shift and go to state 199
    UnaryExpr                      shift and go to state 77
    FloatLit                       shift and go to state 78
    ExpressionList                 shift and go to state 203
    Expression                     shift and go to state 204
    ShortVarDecl                   shift and go to state 205
    StringLit                      shift and go to state 90
    BasicLit                       shift and go to state 73
    PrimaryExpr                    shift and go to state 79
    TrueLit                        shift and go to state 92

state 282

    (194) ForClause -> SimpleStmt SEMICOLON Expression . SEMICOLON SimpleStmt
    (88) Expression -> Expression . BinaryOp UnaryExpr
    (91) BinaryOp -> . LOR
    (92) BinaryOp -> . LAND
    (93) BinaryOp -> . RelOp
    (94) BinaryOp -> . AddOp
    (95) BinaryOp -> . MulOp
    (96) RelOp -> . EQL
    (97) RelOp -> . NEQ
    (98) RelOp -> . LTN
    (99) RelOp -> . LEQ
    (100) RelOp -> . GTN
    (101) RelOp -> . GEQ
    (102) AddOp -> . ADD
    (103) AddOp -> . SUB
    (104) AddOp -> . OR
    (105) AddOp -> . XOR
    (106) MulOp -> . MUL
    (107) MulOp -> . DIV
    (108) MulOp -> . MOD
    (109) MulOp -> . SHL
    (110) MulOp -> . SHR
    (111) MulOp -> . AND
    (112) MulOp -> . AND_NOT

    SEMICOLON       shift and go to state 291
    LOR             shift and go to state 117
    LAND            shift and go to state 122
    EQL             shift and go to state 131
    NEQ             shift and go to state 120
    LTN             shift and go to state 133
    LEQ             shift and go to state 136
    GTN             shift and go to state 129
    GEQ             shift and go to state 121
    ADD             shift and go to state 130
    SUB             shift and go to state 116
    OR              shift and go to state 137
    XOR             shift and go to state 127
    MUL             shift and go to state 118
    DIV             shift and go to state 119
    MOD             shift and go to state 138
    SHL             shift and go to state 132
    SHR             shift and go to state 126
    AND             shift and go to state 134
    AND_NOT         shift and go to state 123

    AddOp                          shift and go to state 125
    RelOp                          shift and go to state 135
    BinaryOp                       shift and go to state 124
    MulOp                          shift and go to state 128

state 283

    (187) ForStmt -> FOR OpenS OpenF ForClause Block CloseF . CloseS
    (3) CloseS -> .

    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 292

state 284

    (186) ForStmt -> FOR OpenS OpenF Expression Block CloseF . CloseS
    (3) CloseS -> .

    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 293

state 285

    (188) ForStmt -> FOR OpenS OpenF Block CloseF CloseS .

    SEMICOLON       reduce using rule 188 (ForStmt -> FOR OpenS OpenF Block CloseF CloseS .)


state 286

    (177) IfStmt -> IF OpenS Expression Block CloseS ELSE . IfStmt
    (178) IfStmt -> IF OpenS Expression Block CloseS ELSE . OpenS Block CloseS
    (176) IfStmt -> . IF OpenS Expression Block CloseS
    (177) IfStmt -> . IF OpenS Expression Block CloseS ELSE IfStmt
    (178) IfStmt -> . IF OpenS Expression Block CloseS ELSE OpenS Block CloseS
    (2) OpenS -> .

    IF              shift and go to state 206
    LBRACE          reduce using rule 2 (OpenS -> .)

    OpenS                          shift and go to state 294
    IfStmt                         shift and go to state 295

state 287

    (179) SwitchStmt -> SWITCH ExpressionName LBRACE OpenW ExprCaseClause_curl CloseW RBRACE .

    SEMICOLON       reduce using rule 179 (SwitchStmt -> SWITCH ExpressionName LBRACE OpenW ExprCaseClause_curl CloseW RBRACE .)


state 288

    (185) DefCaseClause -> DEFAULT COLON OpenS . StatementList CloseS
    (84) StatementList -> . Statement_curl
    (85) Statement_curl -> . Statement_curl Statement SEMICOLON
    (86) Statement_curl -> .

    RETURN          reduce using rule 86 (Statement_curl -> .)
    BREAK           reduce using rule 86 (Statement_curl -> .)
    CONTINUE        reduce using rule 86 (Statement_curl -> .)
    IF              reduce using rule 86 (Statement_curl -> .)
    SWITCH          reduce using rule 86 (Statement_curl -> .)
    FOR             reduce using rule 86 (Statement_curl -> .)
    CONST           reduce using rule 86 (Statement_curl -> .)
    TYPE            reduce using rule 86 (Statement_curl -> .)
    VAR             reduce using rule 86 (Statement_curl -> .)
    ID              reduce using rule 86 (Statement_curl -> .)
    LPAREN          reduce using rule 86 (Statement_curl -> .)
    ADD             reduce using rule 86 (Statement_curl -> .)
    SUB             reduce using rule 86 (Statement_curl -> .)
    NOT             reduce using rule 86 (Statement_curl -> .)
    XOR             reduce using rule 86 (Statement_curl -> .)
    MUL             reduce using rule 86 (Statement_curl -> .)
    AND             reduce using rule 86 (Statement_curl -> .)
    INT             reduce using rule 86 (Statement_curl -> .)
    FLOAT           reduce using rule 86 (Statement_curl -> .)
    RUNE            reduce using rule 86 (Statement_curl -> .)
    STRING          reduce using rule 86 (Statement_curl -> .)
    TRUE            reduce using rule 86 (Statement_curl -> .)
    FALSE           reduce using rule 86 (Statement_curl -> .)
    SEMICOLON       reduce using rule 86 (Statement_curl -> .)
    LBRACE          reduce using rule 86 (Statement_curl -> .)
    RBRACE          reduce using rule 86 (Statement_curl -> .)

    Statement_curl                 shift and go to state 174
    StatementList                  shift and go to state 296

state 289

    (184) ExprCaseClause -> OpenS CASE Expression . COLON StatementList CloseS
    (88) Expression -> Expression . BinaryOp UnaryExpr
    (91) BinaryOp -> . LOR
    (92) BinaryOp -> . LAND
    (93) BinaryOp -> . RelOp
    (94) BinaryOp -> . AddOp
    (95) BinaryOp -> . MulOp
    (96) RelOp -> . EQL
    (97) RelOp -> . NEQ
    (98) RelOp -> . LTN
    (99) RelOp -> . LEQ
    (100) RelOp -> . GTN
    (101) RelOp -> . GEQ
    (102) AddOp -> . ADD
    (103) AddOp -> . SUB
    (104) AddOp -> . OR
    (105) AddOp -> . XOR
    (106) MulOp -> . MUL
    (107) MulOp -> . DIV
    (108) MulOp -> . MOD
    (109) MulOp -> . SHL
    (110) MulOp -> . SHR
    (111) MulOp -> . AND
    (112) MulOp -> . AND_NOT

    COLON           shift and go to state 297
    LOR             shift and go to state 117
    LAND            shift and go to state 122
    EQL             shift and go to state 131
    NEQ             shift and go to state 120
    LTN             shift and go to state 133
    LEQ             shift and go to state 136
    GTN             shift and go to state 129
    GEQ             shift and go to state 121
    ADD             shift and go to state 130
    SUB             shift and go to state 116
    OR              shift and go to state 137
    XOR             shift and go to state 127
    MUL             shift and go to state 118
    DIV             shift and go to state 119
    MOD             shift and go to state 138
    SHL             shift and go to state 132
    SHR             shift and go to state 126
    AND             shift and go to state 134
    AND_NOT         shift and go to state 123

    RelOp                          shift and go to state 135
    AddOp                          shift and go to state 125
    BinaryOp                       shift and go to state 124
    MulOp                          shift and go to state 128

state 290

    (193) ForClause -> SimpleStmt SEMICOLON SEMICOLON SimpleStmt .

    LBRACE          reduce using rule 193 (ForClause -> SimpleStmt SEMICOLON SEMICOLON SimpleStmt .)


state 291

    (194) ForClause -> SimpleStmt SEMICOLON Expression SEMICOLON . SimpleStmt
    (151) SimpleStmt -> . Expression
    (152) SimpleStmt -> . IncDecStmt
    (153) SimpleStmt -> . Assignment
    (154) SimpleStmt -> . ShortVarDecl
    (155) SimpleStmt -> .
    (87) Expression -> . UnaryExpr
    (88) Expression -> . Expression BinaryOp UnaryExpr
    (156) IncDecStmt -> . Expression INC
    (157) IncDecStmt -> . Expression DEC
    (158) Assignment -> . ExpressionList AssignOp ExpressionList
    (175) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (89) UnaryExpr -> . PrimaryExpr
    (90) UnaryExpr -> . UnaryOp UnaryExpr
    (30) ExpressionList -> . Expression
    (31) ExpressionList -> . ExpressionList COMMA Expression
    (28) IdentifierList -> . ID
    (29) IdentifierList -> . ID COMMA IdentifierList
    (119) PrimaryExpr -> . Literal
    (120) PrimaryExpr -> . ID
    (121) PrimaryExpr -> . PrimaryExpr DOT ID
    (122) PrimaryExpr -> . LPAREN Expression RPAREN
    (123) PrimaryExpr -> . PrimaryExpr Index
    (124) PrimaryExpr -> . PrimaryExpr Arguments
    (113) UnaryOp -> . ADD
    (114) UnaryOp -> . SUB
    (115) UnaryOp -> . NOT
    (116) UnaryOp -> . XOR
    (117) UnaryOp -> . MUL
    (118) UnaryOp -> . AND
    (129) Literal -> . BasicLit
    (130) BasicLit -> . IntLit
    (131) BasicLit -> . FloatLit
    (132) BasicLit -> . RuneLit
    (133) BasicLit -> . StringLit
    (134) BasicLit -> . TrueLit
    (135) BasicLit -> . FalseLit
    (138) IntLit -> . INT
    (139) FloatLit -> . FLOAT
    (140) RuneLit -> . RUNE
    (141) StringLit -> . STRING
    (136) TrueLit -> . TRUE
    (137) FalseLit -> . FALSE

    LBRACE          reduce using rule 155 (SimpleStmt -> .)
    ID              shift and go to state 197
    LPAREN          shift and go to state 82
    ADD             shift and go to state 80
    SUB             shift and go to state 66
    NOT             shift and go to state 91
    XOR             shift and go to state 75
    MUL             shift and go to state 71
    AND             shift and go to state 86
    INT             shift and go to state 88
    FLOAT           shift and go to state 89
    RUNE            shift and go to state 74
    STRING          shift and go to state 76
    TRUE            shift and go to state 72
    FALSE           shift and go to state 87

    UnaryOp                        shift and go to state 67
    SimpleStmt                     shift and go to state 298
    FalseLit                       shift and go to state 68
    Literal                        shift and go to state 69
    IdentifierList                 shift and go to state 194
    IntLit                         shift and go to state 70
    RuneLit                        shift and go to state 83
    Assignment                     shift and go to state 196
    IncDecStmt                     shift and go to state 199
    UnaryExpr                      shift and go to state 77
    FloatLit                       shift and go to state 78
    ExpressionList                 shift and go to state 203
    Expression                     shift and go to state 204
    ShortVarDecl                   shift and go to state 205
    StringLit                      shift and go to state 90
    BasicLit                       shift and go to state 73
    PrimaryExpr                    shift and go to state 79
    TrueLit                        shift and go to state 92

state 292

    (187) ForStmt -> FOR OpenS OpenF ForClause Block CloseF CloseS .

    SEMICOLON       reduce using rule 187 (ForStmt -> FOR OpenS OpenF ForClause Block CloseF CloseS .)


state 293

    (186) ForStmt -> FOR OpenS OpenF Expression Block CloseF CloseS .

    SEMICOLON       reduce using rule 186 (ForStmt -> FOR OpenS OpenF Expression Block CloseF CloseS .)


state 294

    (178) IfStmt -> IF OpenS Expression Block CloseS ELSE OpenS . Block CloseS
    (83) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 151

    Block                          shift and go to state 299

state 295

    (177) IfStmt -> IF OpenS Expression Block CloseS ELSE IfStmt .

    SEMICOLON       reduce using rule 177 (IfStmt -> IF OpenS Expression Block CloseS ELSE IfStmt .)


state 296

    (185) DefCaseClause -> DEFAULT COLON OpenS StatementList . CloseS
    (3) CloseS -> .

    RBRACE          reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 300

state 297

    (184) ExprCaseClause -> OpenS CASE Expression COLON . StatementList CloseS
    (84) StatementList -> . Statement_curl
    (85) Statement_curl -> . Statement_curl Statement SEMICOLON
    (86) Statement_curl -> .

    RETURN          reduce using rule 86 (Statement_curl -> .)
    BREAK           reduce using rule 86 (Statement_curl -> .)
    CONTINUE        reduce using rule 86 (Statement_curl -> .)
    IF              reduce using rule 86 (Statement_curl -> .)
    SWITCH          reduce using rule 86 (Statement_curl -> .)
    FOR             reduce using rule 86 (Statement_curl -> .)
    CONST           reduce using rule 86 (Statement_curl -> .)
    TYPE            reduce using rule 86 (Statement_curl -> .)
    VAR             reduce using rule 86 (Statement_curl -> .)
    ID              reduce using rule 86 (Statement_curl -> .)
    LPAREN          reduce using rule 86 (Statement_curl -> .)
    ADD             reduce using rule 86 (Statement_curl -> .)
    SUB             reduce using rule 86 (Statement_curl -> .)
    NOT             reduce using rule 86 (Statement_curl -> .)
    XOR             reduce using rule 86 (Statement_curl -> .)
    MUL             reduce using rule 86 (Statement_curl -> .)
    AND             reduce using rule 86 (Statement_curl -> .)
    INT             reduce using rule 86 (Statement_curl -> .)
    FLOAT           reduce using rule 86 (Statement_curl -> .)
    RUNE            reduce using rule 86 (Statement_curl -> .)
    STRING          reduce using rule 86 (Statement_curl -> .)
    TRUE            reduce using rule 86 (Statement_curl -> .)
    FALSE           reduce using rule 86 (Statement_curl -> .)
    SEMICOLON       reduce using rule 86 (Statement_curl -> .)
    LBRACE          reduce using rule 86 (Statement_curl -> .)
    DEFAULT         reduce using rule 86 (Statement_curl -> .)
    CASE            reduce using rule 86 (Statement_curl -> .)
    RBRACE          reduce using rule 86 (Statement_curl -> .)

    Statement_curl                 shift and go to state 174
    StatementList                  shift and go to state 301

state 298

    (194) ForClause -> SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt .

    LBRACE          reduce using rule 194 (ForClause -> SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt .)


state 299

    (178) IfStmt -> IF OpenS Expression Block CloseS ELSE OpenS Block . CloseS
    (3) CloseS -> .

    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 302

state 300

    (185) DefCaseClause -> DEFAULT COLON OpenS StatementList CloseS .

    RBRACE          reduce using rule 185 (DefCaseClause -> DEFAULT COLON OpenS StatementList CloseS .)


state 301

    (184) ExprCaseClause -> OpenS CASE Expression COLON StatementList . CloseS
    (3) CloseS -> .

    DEFAULT         reduce using rule 3 (CloseS -> .)
    CASE            reduce using rule 3 (CloseS -> .)
    RBRACE          reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 303

state 302

    (178) IfStmt -> IF OpenS Expression Block CloseS ELSE OpenS Block CloseS .

    SEMICOLON       reduce using rule 178 (IfStmt -> IF OpenS Expression Block CloseS ELSE OpenS Block CloseS .)


state 303

    (184) ExprCaseClause -> OpenS CASE Expression COLON StatementList CloseS .

    DEFAULT         reduce using rule 184 (ExprCaseClause -> OpenS CASE Expression COLON StatementList CloseS .)
    CASE            reduce using rule 184 (ExprCaseClause -> OpenS CASE Expression COLON StatementList CloseS .)
    RBRACE          reduce using rule 184 (ExprCaseClause -> OpenS CASE Expression COLON StatementList CloseS .)

