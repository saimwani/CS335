Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> SourceFile
Rule 1     SourceFile -> PackageClause SEMICOLON ImportDecl_curl TopLevelDecl_curl
Rule 2     OpenS -> <empty>
Rule 3     CloseS -> <empty>
Rule 4     OpenStructS -> <empty>
Rule 5     CloseStructS -> <empty>
Rule 6     TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON
Rule 7     TopLevelDecl_curl -> <empty>
Rule 8     ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON
Rule 9     ImportDecl_curl -> <empty>
Rule 10    PackageClause -> PACKAGE ID
Rule 11    ImportDecl -> IMPORT ImportSpec
Rule 12    ImportDecl -> IMPORT LPAREN ImportSpec_curl RPAREN
Rule 13    ImportSpec_curl -> ImportSpec_curl ImportSpec SEMICOLON
Rule 14    ImportSpec_curl -> <empty>
Rule 15    ImportSpec -> DOT ImportPath
Rule 16    ImportSpec -> ID ImportPath
Rule 17    ImportSpec -> ImportPath
Rule 18    ImportPath -> STRING
Rule 19    TopLevelDecl -> Declaration
Rule 20    TopLevelDecl -> FunctionDecl
Rule 21    Declaration -> ConstDecl
Rule 22    Declaration -> StructDecl
Rule 23    Declaration -> VarDecl
Rule 24    ConstDecl -> CONST ConstSpec
Rule 25    ConstDecl -> CONST LPAREN ConstSpec_curl RPAREN
Rule 26    ConstSpec_curl -> ConstSpec_curl ConstSpec SEMICOLON
Rule 27    ConstSpec_curl -> <empty>
Rule 28    ConstSpec -> IdentifierList ID ASSIGN ExpressionList
Rule 29    ConstSpec -> IdentifierList Type ASSIGN ExpressionList
Rule 30    IdentifierList -> ID
Rule 31    IdentifierList -> ID COMMA IdentifierList
Rule 32    ExpressionList -> Expression
Rule 33    ExpressionList -> ExpressionList COMMA Expression
Rule 34    StructDecl -> TYPE StructName StructType
Rule 35    StructName -> ID
Rule 36    VarDecl -> VAR VarSpec
Rule 37    VarDecl -> VAR LPAREN VarSpec_curl RPAREN
Rule 38    VarSpec_curl -> VarSpec_curl VarSpec SEMICOLON
Rule 39    VarSpec_curl -> <empty>
Rule 40    VarSpec -> IdentifierList Type ASSIGN ExpressionList
Rule 41    VarSpec -> IdentifierList ID ASSIGN ExpressionList
Rule 42    VarSpec -> IdentifierList ASSIGN ExpressionList
Rule 43    VarSpec -> IdentifierList ID
Rule 44    VarSpec -> IdentifierList Type
Rule 45    FunctionDecl -> FUNC FuncName OpenS Signature Block CloseS
Rule 46    FuncName -> ID
Rule 47    Type -> LPAREN Type RPAREN
Rule 48    Type -> LPAREN ID RPAREN
Rule 49    Type -> TypeLit
Rule 50    TypeLit -> ArrayType
Rule 51    TypeLit -> PointerType
Rule 52    TypeLit -> SliceType
Rule 53    ArrayType -> LBRACK Expression RBRACK Type
Rule 54    ArrayType -> LBRACK Expression RBRACK ID
Rule 55    SliceType -> LBRACK RBRACK Type
Rule 56    SliceType -> LBRACK RBRACK ID
Rule 57    StructType -> STRUCT OpenStructS LBRACE FieldDecl_curl RBRACE CloseStructS
Rule 58    FieldDecl_curl -> FieldDecl_curl FieldDecl SEMICOLON
Rule 59    FieldDecl_curl -> <empty>
Rule 60    FieldDecl -> ID COMMA IdentifierList Type
Rule 61    FieldDecl -> ID COMMA IdentifierList ID
Rule 62    FieldDecl -> ID Type
Rule 63    FieldDecl -> ID ID
Rule 64    FieldDecl -> ID STRUCT MUL ID
Rule 65    FieldDecl -> ID COMMA IdentifierList STRUCT MUL ID
Rule 66    PointerType -> MUL Type
Rule 67    PointerType -> MUL ID
Rule 68    Signature -> Parameters Result
Rule 69    Result -> LPAREN TypeList RPAREN
Rule 70    Result -> <empty>
Rule 71    TypeList -> ID
Rule 72    TypeList -> Type
Rule 73    TypeList -> TypeList COMMA ID
Rule 74    TypeList -> TypeList COMMA Type
Rule 75    Parameters -> LPAREN RPAREN
Rule 76    Parameters -> LPAREN ParameterList RPAREN
Rule 77    Parameters -> LPAREN ParameterList COMMA RPAREN
Rule 78    ParameterList -> ParameterDecl
Rule 79    ParameterList -> ParameterList COMMA ParameterDecl
Rule 80    ParameterDecl -> ParaIdList Type
Rule 81    ParameterDecl -> ID Type
Rule 82    ParameterDecl -> ParaIdList ID
Rule 83    ParameterDecl -> ID ID
Rule 84    ParaIdList -> ID COMMA ID
Rule 85    ParaIdList -> ParaIdList COMMA ID
Rule 86    Block -> LBRACE StatementList RBRACE
Rule 87    StatementList -> Statement_curl
Rule 88    Statement_curl -> Statement_curl Statement SEMICOLON
Rule 89    Statement_curl -> <empty>
Rule 90    Expression -> UnaryExpr
Rule 91    Expression -> Expression BinaryOp UnaryExpr
Rule 92    UnaryExpr -> PrimaryExpr
Rule 93    UnaryExpr -> UnaryOp UnaryExpr
Rule 94    BinaryOp -> LOR
Rule 95    BinaryOp -> LAND
Rule 96    BinaryOp -> RelOp
Rule 97    BinaryOp -> AddOp
Rule 98    BinaryOp -> MulOp
Rule 99    RelOp -> EQL
Rule 100   RelOp -> NEQ
Rule 101   RelOp -> LTN
Rule 102   RelOp -> LEQ
Rule 103   RelOp -> GTN
Rule 104   RelOp -> GEQ
Rule 105   AddOp -> ADD
Rule 106   AddOp -> SUB
Rule 107   AddOp -> OR
Rule 108   AddOp -> XOR
Rule 109   MulOp -> MUL
Rule 110   MulOp -> DIV
Rule 111   MulOp -> MOD
Rule 112   MulOp -> SHL
Rule 113   MulOp -> SHR
Rule 114   MulOp -> AND
Rule 115   MulOp -> AND_NOT
Rule 116   UnaryOp -> ADD
Rule 117   UnaryOp -> SUB
Rule 118   UnaryOp -> NOT
Rule 119   UnaryOp -> XOR
Rule 120   UnaryOp -> MUL
Rule 121   UnaryOp -> AND
Rule 122   PrimaryExpr -> Literal
Rule 123   PrimaryExpr -> ID
Rule 124   PrimaryExpr -> ID DOT ID
Rule 125   PrimaryExpr -> LPAREN Expression RPAREN
Rule 126   PrimaryExpr -> PrimaryExpr Index
Rule 127   PrimaryExpr -> PrimaryExpr Slice
Rule 128   PrimaryExpr -> PrimaryExpr Arguments
Rule 129   Index -> LBRACK Expression RBRACK
Rule 130   Slice -> LBRACK Expression COLON Expression RBRACK
Rule 131   Slice -> LBRACK COLON Expression RBRACK
Rule 132   Slice -> LBRACK Expression COLON RBRACK
Rule 133   Slice -> LBRACK COLON RBRACK
Rule 134   Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK
Rule 135   Slice -> LBRACK COLON Expression COLON Expression RBRACK
Rule 136   Arguments -> LPAREN RPAREN
Rule 137   Arguments -> LPAREN ExpressionList RPAREN
Rule 138   Arguments -> LPAREN ExpressionList COMMA RPAREN
Rule 139   Literal -> BasicLit
Rule 140   BasicLit -> IntLit
Rule 141   BasicLit -> FloatLit
Rule 142   BasicLit -> RuneLit
Rule 143   BasicLit -> StringLit
Rule 144   BasicLit -> TrueLit
Rule 145   BasicLit -> FalseLit
Rule 146   TrueLit -> TRUE
Rule 147   FalseLit -> FALSE
Rule 148   IntLit -> INT
Rule 149   FloatLit -> FLOAT
Rule 150   RuneLit -> RUNE
Rule 151   StringLit -> STRING
Rule 152   Statement -> Declaration
Rule 153   Statement -> LabelledStmt
Rule 154   Statement -> SimpleStmt
Rule 155   Statement -> ReturnStmt
Rule 156   Statement -> BreakStmt
Rule 157   Statement -> ContinueStmt
Rule 158   Statement -> GotoStmt
Rule 159   Statement -> FallthroughStmt
Rule 160   Statement -> IfStmt
Rule 161   Statement -> OpenS Block CloseS
Rule 162   Statement -> SwitchStmt
Rule 163   Statement -> ForStmt
Rule 164   SimpleStmt -> Expression
Rule 165   SimpleStmt -> IncDecStmt
Rule 166   SimpleStmt -> Assignment
Rule 167   SimpleStmt -> ShortVarDecl
Rule 168   SimpleStmt -> <empty>
Rule 169   IncDecStmt -> Expression INC
Rule 170   IncDecStmt -> Expression DEC
Rule 171   Assignment -> ExpressionList AssignOp ExpressionList
Rule 172   AssignOp -> ADD_ASSIGN
Rule 173   AssignOp -> SUB_ASSIGN
Rule 174   AssignOp -> MUL_ASSIGN
Rule 175   AssignOp -> DIV_ASSIGN
Rule 176   AssignOp -> MOD_ASSIGN
Rule 177   AssignOp -> AND_ASSIGN
Rule 178   AssignOp -> AND_NOT_ASSIGN
Rule 179   AssignOp -> OR_ASSIGN
Rule 180   AssignOp -> XOR_ASSIGN
Rule 181   AssignOp -> SHL_ASSIGN
Rule 182   AssignOp -> SHR_ASSIGN
Rule 183   AssignOp -> ASSIGN
Rule 184   LabelledStmt -> ID COLON Statement
Rule 185   ReturnStmt -> RETURN ExpressionList
Rule 186   ReturnStmt -> RETURN
Rule 187   BreakStmt -> BREAK ID
Rule 188   BreakStmt -> BREAK
Rule 189   ContinueStmt -> CONTINUE ID
Rule 190   ContinueStmt -> CONTINUE
Rule 191   GotoStmt -> GOTO ID
Rule 192   FallthroughStmt -> FALLTHROUGH
Rule 193   ShortVarDecl -> IdentifierList DEFINE ExpressionList
Rule 194   IfStmt -> IF OpenS Expression Block CloseS
Rule 195   IfStmt -> IF OpenS Expression Block CloseS ELSE IfStmt
Rule 196   IfStmt -> IF OpenS Expression Block CloseS ELSE OpenS Block CloseS
Rule 197   SwitchStmt -> ExprSwitchStmt
Rule 198   ExprSwitchStmt -> SWITCH ExpressionName LBRACE ExprCaseClause_curl RBRACE
Rule 199   ExpressionName -> Expression
Rule 200   ExprCaseClause_curl -> ExprCaseClause_curl ExprCaseClause
Rule 201   ExprCaseClause_curl -> DefCaseClause
Rule 202   ExprCaseClause_curl -> <empty>
Rule 203   ExprCaseClause -> OpenS ExprSwitchCase COLON StatementList CloseS
Rule 204   ExprSwitchCase -> CASE Expression
Rule 205   DefCaseClause -> OpenS DEFAULT COLON StatementList CloseS
Rule 206   ForStmt -> FOR OpenS Expression Block CloseS
Rule 207   ForStmt -> FOR OpenS ForClause Block CloseS
Rule 208   ForStmt -> FOR OpenS Block CloseS
Rule 209   ForClause -> SimpleStmt SEMICOLON SEMICOLON SimpleStmt
Rule 210   ForClause -> SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt

Terminals, with rules where they appear

ADD                  : 105 116
ADD_ASSIGN           : 172
AND                  : 114 121
AND_ASSIGN           : 177
AND_NOT              : 115
AND_NOT_ASSIGN       : 178
ASSIGN               : 28 29 40 41 42 183
BREAK                : 187 188
CASE                 : 204
COLON                : 130 131 132 133 134 134 135 135 184 203 205
COMMA                : 31 33 60 61 65 73 74 77 79 84 85 138
CONST                : 24 25
CONTINUE             : 189 190
DEC                  : 170
DEFAULT              : 205
DEFINE               : 193
DIV                  : 110
DIV_ASSIGN           : 175
DOT                  : 15 124
ELSE                 : 195 196
EQL                  : 99
FALLTHROUGH          : 192
FALSE                : 147
FLOAT                : 149
FOR                  : 206 207 208
FUNC                 : 45
GEQ                  : 104
GOTO                 : 191
GTN                  : 103
ID                   : 10 16 28 30 31 35 41 43 46 48 54 56 60 61 61 62 63 63 64 64 65 65 67 71 73 81 82 83 83 84 84 85 123 124 124 184 187 189 191
IF                   : 194 195 196
IMPORT               : 11 12
INC                  : 169
INT                  : 148
LAND                 : 95
LBRACE               : 57 86 198
LBRACK               : 53 54 55 56 129 130 131 132 133 134 135
LEQ                  : 102
LOR                  : 94
LPAREN               : 12 25 37 47 48 69 75 76 77 125 136 137 138
LTN                  : 101
MOD                  : 111
MOD_ASSIGN           : 176
MUL                  : 64 65 66 67 109 120
MUL_ASSIGN           : 174
NEQ                  : 100
NOT                  : 118
OR                   : 107
OR_ASSIGN            : 179
PACKAGE              : 10
RBRACE               : 57 86 198
RBRACK               : 53 54 55 56 129 130 131 132 133 134 135
RETURN               : 185 186
RPAREN               : 12 25 37 47 48 69 75 76 77 125 136 137 138
RUNE                 : 150
SEMICOLON            : 1 6 8 13 26 38 58 88 209 209 210 210
SHL                  : 112
SHL_ASSIGN           : 181
SHR                  : 113
SHR_ASSIGN           : 182
STRING               : 18 151
STRUCT               : 57 64 65
SUB                  : 106 117
SUB_ASSIGN           : 173
SWITCH               : 198
TRUE                 : 146
TYPE                 : 34
VAR                  : 36 37
XOR                  : 108 119
XOR_ASSIGN           : 180
error                : 

Nonterminals, with rules where they appear

AddOp                : 97
Arguments            : 128
ArrayType            : 50
AssignOp             : 171
Assignment           : 166
BasicLit             : 139
BinaryOp             : 91
Block                : 45 161 194 195 196 196 206 207 208
BreakStmt            : 156
CloseS               : 45 161 194 195 196 196 203 205 206 207 208
CloseStructS         : 57
ConstDecl            : 21
ConstSpec            : 24 26
ConstSpec_curl       : 25 26
ContinueStmt         : 157
Declaration          : 19 152
DefCaseClause        : 201
ExprCaseClause       : 200
ExprCaseClause_curl  : 198 200
ExprSwitchCase       : 203
ExprSwitchStmt       : 197
Expression           : 32 33 53 54 91 125 129 130 130 131 132 134 134 134 135 135 164 169 170 194 195 196 199 204 206 210
ExpressionList       : 28 29 33 40 41 42 137 138 171 171 185 193
ExpressionName       : 198
FallthroughStmt      : 159
FalseLit             : 145
FieldDecl            : 58
FieldDecl_curl       : 57 58
FloatLit             : 141
ForClause            : 207
ForStmt              : 163
FuncName             : 45
FunctionDecl         : 20
GotoStmt             : 158
IdentifierList       : 28 29 31 40 41 42 43 44 60 61 65 193
IfStmt               : 160 195
ImportDecl           : 8
ImportDecl_curl      : 1 8
ImportPath           : 15 16 17
ImportSpec           : 11 13
ImportSpec_curl      : 12 13
IncDecStmt           : 165
Index                : 126
IntLit               : 140
LabelledStmt         : 153
Literal              : 122
MulOp                : 98
OpenS                : 45 161 194 195 196 196 203 205 206 207 208
OpenStructS          : 57
PackageClause        : 1
ParaIdList           : 80 82 85
ParameterDecl        : 78 79
ParameterList        : 76 77 79
Parameters           : 68
PointerType          : 51
PrimaryExpr          : 92 126 127 128
RelOp                : 96
Result               : 68
ReturnStmt           : 155
RuneLit              : 142
ShortVarDecl         : 167
Signature            : 45
SimpleStmt           : 154 209 209 210 210
Slice                : 127
SliceType            : 52
SourceFile           : 0
Statement            : 88 184
StatementList        : 86 203 205
Statement_curl       : 87 88
StringLit            : 143
StructDecl           : 22
StructName           : 34
StructType           : 34
SwitchStmt           : 162
TopLevelDecl         : 6
TopLevelDecl_curl    : 1 6
TrueLit              : 144
Type                 : 29 40 44 47 53 55 60 62 66 72 74 80 81
TypeList             : 69 73 74
TypeLit              : 49
UnaryExpr            : 90 91 93
UnaryOp              : 93
VarDecl              : 23
VarSpec              : 36 38
VarSpec_curl         : 37 38

Parsing method: LALR

state 0

    (0) S' -> . SourceFile
    (1) SourceFile -> . PackageClause SEMICOLON ImportDecl_curl TopLevelDecl_curl
    (10) PackageClause -> . PACKAGE ID

    PACKAGE         shift and go to state 3

    PackageClause                  shift and go to state 1
    SourceFile                     shift and go to state 2

state 1

    (1) SourceFile -> PackageClause . SEMICOLON ImportDecl_curl TopLevelDecl_curl

    SEMICOLON       shift and go to state 4


state 2

    (0) S' -> SourceFile .



state 3

    (10) PackageClause -> PACKAGE . ID

    ID              shift and go to state 5


state 4

    (1) SourceFile -> PackageClause SEMICOLON . ImportDecl_curl TopLevelDecl_curl
    (8) ImportDecl_curl -> . ImportDecl_curl ImportDecl SEMICOLON
    (9) ImportDecl_curl -> .

    IMPORT          reduce using rule 9 (ImportDecl_curl -> .)
    FUNC            reduce using rule 9 (ImportDecl_curl -> .)
    CONST           reduce using rule 9 (ImportDecl_curl -> .)
    TYPE            reduce using rule 9 (ImportDecl_curl -> .)
    VAR             reduce using rule 9 (ImportDecl_curl -> .)
    $end            reduce using rule 9 (ImportDecl_curl -> .)

    ImportDecl_curl                shift and go to state 6

state 5

    (10) PackageClause -> PACKAGE ID .

    SEMICOLON       reduce using rule 10 (PackageClause -> PACKAGE ID .)


state 6

    (1) SourceFile -> PackageClause SEMICOLON ImportDecl_curl . TopLevelDecl_curl
    (8) ImportDecl_curl -> ImportDecl_curl . ImportDecl SEMICOLON
    (6) TopLevelDecl_curl -> . TopLevelDecl_curl TopLevelDecl SEMICOLON
    (7) TopLevelDecl_curl -> .
    (11) ImportDecl -> . IMPORT ImportSpec
    (12) ImportDecl -> . IMPORT LPAREN ImportSpec_curl RPAREN

    FUNC            reduce using rule 7 (TopLevelDecl_curl -> .)
    CONST           reduce using rule 7 (TopLevelDecl_curl -> .)
    TYPE            reduce using rule 7 (TopLevelDecl_curl -> .)
    VAR             reduce using rule 7 (TopLevelDecl_curl -> .)
    $end            reduce using rule 7 (TopLevelDecl_curl -> .)
    IMPORT          shift and go to state 8

    TopLevelDecl_curl              shift and go to state 7
    ImportDecl                     shift and go to state 9

state 7

    (1) SourceFile -> PackageClause SEMICOLON ImportDecl_curl TopLevelDecl_curl .
    (6) TopLevelDecl_curl -> TopLevelDecl_curl . TopLevelDecl SEMICOLON
    (19) TopLevelDecl -> . Declaration
    (20) TopLevelDecl -> . FunctionDecl
    (21) Declaration -> . ConstDecl
    (22) Declaration -> . StructDecl
    (23) Declaration -> . VarDecl
    (45) FunctionDecl -> . FUNC FuncName OpenS Signature Block CloseS
    (24) ConstDecl -> . CONST ConstSpec
    (25) ConstDecl -> . CONST LPAREN ConstSpec_curl RPAREN
    (34) StructDecl -> . TYPE StructName StructType
    (36) VarDecl -> . VAR VarSpec
    (37) VarDecl -> . VAR LPAREN VarSpec_curl RPAREN

    $end            reduce using rule 1 (SourceFile -> PackageClause SEMICOLON ImportDecl_curl TopLevelDecl_curl .)
    FUNC            shift and go to state 15
    CONST           shift and go to state 10
    TYPE            shift and go to state 19
    VAR             shift and go to state 16

    StructDecl                     shift and go to state 11
    VarDecl                        shift and go to state 18
    FunctionDecl                   shift and go to state 12
    TopLevelDecl                   shift and go to state 13
    Declaration                    shift and go to state 14
    ConstDecl                      shift and go to state 17

state 8

    (11) ImportDecl -> IMPORT . ImportSpec
    (12) ImportDecl -> IMPORT . LPAREN ImportSpec_curl RPAREN
    (15) ImportSpec -> . DOT ImportPath
    (16) ImportSpec -> . ID ImportPath
    (17) ImportSpec -> . ImportPath
    (18) ImportPath -> . STRING

    LPAREN          shift and go to state 23
    DOT             shift and go to state 25
    ID              shift and go to state 24
    STRING          shift and go to state 20

    ImportSpec                     shift and go to state 21
    ImportPath                     shift and go to state 22

state 9

    (8) ImportDecl_curl -> ImportDecl_curl ImportDecl . SEMICOLON

    SEMICOLON       shift and go to state 26


state 10

    (24) ConstDecl -> CONST . ConstSpec
    (25) ConstDecl -> CONST . LPAREN ConstSpec_curl RPAREN
    (28) ConstSpec -> . IdentifierList ID ASSIGN ExpressionList
    (29) ConstSpec -> . IdentifierList Type ASSIGN ExpressionList
    (30) IdentifierList -> . ID
    (31) IdentifierList -> . ID COMMA IdentifierList

    LPAREN          shift and go to state 28
    ID              shift and go to state 30

    ConstSpec                      shift and go to state 27
    IdentifierList                 shift and go to state 29

state 11

    (22) Declaration -> StructDecl .

    SEMICOLON       reduce using rule 22 (Declaration -> StructDecl .)


state 12

    (20) TopLevelDecl -> FunctionDecl .

    SEMICOLON       reduce using rule 20 (TopLevelDecl -> FunctionDecl .)


state 13

    (6) TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl . SEMICOLON

    SEMICOLON       shift and go to state 31


state 14

    (19) TopLevelDecl -> Declaration .

    SEMICOLON       reduce using rule 19 (TopLevelDecl -> Declaration .)


state 15

    (45) FunctionDecl -> FUNC . FuncName OpenS Signature Block CloseS
    (46) FuncName -> . ID

    ID              shift and go to state 33

    FuncName                       shift and go to state 32

state 16

    (36) VarDecl -> VAR . VarSpec
    (37) VarDecl -> VAR . LPAREN VarSpec_curl RPAREN
    (40) VarSpec -> . IdentifierList Type ASSIGN ExpressionList
    (41) VarSpec -> . IdentifierList ID ASSIGN ExpressionList
    (42) VarSpec -> . IdentifierList ASSIGN ExpressionList
    (43) VarSpec -> . IdentifierList ID
    (44) VarSpec -> . IdentifierList Type
    (30) IdentifierList -> . ID
    (31) IdentifierList -> . ID COMMA IdentifierList

    LPAREN          shift and go to state 35
    ID              shift and go to state 30

    VarSpec                        shift and go to state 34
    IdentifierList                 shift and go to state 36

state 17

    (21) Declaration -> ConstDecl .

    SEMICOLON       reduce using rule 21 (Declaration -> ConstDecl .)


state 18

    (23) Declaration -> VarDecl .

    SEMICOLON       reduce using rule 23 (Declaration -> VarDecl .)


state 19

    (34) StructDecl -> TYPE . StructName StructType
    (35) StructName -> . ID

    ID              shift and go to state 38

    StructName                     shift and go to state 37

state 20

    (18) ImportPath -> STRING .

    SEMICOLON       reduce using rule 18 (ImportPath -> STRING .)


state 21

    (11) ImportDecl -> IMPORT ImportSpec .

    SEMICOLON       reduce using rule 11 (ImportDecl -> IMPORT ImportSpec .)


state 22

    (17) ImportSpec -> ImportPath .

    SEMICOLON       reduce using rule 17 (ImportSpec -> ImportPath .)


state 23

    (12) ImportDecl -> IMPORT LPAREN . ImportSpec_curl RPAREN
    (13) ImportSpec_curl -> . ImportSpec_curl ImportSpec SEMICOLON
    (14) ImportSpec_curl -> .

    RPAREN          reduce using rule 14 (ImportSpec_curl -> .)
    DOT             reduce using rule 14 (ImportSpec_curl -> .)
    ID              reduce using rule 14 (ImportSpec_curl -> .)
    STRING          reduce using rule 14 (ImportSpec_curl -> .)

    ImportSpec_curl                shift and go to state 39

state 24

    (16) ImportSpec -> ID . ImportPath
    (18) ImportPath -> . STRING

    STRING          shift and go to state 20

    ImportPath                     shift and go to state 40

state 25

    (15) ImportSpec -> DOT . ImportPath
    (18) ImportPath -> . STRING

    STRING          shift and go to state 20

    ImportPath                     shift and go to state 41

state 26

    (8) ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .

    IMPORT          reduce using rule 8 (ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .)
    FUNC            reduce using rule 8 (ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .)
    CONST           reduce using rule 8 (ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .)
    TYPE            reduce using rule 8 (ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .)
    VAR             reduce using rule 8 (ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .)
    $end            reduce using rule 8 (ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .)


state 27

    (24) ConstDecl -> CONST ConstSpec .

    SEMICOLON       reduce using rule 24 (ConstDecl -> CONST ConstSpec .)


state 28

    (25) ConstDecl -> CONST LPAREN . ConstSpec_curl RPAREN
    (26) ConstSpec_curl -> . ConstSpec_curl ConstSpec SEMICOLON
    (27) ConstSpec_curl -> .

    RPAREN          reduce using rule 27 (ConstSpec_curl -> .)
    ID              reduce using rule 27 (ConstSpec_curl -> .)

    ConstSpec_curl                 shift and go to state 42

state 29

    (28) ConstSpec -> IdentifierList . ID ASSIGN ExpressionList
    (29) ConstSpec -> IdentifierList . Type ASSIGN ExpressionList
    (47) Type -> . LPAREN Type RPAREN
    (48) Type -> . LPAREN ID RPAREN
    (49) Type -> . TypeLit
    (50) TypeLit -> . ArrayType
    (51) TypeLit -> . PointerType
    (52) TypeLit -> . SliceType
    (53) ArrayType -> . LBRACK Expression RBRACK Type
    (54) ArrayType -> . LBRACK Expression RBRACK ID
    (66) PointerType -> . MUL Type
    (67) PointerType -> . MUL ID
    (55) SliceType -> . LBRACK RBRACK Type
    (56) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 46
    LPAREN          shift and go to state 47
    LBRACK          shift and go to state 44
    MUL             shift and go to state 49

    TypeLit                        shift and go to state 43
    ArrayType                      shift and go to state 45
    PointerType                    shift and go to state 48
    Type                           shift and go to state 50
    SliceType                      shift and go to state 51

state 30

    (30) IdentifierList -> ID .
    (31) IdentifierList -> ID . COMMA IdentifierList

    ID              reduce using rule 30 (IdentifierList -> ID .)
    LPAREN          reduce using rule 30 (IdentifierList -> ID .)
    LBRACK          reduce using rule 30 (IdentifierList -> ID .)
    MUL             reduce using rule 30 (IdentifierList -> ID .)
    ASSIGN          reduce using rule 30 (IdentifierList -> ID .)
    DEFINE          reduce using rule 30 (IdentifierList -> ID .)
    STRUCT          reduce using rule 30 (IdentifierList -> ID .)
    COMMA           shift and go to state 52


state 31

    (6) TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON .

    FUNC            reduce using rule 6 (TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON .)
    CONST           reduce using rule 6 (TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON .)
    TYPE            reduce using rule 6 (TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON .)
    VAR             reduce using rule 6 (TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON .)
    $end            reduce using rule 6 (TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON .)


state 32

    (45) FunctionDecl -> FUNC FuncName . OpenS Signature Block CloseS
    (2) OpenS -> .

    LPAREN          reduce using rule 2 (OpenS -> .)

    OpenS                          shift and go to state 53

state 33

    (46) FuncName -> ID .

    LPAREN          reduce using rule 46 (FuncName -> ID .)


state 34

    (36) VarDecl -> VAR VarSpec .

    SEMICOLON       reduce using rule 36 (VarDecl -> VAR VarSpec .)


state 35

    (37) VarDecl -> VAR LPAREN . VarSpec_curl RPAREN
    (38) VarSpec_curl -> . VarSpec_curl VarSpec SEMICOLON
    (39) VarSpec_curl -> .

    RPAREN          reduce using rule 39 (VarSpec_curl -> .)
    ID              reduce using rule 39 (VarSpec_curl -> .)

    VarSpec_curl                   shift and go to state 54

state 36

    (40) VarSpec -> IdentifierList . Type ASSIGN ExpressionList
    (41) VarSpec -> IdentifierList . ID ASSIGN ExpressionList
    (42) VarSpec -> IdentifierList . ASSIGN ExpressionList
    (43) VarSpec -> IdentifierList . ID
    (44) VarSpec -> IdentifierList . Type
    (47) Type -> . LPAREN Type RPAREN
    (48) Type -> . LPAREN ID RPAREN
    (49) Type -> . TypeLit
    (50) TypeLit -> . ArrayType
    (51) TypeLit -> . PointerType
    (52) TypeLit -> . SliceType
    (53) ArrayType -> . LBRACK Expression RBRACK Type
    (54) ArrayType -> . LBRACK Expression RBRACK ID
    (66) PointerType -> . MUL Type
    (67) PointerType -> . MUL ID
    (55) SliceType -> . LBRACK RBRACK Type
    (56) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 57
    ASSIGN          shift and go to state 55
    LPAREN          shift and go to state 47
    LBRACK          shift and go to state 44
    MUL             shift and go to state 49

    Type                           shift and go to state 56
    ArrayType                      shift and go to state 45
    PointerType                    shift and go to state 48
    TypeLit                        shift and go to state 43
    SliceType                      shift and go to state 51

state 37

    (34) StructDecl -> TYPE StructName . StructType
    (57) StructType -> . STRUCT OpenStructS LBRACE FieldDecl_curl RBRACE CloseStructS

    STRUCT          shift and go to state 59

    StructType                     shift and go to state 58

state 38

    (35) StructName -> ID .

    STRUCT          reduce using rule 35 (StructName -> ID .)


state 39

    (12) ImportDecl -> IMPORT LPAREN ImportSpec_curl . RPAREN
    (13) ImportSpec_curl -> ImportSpec_curl . ImportSpec SEMICOLON
    (15) ImportSpec -> . DOT ImportPath
    (16) ImportSpec -> . ID ImportPath
    (17) ImportSpec -> . ImportPath
    (18) ImportPath -> . STRING

    RPAREN          shift and go to state 60
    DOT             shift and go to state 25
    ID              shift and go to state 24
    STRING          shift and go to state 20

    ImportSpec                     shift and go to state 61
    ImportPath                     shift and go to state 22

state 40

    (16) ImportSpec -> ID ImportPath .

    SEMICOLON       reduce using rule 16 (ImportSpec -> ID ImportPath .)


state 41

    (15) ImportSpec -> DOT ImportPath .

    SEMICOLON       reduce using rule 15 (ImportSpec -> DOT ImportPath .)


state 42

    (25) ConstDecl -> CONST LPAREN ConstSpec_curl . RPAREN
    (26) ConstSpec_curl -> ConstSpec_curl . ConstSpec SEMICOLON
    (28) ConstSpec -> . IdentifierList ID ASSIGN ExpressionList
    (29) ConstSpec -> . IdentifierList Type ASSIGN ExpressionList
    (30) IdentifierList -> . ID
    (31) IdentifierList -> . ID COMMA IdentifierList

    RPAREN          shift and go to state 62
    ID              shift and go to state 30

    ConstSpec                      shift and go to state 63
    IdentifierList                 shift and go to state 29

state 43

    (49) Type -> TypeLit .

    ASSIGN          reduce using rule 49 (Type -> TypeLit .)
    SEMICOLON       reduce using rule 49 (Type -> TypeLit .)
    RPAREN          reduce using rule 49 (Type -> TypeLit .)
    COMMA           reduce using rule 49 (Type -> TypeLit .)


state 44

    (53) ArrayType -> LBRACK . Expression RBRACK Type
    (54) ArrayType -> LBRACK . Expression RBRACK ID
    (55) SliceType -> LBRACK . RBRACK Type
    (56) SliceType -> LBRACK . RBRACK ID
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    RBRACK          shift and go to state 74
    ID              shift and go to state 82
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    RuneLit                        shift and go to state 80
    UnaryOp                        shift and go to state 65
    TrueLit                        shift and go to state 90
    Expression                     shift and go to state 81
    UnaryExpr                      shift and go to state 75
    FloatLit                       shift and go to state 76
    FalseLit                       shift and go to state 66
    IntLit                         shift and go to state 68
    Literal                        shift and go to state 67
    BasicLit                       shift and go to state 70
    PrimaryExpr                    shift and go to state 77
    StringLit                      shift and go to state 88

state 45

    (50) TypeLit -> ArrayType .

    SEMICOLON       reduce using rule 50 (TypeLit -> ArrayType .)
    ASSIGN          reduce using rule 50 (TypeLit -> ArrayType .)
    RPAREN          reduce using rule 50 (TypeLit -> ArrayType .)
    COMMA           reduce using rule 50 (TypeLit -> ArrayType .)


state 46

    (28) ConstSpec -> IdentifierList ID . ASSIGN ExpressionList

    ASSIGN          shift and go to state 91


state 47

    (47) Type -> LPAREN . Type RPAREN
    (48) Type -> LPAREN . ID RPAREN
    (47) Type -> . LPAREN Type RPAREN
    (48) Type -> . LPAREN ID RPAREN
    (49) Type -> . TypeLit
    (50) TypeLit -> . ArrayType
    (51) TypeLit -> . PointerType
    (52) TypeLit -> . SliceType
    (53) ArrayType -> . LBRACK Expression RBRACK Type
    (54) ArrayType -> . LBRACK Expression RBRACK ID
    (66) PointerType -> . MUL Type
    (67) PointerType -> . MUL ID
    (55) SliceType -> . LBRACK RBRACK Type
    (56) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 93
    LPAREN          shift and go to state 47
    LBRACK          shift and go to state 44
    MUL             shift and go to state 49

    Type                           shift and go to state 92
    ArrayType                      shift and go to state 45
    PointerType                    shift and go to state 48
    TypeLit                        shift and go to state 43
    SliceType                      shift and go to state 51

state 48

    (51) TypeLit -> PointerType .

    SEMICOLON       reduce using rule 51 (TypeLit -> PointerType .)
    ASSIGN          reduce using rule 51 (TypeLit -> PointerType .)
    RPAREN          reduce using rule 51 (TypeLit -> PointerType .)
    COMMA           reduce using rule 51 (TypeLit -> PointerType .)


state 49

    (66) PointerType -> MUL . Type
    (67) PointerType -> MUL . ID
    (47) Type -> . LPAREN Type RPAREN
    (48) Type -> . LPAREN ID RPAREN
    (49) Type -> . TypeLit
    (50) TypeLit -> . ArrayType
    (51) TypeLit -> . PointerType
    (52) TypeLit -> . SliceType
    (53) ArrayType -> . LBRACK Expression RBRACK Type
    (54) ArrayType -> . LBRACK Expression RBRACK ID
    (66) PointerType -> . MUL Type
    (67) PointerType -> . MUL ID
    (55) SliceType -> . LBRACK RBRACK Type
    (56) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 95
    LPAREN          shift and go to state 47
    LBRACK          shift and go to state 44
    MUL             shift and go to state 49

    Type                           shift and go to state 94
    ArrayType                      shift and go to state 45
    PointerType                    shift and go to state 48
    TypeLit                        shift and go to state 43
    SliceType                      shift and go to state 51

state 50

    (29) ConstSpec -> IdentifierList Type . ASSIGN ExpressionList

    ASSIGN          shift and go to state 96


state 51

    (52) TypeLit -> SliceType .

    SEMICOLON       reduce using rule 52 (TypeLit -> SliceType .)
    ASSIGN          reduce using rule 52 (TypeLit -> SliceType .)
    RPAREN          reduce using rule 52 (TypeLit -> SliceType .)
    COMMA           reduce using rule 52 (TypeLit -> SliceType .)


state 52

    (31) IdentifierList -> ID COMMA . IdentifierList
    (30) IdentifierList -> . ID
    (31) IdentifierList -> . ID COMMA IdentifierList

    ID              shift and go to state 30

    IdentifierList                 shift and go to state 97

state 53

    (45) FunctionDecl -> FUNC FuncName OpenS . Signature Block CloseS
    (68) Signature -> . Parameters Result
    (75) Parameters -> . LPAREN RPAREN
    (76) Parameters -> . LPAREN ParameterList RPAREN
    (77) Parameters -> . LPAREN ParameterList COMMA RPAREN

    LPAREN          shift and go to state 98

    Parameters                     shift and go to state 99
    Signature                      shift and go to state 100

state 54

    (37) VarDecl -> VAR LPAREN VarSpec_curl . RPAREN
    (38) VarSpec_curl -> VarSpec_curl . VarSpec SEMICOLON
    (40) VarSpec -> . IdentifierList Type ASSIGN ExpressionList
    (41) VarSpec -> . IdentifierList ID ASSIGN ExpressionList
    (42) VarSpec -> . IdentifierList ASSIGN ExpressionList
    (43) VarSpec -> . IdentifierList ID
    (44) VarSpec -> . IdentifierList Type
    (30) IdentifierList -> . ID
    (31) IdentifierList -> . ID COMMA IdentifierList

    RPAREN          shift and go to state 101
    ID              shift and go to state 30

    VarSpec                        shift and go to state 102
    IdentifierList                 shift and go to state 36

state 55

    (42) VarSpec -> IdentifierList ASSIGN . ExpressionList
    (32) ExpressionList -> . Expression
    (33) ExpressionList -> . ExpressionList COMMA Expression
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    ID              shift and go to state 82
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    RuneLit                        shift and go to state 80
    UnaryOp                        shift and go to state 65
    TrueLit                        shift and go to state 90
    BasicLit                       shift and go to state 70
    UnaryExpr                      shift and go to state 75
    FloatLit                       shift and go to state 76
    FalseLit                       shift and go to state 66
    IntLit                         shift and go to state 68
    Literal                        shift and go to state 67
    ExpressionList                 shift and go to state 103
    PrimaryExpr                    shift and go to state 77
    StringLit                      shift and go to state 88
    Expression                     shift and go to state 104

state 56

    (40) VarSpec -> IdentifierList Type . ASSIGN ExpressionList
    (44) VarSpec -> IdentifierList Type .

    ASSIGN          shift and go to state 105
    SEMICOLON       reduce using rule 44 (VarSpec -> IdentifierList Type .)


state 57

    (41) VarSpec -> IdentifierList ID . ASSIGN ExpressionList
    (43) VarSpec -> IdentifierList ID .

    ASSIGN          shift and go to state 106
    SEMICOLON       reduce using rule 43 (VarSpec -> IdentifierList ID .)


state 58

    (34) StructDecl -> TYPE StructName StructType .

    SEMICOLON       reduce using rule 34 (StructDecl -> TYPE StructName StructType .)


state 59

    (57) StructType -> STRUCT . OpenStructS LBRACE FieldDecl_curl RBRACE CloseStructS
    (4) OpenStructS -> .

    LBRACE          reduce using rule 4 (OpenStructS -> .)

    OpenStructS                    shift and go to state 107

state 60

    (12) ImportDecl -> IMPORT LPAREN ImportSpec_curl RPAREN .

    SEMICOLON       reduce using rule 12 (ImportDecl -> IMPORT LPAREN ImportSpec_curl RPAREN .)


state 61

    (13) ImportSpec_curl -> ImportSpec_curl ImportSpec . SEMICOLON

    SEMICOLON       shift and go to state 108


state 62

    (25) ConstDecl -> CONST LPAREN ConstSpec_curl RPAREN .

    SEMICOLON       reduce using rule 25 (ConstDecl -> CONST LPAREN ConstSpec_curl RPAREN .)


state 63

    (26) ConstSpec_curl -> ConstSpec_curl ConstSpec . SEMICOLON

    SEMICOLON       shift and go to state 109


state 64

    (117) UnaryOp -> SUB .

    ID              reduce using rule 117 (UnaryOp -> SUB .)
    LPAREN          reduce using rule 117 (UnaryOp -> SUB .)
    ADD             reduce using rule 117 (UnaryOp -> SUB .)
    SUB             reduce using rule 117 (UnaryOp -> SUB .)
    NOT             reduce using rule 117 (UnaryOp -> SUB .)
    XOR             reduce using rule 117 (UnaryOp -> SUB .)
    MUL             reduce using rule 117 (UnaryOp -> SUB .)
    AND             reduce using rule 117 (UnaryOp -> SUB .)
    INT             reduce using rule 117 (UnaryOp -> SUB .)
    FLOAT           reduce using rule 117 (UnaryOp -> SUB .)
    RUNE            reduce using rule 117 (UnaryOp -> SUB .)
    STRING          reduce using rule 117 (UnaryOp -> SUB .)
    TRUE            reduce using rule 117 (UnaryOp -> SUB .)
    FALSE           reduce using rule 117 (UnaryOp -> SUB .)


state 65

    (93) UnaryExpr -> UnaryOp . UnaryExpr
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    ID              shift and go to state 82
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    RuneLit                        shift and go to state 80
    UnaryOp                        shift and go to state 65
    TrueLit                        shift and go to state 90
    BasicLit                       shift and go to state 70
    UnaryExpr                      shift and go to state 110
    FloatLit                       shift and go to state 76
    FalseLit                       shift and go to state 66
    IntLit                         shift and go to state 68
    Literal                        shift and go to state 67
    PrimaryExpr                    shift and go to state 77
    StringLit                      shift and go to state 88

state 66

    (145) BasicLit -> FalseLit .

    LBRACK          reduce using rule 145 (BasicLit -> FalseLit .)
    LPAREN          reduce using rule 145 (BasicLit -> FalseLit .)
    RBRACK          reduce using rule 145 (BasicLit -> FalseLit .)
    COLON           reduce using rule 145 (BasicLit -> FalseLit .)
    LOR             reduce using rule 145 (BasicLit -> FalseLit .)
    LAND            reduce using rule 145 (BasicLit -> FalseLit .)
    EQL             reduce using rule 145 (BasicLit -> FalseLit .)
    NEQ             reduce using rule 145 (BasicLit -> FalseLit .)
    LTN             reduce using rule 145 (BasicLit -> FalseLit .)
    LEQ             reduce using rule 145 (BasicLit -> FalseLit .)
    GTN             reduce using rule 145 (BasicLit -> FalseLit .)
    GEQ             reduce using rule 145 (BasicLit -> FalseLit .)
    ADD             reduce using rule 145 (BasicLit -> FalseLit .)
    SUB             reduce using rule 145 (BasicLit -> FalseLit .)
    OR              reduce using rule 145 (BasicLit -> FalseLit .)
    XOR             reduce using rule 145 (BasicLit -> FalseLit .)
    MUL             reduce using rule 145 (BasicLit -> FalseLit .)
    DIV             reduce using rule 145 (BasicLit -> FalseLit .)
    MOD             reduce using rule 145 (BasicLit -> FalseLit .)
    SHL             reduce using rule 145 (BasicLit -> FalseLit .)
    SHR             reduce using rule 145 (BasicLit -> FalseLit .)
    AND             reduce using rule 145 (BasicLit -> FalseLit .)
    AND_NOT         reduce using rule 145 (BasicLit -> FalseLit .)
    COMMA           reduce using rule 145 (BasicLit -> FalseLit .)
    SEMICOLON       reduce using rule 145 (BasicLit -> FalseLit .)
    LBRACE          reduce using rule 145 (BasicLit -> FalseLit .)
    RPAREN          reduce using rule 145 (BasicLit -> FalseLit .)
    INC             reduce using rule 145 (BasicLit -> FalseLit .)
    DEC             reduce using rule 145 (BasicLit -> FalseLit .)
    ADD_ASSIGN      reduce using rule 145 (BasicLit -> FalseLit .)
    SUB_ASSIGN      reduce using rule 145 (BasicLit -> FalseLit .)
    MUL_ASSIGN      reduce using rule 145 (BasicLit -> FalseLit .)
    DIV_ASSIGN      reduce using rule 145 (BasicLit -> FalseLit .)
    MOD_ASSIGN      reduce using rule 145 (BasicLit -> FalseLit .)
    AND_ASSIGN      reduce using rule 145 (BasicLit -> FalseLit .)
    AND_NOT_ASSIGN  reduce using rule 145 (BasicLit -> FalseLit .)
    OR_ASSIGN       reduce using rule 145 (BasicLit -> FalseLit .)
    XOR_ASSIGN      reduce using rule 145 (BasicLit -> FalseLit .)
    SHL_ASSIGN      reduce using rule 145 (BasicLit -> FalseLit .)
    SHR_ASSIGN      reduce using rule 145 (BasicLit -> FalseLit .)
    ASSIGN          reduce using rule 145 (BasicLit -> FalseLit .)


state 67

    (122) PrimaryExpr -> Literal .

    LBRACK          reduce using rule 122 (PrimaryExpr -> Literal .)
    LPAREN          reduce using rule 122 (PrimaryExpr -> Literal .)
    LOR             reduce using rule 122 (PrimaryExpr -> Literal .)
    LAND            reduce using rule 122 (PrimaryExpr -> Literal .)
    EQL             reduce using rule 122 (PrimaryExpr -> Literal .)
    NEQ             reduce using rule 122 (PrimaryExpr -> Literal .)
    LTN             reduce using rule 122 (PrimaryExpr -> Literal .)
    LEQ             reduce using rule 122 (PrimaryExpr -> Literal .)
    GTN             reduce using rule 122 (PrimaryExpr -> Literal .)
    GEQ             reduce using rule 122 (PrimaryExpr -> Literal .)
    ADD             reduce using rule 122 (PrimaryExpr -> Literal .)
    SUB             reduce using rule 122 (PrimaryExpr -> Literal .)
    OR              reduce using rule 122 (PrimaryExpr -> Literal .)
    XOR             reduce using rule 122 (PrimaryExpr -> Literal .)
    MUL             reduce using rule 122 (PrimaryExpr -> Literal .)
    DIV             reduce using rule 122 (PrimaryExpr -> Literal .)
    MOD             reduce using rule 122 (PrimaryExpr -> Literal .)
    SHL             reduce using rule 122 (PrimaryExpr -> Literal .)
    SHR             reduce using rule 122 (PrimaryExpr -> Literal .)
    AND             reduce using rule 122 (PrimaryExpr -> Literal .)
    AND_NOT         reduce using rule 122 (PrimaryExpr -> Literal .)
    COMMA           reduce using rule 122 (PrimaryExpr -> Literal .)
    SEMICOLON       reduce using rule 122 (PrimaryExpr -> Literal .)
    LBRACE          reduce using rule 122 (PrimaryExpr -> Literal .)
    INC             reduce using rule 122 (PrimaryExpr -> Literal .)
    DEC             reduce using rule 122 (PrimaryExpr -> Literal .)
    ADD_ASSIGN      reduce using rule 122 (PrimaryExpr -> Literal .)
    SUB_ASSIGN      reduce using rule 122 (PrimaryExpr -> Literal .)
    MUL_ASSIGN      reduce using rule 122 (PrimaryExpr -> Literal .)
    DIV_ASSIGN      reduce using rule 122 (PrimaryExpr -> Literal .)
    MOD_ASSIGN      reduce using rule 122 (PrimaryExpr -> Literal .)
    AND_ASSIGN      reduce using rule 122 (PrimaryExpr -> Literal .)
    AND_NOT_ASSIGN  reduce using rule 122 (PrimaryExpr -> Literal .)
    OR_ASSIGN       reduce using rule 122 (PrimaryExpr -> Literal .)
    XOR_ASSIGN      reduce using rule 122 (PrimaryExpr -> Literal .)
    SHL_ASSIGN      reduce using rule 122 (PrimaryExpr -> Literal .)
    SHR_ASSIGN      reduce using rule 122 (PrimaryExpr -> Literal .)
    ASSIGN          reduce using rule 122 (PrimaryExpr -> Literal .)
    RPAREN          reduce using rule 122 (PrimaryExpr -> Literal .)
    RBRACK          reduce using rule 122 (PrimaryExpr -> Literal .)
    COLON           reduce using rule 122 (PrimaryExpr -> Literal .)


state 68

    (140) BasicLit -> IntLit .

    LBRACK          reduce using rule 140 (BasicLit -> IntLit .)
    LPAREN          reduce using rule 140 (BasicLit -> IntLit .)
    RBRACK          reduce using rule 140 (BasicLit -> IntLit .)
    COLON           reduce using rule 140 (BasicLit -> IntLit .)
    LOR             reduce using rule 140 (BasicLit -> IntLit .)
    LAND            reduce using rule 140 (BasicLit -> IntLit .)
    EQL             reduce using rule 140 (BasicLit -> IntLit .)
    NEQ             reduce using rule 140 (BasicLit -> IntLit .)
    LTN             reduce using rule 140 (BasicLit -> IntLit .)
    LEQ             reduce using rule 140 (BasicLit -> IntLit .)
    GTN             reduce using rule 140 (BasicLit -> IntLit .)
    GEQ             reduce using rule 140 (BasicLit -> IntLit .)
    ADD             reduce using rule 140 (BasicLit -> IntLit .)
    SUB             reduce using rule 140 (BasicLit -> IntLit .)
    OR              reduce using rule 140 (BasicLit -> IntLit .)
    XOR             reduce using rule 140 (BasicLit -> IntLit .)
    MUL             reduce using rule 140 (BasicLit -> IntLit .)
    DIV             reduce using rule 140 (BasicLit -> IntLit .)
    MOD             reduce using rule 140 (BasicLit -> IntLit .)
    SHL             reduce using rule 140 (BasicLit -> IntLit .)
    SHR             reduce using rule 140 (BasicLit -> IntLit .)
    AND             reduce using rule 140 (BasicLit -> IntLit .)
    AND_NOT         reduce using rule 140 (BasicLit -> IntLit .)
    COMMA           reduce using rule 140 (BasicLit -> IntLit .)
    SEMICOLON       reduce using rule 140 (BasicLit -> IntLit .)
    LBRACE          reduce using rule 140 (BasicLit -> IntLit .)
    RPAREN          reduce using rule 140 (BasicLit -> IntLit .)
    INC             reduce using rule 140 (BasicLit -> IntLit .)
    DEC             reduce using rule 140 (BasicLit -> IntLit .)
    ADD_ASSIGN      reduce using rule 140 (BasicLit -> IntLit .)
    SUB_ASSIGN      reduce using rule 140 (BasicLit -> IntLit .)
    MUL_ASSIGN      reduce using rule 140 (BasicLit -> IntLit .)
    DIV_ASSIGN      reduce using rule 140 (BasicLit -> IntLit .)
    MOD_ASSIGN      reduce using rule 140 (BasicLit -> IntLit .)
    AND_ASSIGN      reduce using rule 140 (BasicLit -> IntLit .)
    AND_NOT_ASSIGN  reduce using rule 140 (BasicLit -> IntLit .)
    OR_ASSIGN       reduce using rule 140 (BasicLit -> IntLit .)
    XOR_ASSIGN      reduce using rule 140 (BasicLit -> IntLit .)
    SHL_ASSIGN      reduce using rule 140 (BasicLit -> IntLit .)
    SHR_ASSIGN      reduce using rule 140 (BasicLit -> IntLit .)
    ASSIGN          reduce using rule 140 (BasicLit -> IntLit .)


state 69

    (120) UnaryOp -> MUL .

    ID              reduce using rule 120 (UnaryOp -> MUL .)
    LPAREN          reduce using rule 120 (UnaryOp -> MUL .)
    ADD             reduce using rule 120 (UnaryOp -> MUL .)
    SUB             reduce using rule 120 (UnaryOp -> MUL .)
    NOT             reduce using rule 120 (UnaryOp -> MUL .)
    XOR             reduce using rule 120 (UnaryOp -> MUL .)
    MUL             reduce using rule 120 (UnaryOp -> MUL .)
    AND             reduce using rule 120 (UnaryOp -> MUL .)
    INT             reduce using rule 120 (UnaryOp -> MUL .)
    FLOAT           reduce using rule 120 (UnaryOp -> MUL .)
    RUNE            reduce using rule 120 (UnaryOp -> MUL .)
    STRING          reduce using rule 120 (UnaryOp -> MUL .)
    TRUE            reduce using rule 120 (UnaryOp -> MUL .)
    FALSE           reduce using rule 120 (UnaryOp -> MUL .)


state 70

    (139) Literal -> BasicLit .

    LBRACK          reduce using rule 139 (Literal -> BasicLit .)
    LPAREN          reduce using rule 139 (Literal -> BasicLit .)
    RBRACK          reduce using rule 139 (Literal -> BasicLit .)
    LOR             reduce using rule 139 (Literal -> BasicLit .)
    LAND            reduce using rule 139 (Literal -> BasicLit .)
    EQL             reduce using rule 139 (Literal -> BasicLit .)
    NEQ             reduce using rule 139 (Literal -> BasicLit .)
    LTN             reduce using rule 139 (Literal -> BasicLit .)
    LEQ             reduce using rule 139 (Literal -> BasicLit .)
    GTN             reduce using rule 139 (Literal -> BasicLit .)
    GEQ             reduce using rule 139 (Literal -> BasicLit .)
    ADD             reduce using rule 139 (Literal -> BasicLit .)
    SUB             reduce using rule 139 (Literal -> BasicLit .)
    OR              reduce using rule 139 (Literal -> BasicLit .)
    XOR             reduce using rule 139 (Literal -> BasicLit .)
    MUL             reduce using rule 139 (Literal -> BasicLit .)
    DIV             reduce using rule 139 (Literal -> BasicLit .)
    MOD             reduce using rule 139 (Literal -> BasicLit .)
    SHL             reduce using rule 139 (Literal -> BasicLit .)
    SHR             reduce using rule 139 (Literal -> BasicLit .)
    AND             reduce using rule 139 (Literal -> BasicLit .)
    AND_NOT         reduce using rule 139 (Literal -> BasicLit .)
    RPAREN          reduce using rule 139 (Literal -> BasicLit .)
    COMMA           reduce using rule 139 (Literal -> BasicLit .)
    INC             reduce using rule 139 (Literal -> BasicLit .)
    DEC             reduce using rule 139 (Literal -> BasicLit .)
    LBRACE          reduce using rule 139 (Literal -> BasicLit .)
    SEMICOLON       reduce using rule 139 (Literal -> BasicLit .)
    ADD_ASSIGN      reduce using rule 139 (Literal -> BasicLit .)
    SUB_ASSIGN      reduce using rule 139 (Literal -> BasicLit .)
    MUL_ASSIGN      reduce using rule 139 (Literal -> BasicLit .)
    DIV_ASSIGN      reduce using rule 139 (Literal -> BasicLit .)
    MOD_ASSIGN      reduce using rule 139 (Literal -> BasicLit .)
    AND_ASSIGN      reduce using rule 139 (Literal -> BasicLit .)
    AND_NOT_ASSIGN  reduce using rule 139 (Literal -> BasicLit .)
    OR_ASSIGN       reduce using rule 139 (Literal -> BasicLit .)
    XOR_ASSIGN      reduce using rule 139 (Literal -> BasicLit .)
    SHL_ASSIGN      reduce using rule 139 (Literal -> BasicLit .)
    SHR_ASSIGN      reduce using rule 139 (Literal -> BasicLit .)
    ASSIGN          reduce using rule 139 (Literal -> BasicLit .)
    COLON           reduce using rule 139 (Literal -> BasicLit .)


state 71

    (150) RuneLit -> RUNE .

    LBRACK          reduce using rule 150 (RuneLit -> RUNE .)
    LPAREN          reduce using rule 150 (RuneLit -> RUNE .)
    INC             reduce using rule 150 (RuneLit -> RUNE .)
    DEC             reduce using rule 150 (RuneLit -> RUNE .)
    LOR             reduce using rule 150 (RuneLit -> RUNE .)
    LAND            reduce using rule 150 (RuneLit -> RUNE .)
    EQL             reduce using rule 150 (RuneLit -> RUNE .)
    NEQ             reduce using rule 150 (RuneLit -> RUNE .)
    LTN             reduce using rule 150 (RuneLit -> RUNE .)
    LEQ             reduce using rule 150 (RuneLit -> RUNE .)
    GTN             reduce using rule 150 (RuneLit -> RUNE .)
    GEQ             reduce using rule 150 (RuneLit -> RUNE .)
    ADD             reduce using rule 150 (RuneLit -> RUNE .)
    SUB             reduce using rule 150 (RuneLit -> RUNE .)
    OR              reduce using rule 150 (RuneLit -> RUNE .)
    XOR             reduce using rule 150 (RuneLit -> RUNE .)
    MUL             reduce using rule 150 (RuneLit -> RUNE .)
    DIV             reduce using rule 150 (RuneLit -> RUNE .)
    MOD             reduce using rule 150 (RuneLit -> RUNE .)
    SHL             reduce using rule 150 (RuneLit -> RUNE .)
    SHR             reduce using rule 150 (RuneLit -> RUNE .)
    AND             reduce using rule 150 (RuneLit -> RUNE .)
    AND_NOT         reduce using rule 150 (RuneLit -> RUNE .)
    LBRACE          reduce using rule 150 (RuneLit -> RUNE .)
    COMMA           reduce using rule 150 (RuneLit -> RUNE .)
    ADD_ASSIGN      reduce using rule 150 (RuneLit -> RUNE .)
    SUB_ASSIGN      reduce using rule 150 (RuneLit -> RUNE .)
    MUL_ASSIGN      reduce using rule 150 (RuneLit -> RUNE .)
    DIV_ASSIGN      reduce using rule 150 (RuneLit -> RUNE .)
    MOD_ASSIGN      reduce using rule 150 (RuneLit -> RUNE .)
    AND_ASSIGN      reduce using rule 150 (RuneLit -> RUNE .)
    AND_NOT_ASSIGN  reduce using rule 150 (RuneLit -> RUNE .)
    OR_ASSIGN       reduce using rule 150 (RuneLit -> RUNE .)
    XOR_ASSIGN      reduce using rule 150 (RuneLit -> RUNE .)
    SHL_ASSIGN      reduce using rule 150 (RuneLit -> RUNE .)
    SHR_ASSIGN      reduce using rule 150 (RuneLit -> RUNE .)
    ASSIGN          reduce using rule 150 (RuneLit -> RUNE .)
    SEMICOLON       reduce using rule 150 (RuneLit -> RUNE .)
    RPAREN          reduce using rule 150 (RuneLit -> RUNE .)
    RBRACK          reduce using rule 150 (RuneLit -> RUNE .)
    COLON           reduce using rule 150 (RuneLit -> RUNE .)


state 72

    (119) UnaryOp -> XOR .

    ID              reduce using rule 119 (UnaryOp -> XOR .)
    LPAREN          reduce using rule 119 (UnaryOp -> XOR .)
    ADD             reduce using rule 119 (UnaryOp -> XOR .)
    SUB             reduce using rule 119 (UnaryOp -> XOR .)
    NOT             reduce using rule 119 (UnaryOp -> XOR .)
    XOR             reduce using rule 119 (UnaryOp -> XOR .)
    MUL             reduce using rule 119 (UnaryOp -> XOR .)
    AND             reduce using rule 119 (UnaryOp -> XOR .)
    INT             reduce using rule 119 (UnaryOp -> XOR .)
    FLOAT           reduce using rule 119 (UnaryOp -> XOR .)
    RUNE            reduce using rule 119 (UnaryOp -> XOR .)
    STRING          reduce using rule 119 (UnaryOp -> XOR .)
    TRUE            reduce using rule 119 (UnaryOp -> XOR .)
    FALSE           reduce using rule 119 (UnaryOp -> XOR .)


state 73

    (151) StringLit -> STRING .

    LBRACK          reduce using rule 151 (StringLit -> STRING .)
    LPAREN          reduce using rule 151 (StringLit -> STRING .)
    LOR             reduce using rule 151 (StringLit -> STRING .)
    LAND            reduce using rule 151 (StringLit -> STRING .)
    EQL             reduce using rule 151 (StringLit -> STRING .)
    NEQ             reduce using rule 151 (StringLit -> STRING .)
    LTN             reduce using rule 151 (StringLit -> STRING .)
    LEQ             reduce using rule 151 (StringLit -> STRING .)
    GTN             reduce using rule 151 (StringLit -> STRING .)
    GEQ             reduce using rule 151 (StringLit -> STRING .)
    ADD             reduce using rule 151 (StringLit -> STRING .)
    SUB             reduce using rule 151 (StringLit -> STRING .)
    OR              reduce using rule 151 (StringLit -> STRING .)
    XOR             reduce using rule 151 (StringLit -> STRING .)
    MUL             reduce using rule 151 (StringLit -> STRING .)
    DIV             reduce using rule 151 (StringLit -> STRING .)
    MOD             reduce using rule 151 (StringLit -> STRING .)
    SHL             reduce using rule 151 (StringLit -> STRING .)
    SHR             reduce using rule 151 (StringLit -> STRING .)
    AND             reduce using rule 151 (StringLit -> STRING .)
    AND_NOT         reduce using rule 151 (StringLit -> STRING .)
    COMMA           reduce using rule 151 (StringLit -> STRING .)
    SEMICOLON       reduce using rule 151 (StringLit -> STRING .)
    LBRACE          reduce using rule 151 (StringLit -> STRING .)
    RBRACK          reduce using rule 151 (StringLit -> STRING .)
    COLON           reduce using rule 151 (StringLit -> STRING .)
    INC             reduce using rule 151 (StringLit -> STRING .)
    DEC             reduce using rule 151 (StringLit -> STRING .)
    ADD_ASSIGN      reduce using rule 151 (StringLit -> STRING .)
    SUB_ASSIGN      reduce using rule 151 (StringLit -> STRING .)
    MUL_ASSIGN      reduce using rule 151 (StringLit -> STRING .)
    DIV_ASSIGN      reduce using rule 151 (StringLit -> STRING .)
    MOD_ASSIGN      reduce using rule 151 (StringLit -> STRING .)
    AND_ASSIGN      reduce using rule 151 (StringLit -> STRING .)
    AND_NOT_ASSIGN  reduce using rule 151 (StringLit -> STRING .)
    OR_ASSIGN       reduce using rule 151 (StringLit -> STRING .)
    XOR_ASSIGN      reduce using rule 151 (StringLit -> STRING .)
    SHL_ASSIGN      reduce using rule 151 (StringLit -> STRING .)
    SHR_ASSIGN      reduce using rule 151 (StringLit -> STRING .)
    ASSIGN          reduce using rule 151 (StringLit -> STRING .)
    RPAREN          reduce using rule 151 (StringLit -> STRING .)


state 74

    (55) SliceType -> LBRACK RBRACK . Type
    (56) SliceType -> LBRACK RBRACK . ID
    (47) Type -> . LPAREN Type RPAREN
    (48) Type -> . LPAREN ID RPAREN
    (49) Type -> . TypeLit
    (50) TypeLit -> . ArrayType
    (51) TypeLit -> . PointerType
    (52) TypeLit -> . SliceType
    (53) ArrayType -> . LBRACK Expression RBRACK Type
    (54) ArrayType -> . LBRACK Expression RBRACK ID
    (66) PointerType -> . MUL Type
    (67) PointerType -> . MUL ID
    (55) SliceType -> . LBRACK RBRACK Type
    (56) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 112
    LPAREN          shift and go to state 47
    LBRACK          shift and go to state 44
    MUL             shift and go to state 49

    Type                           shift and go to state 111
    ArrayType                      shift and go to state 45
    PointerType                    shift and go to state 48
    TypeLit                        shift and go to state 43
    SliceType                      shift and go to state 51

state 75

    (90) Expression -> UnaryExpr .

    INC             reduce using rule 90 (Expression -> UnaryExpr .)
    DEC             reduce using rule 90 (Expression -> UnaryExpr .)
    LBRACE          reduce using rule 90 (Expression -> UnaryExpr .)
    LOR             reduce using rule 90 (Expression -> UnaryExpr .)
    LAND            reduce using rule 90 (Expression -> UnaryExpr .)
    EQL             reduce using rule 90 (Expression -> UnaryExpr .)
    NEQ             reduce using rule 90 (Expression -> UnaryExpr .)
    LTN             reduce using rule 90 (Expression -> UnaryExpr .)
    LEQ             reduce using rule 90 (Expression -> UnaryExpr .)
    GTN             reduce using rule 90 (Expression -> UnaryExpr .)
    GEQ             reduce using rule 90 (Expression -> UnaryExpr .)
    ADD             reduce using rule 90 (Expression -> UnaryExpr .)
    SUB             reduce using rule 90 (Expression -> UnaryExpr .)
    OR              reduce using rule 90 (Expression -> UnaryExpr .)
    XOR             reduce using rule 90 (Expression -> UnaryExpr .)
    MUL             reduce using rule 90 (Expression -> UnaryExpr .)
    DIV             reduce using rule 90 (Expression -> UnaryExpr .)
    MOD             reduce using rule 90 (Expression -> UnaryExpr .)
    SHL             reduce using rule 90 (Expression -> UnaryExpr .)
    SHR             reduce using rule 90 (Expression -> UnaryExpr .)
    AND             reduce using rule 90 (Expression -> UnaryExpr .)
    AND_NOT         reduce using rule 90 (Expression -> UnaryExpr .)
    SEMICOLON       reduce using rule 90 (Expression -> UnaryExpr .)
    COMMA           reduce using rule 90 (Expression -> UnaryExpr .)
    ADD_ASSIGN      reduce using rule 90 (Expression -> UnaryExpr .)
    SUB_ASSIGN      reduce using rule 90 (Expression -> UnaryExpr .)
    MUL_ASSIGN      reduce using rule 90 (Expression -> UnaryExpr .)
    DIV_ASSIGN      reduce using rule 90 (Expression -> UnaryExpr .)
    MOD_ASSIGN      reduce using rule 90 (Expression -> UnaryExpr .)
    AND_ASSIGN      reduce using rule 90 (Expression -> UnaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 90 (Expression -> UnaryExpr .)
    OR_ASSIGN       reduce using rule 90 (Expression -> UnaryExpr .)
    XOR_ASSIGN      reduce using rule 90 (Expression -> UnaryExpr .)
    SHL_ASSIGN      reduce using rule 90 (Expression -> UnaryExpr .)
    SHR_ASSIGN      reduce using rule 90 (Expression -> UnaryExpr .)
    ASSIGN          reduce using rule 90 (Expression -> UnaryExpr .)
    RBRACK          reduce using rule 90 (Expression -> UnaryExpr .)
    COLON           reduce using rule 90 (Expression -> UnaryExpr .)
    RPAREN          reduce using rule 90 (Expression -> UnaryExpr .)


state 76

    (141) BasicLit -> FloatLit .

    LBRACK          reduce using rule 141 (BasicLit -> FloatLit .)
    LPAREN          reduce using rule 141 (BasicLit -> FloatLit .)
    RBRACK          reduce using rule 141 (BasicLit -> FloatLit .)
    COLON           reduce using rule 141 (BasicLit -> FloatLit .)
    LOR             reduce using rule 141 (BasicLit -> FloatLit .)
    LAND            reduce using rule 141 (BasicLit -> FloatLit .)
    EQL             reduce using rule 141 (BasicLit -> FloatLit .)
    NEQ             reduce using rule 141 (BasicLit -> FloatLit .)
    LTN             reduce using rule 141 (BasicLit -> FloatLit .)
    LEQ             reduce using rule 141 (BasicLit -> FloatLit .)
    GTN             reduce using rule 141 (BasicLit -> FloatLit .)
    GEQ             reduce using rule 141 (BasicLit -> FloatLit .)
    ADD             reduce using rule 141 (BasicLit -> FloatLit .)
    SUB             reduce using rule 141 (BasicLit -> FloatLit .)
    OR              reduce using rule 141 (BasicLit -> FloatLit .)
    XOR             reduce using rule 141 (BasicLit -> FloatLit .)
    MUL             reduce using rule 141 (BasicLit -> FloatLit .)
    DIV             reduce using rule 141 (BasicLit -> FloatLit .)
    MOD             reduce using rule 141 (BasicLit -> FloatLit .)
    SHL             reduce using rule 141 (BasicLit -> FloatLit .)
    SHR             reduce using rule 141 (BasicLit -> FloatLit .)
    AND             reduce using rule 141 (BasicLit -> FloatLit .)
    AND_NOT         reduce using rule 141 (BasicLit -> FloatLit .)
    COMMA           reduce using rule 141 (BasicLit -> FloatLit .)
    SEMICOLON       reduce using rule 141 (BasicLit -> FloatLit .)
    LBRACE          reduce using rule 141 (BasicLit -> FloatLit .)
    RPAREN          reduce using rule 141 (BasicLit -> FloatLit .)
    INC             reduce using rule 141 (BasicLit -> FloatLit .)
    DEC             reduce using rule 141 (BasicLit -> FloatLit .)
    ADD_ASSIGN      reduce using rule 141 (BasicLit -> FloatLit .)
    SUB_ASSIGN      reduce using rule 141 (BasicLit -> FloatLit .)
    MUL_ASSIGN      reduce using rule 141 (BasicLit -> FloatLit .)
    DIV_ASSIGN      reduce using rule 141 (BasicLit -> FloatLit .)
    MOD_ASSIGN      reduce using rule 141 (BasicLit -> FloatLit .)
    AND_ASSIGN      reduce using rule 141 (BasicLit -> FloatLit .)
    AND_NOT_ASSIGN  reduce using rule 141 (BasicLit -> FloatLit .)
    OR_ASSIGN       reduce using rule 141 (BasicLit -> FloatLit .)
    XOR_ASSIGN      reduce using rule 141 (BasicLit -> FloatLit .)
    SHL_ASSIGN      reduce using rule 141 (BasicLit -> FloatLit .)
    SHR_ASSIGN      reduce using rule 141 (BasicLit -> FloatLit .)
    ASSIGN          reduce using rule 141 (BasicLit -> FloatLit .)


state 77

    (92) UnaryExpr -> PrimaryExpr .
    (126) PrimaryExpr -> PrimaryExpr . Index
    (127) PrimaryExpr -> PrimaryExpr . Slice
    (128) PrimaryExpr -> PrimaryExpr . Arguments
    (129) Index -> . LBRACK Expression RBRACK
    (130) Slice -> . LBRACK Expression COLON Expression RBRACK
    (131) Slice -> . LBRACK COLON Expression RBRACK
    (132) Slice -> . LBRACK Expression COLON RBRACK
    (133) Slice -> . LBRACK COLON RBRACK
    (134) Slice -> . LBRACK Expression COLON Expression COLON Expression RBRACK
    (135) Slice -> . LBRACK COLON Expression COLON Expression RBRACK
    (136) Arguments -> . LPAREN RPAREN
    (137) Arguments -> . LPAREN ExpressionList RPAREN
    (138) Arguments -> . LPAREN ExpressionList COMMA RPAREN

    LOR             reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    LAND            reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    EQL             reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    NEQ             reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    LTN             reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    LEQ             reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    GTN             reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    GEQ             reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    ADD             reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    SUB             reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    XOR             reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    MUL             reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    DIV             reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    MOD             reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    SHL             reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    SHR             reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    AND             reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    AND_NOT         reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    SEMICOLON       reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    LBRACE          reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    RBRACK          reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    COLON           reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    RPAREN          reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    ADD_ASSIGN      reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    SUB_ASSIGN      reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    MUL_ASSIGN      reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    DIV_ASSIGN      reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    MOD_ASSIGN      reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    AND_ASSIGN      reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    OR_ASSIGN       reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    XOR_ASSIGN      reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    SHL_ASSIGN      reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    SHR_ASSIGN      reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    ASSIGN          reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    INC             reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    DEC             reduce using rule 92 (UnaryExpr -> PrimaryExpr .)
    LBRACK          shift and go to state 115
    LPAREN          shift and go to state 117

    Index                          shift and go to state 113
    Slice                          shift and go to state 114
    Arguments                      shift and go to state 116

state 78

    (116) UnaryOp -> ADD .

    ID              reduce using rule 116 (UnaryOp -> ADD .)
    LPAREN          reduce using rule 116 (UnaryOp -> ADD .)
    ADD             reduce using rule 116 (UnaryOp -> ADD .)
    SUB             reduce using rule 116 (UnaryOp -> ADD .)
    NOT             reduce using rule 116 (UnaryOp -> ADD .)
    XOR             reduce using rule 116 (UnaryOp -> ADD .)
    MUL             reduce using rule 116 (UnaryOp -> ADD .)
    AND             reduce using rule 116 (UnaryOp -> ADD .)
    INT             reduce using rule 116 (UnaryOp -> ADD .)
    FLOAT           reduce using rule 116 (UnaryOp -> ADD .)
    RUNE            reduce using rule 116 (UnaryOp -> ADD .)
    STRING          reduce using rule 116 (UnaryOp -> ADD .)
    TRUE            reduce using rule 116 (UnaryOp -> ADD .)
    FALSE           reduce using rule 116 (UnaryOp -> ADD .)


state 79

    (125) PrimaryExpr -> LPAREN . Expression RPAREN
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    ID              shift and go to state 82
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    RuneLit                        shift and go to state 80
    UnaryOp                        shift and go to state 65
    TrueLit                        shift and go to state 90
    BasicLit                       shift and go to state 70
    UnaryExpr                      shift and go to state 75
    FloatLit                       shift and go to state 76
    FalseLit                       shift and go to state 66
    IntLit                         shift and go to state 68
    Literal                        shift and go to state 67
    PrimaryExpr                    shift and go to state 77
    StringLit                      shift and go to state 88
    Expression                     shift and go to state 118

state 80

    (142) BasicLit -> RuneLit .

    LBRACK          reduce using rule 142 (BasicLit -> RuneLit .)
    LPAREN          reduce using rule 142 (BasicLit -> RuneLit .)
    RBRACK          reduce using rule 142 (BasicLit -> RuneLit .)
    COLON           reduce using rule 142 (BasicLit -> RuneLit .)
    LOR             reduce using rule 142 (BasicLit -> RuneLit .)
    LAND            reduce using rule 142 (BasicLit -> RuneLit .)
    EQL             reduce using rule 142 (BasicLit -> RuneLit .)
    NEQ             reduce using rule 142 (BasicLit -> RuneLit .)
    LTN             reduce using rule 142 (BasicLit -> RuneLit .)
    LEQ             reduce using rule 142 (BasicLit -> RuneLit .)
    GTN             reduce using rule 142 (BasicLit -> RuneLit .)
    GEQ             reduce using rule 142 (BasicLit -> RuneLit .)
    ADD             reduce using rule 142 (BasicLit -> RuneLit .)
    SUB             reduce using rule 142 (BasicLit -> RuneLit .)
    OR              reduce using rule 142 (BasicLit -> RuneLit .)
    XOR             reduce using rule 142 (BasicLit -> RuneLit .)
    MUL             reduce using rule 142 (BasicLit -> RuneLit .)
    DIV             reduce using rule 142 (BasicLit -> RuneLit .)
    MOD             reduce using rule 142 (BasicLit -> RuneLit .)
    SHL             reduce using rule 142 (BasicLit -> RuneLit .)
    SHR             reduce using rule 142 (BasicLit -> RuneLit .)
    AND             reduce using rule 142 (BasicLit -> RuneLit .)
    AND_NOT         reduce using rule 142 (BasicLit -> RuneLit .)
    COMMA           reduce using rule 142 (BasicLit -> RuneLit .)
    SEMICOLON       reduce using rule 142 (BasicLit -> RuneLit .)
    LBRACE          reduce using rule 142 (BasicLit -> RuneLit .)
    RPAREN          reduce using rule 142 (BasicLit -> RuneLit .)
    INC             reduce using rule 142 (BasicLit -> RuneLit .)
    DEC             reduce using rule 142 (BasicLit -> RuneLit .)
    ADD_ASSIGN      reduce using rule 142 (BasicLit -> RuneLit .)
    SUB_ASSIGN      reduce using rule 142 (BasicLit -> RuneLit .)
    MUL_ASSIGN      reduce using rule 142 (BasicLit -> RuneLit .)
    DIV_ASSIGN      reduce using rule 142 (BasicLit -> RuneLit .)
    MOD_ASSIGN      reduce using rule 142 (BasicLit -> RuneLit .)
    AND_ASSIGN      reduce using rule 142 (BasicLit -> RuneLit .)
    AND_NOT_ASSIGN  reduce using rule 142 (BasicLit -> RuneLit .)
    OR_ASSIGN       reduce using rule 142 (BasicLit -> RuneLit .)
    XOR_ASSIGN      reduce using rule 142 (BasicLit -> RuneLit .)
    SHL_ASSIGN      reduce using rule 142 (BasicLit -> RuneLit .)
    SHR_ASSIGN      reduce using rule 142 (BasicLit -> RuneLit .)
    ASSIGN          reduce using rule 142 (BasicLit -> RuneLit .)


state 81

    (53) ArrayType -> LBRACK Expression . RBRACK Type
    (54) ArrayType -> LBRACK Expression . RBRACK ID
    (91) Expression -> Expression . BinaryOp UnaryExpr
    (94) BinaryOp -> . LOR
    (95) BinaryOp -> . LAND
    (96) BinaryOp -> . RelOp
    (97) BinaryOp -> . AddOp
    (98) BinaryOp -> . MulOp
    (99) RelOp -> . EQL
    (100) RelOp -> . NEQ
    (101) RelOp -> . LTN
    (102) RelOp -> . LEQ
    (103) RelOp -> . GTN
    (104) RelOp -> . GEQ
    (105) AddOp -> . ADD
    (106) AddOp -> . SUB
    (107) AddOp -> . OR
    (108) AddOp -> . XOR
    (109) MulOp -> . MUL
    (110) MulOp -> . DIV
    (111) MulOp -> . MOD
    (112) MulOp -> . SHL
    (113) MulOp -> . SHR
    (114) MulOp -> . AND
    (115) MulOp -> . AND_NOT

    RBRACK          shift and go to state 133
    LOR             shift and go to state 120
    LAND            shift and go to state 125
    EQL             shift and go to state 136
    NEQ             shift and go to state 123
    LTN             shift and go to state 137
    LEQ             shift and go to state 140
    GTN             shift and go to state 134
    GEQ             shift and go to state 124
    ADD             shift and go to state 135
    SUB             shift and go to state 119
    OR              shift and go to state 141
    XOR             shift and go to state 131
    MUL             shift and go to state 121
    DIV             shift and go to state 122
    MOD             shift and go to state 142
    SHL             shift and go to state 126
    SHR             shift and go to state 130
    AND             shift and go to state 138
    AND_NOT         shift and go to state 127

    AddOp                          shift and go to state 129
    RelOp                          shift and go to state 139
    BinaryOp                       shift and go to state 128
    MulOp                          shift and go to state 132

state 82

    (123) PrimaryExpr -> ID .
    (124) PrimaryExpr -> ID . DOT ID

    LBRACK          reduce using rule 123 (PrimaryExpr -> ID .)
    LPAREN          reduce using rule 123 (PrimaryExpr -> ID .)
    LOR             reduce using rule 123 (PrimaryExpr -> ID .)
    LAND            reduce using rule 123 (PrimaryExpr -> ID .)
    EQL             reduce using rule 123 (PrimaryExpr -> ID .)
    NEQ             reduce using rule 123 (PrimaryExpr -> ID .)
    LTN             reduce using rule 123 (PrimaryExpr -> ID .)
    LEQ             reduce using rule 123 (PrimaryExpr -> ID .)
    GTN             reduce using rule 123 (PrimaryExpr -> ID .)
    GEQ             reduce using rule 123 (PrimaryExpr -> ID .)
    ADD             reduce using rule 123 (PrimaryExpr -> ID .)
    SUB             reduce using rule 123 (PrimaryExpr -> ID .)
    OR              reduce using rule 123 (PrimaryExpr -> ID .)
    XOR             reduce using rule 123 (PrimaryExpr -> ID .)
    MUL             reduce using rule 123 (PrimaryExpr -> ID .)
    DIV             reduce using rule 123 (PrimaryExpr -> ID .)
    MOD             reduce using rule 123 (PrimaryExpr -> ID .)
    SHL             reduce using rule 123 (PrimaryExpr -> ID .)
    SHR             reduce using rule 123 (PrimaryExpr -> ID .)
    AND             reduce using rule 123 (PrimaryExpr -> ID .)
    AND_NOT         reduce using rule 123 (PrimaryExpr -> ID .)
    COMMA           reduce using rule 123 (PrimaryExpr -> ID .)
    SEMICOLON       reduce using rule 123 (PrimaryExpr -> ID .)
    LBRACE          reduce using rule 123 (PrimaryExpr -> ID .)
    RPAREN          reduce using rule 123 (PrimaryExpr -> ID .)
    RBRACK          reduce using rule 123 (PrimaryExpr -> ID .)
    COLON           reduce using rule 123 (PrimaryExpr -> ID .)
    ADD_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    SUB_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    MUL_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    DIV_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    MOD_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    AND_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    AND_NOT_ASSIGN  reduce using rule 123 (PrimaryExpr -> ID .)
    OR_ASSIGN       reduce using rule 123 (PrimaryExpr -> ID .)
    XOR_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    SHL_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    SHR_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    ASSIGN          reduce using rule 123 (PrimaryExpr -> ID .)
    INC             reduce using rule 123 (PrimaryExpr -> ID .)
    DEC             reduce using rule 123 (PrimaryExpr -> ID .)
    DOT             shift and go to state 143


state 83

    (146) TrueLit -> TRUE .

    LBRACK          reduce using rule 146 (TrueLit -> TRUE .)
    LPAREN          reduce using rule 146 (TrueLit -> TRUE .)
    LOR             reduce using rule 146 (TrueLit -> TRUE .)
    LAND            reduce using rule 146 (TrueLit -> TRUE .)
    EQL             reduce using rule 146 (TrueLit -> TRUE .)
    NEQ             reduce using rule 146 (TrueLit -> TRUE .)
    LTN             reduce using rule 146 (TrueLit -> TRUE .)
    LEQ             reduce using rule 146 (TrueLit -> TRUE .)
    GTN             reduce using rule 146 (TrueLit -> TRUE .)
    GEQ             reduce using rule 146 (TrueLit -> TRUE .)
    ADD             reduce using rule 146 (TrueLit -> TRUE .)
    SUB             reduce using rule 146 (TrueLit -> TRUE .)
    OR              reduce using rule 146 (TrueLit -> TRUE .)
    XOR             reduce using rule 146 (TrueLit -> TRUE .)
    MUL             reduce using rule 146 (TrueLit -> TRUE .)
    DIV             reduce using rule 146 (TrueLit -> TRUE .)
    MOD             reduce using rule 146 (TrueLit -> TRUE .)
    SHL             reduce using rule 146 (TrueLit -> TRUE .)
    SHR             reduce using rule 146 (TrueLit -> TRUE .)
    AND             reduce using rule 146 (TrueLit -> TRUE .)
    AND_NOT         reduce using rule 146 (TrueLit -> TRUE .)
    RPAREN          reduce using rule 146 (TrueLit -> TRUE .)
    COMMA           reduce using rule 146 (TrueLit -> TRUE .)
    LBRACE          reduce using rule 146 (TrueLit -> TRUE .)
    INC             reduce using rule 146 (TrueLit -> TRUE .)
    DEC             reduce using rule 146 (TrueLit -> TRUE .)
    ADD_ASSIGN      reduce using rule 146 (TrueLit -> TRUE .)
    SUB_ASSIGN      reduce using rule 146 (TrueLit -> TRUE .)
    MUL_ASSIGN      reduce using rule 146 (TrueLit -> TRUE .)
    DIV_ASSIGN      reduce using rule 146 (TrueLit -> TRUE .)
    MOD_ASSIGN      reduce using rule 146 (TrueLit -> TRUE .)
    AND_ASSIGN      reduce using rule 146 (TrueLit -> TRUE .)
    AND_NOT_ASSIGN  reduce using rule 146 (TrueLit -> TRUE .)
    OR_ASSIGN       reduce using rule 146 (TrueLit -> TRUE .)
    XOR_ASSIGN      reduce using rule 146 (TrueLit -> TRUE .)
    SHL_ASSIGN      reduce using rule 146 (TrueLit -> TRUE .)
    SHR_ASSIGN      reduce using rule 146 (TrueLit -> TRUE .)
    ASSIGN          reduce using rule 146 (TrueLit -> TRUE .)
    SEMICOLON       reduce using rule 146 (TrueLit -> TRUE .)
    RBRACK          reduce using rule 146 (TrueLit -> TRUE .)
    COLON           reduce using rule 146 (TrueLit -> TRUE .)


state 84

    (121) UnaryOp -> AND .

    ID              reduce using rule 121 (UnaryOp -> AND .)
    LPAREN          reduce using rule 121 (UnaryOp -> AND .)
    ADD             reduce using rule 121 (UnaryOp -> AND .)
    SUB             reduce using rule 121 (UnaryOp -> AND .)
    NOT             reduce using rule 121 (UnaryOp -> AND .)
    XOR             reduce using rule 121 (UnaryOp -> AND .)
    MUL             reduce using rule 121 (UnaryOp -> AND .)
    AND             reduce using rule 121 (UnaryOp -> AND .)
    INT             reduce using rule 121 (UnaryOp -> AND .)
    FLOAT           reduce using rule 121 (UnaryOp -> AND .)
    RUNE            reduce using rule 121 (UnaryOp -> AND .)
    STRING          reduce using rule 121 (UnaryOp -> AND .)
    TRUE            reduce using rule 121 (UnaryOp -> AND .)
    FALSE           reduce using rule 121 (UnaryOp -> AND .)


state 85

    (147) FalseLit -> FALSE .

    LBRACK          reduce using rule 147 (FalseLit -> FALSE .)
    LPAREN          reduce using rule 147 (FalseLit -> FALSE .)
    RBRACK          reduce using rule 147 (FalseLit -> FALSE .)
    LOR             reduce using rule 147 (FalseLit -> FALSE .)
    LAND            reduce using rule 147 (FalseLit -> FALSE .)
    EQL             reduce using rule 147 (FalseLit -> FALSE .)
    NEQ             reduce using rule 147 (FalseLit -> FALSE .)
    LTN             reduce using rule 147 (FalseLit -> FALSE .)
    LEQ             reduce using rule 147 (FalseLit -> FALSE .)
    GTN             reduce using rule 147 (FalseLit -> FALSE .)
    GEQ             reduce using rule 147 (FalseLit -> FALSE .)
    ADD             reduce using rule 147 (FalseLit -> FALSE .)
    SUB             reduce using rule 147 (FalseLit -> FALSE .)
    OR              reduce using rule 147 (FalseLit -> FALSE .)
    XOR             reduce using rule 147 (FalseLit -> FALSE .)
    MUL             reduce using rule 147 (FalseLit -> FALSE .)
    DIV             reduce using rule 147 (FalseLit -> FALSE .)
    MOD             reduce using rule 147 (FalseLit -> FALSE .)
    SHL             reduce using rule 147 (FalseLit -> FALSE .)
    SHR             reduce using rule 147 (FalseLit -> FALSE .)
    AND             reduce using rule 147 (FalseLit -> FALSE .)
    AND_NOT         reduce using rule 147 (FalseLit -> FALSE .)
    COLON           reduce using rule 147 (FalseLit -> FALSE .)
    COMMA           reduce using rule 147 (FalseLit -> FALSE .)
    SEMICOLON       reduce using rule 147 (FalseLit -> FALSE .)
    ADD_ASSIGN      reduce using rule 147 (FalseLit -> FALSE .)
    SUB_ASSIGN      reduce using rule 147 (FalseLit -> FALSE .)
    MUL_ASSIGN      reduce using rule 147 (FalseLit -> FALSE .)
    DIV_ASSIGN      reduce using rule 147 (FalseLit -> FALSE .)
    MOD_ASSIGN      reduce using rule 147 (FalseLit -> FALSE .)
    AND_ASSIGN      reduce using rule 147 (FalseLit -> FALSE .)
    AND_NOT_ASSIGN  reduce using rule 147 (FalseLit -> FALSE .)
    OR_ASSIGN       reduce using rule 147 (FalseLit -> FALSE .)
    XOR_ASSIGN      reduce using rule 147 (FalseLit -> FALSE .)
    SHL_ASSIGN      reduce using rule 147 (FalseLit -> FALSE .)
    SHR_ASSIGN      reduce using rule 147 (FalseLit -> FALSE .)
    ASSIGN          reduce using rule 147 (FalseLit -> FALSE .)
    LBRACE          reduce using rule 147 (FalseLit -> FALSE .)
    INC             reduce using rule 147 (FalseLit -> FALSE .)
    DEC             reduce using rule 147 (FalseLit -> FALSE .)
    RPAREN          reduce using rule 147 (FalseLit -> FALSE .)


state 86

    (148) IntLit -> INT .

    LBRACK          reduce using rule 148 (IntLit -> INT .)
    LPAREN          reduce using rule 148 (IntLit -> INT .)
    LOR             reduce using rule 148 (IntLit -> INT .)
    LAND            reduce using rule 148 (IntLit -> INT .)
    EQL             reduce using rule 148 (IntLit -> INT .)
    NEQ             reduce using rule 148 (IntLit -> INT .)
    LTN             reduce using rule 148 (IntLit -> INT .)
    LEQ             reduce using rule 148 (IntLit -> INT .)
    GTN             reduce using rule 148 (IntLit -> INT .)
    GEQ             reduce using rule 148 (IntLit -> INT .)
    ADD             reduce using rule 148 (IntLit -> INT .)
    SUB             reduce using rule 148 (IntLit -> INT .)
    OR              reduce using rule 148 (IntLit -> INT .)
    XOR             reduce using rule 148 (IntLit -> INT .)
    MUL             reduce using rule 148 (IntLit -> INT .)
    DIV             reduce using rule 148 (IntLit -> INT .)
    MOD             reduce using rule 148 (IntLit -> INT .)
    SHL             reduce using rule 148 (IntLit -> INT .)
    SHR             reduce using rule 148 (IntLit -> INT .)
    AND             reduce using rule 148 (IntLit -> INT .)
    AND_NOT         reduce using rule 148 (IntLit -> INT .)
    COMMA           reduce using rule 148 (IntLit -> INT .)
    SEMICOLON       reduce using rule 148 (IntLit -> INT .)
    RBRACK          reduce using rule 148 (IntLit -> INT .)
    COLON           reduce using rule 148 (IntLit -> INT .)
    INC             reduce using rule 148 (IntLit -> INT .)
    DEC             reduce using rule 148 (IntLit -> INT .)
    LBRACE          reduce using rule 148 (IntLit -> INT .)
    ADD_ASSIGN      reduce using rule 148 (IntLit -> INT .)
    SUB_ASSIGN      reduce using rule 148 (IntLit -> INT .)
    MUL_ASSIGN      reduce using rule 148 (IntLit -> INT .)
    DIV_ASSIGN      reduce using rule 148 (IntLit -> INT .)
    MOD_ASSIGN      reduce using rule 148 (IntLit -> INT .)
    AND_ASSIGN      reduce using rule 148 (IntLit -> INT .)
    AND_NOT_ASSIGN  reduce using rule 148 (IntLit -> INT .)
    OR_ASSIGN       reduce using rule 148 (IntLit -> INT .)
    XOR_ASSIGN      reduce using rule 148 (IntLit -> INT .)
    SHL_ASSIGN      reduce using rule 148 (IntLit -> INT .)
    SHR_ASSIGN      reduce using rule 148 (IntLit -> INT .)
    ASSIGN          reduce using rule 148 (IntLit -> INT .)
    RPAREN          reduce using rule 148 (IntLit -> INT .)


state 87

    (149) FloatLit -> FLOAT .

    LBRACK          reduce using rule 149 (FloatLit -> FLOAT .)
    LPAREN          reduce using rule 149 (FloatLit -> FLOAT .)
    LOR             reduce using rule 149 (FloatLit -> FLOAT .)
    LAND            reduce using rule 149 (FloatLit -> FLOAT .)
    EQL             reduce using rule 149 (FloatLit -> FLOAT .)
    NEQ             reduce using rule 149 (FloatLit -> FLOAT .)
    LTN             reduce using rule 149 (FloatLit -> FLOAT .)
    LEQ             reduce using rule 149 (FloatLit -> FLOAT .)
    GTN             reduce using rule 149 (FloatLit -> FLOAT .)
    GEQ             reduce using rule 149 (FloatLit -> FLOAT .)
    ADD             reduce using rule 149 (FloatLit -> FLOAT .)
    SUB             reduce using rule 149 (FloatLit -> FLOAT .)
    OR              reduce using rule 149 (FloatLit -> FLOAT .)
    XOR             reduce using rule 149 (FloatLit -> FLOAT .)
    MUL             reduce using rule 149 (FloatLit -> FLOAT .)
    DIV             reduce using rule 149 (FloatLit -> FLOAT .)
    MOD             reduce using rule 149 (FloatLit -> FLOAT .)
    SHL             reduce using rule 149 (FloatLit -> FLOAT .)
    SHR             reduce using rule 149 (FloatLit -> FLOAT .)
    AND             reduce using rule 149 (FloatLit -> FLOAT .)
    AND_NOT         reduce using rule 149 (FloatLit -> FLOAT .)
    COMMA           reduce using rule 149 (FloatLit -> FLOAT .)
    SEMICOLON       reduce using rule 149 (FloatLit -> FLOAT .)
    INC             reduce using rule 149 (FloatLit -> FLOAT .)
    DEC             reduce using rule 149 (FloatLit -> FLOAT .)
    ADD_ASSIGN      reduce using rule 149 (FloatLit -> FLOAT .)
    SUB_ASSIGN      reduce using rule 149 (FloatLit -> FLOAT .)
    MUL_ASSIGN      reduce using rule 149 (FloatLit -> FLOAT .)
    DIV_ASSIGN      reduce using rule 149 (FloatLit -> FLOAT .)
    MOD_ASSIGN      reduce using rule 149 (FloatLit -> FLOAT .)
    AND_ASSIGN      reduce using rule 149 (FloatLit -> FLOAT .)
    AND_NOT_ASSIGN  reduce using rule 149 (FloatLit -> FLOAT .)
    OR_ASSIGN       reduce using rule 149 (FloatLit -> FLOAT .)
    XOR_ASSIGN      reduce using rule 149 (FloatLit -> FLOAT .)
    SHL_ASSIGN      reduce using rule 149 (FloatLit -> FLOAT .)
    SHR_ASSIGN      reduce using rule 149 (FloatLit -> FLOAT .)
    ASSIGN          reduce using rule 149 (FloatLit -> FLOAT .)
    LBRACE          reduce using rule 149 (FloatLit -> FLOAT .)
    RPAREN          reduce using rule 149 (FloatLit -> FLOAT .)
    RBRACK          reduce using rule 149 (FloatLit -> FLOAT .)
    COLON           reduce using rule 149 (FloatLit -> FLOAT .)


state 88

    (143) BasicLit -> StringLit .

    LBRACK          reduce using rule 143 (BasicLit -> StringLit .)
    LPAREN          reduce using rule 143 (BasicLit -> StringLit .)
    RBRACK          reduce using rule 143 (BasicLit -> StringLit .)
    COLON           reduce using rule 143 (BasicLit -> StringLit .)
    LOR             reduce using rule 143 (BasicLit -> StringLit .)
    LAND            reduce using rule 143 (BasicLit -> StringLit .)
    EQL             reduce using rule 143 (BasicLit -> StringLit .)
    NEQ             reduce using rule 143 (BasicLit -> StringLit .)
    LTN             reduce using rule 143 (BasicLit -> StringLit .)
    LEQ             reduce using rule 143 (BasicLit -> StringLit .)
    GTN             reduce using rule 143 (BasicLit -> StringLit .)
    GEQ             reduce using rule 143 (BasicLit -> StringLit .)
    ADD             reduce using rule 143 (BasicLit -> StringLit .)
    SUB             reduce using rule 143 (BasicLit -> StringLit .)
    OR              reduce using rule 143 (BasicLit -> StringLit .)
    XOR             reduce using rule 143 (BasicLit -> StringLit .)
    MUL             reduce using rule 143 (BasicLit -> StringLit .)
    DIV             reduce using rule 143 (BasicLit -> StringLit .)
    MOD             reduce using rule 143 (BasicLit -> StringLit .)
    SHL             reduce using rule 143 (BasicLit -> StringLit .)
    SHR             reduce using rule 143 (BasicLit -> StringLit .)
    AND             reduce using rule 143 (BasicLit -> StringLit .)
    AND_NOT         reduce using rule 143 (BasicLit -> StringLit .)
    COMMA           reduce using rule 143 (BasicLit -> StringLit .)
    SEMICOLON       reduce using rule 143 (BasicLit -> StringLit .)
    LBRACE          reduce using rule 143 (BasicLit -> StringLit .)
    RPAREN          reduce using rule 143 (BasicLit -> StringLit .)
    INC             reduce using rule 143 (BasicLit -> StringLit .)
    DEC             reduce using rule 143 (BasicLit -> StringLit .)
    ADD_ASSIGN      reduce using rule 143 (BasicLit -> StringLit .)
    SUB_ASSIGN      reduce using rule 143 (BasicLit -> StringLit .)
    MUL_ASSIGN      reduce using rule 143 (BasicLit -> StringLit .)
    DIV_ASSIGN      reduce using rule 143 (BasicLit -> StringLit .)
    MOD_ASSIGN      reduce using rule 143 (BasicLit -> StringLit .)
    AND_ASSIGN      reduce using rule 143 (BasicLit -> StringLit .)
    AND_NOT_ASSIGN  reduce using rule 143 (BasicLit -> StringLit .)
    OR_ASSIGN       reduce using rule 143 (BasicLit -> StringLit .)
    XOR_ASSIGN      reduce using rule 143 (BasicLit -> StringLit .)
    SHL_ASSIGN      reduce using rule 143 (BasicLit -> StringLit .)
    SHR_ASSIGN      reduce using rule 143 (BasicLit -> StringLit .)
    ASSIGN          reduce using rule 143 (BasicLit -> StringLit .)


state 89

    (118) UnaryOp -> NOT .

    ID              reduce using rule 118 (UnaryOp -> NOT .)
    LPAREN          reduce using rule 118 (UnaryOp -> NOT .)
    ADD             reduce using rule 118 (UnaryOp -> NOT .)
    SUB             reduce using rule 118 (UnaryOp -> NOT .)
    NOT             reduce using rule 118 (UnaryOp -> NOT .)
    XOR             reduce using rule 118 (UnaryOp -> NOT .)
    MUL             reduce using rule 118 (UnaryOp -> NOT .)
    AND             reduce using rule 118 (UnaryOp -> NOT .)
    INT             reduce using rule 118 (UnaryOp -> NOT .)
    FLOAT           reduce using rule 118 (UnaryOp -> NOT .)
    RUNE            reduce using rule 118 (UnaryOp -> NOT .)
    STRING          reduce using rule 118 (UnaryOp -> NOT .)
    TRUE            reduce using rule 118 (UnaryOp -> NOT .)
    FALSE           reduce using rule 118 (UnaryOp -> NOT .)


state 90

    (144) BasicLit -> TrueLit .

    LBRACK          reduce using rule 144 (BasicLit -> TrueLit .)
    LPAREN          reduce using rule 144 (BasicLit -> TrueLit .)
    RBRACK          reduce using rule 144 (BasicLit -> TrueLit .)
    COLON           reduce using rule 144 (BasicLit -> TrueLit .)
    LOR             reduce using rule 144 (BasicLit -> TrueLit .)
    LAND            reduce using rule 144 (BasicLit -> TrueLit .)
    EQL             reduce using rule 144 (BasicLit -> TrueLit .)
    NEQ             reduce using rule 144 (BasicLit -> TrueLit .)
    LTN             reduce using rule 144 (BasicLit -> TrueLit .)
    LEQ             reduce using rule 144 (BasicLit -> TrueLit .)
    GTN             reduce using rule 144 (BasicLit -> TrueLit .)
    GEQ             reduce using rule 144 (BasicLit -> TrueLit .)
    ADD             reduce using rule 144 (BasicLit -> TrueLit .)
    SUB             reduce using rule 144 (BasicLit -> TrueLit .)
    OR              reduce using rule 144 (BasicLit -> TrueLit .)
    XOR             reduce using rule 144 (BasicLit -> TrueLit .)
    MUL             reduce using rule 144 (BasicLit -> TrueLit .)
    DIV             reduce using rule 144 (BasicLit -> TrueLit .)
    MOD             reduce using rule 144 (BasicLit -> TrueLit .)
    SHL             reduce using rule 144 (BasicLit -> TrueLit .)
    SHR             reduce using rule 144 (BasicLit -> TrueLit .)
    AND             reduce using rule 144 (BasicLit -> TrueLit .)
    AND_NOT         reduce using rule 144 (BasicLit -> TrueLit .)
    COMMA           reduce using rule 144 (BasicLit -> TrueLit .)
    SEMICOLON       reduce using rule 144 (BasicLit -> TrueLit .)
    LBRACE          reduce using rule 144 (BasicLit -> TrueLit .)
    RPAREN          reduce using rule 144 (BasicLit -> TrueLit .)
    INC             reduce using rule 144 (BasicLit -> TrueLit .)
    DEC             reduce using rule 144 (BasicLit -> TrueLit .)
    ADD_ASSIGN      reduce using rule 144 (BasicLit -> TrueLit .)
    SUB_ASSIGN      reduce using rule 144 (BasicLit -> TrueLit .)
    MUL_ASSIGN      reduce using rule 144 (BasicLit -> TrueLit .)
    DIV_ASSIGN      reduce using rule 144 (BasicLit -> TrueLit .)
    MOD_ASSIGN      reduce using rule 144 (BasicLit -> TrueLit .)
    AND_ASSIGN      reduce using rule 144 (BasicLit -> TrueLit .)
    AND_NOT_ASSIGN  reduce using rule 144 (BasicLit -> TrueLit .)
    OR_ASSIGN       reduce using rule 144 (BasicLit -> TrueLit .)
    XOR_ASSIGN      reduce using rule 144 (BasicLit -> TrueLit .)
    SHL_ASSIGN      reduce using rule 144 (BasicLit -> TrueLit .)
    SHR_ASSIGN      reduce using rule 144 (BasicLit -> TrueLit .)
    ASSIGN          reduce using rule 144 (BasicLit -> TrueLit .)


state 91

    (28) ConstSpec -> IdentifierList ID ASSIGN . ExpressionList
    (32) ExpressionList -> . Expression
    (33) ExpressionList -> . ExpressionList COMMA Expression
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    ID              shift and go to state 82
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    RuneLit                        shift and go to state 80
    UnaryOp                        shift and go to state 65
    TrueLit                        shift and go to state 90
    BasicLit                       shift and go to state 70
    UnaryExpr                      shift and go to state 75
    FloatLit                       shift and go to state 76
    FalseLit                       shift and go to state 66
    IntLit                         shift and go to state 68
    Literal                        shift and go to state 67
    ExpressionList                 shift and go to state 144
    PrimaryExpr                    shift and go to state 77
    StringLit                      shift and go to state 88
    Expression                     shift and go to state 104

state 92

    (47) Type -> LPAREN Type . RPAREN

    RPAREN          shift and go to state 145


state 93

    (48) Type -> LPAREN ID . RPAREN

    RPAREN          shift and go to state 146


state 94

    (66) PointerType -> MUL Type .

    RPAREN          reduce using rule 66 (PointerType -> MUL Type .)
    COMMA           reduce using rule 66 (PointerType -> MUL Type .)
    SEMICOLON       reduce using rule 66 (PointerType -> MUL Type .)
    ASSIGN          reduce using rule 66 (PointerType -> MUL Type .)


state 95

    (67) PointerType -> MUL ID .

    RPAREN          reduce using rule 67 (PointerType -> MUL ID .)
    COMMA           reduce using rule 67 (PointerType -> MUL ID .)
    SEMICOLON       reduce using rule 67 (PointerType -> MUL ID .)
    ASSIGN          reduce using rule 67 (PointerType -> MUL ID .)


state 96

    (29) ConstSpec -> IdentifierList Type ASSIGN . ExpressionList
    (32) ExpressionList -> . Expression
    (33) ExpressionList -> . ExpressionList COMMA Expression
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    ID              shift and go to state 82
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    BasicLit                       shift and go to state 70
    RuneLit                        shift and go to state 80
    UnaryOp                        shift and go to state 65
    TrueLit                        shift and go to state 90
    UnaryExpr                      shift and go to state 75
    FloatLit                       shift and go to state 76
    FalseLit                       shift and go to state 66
    IntLit                         shift and go to state 68
    Literal                        shift and go to state 67
    ExpressionList                 shift and go to state 147
    PrimaryExpr                    shift and go to state 77
    StringLit                      shift and go to state 88
    Expression                     shift and go to state 104

state 97

    (31) IdentifierList -> ID COMMA IdentifierList .

    DEFINE          reduce using rule 31 (IdentifierList -> ID COMMA IdentifierList .)
    ID              reduce using rule 31 (IdentifierList -> ID COMMA IdentifierList .)
    LPAREN          reduce using rule 31 (IdentifierList -> ID COMMA IdentifierList .)
    LBRACK          reduce using rule 31 (IdentifierList -> ID COMMA IdentifierList .)
    MUL             reduce using rule 31 (IdentifierList -> ID COMMA IdentifierList .)
    ASSIGN          reduce using rule 31 (IdentifierList -> ID COMMA IdentifierList .)
    STRUCT          reduce using rule 31 (IdentifierList -> ID COMMA IdentifierList .)


state 98

    (75) Parameters -> LPAREN . RPAREN
    (76) Parameters -> LPAREN . ParameterList RPAREN
    (77) Parameters -> LPAREN . ParameterList COMMA RPAREN
    (78) ParameterList -> . ParameterDecl
    (79) ParameterList -> . ParameterList COMMA ParameterDecl
    (80) ParameterDecl -> . ParaIdList Type
    (81) ParameterDecl -> . ID Type
    (82) ParameterDecl -> . ParaIdList ID
    (83) ParameterDecl -> . ID ID
    (84) ParaIdList -> . ID COMMA ID
    (85) ParaIdList -> . ParaIdList COMMA ID

    RPAREN          shift and go to state 148
    ID              shift and go to state 152

    ParameterList                  shift and go to state 149
    ParaIdList                     shift and go to state 150
    ParameterDecl                  shift and go to state 151

state 99

    (68) Signature -> Parameters . Result
    (69) Result -> . LPAREN TypeList RPAREN
    (70) Result -> .

    LPAREN          shift and go to state 153
    LBRACE          reduce using rule 70 (Result -> .)

    Result                         shift and go to state 154

state 100

    (45) FunctionDecl -> FUNC FuncName OpenS Signature . Block CloseS
    (86) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 155

    Block                          shift and go to state 156

state 101

    (37) VarDecl -> VAR LPAREN VarSpec_curl RPAREN .

    SEMICOLON       reduce using rule 37 (VarDecl -> VAR LPAREN VarSpec_curl RPAREN .)


state 102

    (38) VarSpec_curl -> VarSpec_curl VarSpec . SEMICOLON

    SEMICOLON       shift and go to state 157


state 103

    (42) VarSpec -> IdentifierList ASSIGN ExpressionList .
    (33) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 42 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    COMMA           shift and go to state 158


state 104

    (32) ExpressionList -> Expression .
    (91) Expression -> Expression . BinaryOp UnaryExpr
    (94) BinaryOp -> . LOR
    (95) BinaryOp -> . LAND
    (96) BinaryOp -> . RelOp
    (97) BinaryOp -> . AddOp
    (98) BinaryOp -> . MulOp
    (99) RelOp -> . EQL
    (100) RelOp -> . NEQ
    (101) RelOp -> . LTN
    (102) RelOp -> . LEQ
    (103) RelOp -> . GTN
    (104) RelOp -> . GEQ
    (105) AddOp -> . ADD
    (106) AddOp -> . SUB
    (107) AddOp -> . OR
    (108) AddOp -> . XOR
    (109) MulOp -> . MUL
    (110) MulOp -> . DIV
    (111) MulOp -> . MOD
    (112) MulOp -> . SHL
    (113) MulOp -> . SHR
    (114) MulOp -> . AND
    (115) MulOp -> . AND_NOT

    RPAREN          reduce using rule 32 (ExpressionList -> Expression .)
    COMMA           reduce using rule 32 (ExpressionList -> Expression .)
    SEMICOLON       reduce using rule 32 (ExpressionList -> Expression .)
    LBRACE          reduce using rule 32 (ExpressionList -> Expression .)
    LOR             shift and go to state 120
    LAND            shift and go to state 125
    EQL             shift and go to state 136
    NEQ             shift and go to state 123
    LTN             shift and go to state 137
    LEQ             shift and go to state 140
    GTN             shift and go to state 134
    GEQ             shift and go to state 124
    ADD             shift and go to state 135
    SUB             shift and go to state 119
    OR              shift and go to state 141
    XOR             shift and go to state 131
    MUL             shift and go to state 121
    DIV             shift and go to state 122
    MOD             shift and go to state 142
    SHL             shift and go to state 126
    SHR             shift and go to state 130
    AND             shift and go to state 138
    AND_NOT         shift and go to state 127

    AddOp                          shift and go to state 129
    BinaryOp                       shift and go to state 128
    MulOp                          shift and go to state 132
    RelOp                          shift and go to state 139

state 105

    (40) VarSpec -> IdentifierList Type ASSIGN . ExpressionList
    (32) ExpressionList -> . Expression
    (33) ExpressionList -> . ExpressionList COMMA Expression
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    ID              shift and go to state 82
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    BasicLit                       shift and go to state 70
    RuneLit                        shift and go to state 80
    UnaryOp                        shift and go to state 65
    TrueLit                        shift and go to state 90
    UnaryExpr                      shift and go to state 75
    FloatLit                       shift and go to state 76
    FalseLit                       shift and go to state 66
    IntLit                         shift and go to state 68
    Literal                        shift and go to state 67
    ExpressionList                 shift and go to state 159
    PrimaryExpr                    shift and go to state 77
    StringLit                      shift and go to state 88
    Expression                     shift and go to state 104

state 106

    (41) VarSpec -> IdentifierList ID ASSIGN . ExpressionList
    (32) ExpressionList -> . Expression
    (33) ExpressionList -> . ExpressionList COMMA Expression
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    ID              shift and go to state 82
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    RuneLit                        shift and go to state 80
    UnaryOp                        shift and go to state 65
    TrueLit                        shift and go to state 90
    BasicLit                       shift and go to state 70
    UnaryExpr                      shift and go to state 75
    FloatLit                       shift and go to state 76
    FalseLit                       shift and go to state 66
    IntLit                         shift and go to state 68
    Literal                        shift and go to state 67
    ExpressionList                 shift and go to state 160
    PrimaryExpr                    shift and go to state 77
    StringLit                      shift and go to state 88
    Expression                     shift and go to state 104

state 107

    (57) StructType -> STRUCT OpenStructS . LBRACE FieldDecl_curl RBRACE CloseStructS

    LBRACE          shift and go to state 161


state 108

    (13) ImportSpec_curl -> ImportSpec_curl ImportSpec SEMICOLON .

    RPAREN          reduce using rule 13 (ImportSpec_curl -> ImportSpec_curl ImportSpec SEMICOLON .)
    DOT             reduce using rule 13 (ImportSpec_curl -> ImportSpec_curl ImportSpec SEMICOLON .)
    ID              reduce using rule 13 (ImportSpec_curl -> ImportSpec_curl ImportSpec SEMICOLON .)
    STRING          reduce using rule 13 (ImportSpec_curl -> ImportSpec_curl ImportSpec SEMICOLON .)


state 109

    (26) ConstSpec_curl -> ConstSpec_curl ConstSpec SEMICOLON .

    RPAREN          reduce using rule 26 (ConstSpec_curl -> ConstSpec_curl ConstSpec SEMICOLON .)
    ID              reduce using rule 26 (ConstSpec_curl -> ConstSpec_curl ConstSpec SEMICOLON .)


state 110

    (93) UnaryExpr -> UnaryOp UnaryExpr .

    LOR             reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    LAND            reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    EQL             reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    NEQ             reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    LTN             reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    LEQ             reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    GTN             reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    GEQ             reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    ADD             reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    SUB             reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR              reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    XOR             reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    MUL             reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIV             reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    MOD             reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHL             reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHR             reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND             reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND_NOT         reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    COMMA           reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    SEMICOLON       reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    LBRACE          reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    RBRACK          reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    COLON           reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    RPAREN          reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    ADD_ASSIGN      reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    SUB_ASSIGN      reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    MUL_ASSIGN      reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIV_ASSIGN      reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    MOD_ASSIGN      reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND_ASSIGN      reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR_ASSIGN       reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    XOR_ASSIGN      reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHL_ASSIGN      reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHR_ASSIGN      reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    ASSIGN          reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    INC             reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)
    DEC             reduce using rule 93 (UnaryExpr -> UnaryOp UnaryExpr .)


state 111

    (55) SliceType -> LBRACK RBRACK Type .

    RPAREN          reduce using rule 55 (SliceType -> LBRACK RBRACK Type .)
    COMMA           reduce using rule 55 (SliceType -> LBRACK RBRACK Type .)
    ASSIGN          reduce using rule 55 (SliceType -> LBRACK RBRACK Type .)
    SEMICOLON       reduce using rule 55 (SliceType -> LBRACK RBRACK Type .)


state 112

    (56) SliceType -> LBRACK RBRACK ID .

    RPAREN          reduce using rule 56 (SliceType -> LBRACK RBRACK ID .)
    COMMA           reduce using rule 56 (SliceType -> LBRACK RBRACK ID .)
    ASSIGN          reduce using rule 56 (SliceType -> LBRACK RBRACK ID .)
    SEMICOLON       reduce using rule 56 (SliceType -> LBRACK RBRACK ID .)


state 113

    (126) PrimaryExpr -> PrimaryExpr Index .

    LBRACK          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    LPAREN          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    LOR             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    LAND            reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    EQL             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    NEQ             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    LTN             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    LEQ             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    GTN             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    GEQ             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    ADD             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    SUB             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    OR              reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    XOR             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    MUL             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    DIV             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    MOD             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    SHL             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    SHR             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    AND             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    AND_NOT         reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    COMMA           reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    SEMICOLON       reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACE          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    INC             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    DEC             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    ADD_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    SUB_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    MUL_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    DIV_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    MOD_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    AND_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    AND_NOT_ASSIGN  reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    OR_ASSIGN       reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    XOR_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    SHL_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    SHR_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    ASSIGN          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    RPAREN          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    RBRACK          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    COLON           reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)


state 114

    (127) PrimaryExpr -> PrimaryExpr Slice .

    LBRACK          reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    LPAREN          reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    LOR             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    LAND            reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    EQL             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    NEQ             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    LTN             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    LEQ             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    GTN             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    GEQ             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    ADD             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    SUB             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    OR              reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    XOR             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    MUL             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    DIV             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    MOD             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    SHL             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    SHR             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    AND             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    AND_NOT         reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    COMMA           reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    SEMICOLON       reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACE          reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    INC             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    DEC             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    ADD_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    SUB_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    MUL_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    DIV_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    MOD_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    AND_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    AND_NOT_ASSIGN  reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    OR_ASSIGN       reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    XOR_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    SHL_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    SHR_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    ASSIGN          reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    RPAREN          reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    RBRACK          reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)
    COLON           reduce using rule 127 (PrimaryExpr -> PrimaryExpr Slice .)


state 115

    (129) Index -> LBRACK . Expression RBRACK
    (130) Slice -> LBRACK . Expression COLON Expression RBRACK
    (131) Slice -> LBRACK . COLON Expression RBRACK
    (132) Slice -> LBRACK . Expression COLON RBRACK
    (133) Slice -> LBRACK . COLON RBRACK
    (134) Slice -> LBRACK . Expression COLON Expression COLON Expression RBRACK
    (135) Slice -> LBRACK . COLON Expression COLON Expression RBRACK
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    COLON           shift and go to state 162
    ID              shift and go to state 82
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    RuneLit                        shift and go to state 80
    UnaryOp                        shift and go to state 65
    TrueLit                        shift and go to state 90
    BasicLit                       shift and go to state 70
    UnaryExpr                      shift and go to state 75
    FloatLit                       shift and go to state 76
    FalseLit                       shift and go to state 66
    IntLit                         shift and go to state 68
    Literal                        shift and go to state 67
    PrimaryExpr                    shift and go to state 77
    StringLit                      shift and go to state 88
    Expression                     shift and go to state 163

state 116

    (128) PrimaryExpr -> PrimaryExpr Arguments .

    LBRACK          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    LPAREN          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    LOR             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    LAND            reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQL             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    NEQ             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    LTN             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    LEQ             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    GTN             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    GEQ             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    ADD             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    SUB             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR              reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    MUL             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    DIV             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    MOD             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHL             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHR             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_NOT         reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    COMMA           reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    SEMICOLON       reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACE          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    INC             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    DEC             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    ADD_ASSIGN      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    SUB_ASSIGN      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    MUL_ASSIGN      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    DIV_ASSIGN      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    MOD_ASSIGN      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_ASSIGN      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_NOT_ASSIGN  reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR_ASSIGN       reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR_ASSIGN      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHL_ASSIGN      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHR_ASSIGN      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    ASSIGN          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    RPAREN          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    RBRACK          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    COLON           reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)


state 117

    (136) Arguments -> LPAREN . RPAREN
    (137) Arguments -> LPAREN . ExpressionList RPAREN
    (138) Arguments -> LPAREN . ExpressionList COMMA RPAREN
    (32) ExpressionList -> . Expression
    (33) ExpressionList -> . ExpressionList COMMA Expression
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    RPAREN          shift and go to state 164
    ID              shift and go to state 82
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    RuneLit                        shift and go to state 80
    UnaryOp                        shift and go to state 65
    TrueLit                        shift and go to state 90
    BasicLit                       shift and go to state 70
    UnaryExpr                      shift and go to state 75
    FloatLit                       shift and go to state 76
    FalseLit                       shift and go to state 66
    IntLit                         shift and go to state 68
    Literal                        shift and go to state 67
    ExpressionList                 shift and go to state 165
    PrimaryExpr                    shift and go to state 77
    StringLit                      shift and go to state 88
    Expression                     shift and go to state 104

state 118

    (125) PrimaryExpr -> LPAREN Expression . RPAREN
    (91) Expression -> Expression . BinaryOp UnaryExpr
    (94) BinaryOp -> . LOR
    (95) BinaryOp -> . LAND
    (96) BinaryOp -> . RelOp
    (97) BinaryOp -> . AddOp
    (98) BinaryOp -> . MulOp
    (99) RelOp -> . EQL
    (100) RelOp -> . NEQ
    (101) RelOp -> . LTN
    (102) RelOp -> . LEQ
    (103) RelOp -> . GTN
    (104) RelOp -> . GEQ
    (105) AddOp -> . ADD
    (106) AddOp -> . SUB
    (107) AddOp -> . OR
    (108) AddOp -> . XOR
    (109) MulOp -> . MUL
    (110) MulOp -> . DIV
    (111) MulOp -> . MOD
    (112) MulOp -> . SHL
    (113) MulOp -> . SHR
    (114) MulOp -> . AND
    (115) MulOp -> . AND_NOT

    RPAREN          shift and go to state 166
    LOR             shift and go to state 120
    LAND            shift and go to state 125
    EQL             shift and go to state 136
    NEQ             shift and go to state 123
    LTN             shift and go to state 137
    LEQ             shift and go to state 140
    GTN             shift and go to state 134
    GEQ             shift and go to state 124
    ADD             shift and go to state 135
    SUB             shift and go to state 119
    OR              shift and go to state 141
    XOR             shift and go to state 131
    MUL             shift and go to state 121
    DIV             shift and go to state 122
    MOD             shift and go to state 142
    SHL             shift and go to state 126
    SHR             shift and go to state 130
    AND             shift and go to state 138
    AND_NOT         shift and go to state 127

    AddOp                          shift and go to state 129
    BinaryOp                       shift and go to state 128
    MulOp                          shift and go to state 132
    RelOp                          shift and go to state 139

state 119

    (106) AddOp -> SUB .

    ID              reduce using rule 106 (AddOp -> SUB .)
    LPAREN          reduce using rule 106 (AddOp -> SUB .)
    ADD             reduce using rule 106 (AddOp -> SUB .)
    SUB             reduce using rule 106 (AddOp -> SUB .)
    NOT             reduce using rule 106 (AddOp -> SUB .)
    XOR             reduce using rule 106 (AddOp -> SUB .)
    MUL             reduce using rule 106 (AddOp -> SUB .)
    AND             reduce using rule 106 (AddOp -> SUB .)
    INT             reduce using rule 106 (AddOp -> SUB .)
    FLOAT           reduce using rule 106 (AddOp -> SUB .)
    RUNE            reduce using rule 106 (AddOp -> SUB .)
    STRING          reduce using rule 106 (AddOp -> SUB .)
    TRUE            reduce using rule 106 (AddOp -> SUB .)
    FALSE           reduce using rule 106 (AddOp -> SUB .)


state 120

    (94) BinaryOp -> LOR .

    ID              reduce using rule 94 (BinaryOp -> LOR .)
    LPAREN          reduce using rule 94 (BinaryOp -> LOR .)
    ADD             reduce using rule 94 (BinaryOp -> LOR .)
    SUB             reduce using rule 94 (BinaryOp -> LOR .)
    NOT             reduce using rule 94 (BinaryOp -> LOR .)
    XOR             reduce using rule 94 (BinaryOp -> LOR .)
    MUL             reduce using rule 94 (BinaryOp -> LOR .)
    AND             reduce using rule 94 (BinaryOp -> LOR .)
    INT             reduce using rule 94 (BinaryOp -> LOR .)
    FLOAT           reduce using rule 94 (BinaryOp -> LOR .)
    RUNE            reduce using rule 94 (BinaryOp -> LOR .)
    STRING          reduce using rule 94 (BinaryOp -> LOR .)
    TRUE            reduce using rule 94 (BinaryOp -> LOR .)
    FALSE           reduce using rule 94 (BinaryOp -> LOR .)


state 121

    (109) MulOp -> MUL .

    ID              reduce using rule 109 (MulOp -> MUL .)
    LPAREN          reduce using rule 109 (MulOp -> MUL .)
    ADD             reduce using rule 109 (MulOp -> MUL .)
    SUB             reduce using rule 109 (MulOp -> MUL .)
    NOT             reduce using rule 109 (MulOp -> MUL .)
    XOR             reduce using rule 109 (MulOp -> MUL .)
    MUL             reduce using rule 109 (MulOp -> MUL .)
    AND             reduce using rule 109 (MulOp -> MUL .)
    INT             reduce using rule 109 (MulOp -> MUL .)
    FLOAT           reduce using rule 109 (MulOp -> MUL .)
    RUNE            reduce using rule 109 (MulOp -> MUL .)
    STRING          reduce using rule 109 (MulOp -> MUL .)
    TRUE            reduce using rule 109 (MulOp -> MUL .)
    FALSE           reduce using rule 109 (MulOp -> MUL .)


state 122

    (110) MulOp -> DIV .

    ID              reduce using rule 110 (MulOp -> DIV .)
    LPAREN          reduce using rule 110 (MulOp -> DIV .)
    ADD             reduce using rule 110 (MulOp -> DIV .)
    SUB             reduce using rule 110 (MulOp -> DIV .)
    NOT             reduce using rule 110 (MulOp -> DIV .)
    XOR             reduce using rule 110 (MulOp -> DIV .)
    MUL             reduce using rule 110 (MulOp -> DIV .)
    AND             reduce using rule 110 (MulOp -> DIV .)
    INT             reduce using rule 110 (MulOp -> DIV .)
    FLOAT           reduce using rule 110 (MulOp -> DIV .)
    RUNE            reduce using rule 110 (MulOp -> DIV .)
    STRING          reduce using rule 110 (MulOp -> DIV .)
    TRUE            reduce using rule 110 (MulOp -> DIV .)
    FALSE           reduce using rule 110 (MulOp -> DIV .)


state 123

    (100) RelOp -> NEQ .

    ID              reduce using rule 100 (RelOp -> NEQ .)
    LPAREN          reduce using rule 100 (RelOp -> NEQ .)
    ADD             reduce using rule 100 (RelOp -> NEQ .)
    SUB             reduce using rule 100 (RelOp -> NEQ .)
    NOT             reduce using rule 100 (RelOp -> NEQ .)
    XOR             reduce using rule 100 (RelOp -> NEQ .)
    MUL             reduce using rule 100 (RelOp -> NEQ .)
    AND             reduce using rule 100 (RelOp -> NEQ .)
    INT             reduce using rule 100 (RelOp -> NEQ .)
    FLOAT           reduce using rule 100 (RelOp -> NEQ .)
    RUNE            reduce using rule 100 (RelOp -> NEQ .)
    STRING          reduce using rule 100 (RelOp -> NEQ .)
    TRUE            reduce using rule 100 (RelOp -> NEQ .)
    FALSE           reduce using rule 100 (RelOp -> NEQ .)


state 124

    (104) RelOp -> GEQ .

    ID              reduce using rule 104 (RelOp -> GEQ .)
    LPAREN          reduce using rule 104 (RelOp -> GEQ .)
    ADD             reduce using rule 104 (RelOp -> GEQ .)
    SUB             reduce using rule 104 (RelOp -> GEQ .)
    NOT             reduce using rule 104 (RelOp -> GEQ .)
    XOR             reduce using rule 104 (RelOp -> GEQ .)
    MUL             reduce using rule 104 (RelOp -> GEQ .)
    AND             reduce using rule 104 (RelOp -> GEQ .)
    INT             reduce using rule 104 (RelOp -> GEQ .)
    FLOAT           reduce using rule 104 (RelOp -> GEQ .)
    RUNE            reduce using rule 104 (RelOp -> GEQ .)
    STRING          reduce using rule 104 (RelOp -> GEQ .)
    TRUE            reduce using rule 104 (RelOp -> GEQ .)
    FALSE           reduce using rule 104 (RelOp -> GEQ .)


state 125

    (95) BinaryOp -> LAND .

    ID              reduce using rule 95 (BinaryOp -> LAND .)
    LPAREN          reduce using rule 95 (BinaryOp -> LAND .)
    ADD             reduce using rule 95 (BinaryOp -> LAND .)
    SUB             reduce using rule 95 (BinaryOp -> LAND .)
    NOT             reduce using rule 95 (BinaryOp -> LAND .)
    XOR             reduce using rule 95 (BinaryOp -> LAND .)
    MUL             reduce using rule 95 (BinaryOp -> LAND .)
    AND             reduce using rule 95 (BinaryOp -> LAND .)
    INT             reduce using rule 95 (BinaryOp -> LAND .)
    FLOAT           reduce using rule 95 (BinaryOp -> LAND .)
    RUNE            reduce using rule 95 (BinaryOp -> LAND .)
    STRING          reduce using rule 95 (BinaryOp -> LAND .)
    TRUE            reduce using rule 95 (BinaryOp -> LAND .)
    FALSE           reduce using rule 95 (BinaryOp -> LAND .)


state 126

    (112) MulOp -> SHL .

    ID              reduce using rule 112 (MulOp -> SHL .)
    LPAREN          reduce using rule 112 (MulOp -> SHL .)
    ADD             reduce using rule 112 (MulOp -> SHL .)
    SUB             reduce using rule 112 (MulOp -> SHL .)
    NOT             reduce using rule 112 (MulOp -> SHL .)
    XOR             reduce using rule 112 (MulOp -> SHL .)
    MUL             reduce using rule 112 (MulOp -> SHL .)
    AND             reduce using rule 112 (MulOp -> SHL .)
    INT             reduce using rule 112 (MulOp -> SHL .)
    FLOAT           reduce using rule 112 (MulOp -> SHL .)
    RUNE            reduce using rule 112 (MulOp -> SHL .)
    STRING          reduce using rule 112 (MulOp -> SHL .)
    TRUE            reduce using rule 112 (MulOp -> SHL .)
    FALSE           reduce using rule 112 (MulOp -> SHL .)


state 127

    (115) MulOp -> AND_NOT .

    ID              reduce using rule 115 (MulOp -> AND_NOT .)
    LPAREN          reduce using rule 115 (MulOp -> AND_NOT .)
    ADD             reduce using rule 115 (MulOp -> AND_NOT .)
    SUB             reduce using rule 115 (MulOp -> AND_NOT .)
    NOT             reduce using rule 115 (MulOp -> AND_NOT .)
    XOR             reduce using rule 115 (MulOp -> AND_NOT .)
    MUL             reduce using rule 115 (MulOp -> AND_NOT .)
    AND             reduce using rule 115 (MulOp -> AND_NOT .)
    INT             reduce using rule 115 (MulOp -> AND_NOT .)
    FLOAT           reduce using rule 115 (MulOp -> AND_NOT .)
    RUNE            reduce using rule 115 (MulOp -> AND_NOT .)
    STRING          reduce using rule 115 (MulOp -> AND_NOT .)
    TRUE            reduce using rule 115 (MulOp -> AND_NOT .)
    FALSE           reduce using rule 115 (MulOp -> AND_NOT .)


state 128

    (91) Expression -> Expression BinaryOp . UnaryExpr
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    ID              shift and go to state 82
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    RuneLit                        shift and go to state 80
    UnaryOp                        shift and go to state 65
    TrueLit                        shift and go to state 90
    BasicLit                       shift and go to state 70
    UnaryExpr                      shift and go to state 167
    FloatLit                       shift and go to state 76
    FalseLit                       shift and go to state 66
    IntLit                         shift and go to state 68
    Literal                        shift and go to state 67
    PrimaryExpr                    shift and go to state 77
    StringLit                      shift and go to state 88

state 129

    (97) BinaryOp -> AddOp .

    ID              reduce using rule 97 (BinaryOp -> AddOp .)
    LPAREN          reduce using rule 97 (BinaryOp -> AddOp .)
    ADD             reduce using rule 97 (BinaryOp -> AddOp .)
    SUB             reduce using rule 97 (BinaryOp -> AddOp .)
    NOT             reduce using rule 97 (BinaryOp -> AddOp .)
    XOR             reduce using rule 97 (BinaryOp -> AddOp .)
    MUL             reduce using rule 97 (BinaryOp -> AddOp .)
    AND             reduce using rule 97 (BinaryOp -> AddOp .)
    INT             reduce using rule 97 (BinaryOp -> AddOp .)
    FLOAT           reduce using rule 97 (BinaryOp -> AddOp .)
    RUNE            reduce using rule 97 (BinaryOp -> AddOp .)
    STRING          reduce using rule 97 (BinaryOp -> AddOp .)
    TRUE            reduce using rule 97 (BinaryOp -> AddOp .)
    FALSE           reduce using rule 97 (BinaryOp -> AddOp .)


state 130

    (113) MulOp -> SHR .

    ID              reduce using rule 113 (MulOp -> SHR .)
    LPAREN          reduce using rule 113 (MulOp -> SHR .)
    ADD             reduce using rule 113 (MulOp -> SHR .)
    SUB             reduce using rule 113 (MulOp -> SHR .)
    NOT             reduce using rule 113 (MulOp -> SHR .)
    XOR             reduce using rule 113 (MulOp -> SHR .)
    MUL             reduce using rule 113 (MulOp -> SHR .)
    AND             reduce using rule 113 (MulOp -> SHR .)
    INT             reduce using rule 113 (MulOp -> SHR .)
    FLOAT           reduce using rule 113 (MulOp -> SHR .)
    RUNE            reduce using rule 113 (MulOp -> SHR .)
    STRING          reduce using rule 113 (MulOp -> SHR .)
    TRUE            reduce using rule 113 (MulOp -> SHR .)
    FALSE           reduce using rule 113 (MulOp -> SHR .)


state 131

    (108) AddOp -> XOR .

    ID              reduce using rule 108 (AddOp -> XOR .)
    LPAREN          reduce using rule 108 (AddOp -> XOR .)
    ADD             reduce using rule 108 (AddOp -> XOR .)
    SUB             reduce using rule 108 (AddOp -> XOR .)
    NOT             reduce using rule 108 (AddOp -> XOR .)
    XOR             reduce using rule 108 (AddOp -> XOR .)
    MUL             reduce using rule 108 (AddOp -> XOR .)
    AND             reduce using rule 108 (AddOp -> XOR .)
    INT             reduce using rule 108 (AddOp -> XOR .)
    FLOAT           reduce using rule 108 (AddOp -> XOR .)
    RUNE            reduce using rule 108 (AddOp -> XOR .)
    STRING          reduce using rule 108 (AddOp -> XOR .)
    TRUE            reduce using rule 108 (AddOp -> XOR .)
    FALSE           reduce using rule 108 (AddOp -> XOR .)


state 132

    (98) BinaryOp -> MulOp .

    ID              reduce using rule 98 (BinaryOp -> MulOp .)
    LPAREN          reduce using rule 98 (BinaryOp -> MulOp .)
    ADD             reduce using rule 98 (BinaryOp -> MulOp .)
    SUB             reduce using rule 98 (BinaryOp -> MulOp .)
    NOT             reduce using rule 98 (BinaryOp -> MulOp .)
    XOR             reduce using rule 98 (BinaryOp -> MulOp .)
    MUL             reduce using rule 98 (BinaryOp -> MulOp .)
    AND             reduce using rule 98 (BinaryOp -> MulOp .)
    INT             reduce using rule 98 (BinaryOp -> MulOp .)
    FLOAT           reduce using rule 98 (BinaryOp -> MulOp .)
    RUNE            reduce using rule 98 (BinaryOp -> MulOp .)
    STRING          reduce using rule 98 (BinaryOp -> MulOp .)
    TRUE            reduce using rule 98 (BinaryOp -> MulOp .)
    FALSE           reduce using rule 98 (BinaryOp -> MulOp .)


state 133

    (53) ArrayType -> LBRACK Expression RBRACK . Type
    (54) ArrayType -> LBRACK Expression RBRACK . ID
    (47) Type -> . LPAREN Type RPAREN
    (48) Type -> . LPAREN ID RPAREN
    (49) Type -> . TypeLit
    (50) TypeLit -> . ArrayType
    (51) TypeLit -> . PointerType
    (52) TypeLit -> . SliceType
    (53) ArrayType -> . LBRACK Expression RBRACK Type
    (54) ArrayType -> . LBRACK Expression RBRACK ID
    (66) PointerType -> . MUL Type
    (67) PointerType -> . MUL ID
    (55) SliceType -> . LBRACK RBRACK Type
    (56) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 169
    LPAREN          shift and go to state 47
    LBRACK          shift and go to state 44
    MUL             shift and go to state 49

    TypeLit                        shift and go to state 43
    ArrayType                      shift and go to state 45
    PointerType                    shift and go to state 48
    Type                           shift and go to state 168
    SliceType                      shift and go to state 51

state 134

    (103) RelOp -> GTN .

    ID              reduce using rule 103 (RelOp -> GTN .)
    LPAREN          reduce using rule 103 (RelOp -> GTN .)
    ADD             reduce using rule 103 (RelOp -> GTN .)
    SUB             reduce using rule 103 (RelOp -> GTN .)
    NOT             reduce using rule 103 (RelOp -> GTN .)
    XOR             reduce using rule 103 (RelOp -> GTN .)
    MUL             reduce using rule 103 (RelOp -> GTN .)
    AND             reduce using rule 103 (RelOp -> GTN .)
    INT             reduce using rule 103 (RelOp -> GTN .)
    FLOAT           reduce using rule 103 (RelOp -> GTN .)
    RUNE            reduce using rule 103 (RelOp -> GTN .)
    STRING          reduce using rule 103 (RelOp -> GTN .)
    TRUE            reduce using rule 103 (RelOp -> GTN .)
    FALSE           reduce using rule 103 (RelOp -> GTN .)


state 135

    (105) AddOp -> ADD .

    ID              reduce using rule 105 (AddOp -> ADD .)
    LPAREN          reduce using rule 105 (AddOp -> ADD .)
    ADD             reduce using rule 105 (AddOp -> ADD .)
    SUB             reduce using rule 105 (AddOp -> ADD .)
    NOT             reduce using rule 105 (AddOp -> ADD .)
    XOR             reduce using rule 105 (AddOp -> ADD .)
    MUL             reduce using rule 105 (AddOp -> ADD .)
    AND             reduce using rule 105 (AddOp -> ADD .)
    INT             reduce using rule 105 (AddOp -> ADD .)
    FLOAT           reduce using rule 105 (AddOp -> ADD .)
    RUNE            reduce using rule 105 (AddOp -> ADD .)
    STRING          reduce using rule 105 (AddOp -> ADD .)
    TRUE            reduce using rule 105 (AddOp -> ADD .)
    FALSE           reduce using rule 105 (AddOp -> ADD .)


state 136

    (99) RelOp -> EQL .

    ID              reduce using rule 99 (RelOp -> EQL .)
    LPAREN          reduce using rule 99 (RelOp -> EQL .)
    ADD             reduce using rule 99 (RelOp -> EQL .)
    SUB             reduce using rule 99 (RelOp -> EQL .)
    NOT             reduce using rule 99 (RelOp -> EQL .)
    XOR             reduce using rule 99 (RelOp -> EQL .)
    MUL             reduce using rule 99 (RelOp -> EQL .)
    AND             reduce using rule 99 (RelOp -> EQL .)
    INT             reduce using rule 99 (RelOp -> EQL .)
    FLOAT           reduce using rule 99 (RelOp -> EQL .)
    RUNE            reduce using rule 99 (RelOp -> EQL .)
    STRING          reduce using rule 99 (RelOp -> EQL .)
    TRUE            reduce using rule 99 (RelOp -> EQL .)
    FALSE           reduce using rule 99 (RelOp -> EQL .)


state 137

    (101) RelOp -> LTN .

    ID              reduce using rule 101 (RelOp -> LTN .)
    LPAREN          reduce using rule 101 (RelOp -> LTN .)
    ADD             reduce using rule 101 (RelOp -> LTN .)
    SUB             reduce using rule 101 (RelOp -> LTN .)
    NOT             reduce using rule 101 (RelOp -> LTN .)
    XOR             reduce using rule 101 (RelOp -> LTN .)
    MUL             reduce using rule 101 (RelOp -> LTN .)
    AND             reduce using rule 101 (RelOp -> LTN .)
    INT             reduce using rule 101 (RelOp -> LTN .)
    FLOAT           reduce using rule 101 (RelOp -> LTN .)
    RUNE            reduce using rule 101 (RelOp -> LTN .)
    STRING          reduce using rule 101 (RelOp -> LTN .)
    TRUE            reduce using rule 101 (RelOp -> LTN .)
    FALSE           reduce using rule 101 (RelOp -> LTN .)


state 138

    (114) MulOp -> AND .

    ID              reduce using rule 114 (MulOp -> AND .)
    LPAREN          reduce using rule 114 (MulOp -> AND .)
    ADD             reduce using rule 114 (MulOp -> AND .)
    SUB             reduce using rule 114 (MulOp -> AND .)
    NOT             reduce using rule 114 (MulOp -> AND .)
    XOR             reduce using rule 114 (MulOp -> AND .)
    MUL             reduce using rule 114 (MulOp -> AND .)
    AND             reduce using rule 114 (MulOp -> AND .)
    INT             reduce using rule 114 (MulOp -> AND .)
    FLOAT           reduce using rule 114 (MulOp -> AND .)
    RUNE            reduce using rule 114 (MulOp -> AND .)
    STRING          reduce using rule 114 (MulOp -> AND .)
    TRUE            reduce using rule 114 (MulOp -> AND .)
    FALSE           reduce using rule 114 (MulOp -> AND .)


state 139

    (96) BinaryOp -> RelOp .

    ID              reduce using rule 96 (BinaryOp -> RelOp .)
    LPAREN          reduce using rule 96 (BinaryOp -> RelOp .)
    ADD             reduce using rule 96 (BinaryOp -> RelOp .)
    SUB             reduce using rule 96 (BinaryOp -> RelOp .)
    NOT             reduce using rule 96 (BinaryOp -> RelOp .)
    XOR             reduce using rule 96 (BinaryOp -> RelOp .)
    MUL             reduce using rule 96 (BinaryOp -> RelOp .)
    AND             reduce using rule 96 (BinaryOp -> RelOp .)
    INT             reduce using rule 96 (BinaryOp -> RelOp .)
    FLOAT           reduce using rule 96 (BinaryOp -> RelOp .)
    RUNE            reduce using rule 96 (BinaryOp -> RelOp .)
    STRING          reduce using rule 96 (BinaryOp -> RelOp .)
    TRUE            reduce using rule 96 (BinaryOp -> RelOp .)
    FALSE           reduce using rule 96 (BinaryOp -> RelOp .)


state 140

    (102) RelOp -> LEQ .

    ID              reduce using rule 102 (RelOp -> LEQ .)
    LPAREN          reduce using rule 102 (RelOp -> LEQ .)
    ADD             reduce using rule 102 (RelOp -> LEQ .)
    SUB             reduce using rule 102 (RelOp -> LEQ .)
    NOT             reduce using rule 102 (RelOp -> LEQ .)
    XOR             reduce using rule 102 (RelOp -> LEQ .)
    MUL             reduce using rule 102 (RelOp -> LEQ .)
    AND             reduce using rule 102 (RelOp -> LEQ .)
    INT             reduce using rule 102 (RelOp -> LEQ .)
    FLOAT           reduce using rule 102 (RelOp -> LEQ .)
    RUNE            reduce using rule 102 (RelOp -> LEQ .)
    STRING          reduce using rule 102 (RelOp -> LEQ .)
    TRUE            reduce using rule 102 (RelOp -> LEQ .)
    FALSE           reduce using rule 102 (RelOp -> LEQ .)


state 141

    (107) AddOp -> OR .

    ID              reduce using rule 107 (AddOp -> OR .)
    LPAREN          reduce using rule 107 (AddOp -> OR .)
    ADD             reduce using rule 107 (AddOp -> OR .)
    SUB             reduce using rule 107 (AddOp -> OR .)
    NOT             reduce using rule 107 (AddOp -> OR .)
    XOR             reduce using rule 107 (AddOp -> OR .)
    MUL             reduce using rule 107 (AddOp -> OR .)
    AND             reduce using rule 107 (AddOp -> OR .)
    INT             reduce using rule 107 (AddOp -> OR .)
    FLOAT           reduce using rule 107 (AddOp -> OR .)
    RUNE            reduce using rule 107 (AddOp -> OR .)
    STRING          reduce using rule 107 (AddOp -> OR .)
    TRUE            reduce using rule 107 (AddOp -> OR .)
    FALSE           reduce using rule 107 (AddOp -> OR .)


state 142

    (111) MulOp -> MOD .

    ID              reduce using rule 111 (MulOp -> MOD .)
    LPAREN          reduce using rule 111 (MulOp -> MOD .)
    ADD             reduce using rule 111 (MulOp -> MOD .)
    SUB             reduce using rule 111 (MulOp -> MOD .)
    NOT             reduce using rule 111 (MulOp -> MOD .)
    XOR             reduce using rule 111 (MulOp -> MOD .)
    MUL             reduce using rule 111 (MulOp -> MOD .)
    AND             reduce using rule 111 (MulOp -> MOD .)
    INT             reduce using rule 111 (MulOp -> MOD .)
    FLOAT           reduce using rule 111 (MulOp -> MOD .)
    RUNE            reduce using rule 111 (MulOp -> MOD .)
    STRING          reduce using rule 111 (MulOp -> MOD .)
    TRUE            reduce using rule 111 (MulOp -> MOD .)
    FALSE           reduce using rule 111 (MulOp -> MOD .)


state 143

    (124) PrimaryExpr -> ID DOT . ID

    ID              shift and go to state 170


state 144

    (28) ConstSpec -> IdentifierList ID ASSIGN ExpressionList .
    (33) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 28 (ConstSpec -> IdentifierList ID ASSIGN ExpressionList .)
    COMMA           shift and go to state 158


state 145

    (47) Type -> LPAREN Type RPAREN .

    ASSIGN          reduce using rule 47 (Type -> LPAREN Type RPAREN .)
    SEMICOLON       reduce using rule 47 (Type -> LPAREN Type RPAREN .)
    RPAREN          reduce using rule 47 (Type -> LPAREN Type RPAREN .)
    COMMA           reduce using rule 47 (Type -> LPAREN Type RPAREN .)


state 146

    (48) Type -> LPAREN ID RPAREN .

    ASSIGN          reduce using rule 48 (Type -> LPAREN ID RPAREN .)
    SEMICOLON       reduce using rule 48 (Type -> LPAREN ID RPAREN .)
    RPAREN          reduce using rule 48 (Type -> LPAREN ID RPAREN .)
    COMMA           reduce using rule 48 (Type -> LPAREN ID RPAREN .)


state 147

    (29) ConstSpec -> IdentifierList Type ASSIGN ExpressionList .
    (33) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 29 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    COMMA           shift and go to state 158


state 148

    (75) Parameters -> LPAREN RPAREN .

    LPAREN          reduce using rule 75 (Parameters -> LPAREN RPAREN .)
    LBRACE          reduce using rule 75 (Parameters -> LPAREN RPAREN .)


state 149

    (76) Parameters -> LPAREN ParameterList . RPAREN
    (77) Parameters -> LPAREN ParameterList . COMMA RPAREN
    (79) ParameterList -> ParameterList . COMMA ParameterDecl

    RPAREN          shift and go to state 172
    COMMA           shift and go to state 171


state 150

    (80) ParameterDecl -> ParaIdList . Type
    (82) ParameterDecl -> ParaIdList . ID
    (85) ParaIdList -> ParaIdList . COMMA ID
    (47) Type -> . LPAREN Type RPAREN
    (48) Type -> . LPAREN ID RPAREN
    (49) Type -> . TypeLit
    (50) TypeLit -> . ArrayType
    (51) TypeLit -> . PointerType
    (52) TypeLit -> . SliceType
    (53) ArrayType -> . LBRACK Expression RBRACK Type
    (54) ArrayType -> . LBRACK Expression RBRACK ID
    (66) PointerType -> . MUL Type
    (67) PointerType -> . MUL ID
    (55) SliceType -> . LBRACK RBRACK Type
    (56) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 175
    COMMA           shift and go to state 173
    LPAREN          shift and go to state 47
    LBRACK          shift and go to state 44
    MUL             shift and go to state 49

    Type                           shift and go to state 174
    ArrayType                      shift and go to state 45
    PointerType                    shift and go to state 48
    TypeLit                        shift and go to state 43
    SliceType                      shift and go to state 51

state 151

    (78) ParameterList -> ParameterDecl .

    RPAREN          reduce using rule 78 (ParameterList -> ParameterDecl .)
    COMMA           reduce using rule 78 (ParameterList -> ParameterDecl .)


state 152

    (81) ParameterDecl -> ID . Type
    (83) ParameterDecl -> ID . ID
    (84) ParaIdList -> ID . COMMA ID
    (47) Type -> . LPAREN Type RPAREN
    (48) Type -> . LPAREN ID RPAREN
    (49) Type -> . TypeLit
    (50) TypeLit -> . ArrayType
    (51) TypeLit -> . PointerType
    (52) TypeLit -> . SliceType
    (53) ArrayType -> . LBRACK Expression RBRACK Type
    (54) ArrayType -> . LBRACK Expression RBRACK ID
    (66) PointerType -> . MUL Type
    (67) PointerType -> . MUL ID
    (55) SliceType -> . LBRACK RBRACK Type
    (56) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 178
    COMMA           shift and go to state 177
    LPAREN          shift and go to state 47
    LBRACK          shift and go to state 44
    MUL             shift and go to state 49

    Type                           shift and go to state 176
    ArrayType                      shift and go to state 45
    PointerType                    shift and go to state 48
    TypeLit                        shift and go to state 43
    SliceType                      shift and go to state 51

state 153

    (69) Result -> LPAREN . TypeList RPAREN
    (71) TypeList -> . ID
    (72) TypeList -> . Type
    (73) TypeList -> . TypeList COMMA ID
    (74) TypeList -> . TypeList COMMA Type
    (47) Type -> . LPAREN Type RPAREN
    (48) Type -> . LPAREN ID RPAREN
    (49) Type -> . TypeLit
    (50) TypeLit -> . ArrayType
    (51) TypeLit -> . PointerType
    (52) TypeLit -> . SliceType
    (53) ArrayType -> . LBRACK Expression RBRACK Type
    (54) ArrayType -> . LBRACK Expression RBRACK ID
    (66) PointerType -> . MUL Type
    (67) PointerType -> . MUL ID
    (55) SliceType -> . LBRACK RBRACK Type
    (56) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 181
    LPAREN          shift and go to state 47
    LBRACK          shift and go to state 44
    MUL             shift and go to state 49

    TypeList                       shift and go to state 179
    Type                           shift and go to state 180
    ArrayType                      shift and go to state 45
    PointerType                    shift and go to state 48
    TypeLit                        shift and go to state 43
    SliceType                      shift and go to state 51

state 154

    (68) Signature -> Parameters Result .

    LBRACE          reduce using rule 68 (Signature -> Parameters Result .)


state 155

    (86) Block -> LBRACE . StatementList RBRACE
    (87) StatementList -> . Statement_curl
    (88) Statement_curl -> . Statement_curl Statement SEMICOLON
    (89) Statement_curl -> .

    ID              reduce using rule 89 (Statement_curl -> .)
    RETURN          reduce using rule 89 (Statement_curl -> .)
    BREAK           reduce using rule 89 (Statement_curl -> .)
    CONTINUE        reduce using rule 89 (Statement_curl -> .)
    GOTO            reduce using rule 89 (Statement_curl -> .)
    FALLTHROUGH     reduce using rule 89 (Statement_curl -> .)
    IF              reduce using rule 89 (Statement_curl -> .)
    FOR             reduce using rule 89 (Statement_curl -> .)
    CONST           reduce using rule 89 (Statement_curl -> .)
    TYPE            reduce using rule 89 (Statement_curl -> .)
    VAR             reduce using rule 89 (Statement_curl -> .)
    SWITCH          reduce using rule 89 (Statement_curl -> .)
    LPAREN          reduce using rule 89 (Statement_curl -> .)
    ADD             reduce using rule 89 (Statement_curl -> .)
    SUB             reduce using rule 89 (Statement_curl -> .)
    NOT             reduce using rule 89 (Statement_curl -> .)
    XOR             reduce using rule 89 (Statement_curl -> .)
    MUL             reduce using rule 89 (Statement_curl -> .)
    AND             reduce using rule 89 (Statement_curl -> .)
    INT             reduce using rule 89 (Statement_curl -> .)
    FLOAT           reduce using rule 89 (Statement_curl -> .)
    RUNE            reduce using rule 89 (Statement_curl -> .)
    STRING          reduce using rule 89 (Statement_curl -> .)
    TRUE            reduce using rule 89 (Statement_curl -> .)
    FALSE           reduce using rule 89 (Statement_curl -> .)
    SEMICOLON       reduce using rule 89 (Statement_curl -> .)
    LBRACE          reduce using rule 89 (Statement_curl -> .)
    RBRACE          reduce using rule 89 (Statement_curl -> .)

    Statement_curl                 shift and go to state 182
    StatementList                  shift and go to state 183

state 156

    (45) FunctionDecl -> FUNC FuncName OpenS Signature Block . CloseS
    (3) CloseS -> .

    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 184

state 157

    (38) VarSpec_curl -> VarSpec_curl VarSpec SEMICOLON .

    RPAREN          reduce using rule 38 (VarSpec_curl -> VarSpec_curl VarSpec SEMICOLON .)
    ID              reduce using rule 38 (VarSpec_curl -> VarSpec_curl VarSpec SEMICOLON .)


state 158

    (33) ExpressionList -> ExpressionList COMMA . Expression
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    ID              shift and go to state 82
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    RuneLit                        shift and go to state 80
    UnaryOp                        shift and go to state 65
    TrueLit                        shift and go to state 90
    BasicLit                       shift and go to state 70
    UnaryExpr                      shift and go to state 75
    FloatLit                       shift and go to state 76
    FalseLit                       shift and go to state 66
    IntLit                         shift and go to state 68
    Literal                        shift and go to state 67
    PrimaryExpr                    shift and go to state 77
    StringLit                      shift and go to state 88
    Expression                     shift and go to state 185

state 159

    (40) VarSpec -> IdentifierList Type ASSIGN ExpressionList .
    (33) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 40 (VarSpec -> IdentifierList Type ASSIGN ExpressionList .)
    COMMA           shift and go to state 158


state 160

    (41) VarSpec -> IdentifierList ID ASSIGN ExpressionList .
    (33) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 41 (VarSpec -> IdentifierList ID ASSIGN ExpressionList .)
    COMMA           shift and go to state 158


state 161

    (57) StructType -> STRUCT OpenStructS LBRACE . FieldDecl_curl RBRACE CloseStructS
    (58) FieldDecl_curl -> . FieldDecl_curl FieldDecl SEMICOLON
    (59) FieldDecl_curl -> .

    RBRACE          reduce using rule 59 (FieldDecl_curl -> .)
    ID              reduce using rule 59 (FieldDecl_curl -> .)

    FieldDecl_curl                 shift and go to state 186

state 162

    (131) Slice -> LBRACK COLON . Expression RBRACK
    (133) Slice -> LBRACK COLON . RBRACK
    (135) Slice -> LBRACK COLON . Expression COLON Expression RBRACK
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    RBRACK          shift and go to state 187
    ID              shift and go to state 82
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    RuneLit                        shift and go to state 80
    UnaryOp                        shift and go to state 65
    TrueLit                        shift and go to state 90
    BasicLit                       shift and go to state 70
    UnaryExpr                      shift and go to state 75
    FloatLit                       shift and go to state 76
    FalseLit                       shift and go to state 66
    IntLit                         shift and go to state 68
    Literal                        shift and go to state 67
    PrimaryExpr                    shift and go to state 77
    StringLit                      shift and go to state 88
    Expression                     shift and go to state 188

state 163

    (129) Index -> LBRACK Expression . RBRACK
    (130) Slice -> LBRACK Expression . COLON Expression RBRACK
    (132) Slice -> LBRACK Expression . COLON RBRACK
    (134) Slice -> LBRACK Expression . COLON Expression COLON Expression RBRACK
    (91) Expression -> Expression . BinaryOp UnaryExpr
    (94) BinaryOp -> . LOR
    (95) BinaryOp -> . LAND
    (96) BinaryOp -> . RelOp
    (97) BinaryOp -> . AddOp
    (98) BinaryOp -> . MulOp
    (99) RelOp -> . EQL
    (100) RelOp -> . NEQ
    (101) RelOp -> . LTN
    (102) RelOp -> . LEQ
    (103) RelOp -> . GTN
    (104) RelOp -> . GEQ
    (105) AddOp -> . ADD
    (106) AddOp -> . SUB
    (107) AddOp -> . OR
    (108) AddOp -> . XOR
    (109) MulOp -> . MUL
    (110) MulOp -> . DIV
    (111) MulOp -> . MOD
    (112) MulOp -> . SHL
    (113) MulOp -> . SHR
    (114) MulOp -> . AND
    (115) MulOp -> . AND_NOT

    RBRACK          shift and go to state 190
    COLON           shift and go to state 189
    LOR             shift and go to state 120
    LAND            shift and go to state 125
    EQL             shift and go to state 136
    NEQ             shift and go to state 123
    LTN             shift and go to state 137
    LEQ             shift and go to state 140
    GTN             shift and go to state 134
    GEQ             shift and go to state 124
    ADD             shift and go to state 135
    SUB             shift and go to state 119
    OR              shift and go to state 141
    XOR             shift and go to state 131
    MUL             shift and go to state 121
    DIV             shift and go to state 122
    MOD             shift and go to state 142
    SHL             shift and go to state 126
    SHR             shift and go to state 130
    AND             shift and go to state 138
    AND_NOT         shift and go to state 127

    AddOp                          shift and go to state 129
    BinaryOp                       shift and go to state 128
    MulOp                          shift and go to state 132
    RelOp                          shift and go to state 139

state 164

    (136) Arguments -> LPAREN RPAREN .

    LBRACK          reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    LPAREN          reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    RBRACK          reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    LOR             reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    LAND            reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    EQL             reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    NEQ             reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    LTN             reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    LEQ             reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    GTN             reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    GEQ             reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    ADD             reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    SUB             reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    OR              reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    XOR             reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    MUL             reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    DIV             reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    MOD             reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    SHL             reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    SHR             reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    AND             reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    AND_NOT         reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    COMMA           reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    SEMICOLON       reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    RPAREN          reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    COLON           reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    ADD_ASSIGN      reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    SUB_ASSIGN      reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    MUL_ASSIGN      reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    DIV_ASSIGN      reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    MOD_ASSIGN      reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    AND_ASSIGN      reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    OR_ASSIGN       reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    XOR_ASSIGN      reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    SHL_ASSIGN      reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    SHR_ASSIGN      reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    ASSIGN          reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    LBRACE          reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    INC             reduce using rule 136 (Arguments -> LPAREN RPAREN .)
    DEC             reduce using rule 136 (Arguments -> LPAREN RPAREN .)


state 165

    (137) Arguments -> LPAREN ExpressionList . RPAREN
    (138) Arguments -> LPAREN ExpressionList . COMMA RPAREN
    (33) ExpressionList -> ExpressionList . COMMA Expression

    RPAREN          shift and go to state 191
    COMMA           shift and go to state 192


state 166

    (125) PrimaryExpr -> LPAREN Expression RPAREN .

    LBRACK          reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LOR             reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LAND            reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    EQL             reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    NEQ             reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LTN             reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LEQ             reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    GTN             reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    GEQ             reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    ADD             reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SUB             reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    OR              reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    XOR             reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    MUL             reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    DIV             reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    MOD             reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SHL             reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SHR             reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    AND             reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    AND_NOT         reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    INC             reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    DEC             reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    ADD_ASSIGN      reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SUB_ASSIGN      reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    MUL_ASSIGN      reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    DIV_ASSIGN      reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    MOD_ASSIGN      reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    AND_ASSIGN      reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    OR_ASSIGN       reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    XOR_ASSIGN      reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SHL_ASSIGN      reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SHR_ASSIGN      reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    ASSIGN          reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    RBRACK          reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)
    COLON           reduce using rule 125 (PrimaryExpr -> LPAREN Expression RPAREN .)


state 167

    (91) Expression -> Expression BinaryOp UnaryExpr .

    INC             reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    DEC             reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    LBRACE          reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    LOR             reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    LAND            reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    EQL             reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    NEQ             reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    LTN             reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    LEQ             reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    GTN             reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    GEQ             reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    ADD             reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    SUB             reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    OR              reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    XOR             reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    MUL             reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    DIV             reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    MOD             reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    SHL             reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    SHR             reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    AND             reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    AND_NOT         reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    SEMICOLON       reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    COMMA           reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    ADD_ASSIGN      reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    SUB_ASSIGN      reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    MUL_ASSIGN      reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    DIV_ASSIGN      reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    MOD_ASSIGN      reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    AND_ASSIGN      reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    OR_ASSIGN       reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    XOR_ASSIGN      reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    SHL_ASSIGN      reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    SHR_ASSIGN      reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    ASSIGN          reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    RBRACK          reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    COLON           reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)
    RPAREN          reduce using rule 91 (Expression -> Expression BinaryOp UnaryExpr .)


state 168

    (53) ArrayType -> LBRACK Expression RBRACK Type .

    ASSIGN          reduce using rule 53 (ArrayType -> LBRACK Expression RBRACK Type .)
    SEMICOLON       reduce using rule 53 (ArrayType -> LBRACK Expression RBRACK Type .)
    RPAREN          reduce using rule 53 (ArrayType -> LBRACK Expression RBRACK Type .)
    COMMA           reduce using rule 53 (ArrayType -> LBRACK Expression RBRACK Type .)


state 169

    (54) ArrayType -> LBRACK Expression RBRACK ID .

    ASSIGN          reduce using rule 54 (ArrayType -> LBRACK Expression RBRACK ID .)
    SEMICOLON       reduce using rule 54 (ArrayType -> LBRACK Expression RBRACK ID .)
    RPAREN          reduce using rule 54 (ArrayType -> LBRACK Expression RBRACK ID .)
    COMMA           reduce using rule 54 (ArrayType -> LBRACK Expression RBRACK ID .)


state 170

    (124) PrimaryExpr -> ID DOT ID .

    LBRACK          reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    LPAREN          reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    LOR             reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    LAND            reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    EQL             reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    NEQ             reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    LTN             reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    LEQ             reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    GTN             reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    GEQ             reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    ADD             reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    SUB             reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    OR              reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    XOR             reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    MUL             reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    DIV             reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    MOD             reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    SHL             reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    SHR             reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    AND             reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    AND_NOT         reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    COMMA           reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    SEMICOLON       reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    LBRACE          reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    INC             reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    DEC             reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    ADD_ASSIGN      reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    SUB_ASSIGN      reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    MUL_ASSIGN      reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    DIV_ASSIGN      reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    MOD_ASSIGN      reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    AND_ASSIGN      reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    AND_NOT_ASSIGN  reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    OR_ASSIGN       reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    XOR_ASSIGN      reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    SHL_ASSIGN      reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    SHR_ASSIGN      reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    ASSIGN          reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    RPAREN          reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    RBRACK          reduce using rule 124 (PrimaryExpr -> ID DOT ID .)
    COLON           reduce using rule 124 (PrimaryExpr -> ID DOT ID .)


state 171

    (77) Parameters -> LPAREN ParameterList COMMA . RPAREN
    (79) ParameterList -> ParameterList COMMA . ParameterDecl
    (80) ParameterDecl -> . ParaIdList Type
    (81) ParameterDecl -> . ID Type
    (82) ParameterDecl -> . ParaIdList ID
    (83) ParameterDecl -> . ID ID
    (84) ParaIdList -> . ID COMMA ID
    (85) ParaIdList -> . ParaIdList COMMA ID

    RPAREN          shift and go to state 193
    ID              shift and go to state 152

    ParaIdList                     shift and go to state 150
    ParameterDecl                  shift and go to state 194

state 172

    (76) Parameters -> LPAREN ParameterList RPAREN .

    LPAREN          reduce using rule 76 (Parameters -> LPAREN ParameterList RPAREN .)
    LBRACE          reduce using rule 76 (Parameters -> LPAREN ParameterList RPAREN .)


state 173

    (85) ParaIdList -> ParaIdList COMMA . ID

    ID              shift and go to state 195


state 174

    (80) ParameterDecl -> ParaIdList Type .

    RPAREN          reduce using rule 80 (ParameterDecl -> ParaIdList Type .)
    COMMA           reduce using rule 80 (ParameterDecl -> ParaIdList Type .)


state 175

    (82) ParameterDecl -> ParaIdList ID .

    RPAREN          reduce using rule 82 (ParameterDecl -> ParaIdList ID .)
    COMMA           reduce using rule 82 (ParameterDecl -> ParaIdList ID .)


state 176

    (81) ParameterDecl -> ID Type .

    RPAREN          reduce using rule 81 (ParameterDecl -> ID Type .)
    COMMA           reduce using rule 81 (ParameterDecl -> ID Type .)


state 177

    (84) ParaIdList -> ID COMMA . ID

    ID              shift and go to state 196


state 178

    (83) ParameterDecl -> ID ID .

    RPAREN          reduce using rule 83 (ParameterDecl -> ID ID .)
    COMMA           reduce using rule 83 (ParameterDecl -> ID ID .)


state 179

    (69) Result -> LPAREN TypeList . RPAREN
    (73) TypeList -> TypeList . COMMA ID
    (74) TypeList -> TypeList . COMMA Type

    RPAREN          shift and go to state 197
    COMMA           shift and go to state 198


state 180

    (72) TypeList -> Type .

    RPAREN          reduce using rule 72 (TypeList -> Type .)
    COMMA           reduce using rule 72 (TypeList -> Type .)


state 181

    (71) TypeList -> ID .

    RPAREN          reduce using rule 71 (TypeList -> ID .)
    COMMA           reduce using rule 71 (TypeList -> ID .)


state 182

    (87) StatementList -> Statement_curl .
    (88) Statement_curl -> Statement_curl . Statement SEMICOLON
    (152) Statement -> . Declaration
    (153) Statement -> . LabelledStmt
    (154) Statement -> . SimpleStmt
    (155) Statement -> . ReturnStmt
    (156) Statement -> . BreakStmt
    (157) Statement -> . ContinueStmt
    (158) Statement -> . GotoStmt
    (159) Statement -> . FallthroughStmt
    (160) Statement -> . IfStmt
    (161) Statement -> . OpenS Block CloseS
    (162) Statement -> . SwitchStmt
    (163) Statement -> . ForStmt
    (21) Declaration -> . ConstDecl
    (22) Declaration -> . StructDecl
    (23) Declaration -> . VarDecl
    (184) LabelledStmt -> . ID COLON Statement
    (164) SimpleStmt -> . Expression
    (165) SimpleStmt -> . IncDecStmt
    (166) SimpleStmt -> . Assignment
    (167) SimpleStmt -> . ShortVarDecl
    (168) SimpleStmt -> .
    (185) ReturnStmt -> . RETURN ExpressionList
    (186) ReturnStmt -> . RETURN
    (187) BreakStmt -> . BREAK ID
    (188) BreakStmt -> . BREAK
    (189) ContinueStmt -> . CONTINUE ID
    (190) ContinueStmt -> . CONTINUE
    (191) GotoStmt -> . GOTO ID
    (192) FallthroughStmt -> . FALLTHROUGH
    (194) IfStmt -> . IF OpenS Expression Block CloseS
    (195) IfStmt -> . IF OpenS Expression Block CloseS ELSE IfStmt
    (196) IfStmt -> . IF OpenS Expression Block CloseS ELSE OpenS Block CloseS
    (2) OpenS -> .
    (197) SwitchStmt -> . ExprSwitchStmt
    (206) ForStmt -> . FOR OpenS Expression Block CloseS
    (207) ForStmt -> . FOR OpenS ForClause Block CloseS
    (208) ForStmt -> . FOR OpenS Block CloseS
    (24) ConstDecl -> . CONST ConstSpec
    (25) ConstDecl -> . CONST LPAREN ConstSpec_curl RPAREN
    (34) StructDecl -> . TYPE StructName StructType
    (36) VarDecl -> . VAR VarSpec
    (37) VarDecl -> . VAR LPAREN VarSpec_curl RPAREN
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (169) IncDecStmt -> . Expression INC
    (170) IncDecStmt -> . Expression DEC
    (171) Assignment -> . ExpressionList AssignOp ExpressionList
    (193) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (198) ExprSwitchStmt -> . SWITCH ExpressionName LBRACE ExprCaseClause_curl RBRACE
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (32) ExpressionList -> . Expression
    (33) ExpressionList -> . ExpressionList COMMA Expression
    (30) IdentifierList -> . ID
    (31) IdentifierList -> . ID COMMA IdentifierList
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    RBRACE          reduce using rule 87 (StatementList -> Statement_curl .)
    CASE            reduce using rule 87 (StatementList -> Statement_curl .)
    ID              shift and go to state 214
    SEMICOLON       reduce using rule 168 (SimpleStmt -> .)
    RETURN          shift and go to state 205
    BREAK           shift and go to state 219
    CONTINUE        shift and go to state 212
    GOTO            shift and go to state 204
    FALLTHROUGH     shift and go to state 213
    IF              shift and go to state 226
    LBRACE          reduce using rule 2 (OpenS -> .)
    FOR             shift and go to state 209
    CONST           shift and go to state 10
    TYPE            shift and go to state 19
    VAR             shift and go to state 16
    SWITCH          shift and go to state 215
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    Statement                      shift and go to state 200
    UnaryOp                        shift and go to state 65
    ContinueStmt                   shift and go to state 199
    SimpleStmt                     shift and go to state 222
    FalseLit                       shift and go to state 66
    Literal                        shift and go to state 67
    ForStmt                        shift and go to state 223
    ExprSwitchStmt                 shift and go to state 206
    IdentifierList                 shift and go to state 207
    IntLit                         shift and go to state 68
    IfStmt                         shift and go to state 201
    RuneLit                        shift and go to state 80
    Assignment                     shift and go to state 202
    IncDecStmt                     shift and go to state 224
    Declaration                    shift and go to state 216
    OpenS                          shift and go to state 203
    GotoStmt                       shift and go to state 208
    UnaryExpr                      shift and go to state 75
    FloatLit                       shift and go to state 76
    StructDecl                     shift and go to state 11
    ExpressionList                 shift and go to state 217
    LabelledStmt                   shift and go to state 210
    Expression                     shift and go to state 218
    ShortVarDecl                   shift and go to state 225
    TrueLit                        shift and go to state 90
    BreakStmt                      shift and go to state 227
    SwitchStmt                     shift and go to state 211
    StringLit                      shift and go to state 88
    VarDecl                        shift and go to state 18
    BasicLit                       shift and go to state 70
    PrimaryExpr                    shift and go to state 77
    ReturnStmt                     shift and go to state 220
    ConstDecl                      shift and go to state 17
    FallthroughStmt                shift and go to state 221

state 183

    (86) Block -> LBRACE StatementList . RBRACE

    RBRACE          shift and go to state 228


state 184

    (45) FunctionDecl -> FUNC FuncName OpenS Signature Block CloseS .

    SEMICOLON       reduce using rule 45 (FunctionDecl -> FUNC FuncName OpenS Signature Block CloseS .)


state 185

    (33) ExpressionList -> ExpressionList COMMA Expression .
    (91) Expression -> Expression . BinaryOp UnaryExpr
    (94) BinaryOp -> . LOR
    (95) BinaryOp -> . LAND
    (96) BinaryOp -> . RelOp
    (97) BinaryOp -> . AddOp
    (98) BinaryOp -> . MulOp
    (99) RelOp -> . EQL
    (100) RelOp -> . NEQ
    (101) RelOp -> . LTN
    (102) RelOp -> . LEQ
    (103) RelOp -> . GTN
    (104) RelOp -> . GEQ
    (105) AddOp -> . ADD
    (106) AddOp -> . SUB
    (107) AddOp -> . OR
    (108) AddOp -> . XOR
    (109) MulOp -> . MUL
    (110) MulOp -> . DIV
    (111) MulOp -> . MOD
    (112) MulOp -> . SHL
    (113) MulOp -> . SHR
    (114) MulOp -> . AND
    (115) MulOp -> . AND_NOT

    COMMA           reduce using rule 33 (ExpressionList -> ExpressionList COMMA Expression .)
    ADD_ASSIGN      reduce using rule 33 (ExpressionList -> ExpressionList COMMA Expression .)
    SUB_ASSIGN      reduce using rule 33 (ExpressionList -> ExpressionList COMMA Expression .)
    MUL_ASSIGN      reduce using rule 33 (ExpressionList -> ExpressionList COMMA Expression .)
    DIV_ASSIGN      reduce using rule 33 (ExpressionList -> ExpressionList COMMA Expression .)
    MOD_ASSIGN      reduce using rule 33 (ExpressionList -> ExpressionList COMMA Expression .)
    AND_ASSIGN      reduce using rule 33 (ExpressionList -> ExpressionList COMMA Expression .)
    AND_NOT_ASSIGN  reduce using rule 33 (ExpressionList -> ExpressionList COMMA Expression .)
    OR_ASSIGN       reduce using rule 33 (ExpressionList -> ExpressionList COMMA Expression .)
    XOR_ASSIGN      reduce using rule 33 (ExpressionList -> ExpressionList COMMA Expression .)
    SHL_ASSIGN      reduce using rule 33 (ExpressionList -> ExpressionList COMMA Expression .)
    SHR_ASSIGN      reduce using rule 33 (ExpressionList -> ExpressionList COMMA Expression .)
    ASSIGN          reduce using rule 33 (ExpressionList -> ExpressionList COMMA Expression .)
    RPAREN          reduce using rule 33 (ExpressionList -> ExpressionList COMMA Expression .)
    SEMICOLON       reduce using rule 33 (ExpressionList -> ExpressionList COMMA Expression .)
    LBRACE          reduce using rule 33 (ExpressionList -> ExpressionList COMMA Expression .)
    LOR             shift and go to state 120
    LAND            shift and go to state 125
    EQL             shift and go to state 136
    NEQ             shift and go to state 123
    LTN             shift and go to state 137
    LEQ             shift and go to state 140
    GTN             shift and go to state 134
    GEQ             shift and go to state 124
    ADD             shift and go to state 135
    SUB             shift and go to state 119
    OR              shift and go to state 141
    XOR             shift and go to state 131
    MUL             shift and go to state 121
    DIV             shift and go to state 122
    MOD             shift and go to state 142
    SHL             shift and go to state 126
    SHR             shift and go to state 130
    AND             shift and go to state 138
    AND_NOT         shift and go to state 127

    AddOp                          shift and go to state 129
    RelOp                          shift and go to state 139
    BinaryOp                       shift and go to state 128
    MulOp                          shift and go to state 132

state 186

    (57) StructType -> STRUCT OpenStructS LBRACE FieldDecl_curl . RBRACE CloseStructS
    (58) FieldDecl_curl -> FieldDecl_curl . FieldDecl SEMICOLON
    (60) FieldDecl -> . ID COMMA IdentifierList Type
    (61) FieldDecl -> . ID COMMA IdentifierList ID
    (62) FieldDecl -> . ID Type
    (63) FieldDecl -> . ID ID
    (64) FieldDecl -> . ID STRUCT MUL ID
    (65) FieldDecl -> . ID COMMA IdentifierList STRUCT MUL ID

    RBRACE          shift and go to state 231
    ID              shift and go to state 230

    FieldDecl                      shift and go to state 229

state 187

    (133) Slice -> LBRACK COLON RBRACK .

    LBRACK          reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    LPAREN          reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    RBRACK          reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    LOR             reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    LAND            reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    EQL             reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    NEQ             reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    LTN             reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    LEQ             reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    GTN             reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    GEQ             reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    ADD             reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    SUB             reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    OR              reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    XOR             reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    MUL             reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    DIV             reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    MOD             reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    SHL             reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    SHR             reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    AND             reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    AND_NOT         reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    COMMA           reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    SEMICOLON       reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    RPAREN          reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    COLON           reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    ADD_ASSIGN      reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    SUB_ASSIGN      reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    MUL_ASSIGN      reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    DIV_ASSIGN      reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    MOD_ASSIGN      reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    AND_ASSIGN      reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    OR_ASSIGN       reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    XOR_ASSIGN      reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    SHL_ASSIGN      reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    SHR_ASSIGN      reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    ASSIGN          reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    LBRACE          reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    INC             reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)
    DEC             reduce using rule 133 (Slice -> LBRACK COLON RBRACK .)


state 188

    (131) Slice -> LBRACK COLON Expression . RBRACK
    (135) Slice -> LBRACK COLON Expression . COLON Expression RBRACK
    (91) Expression -> Expression . BinaryOp UnaryExpr
    (94) BinaryOp -> . LOR
    (95) BinaryOp -> . LAND
    (96) BinaryOp -> . RelOp
    (97) BinaryOp -> . AddOp
    (98) BinaryOp -> . MulOp
    (99) RelOp -> . EQL
    (100) RelOp -> . NEQ
    (101) RelOp -> . LTN
    (102) RelOp -> . LEQ
    (103) RelOp -> . GTN
    (104) RelOp -> . GEQ
    (105) AddOp -> . ADD
    (106) AddOp -> . SUB
    (107) AddOp -> . OR
    (108) AddOp -> . XOR
    (109) MulOp -> . MUL
    (110) MulOp -> . DIV
    (111) MulOp -> . MOD
    (112) MulOp -> . SHL
    (113) MulOp -> . SHR
    (114) MulOp -> . AND
    (115) MulOp -> . AND_NOT

    RBRACK          shift and go to state 233
    COLON           shift and go to state 232
    LOR             shift and go to state 120
    LAND            shift and go to state 125
    EQL             shift and go to state 136
    NEQ             shift and go to state 123
    LTN             shift and go to state 137
    LEQ             shift and go to state 140
    GTN             shift and go to state 134
    GEQ             shift and go to state 124
    ADD             shift and go to state 135
    SUB             shift and go to state 119
    OR              shift and go to state 141
    XOR             shift and go to state 131
    MUL             shift and go to state 121
    DIV             shift and go to state 122
    MOD             shift and go to state 142
    SHL             shift and go to state 126
    SHR             shift and go to state 130
    AND             shift and go to state 138
    AND_NOT         shift and go to state 127

    AddOp                          shift and go to state 129
    BinaryOp                       shift and go to state 128
    MulOp                          shift and go to state 132
    RelOp                          shift and go to state 139

state 189

    (130) Slice -> LBRACK Expression COLON . Expression RBRACK
    (132) Slice -> LBRACK Expression COLON . RBRACK
    (134) Slice -> LBRACK Expression COLON . Expression COLON Expression RBRACK
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    RBRACK          shift and go to state 234
    ID              shift and go to state 82
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    RuneLit                        shift and go to state 80
    UnaryOp                        shift and go to state 65
    TrueLit                        shift and go to state 90
    BasicLit                       shift and go to state 70
    UnaryExpr                      shift and go to state 75
    FloatLit                       shift and go to state 76
    FalseLit                       shift and go to state 66
    IntLit                         shift and go to state 68
    Literal                        shift and go to state 67
    PrimaryExpr                    shift and go to state 77
    StringLit                      shift and go to state 88
    Expression                     shift and go to state 235

state 190

    (129) Index -> LBRACK Expression RBRACK .

    LBRACK          reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    LPAREN          reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    LOR             reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    LAND            reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    EQL             reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    NEQ             reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    LTN             reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    LEQ             reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    GTN             reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    GEQ             reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    ADD             reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    SUB             reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    OR              reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    XOR             reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    MUL             reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    DIV             reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    MOD             reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    SHL             reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    SHR             reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    AND             reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    AND_NOT         reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    COMMA           reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    SEMICOLON       reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    COLON           reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    DIV_ASSIGN      reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    MOD_ASSIGN      reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    AND_ASSIGN      reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    OR_ASSIGN       reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    SHL_ASSIGN      reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    SHR_ASSIGN      reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    ASSIGN          reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    LBRACE          reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    INC             reduce using rule 129 (Index -> LBRACK Expression RBRACK .)
    DEC             reduce using rule 129 (Index -> LBRACK Expression RBRACK .)


state 191

    (137) Arguments -> LPAREN ExpressionList RPAREN .

    LBRACK          reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    LPAREN          reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    RBRACK          reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    LOR             reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    LAND            reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    EQL             reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    NEQ             reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    LTN             reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    LEQ             reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    GTN             reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    GEQ             reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    ADD             reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    SUB             reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    OR              reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    XOR             reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    MUL             reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    DIV             reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    MOD             reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHL             reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHR             reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    AND             reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    AND_NOT         reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    COMMA           reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    SEMICOLON       reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    RPAREN          reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    COLON           reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    ADD_ASSIGN      reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    SUB_ASSIGN      reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    MUL_ASSIGN      reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    DIV_ASSIGN      reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    MOD_ASSIGN      reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    AND_ASSIGN      reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    OR_ASSIGN       reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    XOR_ASSIGN      reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHL_ASSIGN      reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHR_ASSIGN      reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    ASSIGN          reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    LBRACE          reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    INC             reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)
    DEC             reduce using rule 137 (Arguments -> LPAREN ExpressionList RPAREN .)


state 192

    (138) Arguments -> LPAREN ExpressionList COMMA . RPAREN
    (33) ExpressionList -> ExpressionList COMMA . Expression
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    RPAREN          shift and go to state 236
    ID              shift and go to state 82
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    RuneLit                        shift and go to state 80
    UnaryOp                        shift and go to state 65
    TrueLit                        shift and go to state 90
    BasicLit                       shift and go to state 70
    UnaryExpr                      shift and go to state 75
    FloatLit                       shift and go to state 76
    FalseLit                       shift and go to state 66
    IntLit                         shift and go to state 68
    Literal                        shift and go to state 67
    PrimaryExpr                    shift and go to state 77
    StringLit                      shift and go to state 88
    Expression                     shift and go to state 185

state 193

    (77) Parameters -> LPAREN ParameterList COMMA RPAREN .

    LPAREN          reduce using rule 77 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    LBRACE          reduce using rule 77 (Parameters -> LPAREN ParameterList COMMA RPAREN .)


state 194

    (79) ParameterList -> ParameterList COMMA ParameterDecl .

    RPAREN          reduce using rule 79 (ParameterList -> ParameterList COMMA ParameterDecl .)
    COMMA           reduce using rule 79 (ParameterList -> ParameterList COMMA ParameterDecl .)


state 195

    (85) ParaIdList -> ParaIdList COMMA ID .

    ID              reduce using rule 85 (ParaIdList -> ParaIdList COMMA ID .)
    COMMA           reduce using rule 85 (ParaIdList -> ParaIdList COMMA ID .)
    LPAREN          reduce using rule 85 (ParaIdList -> ParaIdList COMMA ID .)
    LBRACK          reduce using rule 85 (ParaIdList -> ParaIdList COMMA ID .)
    MUL             reduce using rule 85 (ParaIdList -> ParaIdList COMMA ID .)


state 196

    (84) ParaIdList -> ID COMMA ID .

    ID              reduce using rule 84 (ParaIdList -> ID COMMA ID .)
    COMMA           reduce using rule 84 (ParaIdList -> ID COMMA ID .)
    LPAREN          reduce using rule 84 (ParaIdList -> ID COMMA ID .)
    LBRACK          reduce using rule 84 (ParaIdList -> ID COMMA ID .)
    MUL             reduce using rule 84 (ParaIdList -> ID COMMA ID .)


state 197

    (69) Result -> LPAREN TypeList RPAREN .

    LBRACE          reduce using rule 69 (Result -> LPAREN TypeList RPAREN .)


state 198

    (73) TypeList -> TypeList COMMA . ID
    (74) TypeList -> TypeList COMMA . Type
    (47) Type -> . LPAREN Type RPAREN
    (48) Type -> . LPAREN ID RPAREN
    (49) Type -> . TypeLit
    (50) TypeLit -> . ArrayType
    (51) TypeLit -> . PointerType
    (52) TypeLit -> . SliceType
    (53) ArrayType -> . LBRACK Expression RBRACK Type
    (54) ArrayType -> . LBRACK Expression RBRACK ID
    (66) PointerType -> . MUL Type
    (67) PointerType -> . MUL ID
    (55) SliceType -> . LBRACK RBRACK Type
    (56) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 238
    LPAREN          shift and go to state 47
    LBRACK          shift and go to state 44
    MUL             shift and go to state 49

    Type                           shift and go to state 237
    ArrayType                      shift and go to state 45
    PointerType                    shift and go to state 48
    TypeLit                        shift and go to state 43
    SliceType                      shift and go to state 51

state 199

    (157) Statement -> ContinueStmt .

    SEMICOLON       reduce using rule 157 (Statement -> ContinueStmt .)


state 200

    (88) Statement_curl -> Statement_curl Statement . SEMICOLON

    SEMICOLON       shift and go to state 239


state 201

    (160) Statement -> IfStmt .

    SEMICOLON       reduce using rule 160 (Statement -> IfStmt .)


state 202

    (166) SimpleStmt -> Assignment .

    SEMICOLON       reduce using rule 166 (SimpleStmt -> Assignment .)
    LBRACE          reduce using rule 166 (SimpleStmt -> Assignment .)


state 203

    (161) Statement -> OpenS . Block CloseS
    (86) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 155

    Block                          shift and go to state 240

state 204

    (191) GotoStmt -> GOTO . ID

    ID              shift and go to state 241


state 205

    (185) ReturnStmt -> RETURN . ExpressionList
    (186) ReturnStmt -> RETURN .
    (32) ExpressionList -> . Expression
    (33) ExpressionList -> . ExpressionList COMMA Expression
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    SEMICOLON       reduce using rule 186 (ReturnStmt -> RETURN .)
    ID              shift and go to state 82
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    RuneLit                        shift and go to state 80
    UnaryOp                        shift and go to state 65
    TrueLit                        shift and go to state 90
    BasicLit                       shift and go to state 70
    UnaryExpr                      shift and go to state 75
    FloatLit                       shift and go to state 76
    FalseLit                       shift and go to state 66
    IntLit                         shift and go to state 68
    Literal                        shift and go to state 67
    ExpressionList                 shift and go to state 242
    PrimaryExpr                    shift and go to state 77
    StringLit                      shift and go to state 88
    Expression                     shift and go to state 104

state 206

    (197) SwitchStmt -> ExprSwitchStmt .

    SEMICOLON       reduce using rule 197 (SwitchStmt -> ExprSwitchStmt .)


state 207

    (193) ShortVarDecl -> IdentifierList . DEFINE ExpressionList

    DEFINE          shift and go to state 243


state 208

    (158) Statement -> GotoStmt .

    SEMICOLON       reduce using rule 158 (Statement -> GotoStmt .)


state 209

    (206) ForStmt -> FOR . OpenS Expression Block CloseS
    (207) ForStmt -> FOR . OpenS ForClause Block CloseS
    (208) ForStmt -> FOR . OpenS Block CloseS
    (2) OpenS -> .

    LBRACE          reduce using rule 2 (OpenS -> .)
    ID              reduce using rule 2 (OpenS -> .)
    LPAREN          reduce using rule 2 (OpenS -> .)
    ADD             reduce using rule 2 (OpenS -> .)
    SUB             reduce using rule 2 (OpenS -> .)
    NOT             reduce using rule 2 (OpenS -> .)
    XOR             reduce using rule 2 (OpenS -> .)
    MUL             reduce using rule 2 (OpenS -> .)
    AND             reduce using rule 2 (OpenS -> .)
    INT             reduce using rule 2 (OpenS -> .)
    FLOAT           reduce using rule 2 (OpenS -> .)
    RUNE            reduce using rule 2 (OpenS -> .)
    STRING          reduce using rule 2 (OpenS -> .)
    TRUE            reduce using rule 2 (OpenS -> .)
    FALSE           reduce using rule 2 (OpenS -> .)
    SEMICOLON       reduce using rule 2 (OpenS -> .)

    OpenS                          shift and go to state 244

state 210

    (153) Statement -> LabelledStmt .

    SEMICOLON       reduce using rule 153 (Statement -> LabelledStmt .)


state 211

    (162) Statement -> SwitchStmt .

    SEMICOLON       reduce using rule 162 (Statement -> SwitchStmt .)


state 212

    (189) ContinueStmt -> CONTINUE . ID
    (190) ContinueStmt -> CONTINUE .

    ID              shift and go to state 245
    SEMICOLON       reduce using rule 190 (ContinueStmt -> CONTINUE .)


state 213

    (192) FallthroughStmt -> FALLTHROUGH .

    SEMICOLON       reduce using rule 192 (FallthroughStmt -> FALLTHROUGH .)


state 214

    (184) LabelledStmt -> ID . COLON Statement
    (30) IdentifierList -> ID .
    (31) IdentifierList -> ID . COMMA IdentifierList
    (123) PrimaryExpr -> ID .
    (124) PrimaryExpr -> ID . DOT ID

    COLON           shift and go to state 246
    DEFINE          reduce using rule 30 (IdentifierList -> ID .)
    COMMA           shift and go to state 52
    LBRACK          reduce using rule 123 (PrimaryExpr -> ID .)
    LPAREN          reduce using rule 123 (PrimaryExpr -> ID .)
    INC             reduce using rule 123 (PrimaryExpr -> ID .)
    DEC             reduce using rule 123 (PrimaryExpr -> ID .)
    LOR             reduce using rule 123 (PrimaryExpr -> ID .)
    LAND            reduce using rule 123 (PrimaryExpr -> ID .)
    EQL             reduce using rule 123 (PrimaryExpr -> ID .)
    NEQ             reduce using rule 123 (PrimaryExpr -> ID .)
    LTN             reduce using rule 123 (PrimaryExpr -> ID .)
    LEQ             reduce using rule 123 (PrimaryExpr -> ID .)
    GTN             reduce using rule 123 (PrimaryExpr -> ID .)
    GEQ             reduce using rule 123 (PrimaryExpr -> ID .)
    ADD             reduce using rule 123 (PrimaryExpr -> ID .)
    SUB             reduce using rule 123 (PrimaryExpr -> ID .)
    OR              reduce using rule 123 (PrimaryExpr -> ID .)
    XOR             reduce using rule 123 (PrimaryExpr -> ID .)
    MUL             reduce using rule 123 (PrimaryExpr -> ID .)
    DIV             reduce using rule 123 (PrimaryExpr -> ID .)
    MOD             reduce using rule 123 (PrimaryExpr -> ID .)
    SHL             reduce using rule 123 (PrimaryExpr -> ID .)
    SHR             reduce using rule 123 (PrimaryExpr -> ID .)
    AND             reduce using rule 123 (PrimaryExpr -> ID .)
    AND_NOT         reduce using rule 123 (PrimaryExpr -> ID .)
    SEMICOLON       reduce using rule 123 (PrimaryExpr -> ID .)
    ADD_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    SUB_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    MUL_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    DIV_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    MOD_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    AND_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    AND_NOT_ASSIGN  reduce using rule 123 (PrimaryExpr -> ID .)
    OR_ASSIGN       reduce using rule 123 (PrimaryExpr -> ID .)
    XOR_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    SHL_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    SHR_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    ASSIGN          reduce using rule 123 (PrimaryExpr -> ID .)
    DOT             shift and go to state 143

  ! COMMA           [ reduce using rule 123 (PrimaryExpr -> ID .) ]


state 215

    (198) ExprSwitchStmt -> SWITCH . ExpressionName LBRACE ExprCaseClause_curl RBRACE
    (199) ExpressionName -> . Expression
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    ID              shift and go to state 82
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    TrueLit                        shift and go to state 90
    RuneLit                        shift and go to state 80
    UnaryOp                        shift and go to state 65
    BasicLit                       shift and go to state 70
    ExpressionName                 shift and go to state 247
    UnaryExpr                      shift and go to state 75
    FalseLit                       shift and go to state 66
    IntLit                         shift and go to state 68
    Literal                        shift and go to state 67
    PrimaryExpr                    shift and go to state 77
    FloatLit                       shift and go to state 76
    StringLit                      shift and go to state 88
    Expression                     shift and go to state 248

state 216

    (152) Statement -> Declaration .

    SEMICOLON       reduce using rule 152 (Statement -> Declaration .)


state 217

    (171) Assignment -> ExpressionList . AssignOp ExpressionList
    (33) ExpressionList -> ExpressionList . COMMA Expression
    (172) AssignOp -> . ADD_ASSIGN
    (173) AssignOp -> . SUB_ASSIGN
    (174) AssignOp -> . MUL_ASSIGN
    (175) AssignOp -> . DIV_ASSIGN
    (176) AssignOp -> . MOD_ASSIGN
    (177) AssignOp -> . AND_ASSIGN
    (178) AssignOp -> . AND_NOT_ASSIGN
    (179) AssignOp -> . OR_ASSIGN
    (180) AssignOp -> . XOR_ASSIGN
    (181) AssignOp -> . SHL_ASSIGN
    (182) AssignOp -> . SHR_ASSIGN
    (183) AssignOp -> . ASSIGN

    COMMA           shift and go to state 158
    ADD_ASSIGN      shift and go to state 260
    SUB_ASSIGN      shift and go to state 249
    MUL_ASSIGN      shift and go to state 251
    DIV_ASSIGN      shift and go to state 259
    MOD_ASSIGN      shift and go to state 256
    AND_ASSIGN      shift and go to state 258
    AND_NOT_ASSIGN  shift and go to state 261
    OR_ASSIGN       shift and go to state 255
    XOR_ASSIGN      shift and go to state 252
    SHL_ASSIGN      shift and go to state 257
    SHR_ASSIGN      shift and go to state 254
    ASSIGN          shift and go to state 253

    AssignOp                       shift and go to state 250

state 218

    (164) SimpleStmt -> Expression .
    (91) Expression -> Expression . BinaryOp UnaryExpr
    (169) IncDecStmt -> Expression . INC
    (170) IncDecStmt -> Expression . DEC
    (32) ExpressionList -> Expression .
    (94) BinaryOp -> . LOR
    (95) BinaryOp -> . LAND
    (96) BinaryOp -> . RelOp
    (97) BinaryOp -> . AddOp
    (98) BinaryOp -> . MulOp
    (99) RelOp -> . EQL
    (100) RelOp -> . NEQ
    (101) RelOp -> . LTN
    (102) RelOp -> . LEQ
    (103) RelOp -> . GTN
    (104) RelOp -> . GEQ
    (105) AddOp -> . ADD
    (106) AddOp -> . SUB
    (107) AddOp -> . OR
    (108) AddOp -> . XOR
    (109) MulOp -> . MUL
    (110) MulOp -> . DIV
    (111) MulOp -> . MOD
    (112) MulOp -> . SHL
    (113) MulOp -> . SHR
    (114) MulOp -> . AND
    (115) MulOp -> . AND_NOT

    SEMICOLON       reduce using rule 164 (SimpleStmt -> Expression .)
    LBRACE          reduce using rule 164 (SimpleStmt -> Expression .)
    INC             shift and go to state 263
    DEC             shift and go to state 262
    COMMA           reduce using rule 32 (ExpressionList -> Expression .)
    ADD_ASSIGN      reduce using rule 32 (ExpressionList -> Expression .)
    SUB_ASSIGN      reduce using rule 32 (ExpressionList -> Expression .)
    MUL_ASSIGN      reduce using rule 32 (ExpressionList -> Expression .)
    DIV_ASSIGN      reduce using rule 32 (ExpressionList -> Expression .)
    MOD_ASSIGN      reduce using rule 32 (ExpressionList -> Expression .)
    AND_ASSIGN      reduce using rule 32 (ExpressionList -> Expression .)
    AND_NOT_ASSIGN  reduce using rule 32 (ExpressionList -> Expression .)
    OR_ASSIGN       reduce using rule 32 (ExpressionList -> Expression .)
    XOR_ASSIGN      reduce using rule 32 (ExpressionList -> Expression .)
    SHL_ASSIGN      reduce using rule 32 (ExpressionList -> Expression .)
    SHR_ASSIGN      reduce using rule 32 (ExpressionList -> Expression .)
    ASSIGN          reduce using rule 32 (ExpressionList -> Expression .)
    LOR             shift and go to state 120
    LAND            shift and go to state 125
    EQL             shift and go to state 136
    NEQ             shift and go to state 123
    LTN             shift and go to state 137
    LEQ             shift and go to state 140
    GTN             shift and go to state 134
    GEQ             shift and go to state 124
    ADD             shift and go to state 135
    SUB             shift and go to state 119
    OR              shift and go to state 141
    XOR             shift and go to state 131
    MUL             shift and go to state 121
    DIV             shift and go to state 122
    MOD             shift and go to state 142
    SHL             shift and go to state 126
    SHR             shift and go to state 130
    AND             shift and go to state 138
    AND_NOT         shift and go to state 127

    AddOp                          shift and go to state 129
    BinaryOp                       shift and go to state 128
    MulOp                          shift and go to state 132
    RelOp                          shift and go to state 139

state 219

    (187) BreakStmt -> BREAK . ID
    (188) BreakStmt -> BREAK .

    ID              shift and go to state 264
    SEMICOLON       reduce using rule 188 (BreakStmt -> BREAK .)


state 220

    (155) Statement -> ReturnStmt .

    SEMICOLON       reduce using rule 155 (Statement -> ReturnStmt .)


state 221

    (159) Statement -> FallthroughStmt .

    SEMICOLON       reduce using rule 159 (Statement -> FallthroughStmt .)


state 222

    (154) Statement -> SimpleStmt .

    SEMICOLON       reduce using rule 154 (Statement -> SimpleStmt .)


state 223

    (163) Statement -> ForStmt .

    SEMICOLON       reduce using rule 163 (Statement -> ForStmt .)


state 224

    (165) SimpleStmt -> IncDecStmt .

    SEMICOLON       reduce using rule 165 (SimpleStmt -> IncDecStmt .)
    LBRACE          reduce using rule 165 (SimpleStmt -> IncDecStmt .)


state 225

    (167) SimpleStmt -> ShortVarDecl .

    SEMICOLON       reduce using rule 167 (SimpleStmt -> ShortVarDecl .)
    LBRACE          reduce using rule 167 (SimpleStmt -> ShortVarDecl .)


state 226

    (194) IfStmt -> IF . OpenS Expression Block CloseS
    (195) IfStmt -> IF . OpenS Expression Block CloseS ELSE IfStmt
    (196) IfStmt -> IF . OpenS Expression Block CloseS ELSE OpenS Block CloseS
    (2) OpenS -> .

    ID              reduce using rule 2 (OpenS -> .)
    LPAREN          reduce using rule 2 (OpenS -> .)
    ADD             reduce using rule 2 (OpenS -> .)
    SUB             reduce using rule 2 (OpenS -> .)
    NOT             reduce using rule 2 (OpenS -> .)
    XOR             reduce using rule 2 (OpenS -> .)
    MUL             reduce using rule 2 (OpenS -> .)
    AND             reduce using rule 2 (OpenS -> .)
    INT             reduce using rule 2 (OpenS -> .)
    FLOAT           reduce using rule 2 (OpenS -> .)
    RUNE            reduce using rule 2 (OpenS -> .)
    STRING          reduce using rule 2 (OpenS -> .)
    TRUE            reduce using rule 2 (OpenS -> .)
    FALSE           reduce using rule 2 (OpenS -> .)

    OpenS                          shift and go to state 265

state 227

    (156) Statement -> BreakStmt .

    SEMICOLON       reduce using rule 156 (Statement -> BreakStmt .)


state 228

    (86) Block -> LBRACE StatementList RBRACE .

    SEMICOLON       reduce using rule 86 (Block -> LBRACE StatementList RBRACE .)
    ELSE            reduce using rule 86 (Block -> LBRACE StatementList RBRACE .)


state 229

    (58) FieldDecl_curl -> FieldDecl_curl FieldDecl . SEMICOLON

    SEMICOLON       shift and go to state 266


state 230

    (60) FieldDecl -> ID . COMMA IdentifierList Type
    (61) FieldDecl -> ID . COMMA IdentifierList ID
    (62) FieldDecl -> ID . Type
    (63) FieldDecl -> ID . ID
    (64) FieldDecl -> ID . STRUCT MUL ID
    (65) FieldDecl -> ID . COMMA IdentifierList STRUCT MUL ID
    (47) Type -> . LPAREN Type RPAREN
    (48) Type -> . LPAREN ID RPAREN
    (49) Type -> . TypeLit
    (50) TypeLit -> . ArrayType
    (51) TypeLit -> . PointerType
    (52) TypeLit -> . SliceType
    (53) ArrayType -> . LBRACK Expression RBRACK Type
    (54) ArrayType -> . LBRACK Expression RBRACK ID
    (66) PointerType -> . MUL Type
    (67) PointerType -> . MUL ID
    (55) SliceType -> . LBRACK RBRACK Type
    (56) SliceType -> . LBRACK RBRACK ID

    COMMA           shift and go to state 268
    ID              shift and go to state 270
    STRUCT          shift and go to state 267
    LPAREN          shift and go to state 47
    LBRACK          shift and go to state 44
    MUL             shift and go to state 49

    Type                           shift and go to state 269
    ArrayType                      shift and go to state 45
    PointerType                    shift and go to state 48
    TypeLit                        shift and go to state 43
    SliceType                      shift and go to state 51

state 231

    (57) StructType -> STRUCT OpenStructS LBRACE FieldDecl_curl RBRACE . CloseStructS
    (5) CloseStructS -> .

    SEMICOLON       reduce using rule 5 (CloseStructS -> .)

    CloseStructS                   shift and go to state 271

state 232

    (135) Slice -> LBRACK COLON Expression COLON . Expression RBRACK
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    ID              shift and go to state 82
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    RuneLit                        shift and go to state 80
    UnaryOp                        shift and go to state 65
    TrueLit                        shift and go to state 90
    BasicLit                       shift and go to state 70
    UnaryExpr                      shift and go to state 75
    FloatLit                       shift and go to state 76
    FalseLit                       shift and go to state 66
    IntLit                         shift and go to state 68
    Literal                        shift and go to state 67
    PrimaryExpr                    shift and go to state 77
    StringLit                      shift and go to state 88
    Expression                     shift and go to state 272

state 233

    (131) Slice -> LBRACK COLON Expression RBRACK .

    LBRACK          reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    LPAREN          reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    RBRACK          reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    LOR             reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    LAND            reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    EQL             reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    NEQ             reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    LTN             reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    LEQ             reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    GTN             reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    GEQ             reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    ADD             reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    SUB             reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    OR              reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    XOR             reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    MUL             reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    DIV             reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    MOD             reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    SHL             reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    SHR             reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    AND             reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    AND_NOT         reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    COMMA           reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    SEMICOLON       reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    RPAREN          reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    COLON           reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    DIV_ASSIGN      reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    MOD_ASSIGN      reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    AND_ASSIGN      reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    OR_ASSIGN       reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    SHL_ASSIGN      reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    SHR_ASSIGN      reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    ASSIGN          reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    LBRACE          reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    INC             reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)
    DEC             reduce using rule 131 (Slice -> LBRACK COLON Expression RBRACK .)


state 234

    (132) Slice -> LBRACK Expression COLON RBRACK .

    LBRACK          reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    LPAREN          reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    RBRACK          reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    LOR             reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    LAND            reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    EQL             reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    NEQ             reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    LTN             reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    LEQ             reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    GTN             reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    GEQ             reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    ADD             reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    SUB             reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    OR              reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    XOR             reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    MUL             reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    DIV             reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    MOD             reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    SHL             reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    SHR             reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    AND             reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    AND_NOT         reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    COMMA           reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    SEMICOLON       reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    RPAREN          reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    COLON           reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    ADD_ASSIGN      reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    SUB_ASSIGN      reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    MUL_ASSIGN      reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    DIV_ASSIGN      reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    MOD_ASSIGN      reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    AND_ASSIGN      reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    OR_ASSIGN       reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    XOR_ASSIGN      reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    SHL_ASSIGN      reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    SHR_ASSIGN      reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    ASSIGN          reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    LBRACE          reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    INC             reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)
    DEC             reduce using rule 132 (Slice -> LBRACK Expression COLON RBRACK .)


state 235

    (130) Slice -> LBRACK Expression COLON Expression . RBRACK
    (134) Slice -> LBRACK Expression COLON Expression . COLON Expression RBRACK
    (91) Expression -> Expression . BinaryOp UnaryExpr
    (94) BinaryOp -> . LOR
    (95) BinaryOp -> . LAND
    (96) BinaryOp -> . RelOp
    (97) BinaryOp -> . AddOp
    (98) BinaryOp -> . MulOp
    (99) RelOp -> . EQL
    (100) RelOp -> . NEQ
    (101) RelOp -> . LTN
    (102) RelOp -> . LEQ
    (103) RelOp -> . GTN
    (104) RelOp -> . GEQ
    (105) AddOp -> . ADD
    (106) AddOp -> . SUB
    (107) AddOp -> . OR
    (108) AddOp -> . XOR
    (109) MulOp -> . MUL
    (110) MulOp -> . DIV
    (111) MulOp -> . MOD
    (112) MulOp -> . SHL
    (113) MulOp -> . SHR
    (114) MulOp -> . AND
    (115) MulOp -> . AND_NOT

    RBRACK          shift and go to state 274
    COLON           shift and go to state 273
    LOR             shift and go to state 120
    LAND            shift and go to state 125
    EQL             shift and go to state 136
    NEQ             shift and go to state 123
    LTN             shift and go to state 137
    LEQ             shift and go to state 140
    GTN             shift and go to state 134
    GEQ             shift and go to state 124
    ADD             shift and go to state 135
    SUB             shift and go to state 119
    OR              shift and go to state 141
    XOR             shift and go to state 131
    MUL             shift and go to state 121
    DIV             shift and go to state 122
    MOD             shift and go to state 142
    SHL             shift and go to state 126
    SHR             shift and go to state 130
    AND             shift and go to state 138
    AND_NOT         shift and go to state 127

    AddOp                          shift and go to state 129
    BinaryOp                       shift and go to state 128
    MulOp                          shift and go to state 132
    RelOp                          shift and go to state 139

state 236

    (138) Arguments -> LPAREN ExpressionList COMMA RPAREN .

    LBRACK          reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LPAREN          reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    RBRACK          reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LOR             reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LAND            reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    EQL             reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    NEQ             reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LTN             reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LEQ             reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    GTN             reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    GEQ             reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    ADD             reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SUB             reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    OR              reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    XOR             reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    MUL             reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    DIV             reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    MOD             reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHL             reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHR             reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    AND             reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    AND_NOT         reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    COMMA           reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SEMICOLON       reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    RPAREN          reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    COLON           reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    ADD_ASSIGN      reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SUB_ASSIGN      reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    MUL_ASSIGN      reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    DIV_ASSIGN      reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    MOD_ASSIGN      reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    AND_ASSIGN      reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    OR_ASSIGN       reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    XOR_ASSIGN      reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHL_ASSIGN      reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHR_ASSIGN      reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    ASSIGN          reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LBRACE          reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    INC             reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    DEC             reduce using rule 138 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)


state 237

    (74) TypeList -> TypeList COMMA Type .

    RPAREN          reduce using rule 74 (TypeList -> TypeList COMMA Type .)
    COMMA           reduce using rule 74 (TypeList -> TypeList COMMA Type .)


state 238

    (73) TypeList -> TypeList COMMA ID .

    RPAREN          reduce using rule 73 (TypeList -> TypeList COMMA ID .)
    COMMA           reduce using rule 73 (TypeList -> TypeList COMMA ID .)


state 239

    (88) Statement_curl -> Statement_curl Statement SEMICOLON .

    ID              reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    RETURN          reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    BREAK           reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    CONTINUE        reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    GOTO            reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    FALLTHROUGH     reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    IF              reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    FOR             reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    CONST           reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    TYPE            reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    VAR             reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    SWITCH          reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    LPAREN          reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    ADD             reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    SUB             reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    NOT             reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    XOR             reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    MUL             reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    AND             reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    INT             reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    FLOAT           reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    RUNE            reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    STRING          reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    TRUE            reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    FALSE           reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    SEMICOLON       reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    LBRACE          reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    RBRACE          reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    CASE            reduce using rule 88 (Statement_curl -> Statement_curl Statement SEMICOLON .)


state 240

    (161) Statement -> OpenS Block . CloseS
    (3) CloseS -> .

    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 275

state 241

    (191) GotoStmt -> GOTO ID .

    SEMICOLON       reduce using rule 191 (GotoStmt -> GOTO ID .)


state 242

    (185) ReturnStmt -> RETURN ExpressionList .
    (33) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 185 (ReturnStmt -> RETURN ExpressionList .)
    COMMA           shift and go to state 158


state 243

    (193) ShortVarDecl -> IdentifierList DEFINE . ExpressionList
    (32) ExpressionList -> . Expression
    (33) ExpressionList -> . ExpressionList COMMA Expression
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    ID              shift and go to state 82
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    RuneLit                        shift and go to state 80
    UnaryOp                        shift and go to state 65
    TrueLit                        shift and go to state 90
    BasicLit                       shift and go to state 70
    UnaryExpr                      shift and go to state 75
    FloatLit                       shift and go to state 76
    FalseLit                       shift and go to state 66
    IntLit                         shift and go to state 68
    Literal                        shift and go to state 67
    ExpressionList                 shift and go to state 276
    PrimaryExpr                    shift and go to state 77
    StringLit                      shift and go to state 88
    Expression                     shift and go to state 104

state 244

    (206) ForStmt -> FOR OpenS . Expression Block CloseS
    (207) ForStmt -> FOR OpenS . ForClause Block CloseS
    (208) ForStmt -> FOR OpenS . Block CloseS
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (209) ForClause -> . SimpleStmt SEMICOLON SEMICOLON SimpleStmt
    (210) ForClause -> . SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt
    (86) Block -> . LBRACE StatementList RBRACE
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (164) SimpleStmt -> . Expression
    (165) SimpleStmt -> . IncDecStmt
    (166) SimpleStmt -> . Assignment
    (167) SimpleStmt -> . ShortVarDecl
    (168) SimpleStmt -> .
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (169) IncDecStmt -> . Expression INC
    (170) IncDecStmt -> . Expression DEC
    (171) Assignment -> . ExpressionList AssignOp ExpressionList
    (193) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (139) Literal -> . BasicLit
    (32) ExpressionList -> . Expression
    (33) ExpressionList -> . ExpressionList COMMA Expression
    (30) IdentifierList -> . ID
    (31) IdentifierList -> . ID COMMA IdentifierList
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    LBRACE          shift and go to state 155
    SEMICOLON       reduce using rule 168 (SimpleStmt -> .)
    ID              shift and go to state 280
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    UnaryOp                        shift and go to state 65
    SimpleStmt                     shift and go to state 277
    FalseLit                       shift and go to state 66
    Literal                        shift and go to state 67
    IdentifierList                 shift and go to state 207
    IntLit                         shift and go to state 68
    RuneLit                        shift and go to state 80
    Assignment                     shift and go to state 202
    IncDecStmt                     shift and go to state 224
    UnaryExpr                      shift and go to state 75
    FloatLit                       shift and go to state 76
    ExpressionList                 shift and go to state 217
    ForClause                      shift and go to state 278
    Expression                     shift and go to state 279
    ShortVarDecl                   shift and go to state 225
    Block                          shift and go to state 281
    StringLit                      shift and go to state 88
    BasicLit                       shift and go to state 70
    PrimaryExpr                    shift and go to state 77
    TrueLit                        shift and go to state 90

state 245

    (189) ContinueStmt -> CONTINUE ID .

    SEMICOLON       reduce using rule 189 (ContinueStmt -> CONTINUE ID .)


state 246

    (184) LabelledStmt -> ID COLON . Statement
    (152) Statement -> . Declaration
    (153) Statement -> . LabelledStmt
    (154) Statement -> . SimpleStmt
    (155) Statement -> . ReturnStmt
    (156) Statement -> . BreakStmt
    (157) Statement -> . ContinueStmt
    (158) Statement -> . GotoStmt
    (159) Statement -> . FallthroughStmt
    (160) Statement -> . IfStmt
    (161) Statement -> . OpenS Block CloseS
    (162) Statement -> . SwitchStmt
    (163) Statement -> . ForStmt
    (21) Declaration -> . ConstDecl
    (22) Declaration -> . StructDecl
    (23) Declaration -> . VarDecl
    (184) LabelledStmt -> . ID COLON Statement
    (164) SimpleStmt -> . Expression
    (165) SimpleStmt -> . IncDecStmt
    (166) SimpleStmt -> . Assignment
    (167) SimpleStmt -> . ShortVarDecl
    (168) SimpleStmt -> .
    (185) ReturnStmt -> . RETURN ExpressionList
    (186) ReturnStmt -> . RETURN
    (187) BreakStmt -> . BREAK ID
    (188) BreakStmt -> . BREAK
    (189) ContinueStmt -> . CONTINUE ID
    (190) ContinueStmt -> . CONTINUE
    (191) GotoStmt -> . GOTO ID
    (192) FallthroughStmt -> . FALLTHROUGH
    (194) IfStmt -> . IF OpenS Expression Block CloseS
    (195) IfStmt -> . IF OpenS Expression Block CloseS ELSE IfStmt
    (196) IfStmt -> . IF OpenS Expression Block CloseS ELSE OpenS Block CloseS
    (2) OpenS -> .
    (197) SwitchStmt -> . ExprSwitchStmt
    (206) ForStmt -> . FOR OpenS Expression Block CloseS
    (207) ForStmt -> . FOR OpenS ForClause Block CloseS
    (208) ForStmt -> . FOR OpenS Block CloseS
    (24) ConstDecl -> . CONST ConstSpec
    (25) ConstDecl -> . CONST LPAREN ConstSpec_curl RPAREN
    (34) StructDecl -> . TYPE StructName StructType
    (36) VarDecl -> . VAR VarSpec
    (37) VarDecl -> . VAR LPAREN VarSpec_curl RPAREN
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (169) IncDecStmt -> . Expression INC
    (170) IncDecStmt -> . Expression DEC
    (171) Assignment -> . ExpressionList AssignOp ExpressionList
    (193) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (198) ExprSwitchStmt -> . SWITCH ExpressionName LBRACE ExprCaseClause_curl RBRACE
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (32) ExpressionList -> . Expression
    (33) ExpressionList -> . ExpressionList COMMA Expression
    (30) IdentifierList -> . ID
    (31) IdentifierList -> . ID COMMA IdentifierList
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    ID              shift and go to state 214
    SEMICOLON       reduce using rule 168 (SimpleStmt -> .)
    RETURN          shift and go to state 205
    BREAK           shift and go to state 219
    CONTINUE        shift and go to state 212
    GOTO            shift and go to state 204
    FALLTHROUGH     shift and go to state 213
    IF              shift and go to state 226
    LBRACE          reduce using rule 2 (OpenS -> .)
    FOR             shift and go to state 209
    CONST           shift and go to state 10
    TYPE            shift and go to state 19
    VAR             shift and go to state 16
    SWITCH          shift and go to state 215
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    UnaryOp                        shift and go to state 65
    ContinueStmt                   shift and go to state 199
    SimpleStmt                     shift and go to state 222
    FalseLit                       shift and go to state 66
    Literal                        shift and go to state 67
    ForStmt                        shift and go to state 223
    ExprSwitchStmt                 shift and go to state 206
    Statement                      shift and go to state 282
    IdentifierList                 shift and go to state 207
    IntLit                         shift and go to state 68
    IfStmt                         shift and go to state 201
    RuneLit                        shift and go to state 80
    Assignment                     shift and go to state 202
    IncDecStmt                     shift and go to state 224
    Declaration                    shift and go to state 216
    OpenS                          shift and go to state 203
    GotoStmt                       shift and go to state 208
    UnaryExpr                      shift and go to state 75
    FloatLit                       shift and go to state 76
    StructDecl                     shift and go to state 11
    ExpressionList                 shift and go to state 217
    LabelledStmt                   shift and go to state 210
    Expression                     shift and go to state 218
    ShortVarDecl                   shift and go to state 225
    TrueLit                        shift and go to state 90
    BreakStmt                      shift and go to state 227
    SwitchStmt                     shift and go to state 211
    StringLit                      shift and go to state 88
    VarDecl                        shift and go to state 18
    BasicLit                       shift and go to state 70
    PrimaryExpr                    shift and go to state 77
    ReturnStmt                     shift and go to state 220
    ConstDecl                      shift and go to state 17
    FallthroughStmt                shift and go to state 221

state 247

    (198) ExprSwitchStmt -> SWITCH ExpressionName . LBRACE ExprCaseClause_curl RBRACE

    LBRACE          shift and go to state 283


state 248

    (199) ExpressionName -> Expression .
    (91) Expression -> Expression . BinaryOp UnaryExpr
    (94) BinaryOp -> . LOR
    (95) BinaryOp -> . LAND
    (96) BinaryOp -> . RelOp
    (97) BinaryOp -> . AddOp
    (98) BinaryOp -> . MulOp
    (99) RelOp -> . EQL
    (100) RelOp -> . NEQ
    (101) RelOp -> . LTN
    (102) RelOp -> . LEQ
    (103) RelOp -> . GTN
    (104) RelOp -> . GEQ
    (105) AddOp -> . ADD
    (106) AddOp -> . SUB
    (107) AddOp -> . OR
    (108) AddOp -> . XOR
    (109) MulOp -> . MUL
    (110) MulOp -> . DIV
    (111) MulOp -> . MOD
    (112) MulOp -> . SHL
    (113) MulOp -> . SHR
    (114) MulOp -> . AND
    (115) MulOp -> . AND_NOT

    LBRACE          reduce using rule 199 (ExpressionName -> Expression .)
    LOR             shift and go to state 120
    LAND            shift and go to state 125
    EQL             shift and go to state 136
    NEQ             shift and go to state 123
    LTN             shift and go to state 137
    LEQ             shift and go to state 140
    GTN             shift and go to state 134
    GEQ             shift and go to state 124
    ADD             shift and go to state 135
    SUB             shift and go to state 119
    OR              shift and go to state 141
    XOR             shift and go to state 131
    MUL             shift and go to state 121
    DIV             shift and go to state 122
    MOD             shift and go to state 142
    SHL             shift and go to state 126
    SHR             shift and go to state 130
    AND             shift and go to state 138
    AND_NOT         shift and go to state 127

    AddOp                          shift and go to state 129
    BinaryOp                       shift and go to state 128
    MulOp                          shift and go to state 132
    RelOp                          shift and go to state 139

state 249

    (173) AssignOp -> SUB_ASSIGN .

    ID              reduce using rule 173 (AssignOp -> SUB_ASSIGN .)
    LPAREN          reduce using rule 173 (AssignOp -> SUB_ASSIGN .)
    ADD             reduce using rule 173 (AssignOp -> SUB_ASSIGN .)
    SUB             reduce using rule 173 (AssignOp -> SUB_ASSIGN .)
    NOT             reduce using rule 173 (AssignOp -> SUB_ASSIGN .)
    XOR             reduce using rule 173 (AssignOp -> SUB_ASSIGN .)
    MUL             reduce using rule 173 (AssignOp -> SUB_ASSIGN .)
    AND             reduce using rule 173 (AssignOp -> SUB_ASSIGN .)
    INT             reduce using rule 173 (AssignOp -> SUB_ASSIGN .)
    FLOAT           reduce using rule 173 (AssignOp -> SUB_ASSIGN .)
    RUNE            reduce using rule 173 (AssignOp -> SUB_ASSIGN .)
    STRING          reduce using rule 173 (AssignOp -> SUB_ASSIGN .)
    TRUE            reduce using rule 173 (AssignOp -> SUB_ASSIGN .)
    FALSE           reduce using rule 173 (AssignOp -> SUB_ASSIGN .)


state 250

    (171) Assignment -> ExpressionList AssignOp . ExpressionList
    (32) ExpressionList -> . Expression
    (33) ExpressionList -> . ExpressionList COMMA Expression
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    ID              shift and go to state 82
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    RuneLit                        shift and go to state 80
    UnaryOp                        shift and go to state 65
    TrueLit                        shift and go to state 90
    BasicLit                       shift and go to state 70
    UnaryExpr                      shift and go to state 75
    FloatLit                       shift and go to state 76
    FalseLit                       shift and go to state 66
    IntLit                         shift and go to state 68
    Literal                        shift and go to state 67
    ExpressionList                 shift and go to state 284
    PrimaryExpr                    shift and go to state 77
    StringLit                      shift and go to state 88
    Expression                     shift and go to state 104

state 251

    (174) AssignOp -> MUL_ASSIGN .

    ID              reduce using rule 174 (AssignOp -> MUL_ASSIGN .)
    LPAREN          reduce using rule 174 (AssignOp -> MUL_ASSIGN .)
    ADD             reduce using rule 174 (AssignOp -> MUL_ASSIGN .)
    SUB             reduce using rule 174 (AssignOp -> MUL_ASSIGN .)
    NOT             reduce using rule 174 (AssignOp -> MUL_ASSIGN .)
    XOR             reduce using rule 174 (AssignOp -> MUL_ASSIGN .)
    MUL             reduce using rule 174 (AssignOp -> MUL_ASSIGN .)
    AND             reduce using rule 174 (AssignOp -> MUL_ASSIGN .)
    INT             reduce using rule 174 (AssignOp -> MUL_ASSIGN .)
    FLOAT           reduce using rule 174 (AssignOp -> MUL_ASSIGN .)
    RUNE            reduce using rule 174 (AssignOp -> MUL_ASSIGN .)
    STRING          reduce using rule 174 (AssignOp -> MUL_ASSIGN .)
    TRUE            reduce using rule 174 (AssignOp -> MUL_ASSIGN .)
    FALSE           reduce using rule 174 (AssignOp -> MUL_ASSIGN .)


state 252

    (180) AssignOp -> XOR_ASSIGN .

    ID              reduce using rule 180 (AssignOp -> XOR_ASSIGN .)
    LPAREN          reduce using rule 180 (AssignOp -> XOR_ASSIGN .)
    ADD             reduce using rule 180 (AssignOp -> XOR_ASSIGN .)
    SUB             reduce using rule 180 (AssignOp -> XOR_ASSIGN .)
    NOT             reduce using rule 180 (AssignOp -> XOR_ASSIGN .)
    XOR             reduce using rule 180 (AssignOp -> XOR_ASSIGN .)
    MUL             reduce using rule 180 (AssignOp -> XOR_ASSIGN .)
    AND             reduce using rule 180 (AssignOp -> XOR_ASSIGN .)
    INT             reduce using rule 180 (AssignOp -> XOR_ASSIGN .)
    FLOAT           reduce using rule 180 (AssignOp -> XOR_ASSIGN .)
    RUNE            reduce using rule 180 (AssignOp -> XOR_ASSIGN .)
    STRING          reduce using rule 180 (AssignOp -> XOR_ASSIGN .)
    TRUE            reduce using rule 180 (AssignOp -> XOR_ASSIGN .)
    FALSE           reduce using rule 180 (AssignOp -> XOR_ASSIGN .)


state 253

    (183) AssignOp -> ASSIGN .

    ID              reduce using rule 183 (AssignOp -> ASSIGN .)
    LPAREN          reduce using rule 183 (AssignOp -> ASSIGN .)
    ADD             reduce using rule 183 (AssignOp -> ASSIGN .)
    SUB             reduce using rule 183 (AssignOp -> ASSIGN .)
    NOT             reduce using rule 183 (AssignOp -> ASSIGN .)
    XOR             reduce using rule 183 (AssignOp -> ASSIGN .)
    MUL             reduce using rule 183 (AssignOp -> ASSIGN .)
    AND             reduce using rule 183 (AssignOp -> ASSIGN .)
    INT             reduce using rule 183 (AssignOp -> ASSIGN .)
    FLOAT           reduce using rule 183 (AssignOp -> ASSIGN .)
    RUNE            reduce using rule 183 (AssignOp -> ASSIGN .)
    STRING          reduce using rule 183 (AssignOp -> ASSIGN .)
    TRUE            reduce using rule 183 (AssignOp -> ASSIGN .)
    FALSE           reduce using rule 183 (AssignOp -> ASSIGN .)


state 254

    (182) AssignOp -> SHR_ASSIGN .

    ID              reduce using rule 182 (AssignOp -> SHR_ASSIGN .)
    LPAREN          reduce using rule 182 (AssignOp -> SHR_ASSIGN .)
    ADD             reduce using rule 182 (AssignOp -> SHR_ASSIGN .)
    SUB             reduce using rule 182 (AssignOp -> SHR_ASSIGN .)
    NOT             reduce using rule 182 (AssignOp -> SHR_ASSIGN .)
    XOR             reduce using rule 182 (AssignOp -> SHR_ASSIGN .)
    MUL             reduce using rule 182 (AssignOp -> SHR_ASSIGN .)
    AND             reduce using rule 182 (AssignOp -> SHR_ASSIGN .)
    INT             reduce using rule 182 (AssignOp -> SHR_ASSIGN .)
    FLOAT           reduce using rule 182 (AssignOp -> SHR_ASSIGN .)
    RUNE            reduce using rule 182 (AssignOp -> SHR_ASSIGN .)
    STRING          reduce using rule 182 (AssignOp -> SHR_ASSIGN .)
    TRUE            reduce using rule 182 (AssignOp -> SHR_ASSIGN .)
    FALSE           reduce using rule 182 (AssignOp -> SHR_ASSIGN .)


state 255

    (179) AssignOp -> OR_ASSIGN .

    ID              reduce using rule 179 (AssignOp -> OR_ASSIGN .)
    LPAREN          reduce using rule 179 (AssignOp -> OR_ASSIGN .)
    ADD             reduce using rule 179 (AssignOp -> OR_ASSIGN .)
    SUB             reduce using rule 179 (AssignOp -> OR_ASSIGN .)
    NOT             reduce using rule 179 (AssignOp -> OR_ASSIGN .)
    XOR             reduce using rule 179 (AssignOp -> OR_ASSIGN .)
    MUL             reduce using rule 179 (AssignOp -> OR_ASSIGN .)
    AND             reduce using rule 179 (AssignOp -> OR_ASSIGN .)
    INT             reduce using rule 179 (AssignOp -> OR_ASSIGN .)
    FLOAT           reduce using rule 179 (AssignOp -> OR_ASSIGN .)
    RUNE            reduce using rule 179 (AssignOp -> OR_ASSIGN .)
    STRING          reduce using rule 179 (AssignOp -> OR_ASSIGN .)
    TRUE            reduce using rule 179 (AssignOp -> OR_ASSIGN .)
    FALSE           reduce using rule 179 (AssignOp -> OR_ASSIGN .)


state 256

    (176) AssignOp -> MOD_ASSIGN .

    ID              reduce using rule 176 (AssignOp -> MOD_ASSIGN .)
    LPAREN          reduce using rule 176 (AssignOp -> MOD_ASSIGN .)
    ADD             reduce using rule 176 (AssignOp -> MOD_ASSIGN .)
    SUB             reduce using rule 176 (AssignOp -> MOD_ASSIGN .)
    NOT             reduce using rule 176 (AssignOp -> MOD_ASSIGN .)
    XOR             reduce using rule 176 (AssignOp -> MOD_ASSIGN .)
    MUL             reduce using rule 176 (AssignOp -> MOD_ASSIGN .)
    AND             reduce using rule 176 (AssignOp -> MOD_ASSIGN .)
    INT             reduce using rule 176 (AssignOp -> MOD_ASSIGN .)
    FLOAT           reduce using rule 176 (AssignOp -> MOD_ASSIGN .)
    RUNE            reduce using rule 176 (AssignOp -> MOD_ASSIGN .)
    STRING          reduce using rule 176 (AssignOp -> MOD_ASSIGN .)
    TRUE            reduce using rule 176 (AssignOp -> MOD_ASSIGN .)
    FALSE           reduce using rule 176 (AssignOp -> MOD_ASSIGN .)


state 257

    (181) AssignOp -> SHL_ASSIGN .

    ID              reduce using rule 181 (AssignOp -> SHL_ASSIGN .)
    LPAREN          reduce using rule 181 (AssignOp -> SHL_ASSIGN .)
    ADD             reduce using rule 181 (AssignOp -> SHL_ASSIGN .)
    SUB             reduce using rule 181 (AssignOp -> SHL_ASSIGN .)
    NOT             reduce using rule 181 (AssignOp -> SHL_ASSIGN .)
    XOR             reduce using rule 181 (AssignOp -> SHL_ASSIGN .)
    MUL             reduce using rule 181 (AssignOp -> SHL_ASSIGN .)
    AND             reduce using rule 181 (AssignOp -> SHL_ASSIGN .)
    INT             reduce using rule 181 (AssignOp -> SHL_ASSIGN .)
    FLOAT           reduce using rule 181 (AssignOp -> SHL_ASSIGN .)
    RUNE            reduce using rule 181 (AssignOp -> SHL_ASSIGN .)
    STRING          reduce using rule 181 (AssignOp -> SHL_ASSIGN .)
    TRUE            reduce using rule 181 (AssignOp -> SHL_ASSIGN .)
    FALSE           reduce using rule 181 (AssignOp -> SHL_ASSIGN .)


state 258

    (177) AssignOp -> AND_ASSIGN .

    ID              reduce using rule 177 (AssignOp -> AND_ASSIGN .)
    LPAREN          reduce using rule 177 (AssignOp -> AND_ASSIGN .)
    ADD             reduce using rule 177 (AssignOp -> AND_ASSIGN .)
    SUB             reduce using rule 177 (AssignOp -> AND_ASSIGN .)
    NOT             reduce using rule 177 (AssignOp -> AND_ASSIGN .)
    XOR             reduce using rule 177 (AssignOp -> AND_ASSIGN .)
    MUL             reduce using rule 177 (AssignOp -> AND_ASSIGN .)
    AND             reduce using rule 177 (AssignOp -> AND_ASSIGN .)
    INT             reduce using rule 177 (AssignOp -> AND_ASSIGN .)
    FLOAT           reduce using rule 177 (AssignOp -> AND_ASSIGN .)
    RUNE            reduce using rule 177 (AssignOp -> AND_ASSIGN .)
    STRING          reduce using rule 177 (AssignOp -> AND_ASSIGN .)
    TRUE            reduce using rule 177 (AssignOp -> AND_ASSIGN .)
    FALSE           reduce using rule 177 (AssignOp -> AND_ASSIGN .)


state 259

    (175) AssignOp -> DIV_ASSIGN .

    ID              reduce using rule 175 (AssignOp -> DIV_ASSIGN .)
    LPAREN          reduce using rule 175 (AssignOp -> DIV_ASSIGN .)
    ADD             reduce using rule 175 (AssignOp -> DIV_ASSIGN .)
    SUB             reduce using rule 175 (AssignOp -> DIV_ASSIGN .)
    NOT             reduce using rule 175 (AssignOp -> DIV_ASSIGN .)
    XOR             reduce using rule 175 (AssignOp -> DIV_ASSIGN .)
    MUL             reduce using rule 175 (AssignOp -> DIV_ASSIGN .)
    AND             reduce using rule 175 (AssignOp -> DIV_ASSIGN .)
    INT             reduce using rule 175 (AssignOp -> DIV_ASSIGN .)
    FLOAT           reduce using rule 175 (AssignOp -> DIV_ASSIGN .)
    RUNE            reduce using rule 175 (AssignOp -> DIV_ASSIGN .)
    STRING          reduce using rule 175 (AssignOp -> DIV_ASSIGN .)
    TRUE            reduce using rule 175 (AssignOp -> DIV_ASSIGN .)
    FALSE           reduce using rule 175 (AssignOp -> DIV_ASSIGN .)


state 260

    (172) AssignOp -> ADD_ASSIGN .

    ID              reduce using rule 172 (AssignOp -> ADD_ASSIGN .)
    LPAREN          reduce using rule 172 (AssignOp -> ADD_ASSIGN .)
    ADD             reduce using rule 172 (AssignOp -> ADD_ASSIGN .)
    SUB             reduce using rule 172 (AssignOp -> ADD_ASSIGN .)
    NOT             reduce using rule 172 (AssignOp -> ADD_ASSIGN .)
    XOR             reduce using rule 172 (AssignOp -> ADD_ASSIGN .)
    MUL             reduce using rule 172 (AssignOp -> ADD_ASSIGN .)
    AND             reduce using rule 172 (AssignOp -> ADD_ASSIGN .)
    INT             reduce using rule 172 (AssignOp -> ADD_ASSIGN .)
    FLOAT           reduce using rule 172 (AssignOp -> ADD_ASSIGN .)
    RUNE            reduce using rule 172 (AssignOp -> ADD_ASSIGN .)
    STRING          reduce using rule 172 (AssignOp -> ADD_ASSIGN .)
    TRUE            reduce using rule 172 (AssignOp -> ADD_ASSIGN .)
    FALSE           reduce using rule 172 (AssignOp -> ADD_ASSIGN .)


state 261

    (178) AssignOp -> AND_NOT_ASSIGN .

    ID              reduce using rule 178 (AssignOp -> AND_NOT_ASSIGN .)
    LPAREN          reduce using rule 178 (AssignOp -> AND_NOT_ASSIGN .)
    ADD             reduce using rule 178 (AssignOp -> AND_NOT_ASSIGN .)
    SUB             reduce using rule 178 (AssignOp -> AND_NOT_ASSIGN .)
    NOT             reduce using rule 178 (AssignOp -> AND_NOT_ASSIGN .)
    XOR             reduce using rule 178 (AssignOp -> AND_NOT_ASSIGN .)
    MUL             reduce using rule 178 (AssignOp -> AND_NOT_ASSIGN .)
    AND             reduce using rule 178 (AssignOp -> AND_NOT_ASSIGN .)
    INT             reduce using rule 178 (AssignOp -> AND_NOT_ASSIGN .)
    FLOAT           reduce using rule 178 (AssignOp -> AND_NOT_ASSIGN .)
    RUNE            reduce using rule 178 (AssignOp -> AND_NOT_ASSIGN .)
    STRING          reduce using rule 178 (AssignOp -> AND_NOT_ASSIGN .)
    TRUE            reduce using rule 178 (AssignOp -> AND_NOT_ASSIGN .)
    FALSE           reduce using rule 178 (AssignOp -> AND_NOT_ASSIGN .)


state 262

    (170) IncDecStmt -> Expression DEC .

    SEMICOLON       reduce using rule 170 (IncDecStmt -> Expression DEC .)
    LBRACE          reduce using rule 170 (IncDecStmt -> Expression DEC .)


state 263

    (169) IncDecStmt -> Expression INC .

    SEMICOLON       reduce using rule 169 (IncDecStmt -> Expression INC .)
    LBRACE          reduce using rule 169 (IncDecStmt -> Expression INC .)


state 264

    (187) BreakStmt -> BREAK ID .

    SEMICOLON       reduce using rule 187 (BreakStmt -> BREAK ID .)


state 265

    (194) IfStmt -> IF OpenS . Expression Block CloseS
    (195) IfStmt -> IF OpenS . Expression Block CloseS ELSE IfStmt
    (196) IfStmt -> IF OpenS . Expression Block CloseS ELSE OpenS Block CloseS
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    ID              shift and go to state 82
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    TrueLit                        shift and go to state 90
    RuneLit                        shift and go to state 80
    UnaryOp                        shift and go to state 65
    BasicLit                       shift and go to state 70
    UnaryExpr                      shift and go to state 75
    FloatLit                       shift and go to state 76
    FalseLit                       shift and go to state 66
    IntLit                         shift and go to state 68
    Literal                        shift and go to state 67
    PrimaryExpr                    shift and go to state 77
    StringLit                      shift and go to state 88
    Expression                     shift and go to state 285

state 266

    (58) FieldDecl_curl -> FieldDecl_curl FieldDecl SEMICOLON .

    RBRACE          reduce using rule 58 (FieldDecl_curl -> FieldDecl_curl FieldDecl SEMICOLON .)
    ID              reduce using rule 58 (FieldDecl_curl -> FieldDecl_curl FieldDecl SEMICOLON .)


state 267

    (64) FieldDecl -> ID STRUCT . MUL ID

    MUL             shift and go to state 286


state 268

    (60) FieldDecl -> ID COMMA . IdentifierList Type
    (61) FieldDecl -> ID COMMA . IdentifierList ID
    (65) FieldDecl -> ID COMMA . IdentifierList STRUCT MUL ID
    (30) IdentifierList -> . ID
    (31) IdentifierList -> . ID COMMA IdentifierList

    ID              shift and go to state 30

    IdentifierList                 shift and go to state 287

state 269

    (62) FieldDecl -> ID Type .

    SEMICOLON       reduce using rule 62 (FieldDecl -> ID Type .)


state 270

    (63) FieldDecl -> ID ID .

    SEMICOLON       reduce using rule 63 (FieldDecl -> ID ID .)


state 271

    (57) StructType -> STRUCT OpenStructS LBRACE FieldDecl_curl RBRACE CloseStructS .

    SEMICOLON       reduce using rule 57 (StructType -> STRUCT OpenStructS LBRACE FieldDecl_curl RBRACE CloseStructS .)


state 272

    (135) Slice -> LBRACK COLON Expression COLON Expression . RBRACK
    (91) Expression -> Expression . BinaryOp UnaryExpr
    (94) BinaryOp -> . LOR
    (95) BinaryOp -> . LAND
    (96) BinaryOp -> . RelOp
    (97) BinaryOp -> . AddOp
    (98) BinaryOp -> . MulOp
    (99) RelOp -> . EQL
    (100) RelOp -> . NEQ
    (101) RelOp -> . LTN
    (102) RelOp -> . LEQ
    (103) RelOp -> . GTN
    (104) RelOp -> . GEQ
    (105) AddOp -> . ADD
    (106) AddOp -> . SUB
    (107) AddOp -> . OR
    (108) AddOp -> . XOR
    (109) MulOp -> . MUL
    (110) MulOp -> . DIV
    (111) MulOp -> . MOD
    (112) MulOp -> . SHL
    (113) MulOp -> . SHR
    (114) MulOp -> . AND
    (115) MulOp -> . AND_NOT

    RBRACK          shift and go to state 288
    LOR             shift and go to state 120
    LAND            shift and go to state 125
    EQL             shift and go to state 136
    NEQ             shift and go to state 123
    LTN             shift and go to state 137
    LEQ             shift and go to state 140
    GTN             shift and go to state 134
    GEQ             shift and go to state 124
    ADD             shift and go to state 135
    SUB             shift and go to state 119
    OR              shift and go to state 141
    XOR             shift and go to state 131
    MUL             shift and go to state 121
    DIV             shift and go to state 122
    MOD             shift and go to state 142
    SHL             shift and go to state 126
    SHR             shift and go to state 130
    AND             shift and go to state 138
    AND_NOT         shift and go to state 127

    AddOp                          shift and go to state 129
    BinaryOp                       shift and go to state 128
    MulOp                          shift and go to state 132
    RelOp                          shift and go to state 139

state 273

    (134) Slice -> LBRACK Expression COLON Expression COLON . Expression RBRACK
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    ID              shift and go to state 82
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    RuneLit                        shift and go to state 80
    UnaryOp                        shift and go to state 65
    TrueLit                        shift and go to state 90
    BasicLit                       shift and go to state 70
    UnaryExpr                      shift and go to state 75
    FloatLit                       shift and go to state 76
    FalseLit                       shift and go to state 66
    IntLit                         shift and go to state 68
    Literal                        shift and go to state 67
    PrimaryExpr                    shift and go to state 77
    StringLit                      shift and go to state 88
    Expression                     shift and go to state 289

state 274

    (130) Slice -> LBRACK Expression COLON Expression RBRACK .

    LBRACK          reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    LPAREN          reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    RBRACK          reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    LOR             reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    LAND            reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    EQL             reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    NEQ             reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    LTN             reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    LEQ             reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    GTN             reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    GEQ             reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    ADD             reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    SUB             reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    OR              reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    XOR             reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    MUL             reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    DIV             reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    MOD             reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    SHL             reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    SHR             reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    AND             reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    AND_NOT         reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    COMMA           reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    SEMICOLON       reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    RPAREN          reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    COLON           reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    DIV_ASSIGN      reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    MOD_ASSIGN      reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    AND_ASSIGN      reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    OR_ASSIGN       reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    SHL_ASSIGN      reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    SHR_ASSIGN      reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    ASSIGN          reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    LBRACE          reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    INC             reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    DEC             reduce using rule 130 (Slice -> LBRACK Expression COLON Expression RBRACK .)


state 275

    (161) Statement -> OpenS Block CloseS .

    SEMICOLON       reduce using rule 161 (Statement -> OpenS Block CloseS .)


state 276

    (193) ShortVarDecl -> IdentifierList DEFINE ExpressionList .
    (33) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 193 (ShortVarDecl -> IdentifierList DEFINE ExpressionList .)
    LBRACE          reduce using rule 193 (ShortVarDecl -> IdentifierList DEFINE ExpressionList .)
    COMMA           shift and go to state 158


state 277

    (209) ForClause -> SimpleStmt . SEMICOLON SEMICOLON SimpleStmt
    (210) ForClause -> SimpleStmt . SEMICOLON Expression SEMICOLON SimpleStmt

    SEMICOLON       shift and go to state 290


state 278

    (207) ForStmt -> FOR OpenS ForClause . Block CloseS
    (86) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 155

    Block                          shift and go to state 291

state 279

    (206) ForStmt -> FOR OpenS Expression . Block CloseS
    (91) Expression -> Expression . BinaryOp UnaryExpr
    (164) SimpleStmt -> Expression .
    (169) IncDecStmt -> Expression . INC
    (170) IncDecStmt -> Expression . DEC
    (32) ExpressionList -> Expression .
    (86) Block -> . LBRACE StatementList RBRACE
    (94) BinaryOp -> . LOR
    (95) BinaryOp -> . LAND
    (96) BinaryOp -> . RelOp
    (97) BinaryOp -> . AddOp
    (98) BinaryOp -> . MulOp
    (99) RelOp -> . EQL
    (100) RelOp -> . NEQ
    (101) RelOp -> . LTN
    (102) RelOp -> . LEQ
    (103) RelOp -> . GTN
    (104) RelOp -> . GEQ
    (105) AddOp -> . ADD
    (106) AddOp -> . SUB
    (107) AddOp -> . OR
    (108) AddOp -> . XOR
    (109) MulOp -> . MUL
    (110) MulOp -> . DIV
    (111) MulOp -> . MOD
    (112) MulOp -> . SHL
    (113) MulOp -> . SHR
    (114) MulOp -> . AND
    (115) MulOp -> . AND_NOT

    SEMICOLON       reduce using rule 164 (SimpleStmt -> Expression .)
    INC             shift and go to state 263
    DEC             shift and go to state 262
    COMMA           reduce using rule 32 (ExpressionList -> Expression .)
    ADD_ASSIGN      reduce using rule 32 (ExpressionList -> Expression .)
    SUB_ASSIGN      reduce using rule 32 (ExpressionList -> Expression .)
    MUL_ASSIGN      reduce using rule 32 (ExpressionList -> Expression .)
    DIV_ASSIGN      reduce using rule 32 (ExpressionList -> Expression .)
    MOD_ASSIGN      reduce using rule 32 (ExpressionList -> Expression .)
    AND_ASSIGN      reduce using rule 32 (ExpressionList -> Expression .)
    AND_NOT_ASSIGN  reduce using rule 32 (ExpressionList -> Expression .)
    OR_ASSIGN       reduce using rule 32 (ExpressionList -> Expression .)
    XOR_ASSIGN      reduce using rule 32 (ExpressionList -> Expression .)
    SHL_ASSIGN      reduce using rule 32 (ExpressionList -> Expression .)
    SHR_ASSIGN      reduce using rule 32 (ExpressionList -> Expression .)
    ASSIGN          reduce using rule 32 (ExpressionList -> Expression .)
    LBRACE          shift and go to state 155
    LOR             shift and go to state 120
    LAND            shift and go to state 125
    EQL             shift and go to state 136
    NEQ             shift and go to state 123
    LTN             shift and go to state 137
    LEQ             shift and go to state 140
    GTN             shift and go to state 134
    GEQ             shift and go to state 124
    ADD             shift and go to state 135
    SUB             shift and go to state 119
    OR              shift and go to state 141
    XOR             shift and go to state 131
    MUL             shift and go to state 121
    DIV             shift and go to state 122
    MOD             shift and go to state 142
    SHL             shift and go to state 126
    SHR             shift and go to state 130
    AND             shift and go to state 138
    AND_NOT         shift and go to state 127

    RelOp                          shift and go to state 139
    AddOp                          shift and go to state 129
    BinaryOp                       shift and go to state 128
    MulOp                          shift and go to state 132
    Block                          shift and go to state 292

state 280

    (123) PrimaryExpr -> ID .
    (124) PrimaryExpr -> ID . DOT ID
    (30) IdentifierList -> ID .
    (31) IdentifierList -> ID . COMMA IdentifierList

    LBRACK          reduce using rule 123 (PrimaryExpr -> ID .)
    LPAREN          reduce using rule 123 (PrimaryExpr -> ID .)
    INC             reduce using rule 123 (PrimaryExpr -> ID .)
    DEC             reduce using rule 123 (PrimaryExpr -> ID .)
    LBRACE          reduce using rule 123 (PrimaryExpr -> ID .)
    LOR             reduce using rule 123 (PrimaryExpr -> ID .)
    LAND            reduce using rule 123 (PrimaryExpr -> ID .)
    EQL             reduce using rule 123 (PrimaryExpr -> ID .)
    NEQ             reduce using rule 123 (PrimaryExpr -> ID .)
    LTN             reduce using rule 123 (PrimaryExpr -> ID .)
    LEQ             reduce using rule 123 (PrimaryExpr -> ID .)
    GTN             reduce using rule 123 (PrimaryExpr -> ID .)
    GEQ             reduce using rule 123 (PrimaryExpr -> ID .)
    ADD             reduce using rule 123 (PrimaryExpr -> ID .)
    SUB             reduce using rule 123 (PrimaryExpr -> ID .)
    OR              reduce using rule 123 (PrimaryExpr -> ID .)
    XOR             reduce using rule 123 (PrimaryExpr -> ID .)
    MUL             reduce using rule 123 (PrimaryExpr -> ID .)
    DIV             reduce using rule 123 (PrimaryExpr -> ID .)
    MOD             reduce using rule 123 (PrimaryExpr -> ID .)
    SHL             reduce using rule 123 (PrimaryExpr -> ID .)
    SHR             reduce using rule 123 (PrimaryExpr -> ID .)
    AND             reduce using rule 123 (PrimaryExpr -> ID .)
    AND_NOT         reduce using rule 123 (PrimaryExpr -> ID .)
    SEMICOLON       reduce using rule 123 (PrimaryExpr -> ID .)
    ADD_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    SUB_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    MUL_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    DIV_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    MOD_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    AND_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    AND_NOT_ASSIGN  reduce using rule 123 (PrimaryExpr -> ID .)
    OR_ASSIGN       reduce using rule 123 (PrimaryExpr -> ID .)
    XOR_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    SHL_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    SHR_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    ASSIGN          reduce using rule 123 (PrimaryExpr -> ID .)
    DOT             shift and go to state 143
    DEFINE          reduce using rule 30 (IdentifierList -> ID .)
    COMMA           shift and go to state 52

  ! COMMA           [ reduce using rule 123 (PrimaryExpr -> ID .) ]


state 281

    (208) ForStmt -> FOR OpenS Block . CloseS
    (3) CloseS -> .

    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 293

state 282

    (184) LabelledStmt -> ID COLON Statement .

    SEMICOLON       reduce using rule 184 (LabelledStmt -> ID COLON Statement .)


state 283

    (198) ExprSwitchStmt -> SWITCH ExpressionName LBRACE . ExprCaseClause_curl RBRACE
    (200) ExprCaseClause_curl -> . ExprCaseClause_curl ExprCaseClause
    (201) ExprCaseClause_curl -> . DefCaseClause
    (202) ExprCaseClause_curl -> .
    (205) DefCaseClause -> . OpenS DEFAULT COLON StatementList CloseS
    (2) OpenS -> .

    RBRACE          reduce using rule 202 (ExprCaseClause_curl -> .)
    CASE            reduce using rule 202 (ExprCaseClause_curl -> .)
    DEFAULT         reduce using rule 2 (OpenS -> .)

    DefCaseClause                  shift and go to state 294
    ExprCaseClause_curl            shift and go to state 295
    OpenS                          shift and go to state 296

state 284

    (171) Assignment -> ExpressionList AssignOp ExpressionList .
    (33) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 171 (Assignment -> ExpressionList AssignOp ExpressionList .)
    LBRACE          reduce using rule 171 (Assignment -> ExpressionList AssignOp ExpressionList .)
    COMMA           shift and go to state 158


state 285

    (194) IfStmt -> IF OpenS Expression . Block CloseS
    (195) IfStmt -> IF OpenS Expression . Block CloseS ELSE IfStmt
    (196) IfStmt -> IF OpenS Expression . Block CloseS ELSE OpenS Block CloseS
    (91) Expression -> Expression . BinaryOp UnaryExpr
    (86) Block -> . LBRACE StatementList RBRACE
    (94) BinaryOp -> . LOR
    (95) BinaryOp -> . LAND
    (96) BinaryOp -> . RelOp
    (97) BinaryOp -> . AddOp
    (98) BinaryOp -> . MulOp
    (99) RelOp -> . EQL
    (100) RelOp -> . NEQ
    (101) RelOp -> . LTN
    (102) RelOp -> . LEQ
    (103) RelOp -> . GTN
    (104) RelOp -> . GEQ
    (105) AddOp -> . ADD
    (106) AddOp -> . SUB
    (107) AddOp -> . OR
    (108) AddOp -> . XOR
    (109) MulOp -> . MUL
    (110) MulOp -> . DIV
    (111) MulOp -> . MOD
    (112) MulOp -> . SHL
    (113) MulOp -> . SHR
    (114) MulOp -> . AND
    (115) MulOp -> . AND_NOT

    LBRACE          shift and go to state 155
    LOR             shift and go to state 120
    LAND            shift and go to state 125
    EQL             shift and go to state 136
    NEQ             shift and go to state 123
    LTN             shift and go to state 137
    LEQ             shift and go to state 140
    GTN             shift and go to state 134
    GEQ             shift and go to state 124
    ADD             shift and go to state 135
    SUB             shift and go to state 119
    OR              shift and go to state 141
    XOR             shift and go to state 131
    MUL             shift and go to state 121
    DIV             shift and go to state 122
    MOD             shift and go to state 142
    SHL             shift and go to state 126
    SHR             shift and go to state 130
    AND             shift and go to state 138
    AND_NOT         shift and go to state 127

    RelOp                          shift and go to state 139
    AddOp                          shift and go to state 129
    BinaryOp                       shift and go to state 128
    MulOp                          shift and go to state 132
    Block                          shift and go to state 297

state 286

    (64) FieldDecl -> ID STRUCT MUL . ID

    ID              shift and go to state 298


state 287

    (60) FieldDecl -> ID COMMA IdentifierList . Type
    (61) FieldDecl -> ID COMMA IdentifierList . ID
    (65) FieldDecl -> ID COMMA IdentifierList . STRUCT MUL ID
    (47) Type -> . LPAREN Type RPAREN
    (48) Type -> . LPAREN ID RPAREN
    (49) Type -> . TypeLit
    (50) TypeLit -> . ArrayType
    (51) TypeLit -> . PointerType
    (52) TypeLit -> . SliceType
    (53) ArrayType -> . LBRACK Expression RBRACK Type
    (54) ArrayType -> . LBRACK Expression RBRACK ID
    (66) PointerType -> . MUL Type
    (67) PointerType -> . MUL ID
    (55) SliceType -> . LBRACK RBRACK Type
    (56) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 301
    STRUCT          shift and go to state 299
    LPAREN          shift and go to state 47
    LBRACK          shift and go to state 44
    MUL             shift and go to state 49

    Type                           shift and go to state 300
    ArrayType                      shift and go to state 45
    PointerType                    shift and go to state 48
    TypeLit                        shift and go to state 43
    SliceType                      shift and go to state 51

state 288

    (135) Slice -> LBRACK COLON Expression COLON Expression RBRACK .

    LBRACK          reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    LPAREN          reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    RBRACK          reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    LOR             reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    LAND            reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    EQL             reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    NEQ             reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    LTN             reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    LEQ             reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    GTN             reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    GEQ             reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    ADD             reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    SUB             reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    OR              reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    XOR             reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    MUL             reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    DIV             reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    MOD             reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    SHL             reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    SHR             reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    AND             reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    AND_NOT         reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    COMMA           reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    SEMICOLON       reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    RPAREN          reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    COLON           reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    DIV_ASSIGN      reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    MOD_ASSIGN      reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    AND_ASSIGN      reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    OR_ASSIGN       reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    SHL_ASSIGN      reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    SHR_ASSIGN      reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    ASSIGN          reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    LBRACE          reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    INC             reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    DEC             reduce using rule 135 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)


state 289

    (134) Slice -> LBRACK Expression COLON Expression COLON Expression . RBRACK
    (91) Expression -> Expression . BinaryOp UnaryExpr
    (94) BinaryOp -> . LOR
    (95) BinaryOp -> . LAND
    (96) BinaryOp -> . RelOp
    (97) BinaryOp -> . AddOp
    (98) BinaryOp -> . MulOp
    (99) RelOp -> . EQL
    (100) RelOp -> . NEQ
    (101) RelOp -> . LTN
    (102) RelOp -> . LEQ
    (103) RelOp -> . GTN
    (104) RelOp -> . GEQ
    (105) AddOp -> . ADD
    (106) AddOp -> . SUB
    (107) AddOp -> . OR
    (108) AddOp -> . XOR
    (109) MulOp -> . MUL
    (110) MulOp -> . DIV
    (111) MulOp -> . MOD
    (112) MulOp -> . SHL
    (113) MulOp -> . SHR
    (114) MulOp -> . AND
    (115) MulOp -> . AND_NOT

    RBRACK          shift and go to state 302
    LOR             shift and go to state 120
    LAND            shift and go to state 125
    EQL             shift and go to state 136
    NEQ             shift and go to state 123
    LTN             shift and go to state 137
    LEQ             shift and go to state 140
    GTN             shift and go to state 134
    GEQ             shift and go to state 124
    ADD             shift and go to state 135
    SUB             shift and go to state 119
    OR              shift and go to state 141
    XOR             shift and go to state 131
    MUL             shift and go to state 121
    DIV             shift and go to state 122
    MOD             shift and go to state 142
    SHL             shift and go to state 126
    SHR             shift and go to state 130
    AND             shift and go to state 138
    AND_NOT         shift and go to state 127

    AddOp                          shift and go to state 129
    BinaryOp                       shift and go to state 128
    MulOp                          shift and go to state 132
    RelOp                          shift and go to state 139

state 290

    (209) ForClause -> SimpleStmt SEMICOLON . SEMICOLON SimpleStmt
    (210) ForClause -> SimpleStmt SEMICOLON . Expression SEMICOLON SimpleStmt
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    SEMICOLON       shift and go to state 303
    ID              shift and go to state 82
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    RuneLit                        shift and go to state 80
    UnaryOp                        shift and go to state 65
    TrueLit                        shift and go to state 90
    BasicLit                       shift and go to state 70
    UnaryExpr                      shift and go to state 75
    FloatLit                       shift and go to state 76
    FalseLit                       shift and go to state 66
    IntLit                         shift and go to state 68
    Literal                        shift and go to state 67
    PrimaryExpr                    shift and go to state 77
    StringLit                      shift and go to state 88
    Expression                     shift and go to state 304

state 291

    (207) ForStmt -> FOR OpenS ForClause Block . CloseS
    (3) CloseS -> .

    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 305

state 292

    (206) ForStmt -> FOR OpenS Expression Block . CloseS
    (3) CloseS -> .

    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 306

state 293

    (208) ForStmt -> FOR OpenS Block CloseS .

    SEMICOLON       reduce using rule 208 (ForStmt -> FOR OpenS Block CloseS .)


state 294

    (201) ExprCaseClause_curl -> DefCaseClause .

    RBRACE          reduce using rule 201 (ExprCaseClause_curl -> DefCaseClause .)
    CASE            reduce using rule 201 (ExprCaseClause_curl -> DefCaseClause .)


state 295

    (198) ExprSwitchStmt -> SWITCH ExpressionName LBRACE ExprCaseClause_curl . RBRACE
    (200) ExprCaseClause_curl -> ExprCaseClause_curl . ExprCaseClause
    (203) ExprCaseClause -> . OpenS ExprSwitchCase COLON StatementList CloseS
    (2) OpenS -> .

    RBRACE          shift and go to state 307
    CASE            reduce using rule 2 (OpenS -> .)

    ExprCaseClause                 shift and go to state 308
    OpenS                          shift and go to state 309

state 296

    (205) DefCaseClause -> OpenS . DEFAULT COLON StatementList CloseS

    DEFAULT         shift and go to state 310


state 297

    (194) IfStmt -> IF OpenS Expression Block . CloseS
    (195) IfStmt -> IF OpenS Expression Block . CloseS ELSE IfStmt
    (196) IfStmt -> IF OpenS Expression Block . CloseS ELSE OpenS Block CloseS
    (3) CloseS -> .

    ELSE            reduce using rule 3 (CloseS -> .)
    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 311

state 298

    (64) FieldDecl -> ID STRUCT MUL ID .

    SEMICOLON       reduce using rule 64 (FieldDecl -> ID STRUCT MUL ID .)


state 299

    (65) FieldDecl -> ID COMMA IdentifierList STRUCT . MUL ID

    MUL             shift and go to state 312


state 300

    (60) FieldDecl -> ID COMMA IdentifierList Type .

    SEMICOLON       reduce using rule 60 (FieldDecl -> ID COMMA IdentifierList Type .)


state 301

    (61) FieldDecl -> ID COMMA IdentifierList ID .

    SEMICOLON       reduce using rule 61 (FieldDecl -> ID COMMA IdentifierList ID .)


state 302

    (134) Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .

    LBRACK          reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    LPAREN          reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    RBRACK          reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    LOR             reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    LAND            reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    EQL             reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    NEQ             reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    LTN             reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    LEQ             reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    GTN             reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    GEQ             reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    ADD             reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    SUB             reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    OR              reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    XOR             reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    MUL             reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    DIV             reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    MOD             reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    SHL             reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    SHR             reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    AND             reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    AND_NOT         reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    COMMA           reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    SEMICOLON       reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    RPAREN          reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    COLON           reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    DIV_ASSIGN      reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    MOD_ASSIGN      reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    AND_ASSIGN      reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    OR_ASSIGN       reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    SHL_ASSIGN      reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    SHR_ASSIGN      reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    ASSIGN          reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    LBRACE          reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    INC             reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    DEC             reduce using rule 134 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)


state 303

    (209) ForClause -> SimpleStmt SEMICOLON SEMICOLON . SimpleStmt
    (164) SimpleStmt -> . Expression
    (165) SimpleStmt -> . IncDecStmt
    (166) SimpleStmt -> . Assignment
    (167) SimpleStmt -> . ShortVarDecl
    (168) SimpleStmt -> .
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (169) IncDecStmt -> . Expression INC
    (170) IncDecStmt -> . Expression DEC
    (171) Assignment -> . ExpressionList AssignOp ExpressionList
    (193) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (32) ExpressionList -> . Expression
    (33) ExpressionList -> . ExpressionList COMMA Expression
    (30) IdentifierList -> . ID
    (31) IdentifierList -> . ID COMMA IdentifierList
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    LBRACE          reduce using rule 168 (SimpleStmt -> .)
    ID              shift and go to state 314
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    UnaryOp                        shift and go to state 65
    SimpleStmt                     shift and go to state 313
    FalseLit                       shift and go to state 66
    Literal                        shift and go to state 67
    IdentifierList                 shift and go to state 207
    IntLit                         shift and go to state 68
    RuneLit                        shift and go to state 80
    Assignment                     shift and go to state 202
    IncDecStmt                     shift and go to state 224
    UnaryExpr                      shift and go to state 75
    FloatLit                       shift and go to state 76
    ExpressionList                 shift and go to state 217
    Expression                     shift and go to state 218
    ShortVarDecl                   shift and go to state 225
    StringLit                      shift and go to state 88
    BasicLit                       shift and go to state 70
    PrimaryExpr                    shift and go to state 77
    TrueLit                        shift and go to state 90

state 304

    (210) ForClause -> SimpleStmt SEMICOLON Expression . SEMICOLON SimpleStmt
    (91) Expression -> Expression . BinaryOp UnaryExpr
    (94) BinaryOp -> . LOR
    (95) BinaryOp -> . LAND
    (96) BinaryOp -> . RelOp
    (97) BinaryOp -> . AddOp
    (98) BinaryOp -> . MulOp
    (99) RelOp -> . EQL
    (100) RelOp -> . NEQ
    (101) RelOp -> . LTN
    (102) RelOp -> . LEQ
    (103) RelOp -> . GTN
    (104) RelOp -> . GEQ
    (105) AddOp -> . ADD
    (106) AddOp -> . SUB
    (107) AddOp -> . OR
    (108) AddOp -> . XOR
    (109) MulOp -> . MUL
    (110) MulOp -> . DIV
    (111) MulOp -> . MOD
    (112) MulOp -> . SHL
    (113) MulOp -> . SHR
    (114) MulOp -> . AND
    (115) MulOp -> . AND_NOT

    SEMICOLON       shift and go to state 315
    LOR             shift and go to state 120
    LAND            shift and go to state 125
    EQL             shift and go to state 136
    NEQ             shift and go to state 123
    LTN             shift and go to state 137
    LEQ             shift and go to state 140
    GTN             shift and go to state 134
    GEQ             shift and go to state 124
    ADD             shift and go to state 135
    SUB             shift and go to state 119
    OR              shift and go to state 141
    XOR             shift and go to state 131
    MUL             shift and go to state 121
    DIV             shift and go to state 122
    MOD             shift and go to state 142
    SHL             shift and go to state 126
    SHR             shift and go to state 130
    AND             shift and go to state 138
    AND_NOT         shift and go to state 127

    AddOp                          shift and go to state 129
    RelOp                          shift and go to state 139
    BinaryOp                       shift and go to state 128
    MulOp                          shift and go to state 132

state 305

    (207) ForStmt -> FOR OpenS ForClause Block CloseS .

    SEMICOLON       reduce using rule 207 (ForStmt -> FOR OpenS ForClause Block CloseS .)


state 306

    (206) ForStmt -> FOR OpenS Expression Block CloseS .

    SEMICOLON       reduce using rule 206 (ForStmt -> FOR OpenS Expression Block CloseS .)


state 307

    (198) ExprSwitchStmt -> SWITCH ExpressionName LBRACE ExprCaseClause_curl RBRACE .

    SEMICOLON       reduce using rule 198 (ExprSwitchStmt -> SWITCH ExpressionName LBRACE ExprCaseClause_curl RBRACE .)


state 308

    (200) ExprCaseClause_curl -> ExprCaseClause_curl ExprCaseClause .

    RBRACE          reduce using rule 200 (ExprCaseClause_curl -> ExprCaseClause_curl ExprCaseClause .)
    CASE            reduce using rule 200 (ExprCaseClause_curl -> ExprCaseClause_curl ExprCaseClause .)


state 309

    (203) ExprCaseClause -> OpenS . ExprSwitchCase COLON StatementList CloseS
    (204) ExprSwitchCase -> . CASE Expression

    CASE            shift and go to state 316

    ExprSwitchCase                 shift and go to state 317

state 310

    (205) DefCaseClause -> OpenS DEFAULT . COLON StatementList CloseS

    COLON           shift and go to state 318


state 311

    (194) IfStmt -> IF OpenS Expression Block CloseS .
    (195) IfStmt -> IF OpenS Expression Block CloseS . ELSE IfStmt
    (196) IfStmt -> IF OpenS Expression Block CloseS . ELSE OpenS Block CloseS

    SEMICOLON       reduce using rule 194 (IfStmt -> IF OpenS Expression Block CloseS .)
    ELSE            shift and go to state 319


state 312

    (65) FieldDecl -> ID COMMA IdentifierList STRUCT MUL . ID

    ID              shift and go to state 320


state 313

    (209) ForClause -> SimpleStmt SEMICOLON SEMICOLON SimpleStmt .

    LBRACE          reduce using rule 209 (ForClause -> SimpleStmt SEMICOLON SEMICOLON SimpleStmt .)


state 314

    (30) IdentifierList -> ID .
    (31) IdentifierList -> ID . COMMA IdentifierList
    (123) PrimaryExpr -> ID .
    (124) PrimaryExpr -> ID . DOT ID

    DEFINE          reduce using rule 30 (IdentifierList -> ID .)
    COMMA           shift and go to state 52
    LBRACK          reduce using rule 123 (PrimaryExpr -> ID .)
    LPAREN          reduce using rule 123 (PrimaryExpr -> ID .)
    INC             reduce using rule 123 (PrimaryExpr -> ID .)
    DEC             reduce using rule 123 (PrimaryExpr -> ID .)
    LOR             reduce using rule 123 (PrimaryExpr -> ID .)
    LAND            reduce using rule 123 (PrimaryExpr -> ID .)
    EQL             reduce using rule 123 (PrimaryExpr -> ID .)
    NEQ             reduce using rule 123 (PrimaryExpr -> ID .)
    LTN             reduce using rule 123 (PrimaryExpr -> ID .)
    LEQ             reduce using rule 123 (PrimaryExpr -> ID .)
    GTN             reduce using rule 123 (PrimaryExpr -> ID .)
    GEQ             reduce using rule 123 (PrimaryExpr -> ID .)
    ADD             reduce using rule 123 (PrimaryExpr -> ID .)
    SUB             reduce using rule 123 (PrimaryExpr -> ID .)
    OR              reduce using rule 123 (PrimaryExpr -> ID .)
    XOR             reduce using rule 123 (PrimaryExpr -> ID .)
    MUL             reduce using rule 123 (PrimaryExpr -> ID .)
    DIV             reduce using rule 123 (PrimaryExpr -> ID .)
    MOD             reduce using rule 123 (PrimaryExpr -> ID .)
    SHL             reduce using rule 123 (PrimaryExpr -> ID .)
    SHR             reduce using rule 123 (PrimaryExpr -> ID .)
    AND             reduce using rule 123 (PrimaryExpr -> ID .)
    AND_NOT         reduce using rule 123 (PrimaryExpr -> ID .)
    LBRACE          reduce using rule 123 (PrimaryExpr -> ID .)
    ADD_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    SUB_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    MUL_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    DIV_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    MOD_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    AND_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    AND_NOT_ASSIGN  reduce using rule 123 (PrimaryExpr -> ID .)
    OR_ASSIGN       reduce using rule 123 (PrimaryExpr -> ID .)
    XOR_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    SHL_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    SHR_ASSIGN      reduce using rule 123 (PrimaryExpr -> ID .)
    ASSIGN          reduce using rule 123 (PrimaryExpr -> ID .)
    DOT             shift and go to state 143

  ! COMMA           [ reduce using rule 123 (PrimaryExpr -> ID .) ]


state 315

    (210) ForClause -> SimpleStmt SEMICOLON Expression SEMICOLON . SimpleStmt
    (164) SimpleStmt -> . Expression
    (165) SimpleStmt -> . IncDecStmt
    (166) SimpleStmt -> . Assignment
    (167) SimpleStmt -> . ShortVarDecl
    (168) SimpleStmt -> .
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (169) IncDecStmt -> . Expression INC
    (170) IncDecStmt -> . Expression DEC
    (171) Assignment -> . ExpressionList AssignOp ExpressionList
    (193) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (32) ExpressionList -> . Expression
    (33) ExpressionList -> . ExpressionList COMMA Expression
    (30) IdentifierList -> . ID
    (31) IdentifierList -> . ID COMMA IdentifierList
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    LBRACE          reduce using rule 168 (SimpleStmt -> .)
    ID              shift and go to state 314
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    UnaryOp                        shift and go to state 65
    SimpleStmt                     shift and go to state 321
    FalseLit                       shift and go to state 66
    Literal                        shift and go to state 67
    IdentifierList                 shift and go to state 207
    IntLit                         shift and go to state 68
    RuneLit                        shift and go to state 80
    Assignment                     shift and go to state 202
    IncDecStmt                     shift and go to state 224
    UnaryExpr                      shift and go to state 75
    FloatLit                       shift and go to state 76
    ExpressionList                 shift and go to state 217
    Expression                     shift and go to state 218
    ShortVarDecl                   shift and go to state 225
    StringLit                      shift and go to state 88
    BasicLit                       shift and go to state 70
    PrimaryExpr                    shift and go to state 77
    TrueLit                        shift and go to state 90

state 316

    (204) ExprSwitchCase -> CASE . Expression
    (90) Expression -> . UnaryExpr
    (91) Expression -> . Expression BinaryOp UnaryExpr
    (92) UnaryExpr -> . PrimaryExpr
    (93) UnaryExpr -> . UnaryOp UnaryExpr
    (122) PrimaryExpr -> . Literal
    (123) PrimaryExpr -> . ID
    (124) PrimaryExpr -> . ID DOT ID
    (125) PrimaryExpr -> . LPAREN Expression RPAREN
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr Slice
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) UnaryOp -> . ADD
    (117) UnaryOp -> . SUB
    (118) UnaryOp -> . NOT
    (119) UnaryOp -> . XOR
    (120) UnaryOp -> . MUL
    (121) UnaryOp -> . AND
    (139) Literal -> . BasicLit
    (140) BasicLit -> . IntLit
    (141) BasicLit -> . FloatLit
    (142) BasicLit -> . RuneLit
    (143) BasicLit -> . StringLit
    (144) BasicLit -> . TrueLit
    (145) BasicLit -> . FalseLit
    (148) IntLit -> . INT
    (149) FloatLit -> . FLOAT
    (150) RuneLit -> . RUNE
    (151) StringLit -> . STRING
    (146) TrueLit -> . TRUE
    (147) FalseLit -> . FALSE

    ID              shift and go to state 82
    LPAREN          shift and go to state 79
    ADD             shift and go to state 78
    SUB             shift and go to state 64
    NOT             shift and go to state 89
    XOR             shift and go to state 72
    MUL             shift and go to state 69
    AND             shift and go to state 84
    INT             shift and go to state 86
    FLOAT           shift and go to state 87
    RUNE            shift and go to state 71
    STRING          shift and go to state 73
    TRUE            shift and go to state 83
    FALSE           shift and go to state 85

    RuneLit                        shift and go to state 80
    UnaryOp                        shift and go to state 65
    TrueLit                        shift and go to state 90
    BasicLit                       shift and go to state 70
    UnaryExpr                      shift and go to state 75
    FloatLit                       shift and go to state 76
    FalseLit                       shift and go to state 66
    IntLit                         shift and go to state 68
    Literal                        shift and go to state 67
    PrimaryExpr                    shift and go to state 77
    StringLit                      shift and go to state 88
    Expression                     shift and go to state 322

state 317

    (203) ExprCaseClause -> OpenS ExprSwitchCase . COLON StatementList CloseS

    COLON           shift and go to state 323


state 318

    (205) DefCaseClause -> OpenS DEFAULT COLON . StatementList CloseS
    (87) StatementList -> . Statement_curl
    (88) Statement_curl -> . Statement_curl Statement SEMICOLON
    (89) Statement_curl -> .

    ID              reduce using rule 89 (Statement_curl -> .)
    RETURN          reduce using rule 89 (Statement_curl -> .)
    BREAK           reduce using rule 89 (Statement_curl -> .)
    CONTINUE        reduce using rule 89 (Statement_curl -> .)
    GOTO            reduce using rule 89 (Statement_curl -> .)
    FALLTHROUGH     reduce using rule 89 (Statement_curl -> .)
    IF              reduce using rule 89 (Statement_curl -> .)
    FOR             reduce using rule 89 (Statement_curl -> .)
    CONST           reduce using rule 89 (Statement_curl -> .)
    TYPE            reduce using rule 89 (Statement_curl -> .)
    VAR             reduce using rule 89 (Statement_curl -> .)
    SWITCH          reduce using rule 89 (Statement_curl -> .)
    LPAREN          reduce using rule 89 (Statement_curl -> .)
    ADD             reduce using rule 89 (Statement_curl -> .)
    SUB             reduce using rule 89 (Statement_curl -> .)
    NOT             reduce using rule 89 (Statement_curl -> .)
    XOR             reduce using rule 89 (Statement_curl -> .)
    MUL             reduce using rule 89 (Statement_curl -> .)
    AND             reduce using rule 89 (Statement_curl -> .)
    INT             reduce using rule 89 (Statement_curl -> .)
    FLOAT           reduce using rule 89 (Statement_curl -> .)
    RUNE            reduce using rule 89 (Statement_curl -> .)
    STRING          reduce using rule 89 (Statement_curl -> .)
    TRUE            reduce using rule 89 (Statement_curl -> .)
    FALSE           reduce using rule 89 (Statement_curl -> .)
    SEMICOLON       reduce using rule 89 (Statement_curl -> .)
    LBRACE          reduce using rule 89 (Statement_curl -> .)
    RBRACE          reduce using rule 89 (Statement_curl -> .)
    CASE            reduce using rule 89 (Statement_curl -> .)

    Statement_curl                 shift and go to state 182
    StatementList                  shift and go to state 324

state 319

    (195) IfStmt -> IF OpenS Expression Block CloseS ELSE . IfStmt
    (196) IfStmt -> IF OpenS Expression Block CloseS ELSE . OpenS Block CloseS
    (194) IfStmt -> . IF OpenS Expression Block CloseS
    (195) IfStmt -> . IF OpenS Expression Block CloseS ELSE IfStmt
    (196) IfStmt -> . IF OpenS Expression Block CloseS ELSE OpenS Block CloseS
    (2) OpenS -> .

    IF              shift and go to state 226
    LBRACE          reduce using rule 2 (OpenS -> .)

    OpenS                          shift and go to state 325
    IfStmt                         shift and go to state 326

state 320

    (65) FieldDecl -> ID COMMA IdentifierList STRUCT MUL ID .

    SEMICOLON       reduce using rule 65 (FieldDecl -> ID COMMA IdentifierList STRUCT MUL ID .)


state 321

    (210) ForClause -> SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt .

    LBRACE          reduce using rule 210 (ForClause -> SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt .)


state 322

    (204) ExprSwitchCase -> CASE Expression .
    (91) Expression -> Expression . BinaryOp UnaryExpr
    (94) BinaryOp -> . LOR
    (95) BinaryOp -> . LAND
    (96) BinaryOp -> . RelOp
    (97) BinaryOp -> . AddOp
    (98) BinaryOp -> . MulOp
    (99) RelOp -> . EQL
    (100) RelOp -> . NEQ
    (101) RelOp -> . LTN
    (102) RelOp -> . LEQ
    (103) RelOp -> . GTN
    (104) RelOp -> . GEQ
    (105) AddOp -> . ADD
    (106) AddOp -> . SUB
    (107) AddOp -> . OR
    (108) AddOp -> . XOR
    (109) MulOp -> . MUL
    (110) MulOp -> . DIV
    (111) MulOp -> . MOD
    (112) MulOp -> . SHL
    (113) MulOp -> . SHR
    (114) MulOp -> . AND
    (115) MulOp -> . AND_NOT

    COLON           reduce using rule 204 (ExprSwitchCase -> CASE Expression .)
    LOR             shift and go to state 120
    LAND            shift and go to state 125
    EQL             shift and go to state 136
    NEQ             shift and go to state 123
    LTN             shift and go to state 137
    LEQ             shift and go to state 140
    GTN             shift and go to state 134
    GEQ             shift and go to state 124
    ADD             shift and go to state 135
    SUB             shift and go to state 119
    OR              shift and go to state 141
    XOR             shift and go to state 131
    MUL             shift and go to state 121
    DIV             shift and go to state 122
    MOD             shift and go to state 142
    SHL             shift and go to state 126
    SHR             shift and go to state 130
    AND             shift and go to state 138
    AND_NOT         shift and go to state 127

    AddOp                          shift and go to state 129
    BinaryOp                       shift and go to state 128
    MulOp                          shift and go to state 132
    RelOp                          shift and go to state 139

state 323

    (203) ExprCaseClause -> OpenS ExprSwitchCase COLON . StatementList CloseS
    (87) StatementList -> . Statement_curl
    (88) Statement_curl -> . Statement_curl Statement SEMICOLON
    (89) Statement_curl -> .

    ID              reduce using rule 89 (Statement_curl -> .)
    RETURN          reduce using rule 89 (Statement_curl -> .)
    BREAK           reduce using rule 89 (Statement_curl -> .)
    CONTINUE        reduce using rule 89 (Statement_curl -> .)
    GOTO            reduce using rule 89 (Statement_curl -> .)
    FALLTHROUGH     reduce using rule 89 (Statement_curl -> .)
    IF              reduce using rule 89 (Statement_curl -> .)
    FOR             reduce using rule 89 (Statement_curl -> .)
    CONST           reduce using rule 89 (Statement_curl -> .)
    TYPE            reduce using rule 89 (Statement_curl -> .)
    VAR             reduce using rule 89 (Statement_curl -> .)
    SWITCH          reduce using rule 89 (Statement_curl -> .)
    LPAREN          reduce using rule 89 (Statement_curl -> .)
    ADD             reduce using rule 89 (Statement_curl -> .)
    SUB             reduce using rule 89 (Statement_curl -> .)
    NOT             reduce using rule 89 (Statement_curl -> .)
    XOR             reduce using rule 89 (Statement_curl -> .)
    MUL             reduce using rule 89 (Statement_curl -> .)
    AND             reduce using rule 89 (Statement_curl -> .)
    INT             reduce using rule 89 (Statement_curl -> .)
    FLOAT           reduce using rule 89 (Statement_curl -> .)
    RUNE            reduce using rule 89 (Statement_curl -> .)
    STRING          reduce using rule 89 (Statement_curl -> .)
    TRUE            reduce using rule 89 (Statement_curl -> .)
    FALSE           reduce using rule 89 (Statement_curl -> .)
    SEMICOLON       reduce using rule 89 (Statement_curl -> .)
    LBRACE          reduce using rule 89 (Statement_curl -> .)
    RBRACE          reduce using rule 89 (Statement_curl -> .)
    CASE            reduce using rule 89 (Statement_curl -> .)

    Statement_curl                 shift and go to state 182
    StatementList                  shift and go to state 327

state 324

    (205) DefCaseClause -> OpenS DEFAULT COLON StatementList . CloseS
    (3) CloseS -> .

    RBRACE          reduce using rule 3 (CloseS -> .)
    CASE            reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 328

state 325

    (196) IfStmt -> IF OpenS Expression Block CloseS ELSE OpenS . Block CloseS
    (86) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 155

    Block                          shift and go to state 329

state 326

    (195) IfStmt -> IF OpenS Expression Block CloseS ELSE IfStmt .

    SEMICOLON       reduce using rule 195 (IfStmt -> IF OpenS Expression Block CloseS ELSE IfStmt .)


state 327

    (203) ExprCaseClause -> OpenS ExprSwitchCase COLON StatementList . CloseS
    (3) CloseS -> .

    RBRACE          reduce using rule 3 (CloseS -> .)
    CASE            reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 330

state 328

    (205) DefCaseClause -> OpenS DEFAULT COLON StatementList CloseS .

    RBRACE          reduce using rule 205 (DefCaseClause -> OpenS DEFAULT COLON StatementList CloseS .)
    CASE            reduce using rule 205 (DefCaseClause -> OpenS DEFAULT COLON StatementList CloseS .)


state 329

    (196) IfStmt -> IF OpenS Expression Block CloseS ELSE OpenS Block . CloseS
    (3) CloseS -> .

    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 331

state 330

    (203) ExprCaseClause -> OpenS ExprSwitchCase COLON StatementList CloseS .

    RBRACE          reduce using rule 203 (ExprCaseClause -> OpenS ExprSwitchCase COLON StatementList CloseS .)
    CASE            reduce using rule 203 (ExprCaseClause -> OpenS ExprSwitchCase COLON StatementList CloseS .)


state 331

    (196) IfStmt -> IF OpenS Expression Block CloseS ELSE OpenS Block CloseS .

    SEMICOLON       reduce using rule 196 (IfStmt -> IF OpenS Expression Block CloseS ELSE OpenS Block CloseS .)

