Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> SourceFile
Rule 1     SourceFile -> PackageClause SEMICOLON ImportDecl_curl TopLevelDecl_curl
Rule 2     OpenS -> <empty>
Rule 3     CloseS -> <empty>
Rule 4     OpenStructS -> <empty>
Rule 5     CloseStructS -> <empty>
Rule 6     TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON
Rule 7     TopLevelDecl_curl -> <empty>
Rule 8     ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON
Rule 9     ImportDecl_curl -> <empty>
Rule 10    PackageClause -> PACKAGE ID
Rule 11    ImportDecl -> IMPORT ImportSpec
Rule 12    ImportDecl -> IMPORT LPAREN ImportSpec_curl RPAREN
Rule 13    ImportSpec_curl -> ImportSpec_curl ImportSpec SEMICOLON
Rule 14    ImportSpec_curl -> <empty>
Rule 15    ImportSpec -> ID ImportPath
Rule 16    ImportSpec -> ImportPath
Rule 17    ImportPath -> STRING
Rule 18    TopLevelDecl -> Declaration
Rule 19    TopLevelDecl -> FunctionDecl
Rule 20    Declaration -> ConstDecl
Rule 21    Declaration -> StructDecl
Rule 22    Declaration -> VarDecl
Rule 23    ConstDecl -> CONST ConstSpec
Rule 24    ConstDecl -> CONST LPAREN ConstSpec_curl RPAREN
Rule 25    ConstSpec_curl -> ConstSpec_curl ConstSpec SEMICOLON
Rule 26    ConstSpec_curl -> <empty>
Rule 27    ConstSpec -> IdentifierList ID ASSIGN ExpressionList
Rule 28    IdentifierList -> ID
Rule 29    IdentifierList -> ID COMMA IdentifierList
Rule 30    ExpressionList -> Expression
Rule 31    ExpressionList -> ExpressionList COMMA Expression
Rule 32    StructDecl -> TYPE StructName StructType
Rule 33    StructName -> ID
Rule 34    VarDecl -> VAR VarSpec
Rule 35    VarDecl -> VAR LPAREN VarSpec_curl RPAREN
Rule 36    VarSpec_curl -> VarSpec_curl VarSpec SEMICOLON
Rule 37    VarSpec_curl -> <empty>
Rule 38    VarSpec -> IdentifierList Type ASSIGN ExpressionList
Rule 39    VarSpec -> IdentifierList ID ASSIGN ExpressionList
Rule 40    VarSpec -> IdentifierList ASSIGN ExpressionList
Rule 41    VarSpec -> IdentifierList ID
Rule 42    VarSpec -> IdentifierList Type
Rule 43    FunctionDecl -> FUNC FuncName OpenS Signature Block CloseS
Rule 44    FuncName -> ID
Rule 45    Type -> LPAREN Type RPAREN
Rule 46    Type -> LPAREN ID RPAREN
Rule 47    Type -> TypeLit
Rule 48    TypeLit -> ArrayType
Rule 49    TypeLit -> PointerType
Rule 50    TypeLit -> SliceType
Rule 51    ArrayType -> LBRACK INT RBRACK Type
Rule 52    ArrayType -> LBRACK INT RBRACK ID
Rule 53    SliceType -> LBRACK RBRACK Type
Rule 54    SliceType -> LBRACK RBRACK ID
Rule 55    StructType -> STRUCT OpenStructS LBRACE FieldDecl_curl RBRACE CloseStructS
Rule 56    FieldDecl_curl -> FieldDecl_curl FieldDecl SEMICOLON
Rule 57    FieldDecl_curl -> <empty>
Rule 58    FieldDecl -> ID COMMA IdentifierList Type
Rule 59    FieldDecl -> ID COMMA IdentifierList ID
Rule 60    FieldDecl -> ID Type
Rule 61    FieldDecl -> ID ID
Rule 62    FieldDecl -> ID STRUCT MUL ID
Rule 63    FieldDecl -> ID COMMA IdentifierList STRUCT MUL ID
Rule 64    PointerType -> MUL Type
Rule 65    PointerType -> MUL ID
Rule 66    Signature -> Parameters Result
Rule 67    Result -> LPAREN TypeList RPAREN
Rule 68    Result -> <empty>
Rule 69    TypeList -> ID
Rule 70    TypeList -> Type
Rule 71    TypeList -> TypeList COMMA ID
Rule 72    TypeList -> TypeList COMMA Type
Rule 73    Parameters -> LPAREN RPAREN
Rule 74    Parameters -> LPAREN ParameterList RPAREN
Rule 75    Parameters -> LPAREN ParameterList COMMA RPAREN
Rule 76    ParameterList -> ParameterDecl
Rule 77    ParameterList -> ParameterList COMMA ParameterDecl
Rule 78    ParameterDecl -> ParaIdList Type
Rule 79    ParameterDecl -> ID Type
Rule 80    ParameterDecl -> ParaIdList ID
Rule 81    ParameterDecl -> ID ID
Rule 82    ParaIdList -> ID COMMA ID
Rule 83    ParaIdList -> ParaIdList COMMA ID
Rule 84    Block -> LBRACE StatementList RBRACE
Rule 85    StatementList -> Statement_curl
Rule 86    Statement_curl -> Statement_curl Statement SEMICOLON
Rule 87    Statement_curl -> <empty>
Rule 88    Expression -> UnaryExpr
Rule 89    Expression -> Expression BinaryOp UnaryExpr
Rule 90    UnaryExpr -> PrimaryExpr
Rule 91    UnaryExpr -> UnaryOp UnaryExpr
Rule 92    BinaryOp -> LOR
Rule 93    BinaryOp -> LAND
Rule 94    BinaryOp -> RelOp
Rule 95    BinaryOp -> AddOp
Rule 96    BinaryOp -> MulOp
Rule 97    RelOp -> EQL
Rule 98    RelOp -> NEQ
Rule 99    RelOp -> LTN
Rule 100   RelOp -> LEQ
Rule 101   RelOp -> GTN
Rule 102   RelOp -> GEQ
Rule 103   AddOp -> ADD
Rule 104   AddOp -> SUB
Rule 105   AddOp -> OR
Rule 106   AddOp -> XOR
Rule 107   MulOp -> MUL
Rule 108   MulOp -> DIV
Rule 109   MulOp -> MOD
Rule 110   MulOp -> SHL
Rule 111   MulOp -> SHR
Rule 112   MulOp -> AND
Rule 113   MulOp -> AND_NOT
Rule 114   UnaryOp -> ADD
Rule 115   UnaryOp -> SUB
Rule 116   UnaryOp -> NOT
Rule 117   UnaryOp -> XOR
Rule 118   UnaryOp -> MUL
Rule 119   UnaryOp -> AND
Rule 120   PrimaryExpr -> Literal
Rule 121   PrimaryExpr -> ID
Rule 122   PrimaryExpr -> PrimaryExpr DOT ID
Rule 123   PrimaryExpr -> LPAREN Expression RPAREN
Rule 124   PrimaryExpr -> PrimaryExpr Index
Rule 125   PrimaryExpr -> PrimaryExpr Slice
Rule 126   PrimaryExpr -> PrimaryExpr Arguments
Rule 127   Index -> LBRACK Expression RBRACK
Rule 128   Slice -> LBRACK Expression COLON Expression RBRACK
Rule 129   Slice -> LBRACK COLON Expression RBRACK
Rule 130   Slice -> LBRACK Expression COLON RBRACK
Rule 131   Slice -> LBRACK COLON RBRACK
Rule 132   Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK
Rule 133   Slice -> LBRACK COLON Expression COLON Expression RBRACK
Rule 134   Arguments -> LPAREN RPAREN
Rule 135   Arguments -> LPAREN ExpressionList RPAREN
Rule 136   Arguments -> LPAREN ExpressionList COMMA RPAREN
Rule 137   Literal -> BasicLit
Rule 138   BasicLit -> IntLit
Rule 139   BasicLit -> FloatLit
Rule 140   BasicLit -> RuneLit
Rule 141   BasicLit -> StringLit
Rule 142   BasicLit -> TrueLit
Rule 143   BasicLit -> FalseLit
Rule 144   TrueLit -> TRUE
Rule 145   FalseLit -> FALSE
Rule 146   IntLit -> INT
Rule 147   FloatLit -> FLOAT
Rule 148   RuneLit -> RUNE
Rule 149   StringLit -> STRING
Rule 150   Statement -> Declaration
Rule 151   Statement -> LabelledStmt
Rule 152   Statement -> SimpleStmt
Rule 153   Statement -> ReturnStmt
Rule 154   Statement -> BreakStmt
Rule 155   Statement -> ContinueStmt
Rule 156   Statement -> GotoStmt
Rule 157   Statement -> FallthroughStmt
Rule 158   Statement -> IfStmt
Rule 159   Statement -> OpenS Block CloseS
Rule 160   Statement -> SwitchStmt
Rule 161   Statement -> ForStmt
Rule 162   SimpleStmt -> Expression
Rule 163   SimpleStmt -> IncDecStmt
Rule 164   SimpleStmt -> Assignment
Rule 165   SimpleStmt -> ShortVarDecl
Rule 166   SimpleStmt -> <empty>
Rule 167   IncDecStmt -> Expression INC
Rule 168   IncDecStmt -> Expression DEC
Rule 169   Assignment -> ExpressionList AssignOp ExpressionList
Rule 170   AssignOp -> ADD_ASSIGN
Rule 171   AssignOp -> SUB_ASSIGN
Rule 172   AssignOp -> MUL_ASSIGN
Rule 173   AssignOp -> DIV_ASSIGN
Rule 174   AssignOp -> MOD_ASSIGN
Rule 175   AssignOp -> AND_ASSIGN
Rule 176   AssignOp -> AND_NOT_ASSIGN
Rule 177   AssignOp -> OR_ASSIGN
Rule 178   AssignOp -> XOR_ASSIGN
Rule 179   AssignOp -> SHL_ASSIGN
Rule 180   AssignOp -> SHR_ASSIGN
Rule 181   AssignOp -> ASSIGN
Rule 182   LabelledStmt -> ID COLON Statement
Rule 183   ReturnStmt -> RETURN ExpressionList
Rule 184   ReturnStmt -> RETURN
Rule 185   BreakStmt -> BREAK ID
Rule 186   BreakStmt -> BREAK
Rule 187   ContinueStmt -> CONTINUE ID
Rule 188   ContinueStmt -> CONTINUE
Rule 189   GotoStmt -> GOTO ID
Rule 190   FallthroughStmt -> FALLTHROUGH
Rule 191   ShortVarDecl -> IdentifierList DEFINE ExpressionList
Rule 192   IfStmt -> IF OpenS Expression Block CloseS
Rule 193   IfStmt -> IF OpenS Expression Block CloseS ELSE IfStmt
Rule 194   IfStmt -> IF OpenS Expression Block CloseS ELSE OpenS Block CloseS
Rule 195   SwitchStmt -> ExprSwitchStmt
Rule 196   ExprSwitchStmt -> SWITCH ExpressionName LBRACE OpenW ExprCaseClause_curl CloseW RBRACE
Rule 197   ExpressionName -> Expression
Rule 198   ExprCaseClause_curl -> ExprCaseClause_curl ExprCaseClause
Rule 199   ExprCaseClause_curl -> DefCaseClause
Rule 200   ExprCaseClause_curl -> <empty>
Rule 201   ExprCaseClause -> OpenS ExprSwitchCase COLON StatementList CloseS
Rule 202   ExprSwitchCase -> CASE Expression
Rule 203   DefCaseClause -> OpenS DEFAULT COLON StatementList CloseS
Rule 204   ForStmt -> FOR OpenS OpenF Expression Block CloseF CloseS
Rule 205   ForStmt -> FOR OpenS OpenF ForClause Block CloseF CloseS
Rule 206   ForStmt -> FOR OpenS OpenF Block CloseF CloseS
Rule 207   OpenF -> <empty>
Rule 208   CloseF -> <empty>
Rule 209   OpenW -> <empty>
Rule 210   CloseW -> <empty>
Rule 211   ForClause -> SimpleStmt SEMICOLON SEMICOLON SimpleStmt
Rule 212   ForClause -> SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt

Terminals, with rules where they appear

ADD                  : 103 114
ADD_ASSIGN           : 170
AND                  : 112 119
AND_ASSIGN           : 175
AND_NOT              : 113
AND_NOT_ASSIGN       : 176
ASSIGN               : 27 38 39 40 181
BREAK                : 185 186
CASE                 : 202
COLON                : 128 129 130 131 132 132 133 133 182 201 203
COMMA                : 29 31 58 59 63 71 72 75 77 82 83 136
CONST                : 23 24
CONTINUE             : 187 188
DEC                  : 168
DEFAULT              : 203
DEFINE               : 191
DIV                  : 108
DIV_ASSIGN           : 173
DOT                  : 122
ELSE                 : 193 194
EQL                  : 97
FALLTHROUGH          : 190
FALSE                : 145
FLOAT                : 147
FOR                  : 204 205 206
FUNC                 : 43
GEQ                  : 102
GOTO                 : 189
GTN                  : 101
ID                   : 10 15 27 28 29 33 39 41 44 46 52 54 58 59 59 60 61 61 62 62 63 63 65 69 71 79 80 81 81 82 82 83 121 122 182 185 187 189
IF                   : 192 193 194
IMPORT               : 11 12
INC                  : 167
INT                  : 51 52 146
LAND                 : 93
LBRACE               : 55 84 196
LBRACK               : 51 52 53 54 127 128 129 130 131 132 133
LEQ                  : 100
LOR                  : 92
LPAREN               : 12 24 35 45 46 67 73 74 75 123 134 135 136
LTN                  : 99
MOD                  : 109
MOD_ASSIGN           : 174
MUL                  : 62 63 64 65 107 118
MUL_ASSIGN           : 172
NEQ                  : 98
NOT                  : 116
OR                   : 105
OR_ASSIGN            : 177
PACKAGE              : 10
RBRACE               : 55 84 196
RBRACK               : 51 52 53 54 127 128 129 130 131 132 133
RETURN               : 183 184
RPAREN               : 12 24 35 45 46 67 73 74 75 123 134 135 136
RUNE                 : 148
SEMICOLON            : 1 6 8 13 25 36 56 86 211 211 212 212
SHL                  : 110
SHL_ASSIGN           : 179
SHR                  : 111
SHR_ASSIGN           : 180
STRING               : 17 149
STRUCT               : 55 62 63
SUB                  : 104 115
SUB_ASSIGN           : 171
SWITCH               : 196
TRUE                 : 144
TYPE                 : 32
VAR                  : 34 35
XOR                  : 106 117
XOR_ASSIGN           : 178
error                : 

Nonterminals, with rules where they appear

AddOp                : 95
Arguments            : 126
ArrayType            : 48
AssignOp             : 169
Assignment           : 164
BasicLit             : 137
BinaryOp             : 89
Block                : 43 159 192 193 194 194 204 205 206
BreakStmt            : 154
CloseF               : 204 205 206
CloseS               : 43 159 192 193 194 194 201 203 204 205 206
CloseStructS         : 55
CloseW               : 196
ConstDecl            : 20
ConstSpec            : 23 25
ConstSpec_curl       : 24 25
ContinueStmt         : 155
Declaration          : 18 150
DefCaseClause        : 199
ExprCaseClause       : 198
ExprCaseClause_curl  : 196 198
ExprSwitchCase       : 201
ExprSwitchStmt       : 195
Expression           : 30 31 89 123 127 128 128 129 130 132 132 132 133 133 162 167 168 192 193 194 197 202 204 212
ExpressionList       : 27 31 38 39 40 135 136 169 169 183 191
ExpressionName       : 196
FallthroughStmt      : 157
FalseLit             : 143
FieldDecl            : 56
FieldDecl_curl       : 55 56
FloatLit             : 139
ForClause            : 205
ForStmt              : 161
FuncName             : 43
FunctionDecl         : 19
GotoStmt             : 156
IdentifierList       : 27 29 38 39 40 41 42 58 59 63 191
IfStmt               : 158 193
ImportDecl           : 8
ImportDecl_curl      : 1 8
ImportPath           : 15 16
ImportSpec           : 11 13
ImportSpec_curl      : 12 13
IncDecStmt           : 163
Index                : 124
IntLit               : 138
LabelledStmt         : 151
Literal              : 120
MulOp                : 96
OpenF                : 204 205 206
OpenS                : 43 159 192 193 194 194 201 203 204 205 206
OpenStructS          : 55
OpenW                : 196
PackageClause        : 1
ParaIdList           : 78 80 83
ParameterDecl        : 76 77
ParameterList        : 74 75 77
Parameters           : 66
PointerType          : 49
PrimaryExpr          : 90 122 124 125 126
RelOp                : 94
Result               : 66
ReturnStmt           : 153
RuneLit              : 140
ShortVarDecl         : 165
Signature            : 43
SimpleStmt           : 152 211 211 212 212
Slice                : 125
SliceType            : 50
SourceFile           : 0
Statement            : 86 182
StatementList        : 84 201 203
Statement_curl       : 85 86
StringLit            : 141
StructDecl           : 21
StructName           : 32
StructType           : 32
SwitchStmt           : 160
TopLevelDecl         : 6
TopLevelDecl_curl    : 1 6
TrueLit              : 142
Type                 : 38 42 45 51 53 58 60 64 70 72 78 79
TypeList             : 67 71 72
TypeLit              : 47
UnaryExpr            : 88 89 91
UnaryOp              : 91
VarDecl              : 22
VarSpec              : 34 36
VarSpec_curl         : 35 36

Parsing method: LALR

state 0

    (0) S' -> . SourceFile
    (1) SourceFile -> . PackageClause SEMICOLON ImportDecl_curl TopLevelDecl_curl
    (10) PackageClause -> . PACKAGE ID

    PACKAGE         shift and go to state 3

    PackageClause                  shift and go to state 1
    SourceFile                     shift and go to state 2

state 1

    (1) SourceFile -> PackageClause . SEMICOLON ImportDecl_curl TopLevelDecl_curl

    SEMICOLON       shift and go to state 4


state 2

    (0) S' -> SourceFile .



state 3

    (10) PackageClause -> PACKAGE . ID

    ID              shift and go to state 5


state 4

    (1) SourceFile -> PackageClause SEMICOLON . ImportDecl_curl TopLevelDecl_curl
    (8) ImportDecl_curl -> . ImportDecl_curl ImportDecl SEMICOLON
    (9) ImportDecl_curl -> .

    IMPORT          reduce using rule 9 (ImportDecl_curl -> .)
    FUNC            reduce using rule 9 (ImportDecl_curl -> .)
    CONST           reduce using rule 9 (ImportDecl_curl -> .)
    TYPE            reduce using rule 9 (ImportDecl_curl -> .)
    VAR             reduce using rule 9 (ImportDecl_curl -> .)
    $end            reduce using rule 9 (ImportDecl_curl -> .)

    ImportDecl_curl                shift and go to state 6

state 5

    (10) PackageClause -> PACKAGE ID .

    SEMICOLON       reduce using rule 10 (PackageClause -> PACKAGE ID .)


state 6

    (1) SourceFile -> PackageClause SEMICOLON ImportDecl_curl . TopLevelDecl_curl
    (8) ImportDecl_curl -> ImportDecl_curl . ImportDecl SEMICOLON
    (6) TopLevelDecl_curl -> . TopLevelDecl_curl TopLevelDecl SEMICOLON
    (7) TopLevelDecl_curl -> .
    (11) ImportDecl -> . IMPORT ImportSpec
    (12) ImportDecl -> . IMPORT LPAREN ImportSpec_curl RPAREN

    FUNC            reduce using rule 7 (TopLevelDecl_curl -> .)
    CONST           reduce using rule 7 (TopLevelDecl_curl -> .)
    TYPE            reduce using rule 7 (TopLevelDecl_curl -> .)
    VAR             reduce using rule 7 (TopLevelDecl_curl -> .)
    $end            reduce using rule 7 (TopLevelDecl_curl -> .)
    IMPORT          shift and go to state 8

    TopLevelDecl_curl              shift and go to state 7
    ImportDecl                     shift and go to state 9

state 7

    (1) SourceFile -> PackageClause SEMICOLON ImportDecl_curl TopLevelDecl_curl .
    (6) TopLevelDecl_curl -> TopLevelDecl_curl . TopLevelDecl SEMICOLON
    (18) TopLevelDecl -> . Declaration
    (19) TopLevelDecl -> . FunctionDecl
    (20) Declaration -> . ConstDecl
    (21) Declaration -> . StructDecl
    (22) Declaration -> . VarDecl
    (43) FunctionDecl -> . FUNC FuncName OpenS Signature Block CloseS
    (23) ConstDecl -> . CONST ConstSpec
    (24) ConstDecl -> . CONST LPAREN ConstSpec_curl RPAREN
    (32) StructDecl -> . TYPE StructName StructType
    (34) VarDecl -> . VAR VarSpec
    (35) VarDecl -> . VAR LPAREN VarSpec_curl RPAREN

    $end            reduce using rule 1 (SourceFile -> PackageClause SEMICOLON ImportDecl_curl TopLevelDecl_curl .)
    FUNC            shift and go to state 15
    CONST           shift and go to state 10
    TYPE            shift and go to state 19
    VAR             shift and go to state 16

    StructDecl                     shift and go to state 11
    VarDecl                        shift and go to state 18
    FunctionDecl                   shift and go to state 12
    TopLevelDecl                   shift and go to state 13
    Declaration                    shift and go to state 14
    ConstDecl                      shift and go to state 17

state 8

    (11) ImportDecl -> IMPORT . ImportSpec
    (12) ImportDecl -> IMPORT . LPAREN ImportSpec_curl RPAREN
    (15) ImportSpec -> . ID ImportPath
    (16) ImportSpec -> . ImportPath
    (17) ImportPath -> . STRING

    LPAREN          shift and go to state 23
    ID              shift and go to state 24
    STRING          shift and go to state 20

    ImportSpec                     shift and go to state 21
    ImportPath                     shift and go to state 22

state 9

    (8) ImportDecl_curl -> ImportDecl_curl ImportDecl . SEMICOLON

    SEMICOLON       shift and go to state 25


state 10

    (23) ConstDecl -> CONST . ConstSpec
    (24) ConstDecl -> CONST . LPAREN ConstSpec_curl RPAREN
    (27) ConstSpec -> . IdentifierList ID ASSIGN ExpressionList
    (28) IdentifierList -> . ID
    (29) IdentifierList -> . ID COMMA IdentifierList

    LPAREN          shift and go to state 27
    ID              shift and go to state 29

    ConstSpec                      shift and go to state 26
    IdentifierList                 shift and go to state 28

state 11

    (21) Declaration -> StructDecl .

    SEMICOLON       reduce using rule 21 (Declaration -> StructDecl .)


state 12

    (19) TopLevelDecl -> FunctionDecl .

    SEMICOLON       reduce using rule 19 (TopLevelDecl -> FunctionDecl .)


state 13

    (6) TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl . SEMICOLON

    SEMICOLON       shift and go to state 30


state 14

    (18) TopLevelDecl -> Declaration .

    SEMICOLON       reduce using rule 18 (TopLevelDecl -> Declaration .)


state 15

    (43) FunctionDecl -> FUNC . FuncName OpenS Signature Block CloseS
    (44) FuncName -> . ID

    ID              shift and go to state 32

    FuncName                       shift and go to state 31

state 16

    (34) VarDecl -> VAR . VarSpec
    (35) VarDecl -> VAR . LPAREN VarSpec_curl RPAREN
    (38) VarSpec -> . IdentifierList Type ASSIGN ExpressionList
    (39) VarSpec -> . IdentifierList ID ASSIGN ExpressionList
    (40) VarSpec -> . IdentifierList ASSIGN ExpressionList
    (41) VarSpec -> . IdentifierList ID
    (42) VarSpec -> . IdentifierList Type
    (28) IdentifierList -> . ID
    (29) IdentifierList -> . ID COMMA IdentifierList

    LPAREN          shift and go to state 34
    ID              shift and go to state 29

    VarSpec                        shift and go to state 33
    IdentifierList                 shift and go to state 35

state 17

    (20) Declaration -> ConstDecl .

    SEMICOLON       reduce using rule 20 (Declaration -> ConstDecl .)


state 18

    (22) Declaration -> VarDecl .

    SEMICOLON       reduce using rule 22 (Declaration -> VarDecl .)


state 19

    (32) StructDecl -> TYPE . StructName StructType
    (33) StructName -> . ID

    ID              shift and go to state 37

    StructName                     shift and go to state 36

state 20

    (17) ImportPath -> STRING .

    SEMICOLON       reduce using rule 17 (ImportPath -> STRING .)


state 21

    (11) ImportDecl -> IMPORT ImportSpec .

    SEMICOLON       reduce using rule 11 (ImportDecl -> IMPORT ImportSpec .)


state 22

    (16) ImportSpec -> ImportPath .

    SEMICOLON       reduce using rule 16 (ImportSpec -> ImportPath .)


state 23

    (12) ImportDecl -> IMPORT LPAREN . ImportSpec_curl RPAREN
    (13) ImportSpec_curl -> . ImportSpec_curl ImportSpec SEMICOLON
    (14) ImportSpec_curl -> .

    RPAREN          reduce using rule 14 (ImportSpec_curl -> .)
    ID              reduce using rule 14 (ImportSpec_curl -> .)
    STRING          reduce using rule 14 (ImportSpec_curl -> .)

    ImportSpec_curl                shift and go to state 38

state 24

    (15) ImportSpec -> ID . ImportPath
    (17) ImportPath -> . STRING

    STRING          shift and go to state 20

    ImportPath                     shift and go to state 39

state 25

    (8) ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .

    IMPORT          reduce using rule 8 (ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .)
    FUNC            reduce using rule 8 (ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .)
    CONST           reduce using rule 8 (ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .)
    TYPE            reduce using rule 8 (ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .)
    VAR             reduce using rule 8 (ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .)
    $end            reduce using rule 8 (ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .)


state 26

    (23) ConstDecl -> CONST ConstSpec .

    SEMICOLON       reduce using rule 23 (ConstDecl -> CONST ConstSpec .)


state 27

    (24) ConstDecl -> CONST LPAREN . ConstSpec_curl RPAREN
    (25) ConstSpec_curl -> . ConstSpec_curl ConstSpec SEMICOLON
    (26) ConstSpec_curl -> .

    RPAREN          reduce using rule 26 (ConstSpec_curl -> .)
    ID              reduce using rule 26 (ConstSpec_curl -> .)

    ConstSpec_curl                 shift and go to state 40

state 28

    (27) ConstSpec -> IdentifierList . ID ASSIGN ExpressionList

    ID              shift and go to state 41


state 29

    (28) IdentifierList -> ID .
    (29) IdentifierList -> ID . COMMA IdentifierList

    ID              reduce using rule 28 (IdentifierList -> ID .)
    STRUCT          reduce using rule 28 (IdentifierList -> ID .)
    LPAREN          reduce using rule 28 (IdentifierList -> ID .)
    LBRACK          reduce using rule 28 (IdentifierList -> ID .)
    MUL             reduce using rule 28 (IdentifierList -> ID .)
    ASSIGN          reduce using rule 28 (IdentifierList -> ID .)
    DEFINE          reduce using rule 28 (IdentifierList -> ID .)
    COMMA           shift and go to state 42


state 30

    (6) TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON .

    FUNC            reduce using rule 6 (TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON .)
    CONST           reduce using rule 6 (TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON .)
    TYPE            reduce using rule 6 (TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON .)
    VAR             reduce using rule 6 (TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON .)
    $end            reduce using rule 6 (TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON .)


state 31

    (43) FunctionDecl -> FUNC FuncName . OpenS Signature Block CloseS
    (2) OpenS -> .

    LPAREN          reduce using rule 2 (OpenS -> .)

    OpenS                          shift and go to state 43

state 32

    (44) FuncName -> ID .

    LPAREN          reduce using rule 44 (FuncName -> ID .)


state 33

    (34) VarDecl -> VAR VarSpec .

    SEMICOLON       reduce using rule 34 (VarDecl -> VAR VarSpec .)


state 34

    (35) VarDecl -> VAR LPAREN . VarSpec_curl RPAREN
    (36) VarSpec_curl -> . VarSpec_curl VarSpec SEMICOLON
    (37) VarSpec_curl -> .

    RPAREN          reduce using rule 37 (VarSpec_curl -> .)
    ID              reduce using rule 37 (VarSpec_curl -> .)

    VarSpec_curl                   shift and go to state 44

state 35

    (38) VarSpec -> IdentifierList . Type ASSIGN ExpressionList
    (39) VarSpec -> IdentifierList . ID ASSIGN ExpressionList
    (40) VarSpec -> IdentifierList . ASSIGN ExpressionList
    (41) VarSpec -> IdentifierList . ID
    (42) VarSpec -> IdentifierList . Type
    (45) Type -> . LPAREN Type RPAREN
    (46) Type -> . LPAREN ID RPAREN
    (47) Type -> . TypeLit
    (48) TypeLit -> . ArrayType
    (49) TypeLit -> . PointerType
    (50) TypeLit -> . SliceType
    (51) ArrayType -> . LBRACK INT RBRACK Type
    (52) ArrayType -> . LBRACK INT RBRACK ID
    (64) PointerType -> . MUL Type
    (65) PointerType -> . MUL ID
    (53) SliceType -> . LBRACK RBRACK Type
    (54) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 53
    ASSIGN          shift and go to state 48
    LPAREN          shift and go to state 49
    LBRACK          shift and go to state 46
    MUL             shift and go to state 51

    Type                           shift and go to state 52
    ArrayType                      shift and go to state 47
    PointerType                    shift and go to state 50
    TypeLit                        shift and go to state 45
    SliceType                      shift and go to state 54

state 36

    (32) StructDecl -> TYPE StructName . StructType
    (55) StructType -> . STRUCT OpenStructS LBRACE FieldDecl_curl RBRACE CloseStructS

    STRUCT          shift and go to state 56

    StructType                     shift and go to state 55

state 37

    (33) StructName -> ID .

    STRUCT          reduce using rule 33 (StructName -> ID .)


state 38

    (12) ImportDecl -> IMPORT LPAREN ImportSpec_curl . RPAREN
    (13) ImportSpec_curl -> ImportSpec_curl . ImportSpec SEMICOLON
    (15) ImportSpec -> . ID ImportPath
    (16) ImportSpec -> . ImportPath
    (17) ImportPath -> . STRING

    RPAREN          shift and go to state 57
    ID              shift and go to state 24
    STRING          shift and go to state 20

    ImportSpec                     shift and go to state 58
    ImportPath                     shift and go to state 22

state 39

    (15) ImportSpec -> ID ImportPath .

    SEMICOLON       reduce using rule 15 (ImportSpec -> ID ImportPath .)


state 40

    (24) ConstDecl -> CONST LPAREN ConstSpec_curl . RPAREN
    (25) ConstSpec_curl -> ConstSpec_curl . ConstSpec SEMICOLON
    (27) ConstSpec -> . IdentifierList ID ASSIGN ExpressionList
    (28) IdentifierList -> . ID
    (29) IdentifierList -> . ID COMMA IdentifierList

    RPAREN          shift and go to state 59
    ID              shift and go to state 29

    ConstSpec                      shift and go to state 60
    IdentifierList                 shift and go to state 28

state 41

    (27) ConstSpec -> IdentifierList ID . ASSIGN ExpressionList

    ASSIGN          shift and go to state 61


state 42

    (29) IdentifierList -> ID COMMA . IdentifierList
    (28) IdentifierList -> . ID
    (29) IdentifierList -> . ID COMMA IdentifierList

    ID              shift and go to state 29

    IdentifierList                 shift and go to state 62

state 43

    (43) FunctionDecl -> FUNC FuncName OpenS . Signature Block CloseS
    (66) Signature -> . Parameters Result
    (73) Parameters -> . LPAREN RPAREN
    (74) Parameters -> . LPAREN ParameterList RPAREN
    (75) Parameters -> . LPAREN ParameterList COMMA RPAREN

    LPAREN          shift and go to state 63

    Parameters                     shift and go to state 64
    Signature                      shift and go to state 65

state 44

    (35) VarDecl -> VAR LPAREN VarSpec_curl . RPAREN
    (36) VarSpec_curl -> VarSpec_curl . VarSpec SEMICOLON
    (38) VarSpec -> . IdentifierList Type ASSIGN ExpressionList
    (39) VarSpec -> . IdentifierList ID ASSIGN ExpressionList
    (40) VarSpec -> . IdentifierList ASSIGN ExpressionList
    (41) VarSpec -> . IdentifierList ID
    (42) VarSpec -> . IdentifierList Type
    (28) IdentifierList -> . ID
    (29) IdentifierList -> . ID COMMA IdentifierList

    RPAREN          shift and go to state 66
    ID              shift and go to state 29

    VarSpec                        shift and go to state 67
    IdentifierList                 shift and go to state 35

state 45

    (47) Type -> TypeLit .

    ASSIGN          reduce using rule 47 (Type -> TypeLit .)
    SEMICOLON       reduce using rule 47 (Type -> TypeLit .)
    RPAREN          reduce using rule 47 (Type -> TypeLit .)
    COMMA           reduce using rule 47 (Type -> TypeLit .)


state 46

    (51) ArrayType -> LBRACK . INT RBRACK Type
    (52) ArrayType -> LBRACK . INT RBRACK ID
    (53) SliceType -> LBRACK . RBRACK Type
    (54) SliceType -> LBRACK . RBRACK ID

    INT             shift and go to state 68
    RBRACK          shift and go to state 69


state 47

    (48) TypeLit -> ArrayType .

    RPAREN          reduce using rule 48 (TypeLit -> ArrayType .)
    COMMA           reduce using rule 48 (TypeLit -> ArrayType .)
    SEMICOLON       reduce using rule 48 (TypeLit -> ArrayType .)
    ASSIGN          reduce using rule 48 (TypeLit -> ArrayType .)


state 48

    (40) VarSpec -> IdentifierList ASSIGN . ExpressionList
    (30) ExpressionList -> . Expression
    (31) ExpressionList -> . ExpressionList COMMA Expression
    (88) Expression -> . UnaryExpr
    (89) Expression -> . Expression BinaryOp UnaryExpr
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (137) Literal -> . BasicLit
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    ID              shift and go to state 89
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    RuneLit                        shift and go to state 87
    UnaryOp                        shift and go to state 71
    TrueLit                        shift and go to state 96
    BasicLit                       shift and go to state 77
    UnaryExpr                      shift and go to state 81
    FloatLit                       shift and go to state 82
    FalseLit                       shift and go to state 72
    IntLit                         shift and go to state 74
    Literal                        shift and go to state 73
    ExpressionList                 shift and go to state 85
    PrimaryExpr                    shift and go to state 83
    StringLit                      shift and go to state 94
    Expression                     shift and go to state 88

state 49

    (45) Type -> LPAREN . Type RPAREN
    (46) Type -> LPAREN . ID RPAREN
    (45) Type -> . LPAREN Type RPAREN
    (46) Type -> . LPAREN ID RPAREN
    (47) Type -> . TypeLit
    (48) TypeLit -> . ArrayType
    (49) TypeLit -> . PointerType
    (50) TypeLit -> . SliceType
    (51) ArrayType -> . LBRACK INT RBRACK Type
    (52) ArrayType -> . LBRACK INT RBRACK ID
    (64) PointerType -> . MUL Type
    (65) PointerType -> . MUL ID
    (53) SliceType -> . LBRACK RBRACK Type
    (54) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 98
    LPAREN          shift and go to state 49
    LBRACK          shift and go to state 46
    MUL             shift and go to state 51

    PointerType                    shift and go to state 50
    TypeLit                        shift and go to state 45
    Type                           shift and go to state 97
    ArrayType                      shift and go to state 47
    SliceType                      shift and go to state 54

state 50

    (49) TypeLit -> PointerType .

    RPAREN          reduce using rule 49 (TypeLit -> PointerType .)
    COMMA           reduce using rule 49 (TypeLit -> PointerType .)
    SEMICOLON       reduce using rule 49 (TypeLit -> PointerType .)
    ASSIGN          reduce using rule 49 (TypeLit -> PointerType .)


state 51

    (64) PointerType -> MUL . Type
    (65) PointerType -> MUL . ID
    (45) Type -> . LPAREN Type RPAREN
    (46) Type -> . LPAREN ID RPAREN
    (47) Type -> . TypeLit
    (48) TypeLit -> . ArrayType
    (49) TypeLit -> . PointerType
    (50) TypeLit -> . SliceType
    (51) ArrayType -> . LBRACK INT RBRACK Type
    (52) ArrayType -> . LBRACK INT RBRACK ID
    (64) PointerType -> . MUL Type
    (65) PointerType -> . MUL ID
    (53) SliceType -> . LBRACK RBRACK Type
    (54) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 100
    LPAREN          shift and go to state 49
    LBRACK          shift and go to state 46
    MUL             shift and go to state 51

    PointerType                    shift and go to state 50
    TypeLit                        shift and go to state 45
    Type                           shift and go to state 99
    ArrayType                      shift and go to state 47
    SliceType                      shift and go to state 54

state 52

    (38) VarSpec -> IdentifierList Type . ASSIGN ExpressionList
    (42) VarSpec -> IdentifierList Type .

    ASSIGN          shift and go to state 101
    SEMICOLON       reduce using rule 42 (VarSpec -> IdentifierList Type .)


state 53

    (39) VarSpec -> IdentifierList ID . ASSIGN ExpressionList
    (41) VarSpec -> IdentifierList ID .

    ASSIGN          shift and go to state 102
    SEMICOLON       reduce using rule 41 (VarSpec -> IdentifierList ID .)


state 54

    (50) TypeLit -> SliceType .

    RPAREN          reduce using rule 50 (TypeLit -> SliceType .)
    COMMA           reduce using rule 50 (TypeLit -> SliceType .)
    SEMICOLON       reduce using rule 50 (TypeLit -> SliceType .)
    ASSIGN          reduce using rule 50 (TypeLit -> SliceType .)


state 55

    (32) StructDecl -> TYPE StructName StructType .

    SEMICOLON       reduce using rule 32 (StructDecl -> TYPE StructName StructType .)


state 56

    (55) StructType -> STRUCT . OpenStructS LBRACE FieldDecl_curl RBRACE CloseStructS
    (4) OpenStructS -> .

    LBRACE          reduce using rule 4 (OpenStructS -> .)

    OpenStructS                    shift and go to state 103

state 57

    (12) ImportDecl -> IMPORT LPAREN ImportSpec_curl RPAREN .

    SEMICOLON       reduce using rule 12 (ImportDecl -> IMPORT LPAREN ImportSpec_curl RPAREN .)


state 58

    (13) ImportSpec_curl -> ImportSpec_curl ImportSpec . SEMICOLON

    SEMICOLON       shift and go to state 104


state 59

    (24) ConstDecl -> CONST LPAREN ConstSpec_curl RPAREN .

    SEMICOLON       reduce using rule 24 (ConstDecl -> CONST LPAREN ConstSpec_curl RPAREN .)


state 60

    (25) ConstSpec_curl -> ConstSpec_curl ConstSpec . SEMICOLON

    SEMICOLON       shift and go to state 105


state 61

    (27) ConstSpec -> IdentifierList ID ASSIGN . ExpressionList
    (30) ExpressionList -> . Expression
    (31) ExpressionList -> . ExpressionList COMMA Expression
    (88) Expression -> . UnaryExpr
    (89) Expression -> . Expression BinaryOp UnaryExpr
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (137) Literal -> . BasicLit
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    ID              shift and go to state 89
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    RuneLit                        shift and go to state 87
    UnaryOp                        shift and go to state 71
    TrueLit                        shift and go to state 96
    BasicLit                       shift and go to state 77
    UnaryExpr                      shift and go to state 81
    FloatLit                       shift and go to state 82
    FalseLit                       shift and go to state 72
    IntLit                         shift and go to state 74
    Literal                        shift and go to state 73
    ExpressionList                 shift and go to state 106
    PrimaryExpr                    shift and go to state 83
    StringLit                      shift and go to state 94
    Expression                     shift and go to state 88

state 62

    (29) IdentifierList -> ID COMMA IdentifierList .

    DEFINE          reduce using rule 29 (IdentifierList -> ID COMMA IdentifierList .)
    ID              reduce using rule 29 (IdentifierList -> ID COMMA IdentifierList .)
    STRUCT          reduce using rule 29 (IdentifierList -> ID COMMA IdentifierList .)
    LPAREN          reduce using rule 29 (IdentifierList -> ID COMMA IdentifierList .)
    LBRACK          reduce using rule 29 (IdentifierList -> ID COMMA IdentifierList .)
    MUL             reduce using rule 29 (IdentifierList -> ID COMMA IdentifierList .)
    ASSIGN          reduce using rule 29 (IdentifierList -> ID COMMA IdentifierList .)


state 63

    (73) Parameters -> LPAREN . RPAREN
    (74) Parameters -> LPAREN . ParameterList RPAREN
    (75) Parameters -> LPAREN . ParameterList COMMA RPAREN
    (76) ParameterList -> . ParameterDecl
    (77) ParameterList -> . ParameterList COMMA ParameterDecl
    (78) ParameterDecl -> . ParaIdList Type
    (79) ParameterDecl -> . ID Type
    (80) ParameterDecl -> . ParaIdList ID
    (81) ParameterDecl -> . ID ID
    (82) ParaIdList -> . ID COMMA ID
    (83) ParaIdList -> . ParaIdList COMMA ID

    RPAREN          shift and go to state 107
    ID              shift and go to state 111

    ParameterList                  shift and go to state 108
    ParaIdList                     shift and go to state 109
    ParameterDecl                  shift and go to state 110

state 64

    (66) Signature -> Parameters . Result
    (67) Result -> . LPAREN TypeList RPAREN
    (68) Result -> .

    LPAREN          shift and go to state 112
    LBRACE          reduce using rule 68 (Result -> .)

    Result                         shift and go to state 113

state 65

    (43) FunctionDecl -> FUNC FuncName OpenS Signature . Block CloseS
    (84) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 114

    Block                          shift and go to state 115

state 66

    (35) VarDecl -> VAR LPAREN VarSpec_curl RPAREN .

    SEMICOLON       reduce using rule 35 (VarDecl -> VAR LPAREN VarSpec_curl RPAREN .)


state 67

    (36) VarSpec_curl -> VarSpec_curl VarSpec . SEMICOLON

    SEMICOLON       shift and go to state 116


state 68

    (51) ArrayType -> LBRACK INT . RBRACK Type
    (52) ArrayType -> LBRACK INT . RBRACK ID

    RBRACK          shift and go to state 117


state 69

    (53) SliceType -> LBRACK RBRACK . Type
    (54) SliceType -> LBRACK RBRACK . ID
    (45) Type -> . LPAREN Type RPAREN
    (46) Type -> . LPAREN ID RPAREN
    (47) Type -> . TypeLit
    (48) TypeLit -> . ArrayType
    (49) TypeLit -> . PointerType
    (50) TypeLit -> . SliceType
    (51) ArrayType -> . LBRACK INT RBRACK Type
    (52) ArrayType -> . LBRACK INT RBRACK ID
    (64) PointerType -> . MUL Type
    (65) PointerType -> . MUL ID
    (53) SliceType -> . LBRACK RBRACK Type
    (54) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 119
    LPAREN          shift and go to state 49
    LBRACK          shift and go to state 46
    MUL             shift and go to state 51

    PointerType                    shift and go to state 50
    TypeLit                        shift and go to state 45
    Type                           shift and go to state 118
    ArrayType                      shift and go to state 47
    SliceType                      shift and go to state 54

state 70

    (115) UnaryOp -> SUB .

    ID              reduce using rule 115 (UnaryOp -> SUB .)
    LPAREN          reduce using rule 115 (UnaryOp -> SUB .)
    ADD             reduce using rule 115 (UnaryOp -> SUB .)
    SUB             reduce using rule 115 (UnaryOp -> SUB .)
    NOT             reduce using rule 115 (UnaryOp -> SUB .)
    XOR             reduce using rule 115 (UnaryOp -> SUB .)
    MUL             reduce using rule 115 (UnaryOp -> SUB .)
    AND             reduce using rule 115 (UnaryOp -> SUB .)
    INT             reduce using rule 115 (UnaryOp -> SUB .)
    FLOAT           reduce using rule 115 (UnaryOp -> SUB .)
    RUNE            reduce using rule 115 (UnaryOp -> SUB .)
    STRING          reduce using rule 115 (UnaryOp -> SUB .)
    TRUE            reduce using rule 115 (UnaryOp -> SUB .)
    FALSE           reduce using rule 115 (UnaryOp -> SUB .)


state 71

    (91) UnaryExpr -> UnaryOp . UnaryExpr
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (137) Literal -> . BasicLit
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    ID              shift and go to state 89
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    RuneLit                        shift and go to state 87
    UnaryOp                        shift and go to state 71
    TrueLit                        shift and go to state 96
    BasicLit                       shift and go to state 77
    UnaryExpr                      shift and go to state 120
    FloatLit                       shift and go to state 82
    FalseLit                       shift and go to state 72
    IntLit                         shift and go to state 74
    Literal                        shift and go to state 73
    PrimaryExpr                    shift and go to state 83
    StringLit                      shift and go to state 94

state 72

    (143) BasicLit -> FalseLit .

    DOT             reduce using rule 143 (BasicLit -> FalseLit .)
    LBRACK          reduce using rule 143 (BasicLit -> FalseLit .)
    LPAREN          reduce using rule 143 (BasicLit -> FalseLit .)
    LOR             reduce using rule 143 (BasicLit -> FalseLit .)
    LAND            reduce using rule 143 (BasicLit -> FalseLit .)
    EQL             reduce using rule 143 (BasicLit -> FalseLit .)
    NEQ             reduce using rule 143 (BasicLit -> FalseLit .)
    LTN             reduce using rule 143 (BasicLit -> FalseLit .)
    LEQ             reduce using rule 143 (BasicLit -> FalseLit .)
    GTN             reduce using rule 143 (BasicLit -> FalseLit .)
    GEQ             reduce using rule 143 (BasicLit -> FalseLit .)
    ADD             reduce using rule 143 (BasicLit -> FalseLit .)
    SUB             reduce using rule 143 (BasicLit -> FalseLit .)
    OR              reduce using rule 143 (BasicLit -> FalseLit .)
    XOR             reduce using rule 143 (BasicLit -> FalseLit .)
    MUL             reduce using rule 143 (BasicLit -> FalseLit .)
    DIV             reduce using rule 143 (BasicLit -> FalseLit .)
    MOD             reduce using rule 143 (BasicLit -> FalseLit .)
    SHL             reduce using rule 143 (BasicLit -> FalseLit .)
    SHR             reduce using rule 143 (BasicLit -> FalseLit .)
    AND             reduce using rule 143 (BasicLit -> FalseLit .)
    AND_NOT         reduce using rule 143 (BasicLit -> FalseLit .)
    RPAREN          reduce using rule 143 (BasicLit -> FalseLit .)
    COMMA           reduce using rule 143 (BasicLit -> FalseLit .)
    RBRACK          reduce using rule 143 (BasicLit -> FalseLit .)
    SEMICOLON       reduce using rule 143 (BasicLit -> FalseLit .)
    ADD_ASSIGN      reduce using rule 143 (BasicLit -> FalseLit .)
    SUB_ASSIGN      reduce using rule 143 (BasicLit -> FalseLit .)
    MUL_ASSIGN      reduce using rule 143 (BasicLit -> FalseLit .)
    DIV_ASSIGN      reduce using rule 143 (BasicLit -> FalseLit .)
    MOD_ASSIGN      reduce using rule 143 (BasicLit -> FalseLit .)
    AND_ASSIGN      reduce using rule 143 (BasicLit -> FalseLit .)
    AND_NOT_ASSIGN  reduce using rule 143 (BasicLit -> FalseLit .)
    OR_ASSIGN       reduce using rule 143 (BasicLit -> FalseLit .)
    XOR_ASSIGN      reduce using rule 143 (BasicLit -> FalseLit .)
    SHL_ASSIGN      reduce using rule 143 (BasicLit -> FalseLit .)
    SHR_ASSIGN      reduce using rule 143 (BasicLit -> FalseLit .)
    ASSIGN          reduce using rule 143 (BasicLit -> FalseLit .)
    LBRACE          reduce using rule 143 (BasicLit -> FalseLit .)
    COLON           reduce using rule 143 (BasicLit -> FalseLit .)
    INC             reduce using rule 143 (BasicLit -> FalseLit .)
    DEC             reduce using rule 143 (BasicLit -> FalseLit .)


state 73

    (120) PrimaryExpr -> Literal .

    DOT             reduce using rule 120 (PrimaryExpr -> Literal .)
    LBRACK          reduce using rule 120 (PrimaryExpr -> Literal .)
    LPAREN          reduce using rule 120 (PrimaryExpr -> Literal .)
    LOR             reduce using rule 120 (PrimaryExpr -> Literal .)
    LAND            reduce using rule 120 (PrimaryExpr -> Literal .)
    EQL             reduce using rule 120 (PrimaryExpr -> Literal .)
    NEQ             reduce using rule 120 (PrimaryExpr -> Literal .)
    LTN             reduce using rule 120 (PrimaryExpr -> Literal .)
    LEQ             reduce using rule 120 (PrimaryExpr -> Literal .)
    GTN             reduce using rule 120 (PrimaryExpr -> Literal .)
    GEQ             reduce using rule 120 (PrimaryExpr -> Literal .)
    ADD             reduce using rule 120 (PrimaryExpr -> Literal .)
    SUB             reduce using rule 120 (PrimaryExpr -> Literal .)
    OR              reduce using rule 120 (PrimaryExpr -> Literal .)
    XOR             reduce using rule 120 (PrimaryExpr -> Literal .)
    MUL             reduce using rule 120 (PrimaryExpr -> Literal .)
    DIV             reduce using rule 120 (PrimaryExpr -> Literal .)
    MOD             reduce using rule 120 (PrimaryExpr -> Literal .)
    SHL             reduce using rule 120 (PrimaryExpr -> Literal .)
    SHR             reduce using rule 120 (PrimaryExpr -> Literal .)
    AND             reduce using rule 120 (PrimaryExpr -> Literal .)
    AND_NOT         reduce using rule 120 (PrimaryExpr -> Literal .)
    COMMA           reduce using rule 120 (PrimaryExpr -> Literal .)
    SEMICOLON       reduce using rule 120 (PrimaryExpr -> Literal .)
    LBRACE          reduce using rule 120 (PrimaryExpr -> Literal .)
    RBRACK          reduce using rule 120 (PrimaryExpr -> Literal .)
    COLON           reduce using rule 120 (PrimaryExpr -> Literal .)
    RPAREN          reduce using rule 120 (PrimaryExpr -> Literal .)
    ADD_ASSIGN      reduce using rule 120 (PrimaryExpr -> Literal .)
    SUB_ASSIGN      reduce using rule 120 (PrimaryExpr -> Literal .)
    MUL_ASSIGN      reduce using rule 120 (PrimaryExpr -> Literal .)
    DIV_ASSIGN      reduce using rule 120 (PrimaryExpr -> Literal .)
    MOD_ASSIGN      reduce using rule 120 (PrimaryExpr -> Literal .)
    AND_ASSIGN      reduce using rule 120 (PrimaryExpr -> Literal .)
    AND_NOT_ASSIGN  reduce using rule 120 (PrimaryExpr -> Literal .)
    OR_ASSIGN       reduce using rule 120 (PrimaryExpr -> Literal .)
    XOR_ASSIGN      reduce using rule 120 (PrimaryExpr -> Literal .)
    SHL_ASSIGN      reduce using rule 120 (PrimaryExpr -> Literal .)
    SHR_ASSIGN      reduce using rule 120 (PrimaryExpr -> Literal .)
    ASSIGN          reduce using rule 120 (PrimaryExpr -> Literal .)
    INC             reduce using rule 120 (PrimaryExpr -> Literal .)
    DEC             reduce using rule 120 (PrimaryExpr -> Literal .)


state 74

    (138) BasicLit -> IntLit .

    DOT             reduce using rule 138 (BasicLit -> IntLit .)
    LBRACK          reduce using rule 138 (BasicLit -> IntLit .)
    LPAREN          reduce using rule 138 (BasicLit -> IntLit .)
    LOR             reduce using rule 138 (BasicLit -> IntLit .)
    LAND            reduce using rule 138 (BasicLit -> IntLit .)
    EQL             reduce using rule 138 (BasicLit -> IntLit .)
    NEQ             reduce using rule 138 (BasicLit -> IntLit .)
    LTN             reduce using rule 138 (BasicLit -> IntLit .)
    LEQ             reduce using rule 138 (BasicLit -> IntLit .)
    GTN             reduce using rule 138 (BasicLit -> IntLit .)
    GEQ             reduce using rule 138 (BasicLit -> IntLit .)
    ADD             reduce using rule 138 (BasicLit -> IntLit .)
    SUB             reduce using rule 138 (BasicLit -> IntLit .)
    OR              reduce using rule 138 (BasicLit -> IntLit .)
    XOR             reduce using rule 138 (BasicLit -> IntLit .)
    MUL             reduce using rule 138 (BasicLit -> IntLit .)
    DIV             reduce using rule 138 (BasicLit -> IntLit .)
    MOD             reduce using rule 138 (BasicLit -> IntLit .)
    SHL             reduce using rule 138 (BasicLit -> IntLit .)
    SHR             reduce using rule 138 (BasicLit -> IntLit .)
    AND             reduce using rule 138 (BasicLit -> IntLit .)
    AND_NOT         reduce using rule 138 (BasicLit -> IntLit .)
    RPAREN          reduce using rule 138 (BasicLit -> IntLit .)
    COMMA           reduce using rule 138 (BasicLit -> IntLit .)
    RBRACK          reduce using rule 138 (BasicLit -> IntLit .)
    SEMICOLON       reduce using rule 138 (BasicLit -> IntLit .)
    ADD_ASSIGN      reduce using rule 138 (BasicLit -> IntLit .)
    SUB_ASSIGN      reduce using rule 138 (BasicLit -> IntLit .)
    MUL_ASSIGN      reduce using rule 138 (BasicLit -> IntLit .)
    DIV_ASSIGN      reduce using rule 138 (BasicLit -> IntLit .)
    MOD_ASSIGN      reduce using rule 138 (BasicLit -> IntLit .)
    AND_ASSIGN      reduce using rule 138 (BasicLit -> IntLit .)
    AND_NOT_ASSIGN  reduce using rule 138 (BasicLit -> IntLit .)
    OR_ASSIGN       reduce using rule 138 (BasicLit -> IntLit .)
    XOR_ASSIGN      reduce using rule 138 (BasicLit -> IntLit .)
    SHL_ASSIGN      reduce using rule 138 (BasicLit -> IntLit .)
    SHR_ASSIGN      reduce using rule 138 (BasicLit -> IntLit .)
    ASSIGN          reduce using rule 138 (BasicLit -> IntLit .)
    LBRACE          reduce using rule 138 (BasicLit -> IntLit .)
    COLON           reduce using rule 138 (BasicLit -> IntLit .)
    INC             reduce using rule 138 (BasicLit -> IntLit .)
    DEC             reduce using rule 138 (BasicLit -> IntLit .)


state 75

    (118) UnaryOp -> MUL .

    ID              reduce using rule 118 (UnaryOp -> MUL .)
    LPAREN          reduce using rule 118 (UnaryOp -> MUL .)
    ADD             reduce using rule 118 (UnaryOp -> MUL .)
    SUB             reduce using rule 118 (UnaryOp -> MUL .)
    NOT             reduce using rule 118 (UnaryOp -> MUL .)
    XOR             reduce using rule 118 (UnaryOp -> MUL .)
    MUL             reduce using rule 118 (UnaryOp -> MUL .)
    AND             reduce using rule 118 (UnaryOp -> MUL .)
    INT             reduce using rule 118 (UnaryOp -> MUL .)
    FLOAT           reduce using rule 118 (UnaryOp -> MUL .)
    RUNE            reduce using rule 118 (UnaryOp -> MUL .)
    STRING          reduce using rule 118 (UnaryOp -> MUL .)
    TRUE            reduce using rule 118 (UnaryOp -> MUL .)
    FALSE           reduce using rule 118 (UnaryOp -> MUL .)


state 76

    (144) TrueLit -> TRUE .

    DOT             reduce using rule 144 (TrueLit -> TRUE .)
    LBRACK          reduce using rule 144 (TrueLit -> TRUE .)
    LPAREN          reduce using rule 144 (TrueLit -> TRUE .)
    LOR             reduce using rule 144 (TrueLit -> TRUE .)
    LAND            reduce using rule 144 (TrueLit -> TRUE .)
    EQL             reduce using rule 144 (TrueLit -> TRUE .)
    NEQ             reduce using rule 144 (TrueLit -> TRUE .)
    LTN             reduce using rule 144 (TrueLit -> TRUE .)
    LEQ             reduce using rule 144 (TrueLit -> TRUE .)
    GTN             reduce using rule 144 (TrueLit -> TRUE .)
    GEQ             reduce using rule 144 (TrueLit -> TRUE .)
    ADD             reduce using rule 144 (TrueLit -> TRUE .)
    SUB             reduce using rule 144 (TrueLit -> TRUE .)
    OR              reduce using rule 144 (TrueLit -> TRUE .)
    XOR             reduce using rule 144 (TrueLit -> TRUE .)
    MUL             reduce using rule 144 (TrueLit -> TRUE .)
    DIV             reduce using rule 144 (TrueLit -> TRUE .)
    MOD             reduce using rule 144 (TrueLit -> TRUE .)
    SHL             reduce using rule 144 (TrueLit -> TRUE .)
    SHR             reduce using rule 144 (TrueLit -> TRUE .)
    AND             reduce using rule 144 (TrueLit -> TRUE .)
    AND_NOT         reduce using rule 144 (TrueLit -> TRUE .)
    RPAREN          reduce using rule 144 (TrueLit -> TRUE .)
    COMMA           reduce using rule 144 (TrueLit -> TRUE .)
    COLON           reduce using rule 144 (TrueLit -> TRUE .)
    SEMICOLON       reduce using rule 144 (TrueLit -> TRUE .)
    RBRACK          reduce using rule 144 (TrueLit -> TRUE .)
    ADD_ASSIGN      reduce using rule 144 (TrueLit -> TRUE .)
    SUB_ASSIGN      reduce using rule 144 (TrueLit -> TRUE .)
    MUL_ASSIGN      reduce using rule 144 (TrueLit -> TRUE .)
    DIV_ASSIGN      reduce using rule 144 (TrueLit -> TRUE .)
    MOD_ASSIGN      reduce using rule 144 (TrueLit -> TRUE .)
    AND_ASSIGN      reduce using rule 144 (TrueLit -> TRUE .)
    AND_NOT_ASSIGN  reduce using rule 144 (TrueLit -> TRUE .)
    OR_ASSIGN       reduce using rule 144 (TrueLit -> TRUE .)
    XOR_ASSIGN      reduce using rule 144 (TrueLit -> TRUE .)
    SHL_ASSIGN      reduce using rule 144 (TrueLit -> TRUE .)
    SHR_ASSIGN      reduce using rule 144 (TrueLit -> TRUE .)
    ASSIGN          reduce using rule 144 (TrueLit -> TRUE .)
    LBRACE          reduce using rule 144 (TrueLit -> TRUE .)
    INC             reduce using rule 144 (TrueLit -> TRUE .)
    DEC             reduce using rule 144 (TrueLit -> TRUE .)


state 77

    (137) Literal -> BasicLit .

    DOT             reduce using rule 137 (Literal -> BasicLit .)
    LBRACK          reduce using rule 137 (Literal -> BasicLit .)
    LPAREN          reduce using rule 137 (Literal -> BasicLit .)
    LOR             reduce using rule 137 (Literal -> BasicLit .)
    LAND            reduce using rule 137 (Literal -> BasicLit .)
    EQL             reduce using rule 137 (Literal -> BasicLit .)
    NEQ             reduce using rule 137 (Literal -> BasicLit .)
    LTN             reduce using rule 137 (Literal -> BasicLit .)
    LEQ             reduce using rule 137 (Literal -> BasicLit .)
    GTN             reduce using rule 137 (Literal -> BasicLit .)
    GEQ             reduce using rule 137 (Literal -> BasicLit .)
    ADD             reduce using rule 137 (Literal -> BasicLit .)
    SUB             reduce using rule 137 (Literal -> BasicLit .)
    OR              reduce using rule 137 (Literal -> BasicLit .)
    XOR             reduce using rule 137 (Literal -> BasicLit .)
    MUL             reduce using rule 137 (Literal -> BasicLit .)
    DIV             reduce using rule 137 (Literal -> BasicLit .)
    MOD             reduce using rule 137 (Literal -> BasicLit .)
    SHL             reduce using rule 137 (Literal -> BasicLit .)
    SHR             reduce using rule 137 (Literal -> BasicLit .)
    AND             reduce using rule 137 (Literal -> BasicLit .)
    AND_NOT         reduce using rule 137 (Literal -> BasicLit .)
    COMMA           reduce using rule 137 (Literal -> BasicLit .)
    SEMICOLON       reduce using rule 137 (Literal -> BasicLit .)
    RPAREN          reduce using rule 137 (Literal -> BasicLit .)
    RBRACK          reduce using rule 137 (Literal -> BasicLit .)
    COLON           reduce using rule 137 (Literal -> BasicLit .)
    ADD_ASSIGN      reduce using rule 137 (Literal -> BasicLit .)
    SUB_ASSIGN      reduce using rule 137 (Literal -> BasicLit .)
    MUL_ASSIGN      reduce using rule 137 (Literal -> BasicLit .)
    DIV_ASSIGN      reduce using rule 137 (Literal -> BasicLit .)
    MOD_ASSIGN      reduce using rule 137 (Literal -> BasicLit .)
    AND_ASSIGN      reduce using rule 137 (Literal -> BasicLit .)
    AND_NOT_ASSIGN  reduce using rule 137 (Literal -> BasicLit .)
    OR_ASSIGN       reduce using rule 137 (Literal -> BasicLit .)
    XOR_ASSIGN      reduce using rule 137 (Literal -> BasicLit .)
    SHL_ASSIGN      reduce using rule 137 (Literal -> BasicLit .)
    SHR_ASSIGN      reduce using rule 137 (Literal -> BasicLit .)
    ASSIGN          reduce using rule 137 (Literal -> BasicLit .)
    LBRACE          reduce using rule 137 (Literal -> BasicLit .)
    INC             reduce using rule 137 (Literal -> BasicLit .)
    DEC             reduce using rule 137 (Literal -> BasicLit .)


state 78

    (148) RuneLit -> RUNE .

    DOT             reduce using rule 148 (RuneLit -> RUNE .)
    LBRACK          reduce using rule 148 (RuneLit -> RUNE .)
    LPAREN          reduce using rule 148 (RuneLit -> RUNE .)
    RBRACK          reduce using rule 148 (RuneLit -> RUNE .)
    LOR             reduce using rule 148 (RuneLit -> RUNE .)
    LAND            reduce using rule 148 (RuneLit -> RUNE .)
    EQL             reduce using rule 148 (RuneLit -> RUNE .)
    NEQ             reduce using rule 148 (RuneLit -> RUNE .)
    LTN             reduce using rule 148 (RuneLit -> RUNE .)
    LEQ             reduce using rule 148 (RuneLit -> RUNE .)
    GTN             reduce using rule 148 (RuneLit -> RUNE .)
    GEQ             reduce using rule 148 (RuneLit -> RUNE .)
    ADD             reduce using rule 148 (RuneLit -> RUNE .)
    SUB             reduce using rule 148 (RuneLit -> RUNE .)
    OR              reduce using rule 148 (RuneLit -> RUNE .)
    XOR             reduce using rule 148 (RuneLit -> RUNE .)
    MUL             reduce using rule 148 (RuneLit -> RUNE .)
    DIV             reduce using rule 148 (RuneLit -> RUNE .)
    MOD             reduce using rule 148 (RuneLit -> RUNE .)
    SHL             reduce using rule 148 (RuneLit -> RUNE .)
    SHR             reduce using rule 148 (RuneLit -> RUNE .)
    AND             reduce using rule 148 (RuneLit -> RUNE .)
    AND_NOT         reduce using rule 148 (RuneLit -> RUNE .)
    COMMA           reduce using rule 148 (RuneLit -> RUNE .)
    SEMICOLON       reduce using rule 148 (RuneLit -> RUNE .)
    LBRACE          reduce using rule 148 (RuneLit -> RUNE .)
    RPAREN          reduce using rule 148 (RuneLit -> RUNE .)
    INC             reduce using rule 148 (RuneLit -> RUNE .)
    DEC             reduce using rule 148 (RuneLit -> RUNE .)
    ADD_ASSIGN      reduce using rule 148 (RuneLit -> RUNE .)
    SUB_ASSIGN      reduce using rule 148 (RuneLit -> RUNE .)
    MUL_ASSIGN      reduce using rule 148 (RuneLit -> RUNE .)
    DIV_ASSIGN      reduce using rule 148 (RuneLit -> RUNE .)
    MOD_ASSIGN      reduce using rule 148 (RuneLit -> RUNE .)
    AND_ASSIGN      reduce using rule 148 (RuneLit -> RUNE .)
    AND_NOT_ASSIGN  reduce using rule 148 (RuneLit -> RUNE .)
    OR_ASSIGN       reduce using rule 148 (RuneLit -> RUNE .)
    XOR_ASSIGN      reduce using rule 148 (RuneLit -> RUNE .)
    SHL_ASSIGN      reduce using rule 148 (RuneLit -> RUNE .)
    SHR_ASSIGN      reduce using rule 148 (RuneLit -> RUNE .)
    ASSIGN          reduce using rule 148 (RuneLit -> RUNE .)
    COLON           reduce using rule 148 (RuneLit -> RUNE .)


state 79

    (117) UnaryOp -> XOR .

    ID              reduce using rule 117 (UnaryOp -> XOR .)
    LPAREN          reduce using rule 117 (UnaryOp -> XOR .)
    ADD             reduce using rule 117 (UnaryOp -> XOR .)
    SUB             reduce using rule 117 (UnaryOp -> XOR .)
    NOT             reduce using rule 117 (UnaryOp -> XOR .)
    XOR             reduce using rule 117 (UnaryOp -> XOR .)
    MUL             reduce using rule 117 (UnaryOp -> XOR .)
    AND             reduce using rule 117 (UnaryOp -> XOR .)
    INT             reduce using rule 117 (UnaryOp -> XOR .)
    FLOAT           reduce using rule 117 (UnaryOp -> XOR .)
    RUNE            reduce using rule 117 (UnaryOp -> XOR .)
    STRING          reduce using rule 117 (UnaryOp -> XOR .)
    TRUE            reduce using rule 117 (UnaryOp -> XOR .)
    FALSE           reduce using rule 117 (UnaryOp -> XOR .)


state 80

    (149) StringLit -> STRING .

    DOT             reduce using rule 149 (StringLit -> STRING .)
    LBRACK          reduce using rule 149 (StringLit -> STRING .)
    LPAREN          reduce using rule 149 (StringLit -> STRING .)
    LOR             reduce using rule 149 (StringLit -> STRING .)
    LAND            reduce using rule 149 (StringLit -> STRING .)
    EQL             reduce using rule 149 (StringLit -> STRING .)
    NEQ             reduce using rule 149 (StringLit -> STRING .)
    LTN             reduce using rule 149 (StringLit -> STRING .)
    LEQ             reduce using rule 149 (StringLit -> STRING .)
    GTN             reduce using rule 149 (StringLit -> STRING .)
    GEQ             reduce using rule 149 (StringLit -> STRING .)
    ADD             reduce using rule 149 (StringLit -> STRING .)
    SUB             reduce using rule 149 (StringLit -> STRING .)
    OR              reduce using rule 149 (StringLit -> STRING .)
    XOR             reduce using rule 149 (StringLit -> STRING .)
    MUL             reduce using rule 149 (StringLit -> STRING .)
    DIV             reduce using rule 149 (StringLit -> STRING .)
    MOD             reduce using rule 149 (StringLit -> STRING .)
    SHL             reduce using rule 149 (StringLit -> STRING .)
    SHR             reduce using rule 149 (StringLit -> STRING .)
    AND             reduce using rule 149 (StringLit -> STRING .)
    AND_NOT         reduce using rule 149 (StringLit -> STRING .)
    COMMA           reduce using rule 149 (StringLit -> STRING .)
    SEMICOLON       reduce using rule 149 (StringLit -> STRING .)
    RPAREN          reduce using rule 149 (StringLit -> STRING .)
    RBRACK          reduce using rule 149 (StringLit -> STRING .)
    COLON           reduce using rule 149 (StringLit -> STRING .)
    ADD_ASSIGN      reduce using rule 149 (StringLit -> STRING .)
    SUB_ASSIGN      reduce using rule 149 (StringLit -> STRING .)
    MUL_ASSIGN      reduce using rule 149 (StringLit -> STRING .)
    DIV_ASSIGN      reduce using rule 149 (StringLit -> STRING .)
    MOD_ASSIGN      reduce using rule 149 (StringLit -> STRING .)
    AND_ASSIGN      reduce using rule 149 (StringLit -> STRING .)
    AND_NOT_ASSIGN  reduce using rule 149 (StringLit -> STRING .)
    OR_ASSIGN       reduce using rule 149 (StringLit -> STRING .)
    XOR_ASSIGN      reduce using rule 149 (StringLit -> STRING .)
    SHL_ASSIGN      reduce using rule 149 (StringLit -> STRING .)
    SHR_ASSIGN      reduce using rule 149 (StringLit -> STRING .)
    ASSIGN          reduce using rule 149 (StringLit -> STRING .)
    LBRACE          reduce using rule 149 (StringLit -> STRING .)
    INC             reduce using rule 149 (StringLit -> STRING .)
    DEC             reduce using rule 149 (StringLit -> STRING .)


state 81

    (88) Expression -> UnaryExpr .

    RBRACK          reduce using rule 88 (Expression -> UnaryExpr .)
    LOR             reduce using rule 88 (Expression -> UnaryExpr .)
    LAND            reduce using rule 88 (Expression -> UnaryExpr .)
    EQL             reduce using rule 88 (Expression -> UnaryExpr .)
    NEQ             reduce using rule 88 (Expression -> UnaryExpr .)
    LTN             reduce using rule 88 (Expression -> UnaryExpr .)
    LEQ             reduce using rule 88 (Expression -> UnaryExpr .)
    GTN             reduce using rule 88 (Expression -> UnaryExpr .)
    GEQ             reduce using rule 88 (Expression -> UnaryExpr .)
    ADD             reduce using rule 88 (Expression -> UnaryExpr .)
    SUB             reduce using rule 88 (Expression -> UnaryExpr .)
    OR              reduce using rule 88 (Expression -> UnaryExpr .)
    XOR             reduce using rule 88 (Expression -> UnaryExpr .)
    MUL             reduce using rule 88 (Expression -> UnaryExpr .)
    DIV             reduce using rule 88 (Expression -> UnaryExpr .)
    MOD             reduce using rule 88 (Expression -> UnaryExpr .)
    SHL             reduce using rule 88 (Expression -> UnaryExpr .)
    SHR             reduce using rule 88 (Expression -> UnaryExpr .)
    AND             reduce using rule 88 (Expression -> UnaryExpr .)
    AND_NOT         reduce using rule 88 (Expression -> UnaryExpr .)
    COMMA           reduce using rule 88 (Expression -> UnaryExpr .)
    SEMICOLON       reduce using rule 88 (Expression -> UnaryExpr .)
    COLON           reduce using rule 88 (Expression -> UnaryExpr .)
    LBRACE          reduce using rule 88 (Expression -> UnaryExpr .)
    RPAREN          reduce using rule 88 (Expression -> UnaryExpr .)
    INC             reduce using rule 88 (Expression -> UnaryExpr .)
    DEC             reduce using rule 88 (Expression -> UnaryExpr .)
    ADD_ASSIGN      reduce using rule 88 (Expression -> UnaryExpr .)
    SUB_ASSIGN      reduce using rule 88 (Expression -> UnaryExpr .)
    MUL_ASSIGN      reduce using rule 88 (Expression -> UnaryExpr .)
    DIV_ASSIGN      reduce using rule 88 (Expression -> UnaryExpr .)
    MOD_ASSIGN      reduce using rule 88 (Expression -> UnaryExpr .)
    AND_ASSIGN      reduce using rule 88 (Expression -> UnaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 88 (Expression -> UnaryExpr .)
    OR_ASSIGN       reduce using rule 88 (Expression -> UnaryExpr .)
    XOR_ASSIGN      reduce using rule 88 (Expression -> UnaryExpr .)
    SHL_ASSIGN      reduce using rule 88 (Expression -> UnaryExpr .)
    SHR_ASSIGN      reduce using rule 88 (Expression -> UnaryExpr .)
    ASSIGN          reduce using rule 88 (Expression -> UnaryExpr .)


state 82

    (139) BasicLit -> FloatLit .

    DOT             reduce using rule 139 (BasicLit -> FloatLit .)
    LBRACK          reduce using rule 139 (BasicLit -> FloatLit .)
    LPAREN          reduce using rule 139 (BasicLit -> FloatLit .)
    LOR             reduce using rule 139 (BasicLit -> FloatLit .)
    LAND            reduce using rule 139 (BasicLit -> FloatLit .)
    EQL             reduce using rule 139 (BasicLit -> FloatLit .)
    NEQ             reduce using rule 139 (BasicLit -> FloatLit .)
    LTN             reduce using rule 139 (BasicLit -> FloatLit .)
    LEQ             reduce using rule 139 (BasicLit -> FloatLit .)
    GTN             reduce using rule 139 (BasicLit -> FloatLit .)
    GEQ             reduce using rule 139 (BasicLit -> FloatLit .)
    ADD             reduce using rule 139 (BasicLit -> FloatLit .)
    SUB             reduce using rule 139 (BasicLit -> FloatLit .)
    OR              reduce using rule 139 (BasicLit -> FloatLit .)
    XOR             reduce using rule 139 (BasicLit -> FloatLit .)
    MUL             reduce using rule 139 (BasicLit -> FloatLit .)
    DIV             reduce using rule 139 (BasicLit -> FloatLit .)
    MOD             reduce using rule 139 (BasicLit -> FloatLit .)
    SHL             reduce using rule 139 (BasicLit -> FloatLit .)
    SHR             reduce using rule 139 (BasicLit -> FloatLit .)
    AND             reduce using rule 139 (BasicLit -> FloatLit .)
    AND_NOT         reduce using rule 139 (BasicLit -> FloatLit .)
    RPAREN          reduce using rule 139 (BasicLit -> FloatLit .)
    COMMA           reduce using rule 139 (BasicLit -> FloatLit .)
    RBRACK          reduce using rule 139 (BasicLit -> FloatLit .)
    SEMICOLON       reduce using rule 139 (BasicLit -> FloatLit .)
    ADD_ASSIGN      reduce using rule 139 (BasicLit -> FloatLit .)
    SUB_ASSIGN      reduce using rule 139 (BasicLit -> FloatLit .)
    MUL_ASSIGN      reduce using rule 139 (BasicLit -> FloatLit .)
    DIV_ASSIGN      reduce using rule 139 (BasicLit -> FloatLit .)
    MOD_ASSIGN      reduce using rule 139 (BasicLit -> FloatLit .)
    AND_ASSIGN      reduce using rule 139 (BasicLit -> FloatLit .)
    AND_NOT_ASSIGN  reduce using rule 139 (BasicLit -> FloatLit .)
    OR_ASSIGN       reduce using rule 139 (BasicLit -> FloatLit .)
    XOR_ASSIGN      reduce using rule 139 (BasicLit -> FloatLit .)
    SHL_ASSIGN      reduce using rule 139 (BasicLit -> FloatLit .)
    SHR_ASSIGN      reduce using rule 139 (BasicLit -> FloatLit .)
    ASSIGN          reduce using rule 139 (BasicLit -> FloatLit .)
    LBRACE          reduce using rule 139 (BasicLit -> FloatLit .)
    COLON           reduce using rule 139 (BasicLit -> FloatLit .)
    INC             reduce using rule 139 (BasicLit -> FloatLit .)
    DEC             reduce using rule 139 (BasicLit -> FloatLit .)


state 83

    (90) UnaryExpr -> PrimaryExpr .
    (122) PrimaryExpr -> PrimaryExpr . DOT ID
    (124) PrimaryExpr -> PrimaryExpr . Index
    (125) PrimaryExpr -> PrimaryExpr . Slice
    (126) PrimaryExpr -> PrimaryExpr . Arguments
    (127) Index -> . LBRACK Expression RBRACK
    (128) Slice -> . LBRACK Expression COLON Expression RBRACK
    (129) Slice -> . LBRACK COLON Expression RBRACK
    (130) Slice -> . LBRACK Expression COLON RBRACK
    (131) Slice -> . LBRACK COLON RBRACK
    (132) Slice -> . LBRACK Expression COLON Expression COLON Expression RBRACK
    (133) Slice -> . LBRACK COLON Expression COLON Expression RBRACK
    (134) Arguments -> . LPAREN RPAREN
    (135) Arguments -> . LPAREN ExpressionList RPAREN
    (136) Arguments -> . LPAREN ExpressionList COMMA RPAREN

    LOR             reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    LAND            reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    EQL             reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    NEQ             reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    LTN             reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    LEQ             reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    GTN             reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    GEQ             reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    ADD             reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    SUB             reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    XOR             reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    MUL             reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    DIV             reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    MOD             reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    SHL             reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    SHR             reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    AND             reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    AND_NOT         reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    SEMICOLON       reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    LBRACE          reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    RPAREN          reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    RBRACK          reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    COLON           reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    ADD_ASSIGN      reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    SUB_ASSIGN      reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    MUL_ASSIGN      reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    DIV_ASSIGN      reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    MOD_ASSIGN      reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    AND_ASSIGN      reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    OR_ASSIGN       reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    XOR_ASSIGN      reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    SHL_ASSIGN      reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    SHR_ASSIGN      reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    ASSIGN          reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    INC             reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    DEC             reduce using rule 90 (UnaryExpr -> PrimaryExpr .)
    DOT             shift and go to state 126
    LBRACK          shift and go to state 123
    LPAREN          shift and go to state 125

    Index                          shift and go to state 121
    Slice                          shift and go to state 122
    Arguments                      shift and go to state 124

state 84

    (114) UnaryOp -> ADD .

    ID              reduce using rule 114 (UnaryOp -> ADD .)
    LPAREN          reduce using rule 114 (UnaryOp -> ADD .)
    ADD             reduce using rule 114 (UnaryOp -> ADD .)
    SUB             reduce using rule 114 (UnaryOp -> ADD .)
    NOT             reduce using rule 114 (UnaryOp -> ADD .)
    XOR             reduce using rule 114 (UnaryOp -> ADD .)
    MUL             reduce using rule 114 (UnaryOp -> ADD .)
    AND             reduce using rule 114 (UnaryOp -> ADD .)
    INT             reduce using rule 114 (UnaryOp -> ADD .)
    FLOAT           reduce using rule 114 (UnaryOp -> ADD .)
    RUNE            reduce using rule 114 (UnaryOp -> ADD .)
    STRING          reduce using rule 114 (UnaryOp -> ADD .)
    TRUE            reduce using rule 114 (UnaryOp -> ADD .)
    FALSE           reduce using rule 114 (UnaryOp -> ADD .)


state 85

    (40) VarSpec -> IdentifierList ASSIGN ExpressionList .
    (31) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 40 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    COMMA           shift and go to state 127


state 86

    (123) PrimaryExpr -> LPAREN . Expression RPAREN
    (88) Expression -> . UnaryExpr
    (89) Expression -> . Expression BinaryOp UnaryExpr
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (137) Literal -> . BasicLit
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    ID              shift and go to state 89
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    RuneLit                        shift and go to state 87
    UnaryOp                        shift and go to state 71
    TrueLit                        shift and go to state 96
    BasicLit                       shift and go to state 77
    UnaryExpr                      shift and go to state 81
    FloatLit                       shift and go to state 82
    FalseLit                       shift and go to state 72
    IntLit                         shift and go to state 74
    Literal                        shift and go to state 73
    PrimaryExpr                    shift and go to state 83
    StringLit                      shift and go to state 94
    Expression                     shift and go to state 128

state 87

    (140) BasicLit -> RuneLit .

    DOT             reduce using rule 140 (BasicLit -> RuneLit .)
    LBRACK          reduce using rule 140 (BasicLit -> RuneLit .)
    LPAREN          reduce using rule 140 (BasicLit -> RuneLit .)
    LOR             reduce using rule 140 (BasicLit -> RuneLit .)
    LAND            reduce using rule 140 (BasicLit -> RuneLit .)
    EQL             reduce using rule 140 (BasicLit -> RuneLit .)
    NEQ             reduce using rule 140 (BasicLit -> RuneLit .)
    LTN             reduce using rule 140 (BasicLit -> RuneLit .)
    LEQ             reduce using rule 140 (BasicLit -> RuneLit .)
    GTN             reduce using rule 140 (BasicLit -> RuneLit .)
    GEQ             reduce using rule 140 (BasicLit -> RuneLit .)
    ADD             reduce using rule 140 (BasicLit -> RuneLit .)
    SUB             reduce using rule 140 (BasicLit -> RuneLit .)
    OR              reduce using rule 140 (BasicLit -> RuneLit .)
    XOR             reduce using rule 140 (BasicLit -> RuneLit .)
    MUL             reduce using rule 140 (BasicLit -> RuneLit .)
    DIV             reduce using rule 140 (BasicLit -> RuneLit .)
    MOD             reduce using rule 140 (BasicLit -> RuneLit .)
    SHL             reduce using rule 140 (BasicLit -> RuneLit .)
    SHR             reduce using rule 140 (BasicLit -> RuneLit .)
    AND             reduce using rule 140 (BasicLit -> RuneLit .)
    AND_NOT         reduce using rule 140 (BasicLit -> RuneLit .)
    RPAREN          reduce using rule 140 (BasicLit -> RuneLit .)
    COMMA           reduce using rule 140 (BasicLit -> RuneLit .)
    RBRACK          reduce using rule 140 (BasicLit -> RuneLit .)
    SEMICOLON       reduce using rule 140 (BasicLit -> RuneLit .)
    ADD_ASSIGN      reduce using rule 140 (BasicLit -> RuneLit .)
    SUB_ASSIGN      reduce using rule 140 (BasicLit -> RuneLit .)
    MUL_ASSIGN      reduce using rule 140 (BasicLit -> RuneLit .)
    DIV_ASSIGN      reduce using rule 140 (BasicLit -> RuneLit .)
    MOD_ASSIGN      reduce using rule 140 (BasicLit -> RuneLit .)
    AND_ASSIGN      reduce using rule 140 (BasicLit -> RuneLit .)
    AND_NOT_ASSIGN  reduce using rule 140 (BasicLit -> RuneLit .)
    OR_ASSIGN       reduce using rule 140 (BasicLit -> RuneLit .)
    XOR_ASSIGN      reduce using rule 140 (BasicLit -> RuneLit .)
    SHL_ASSIGN      reduce using rule 140 (BasicLit -> RuneLit .)
    SHR_ASSIGN      reduce using rule 140 (BasicLit -> RuneLit .)
    ASSIGN          reduce using rule 140 (BasicLit -> RuneLit .)
    LBRACE          reduce using rule 140 (BasicLit -> RuneLit .)
    COLON           reduce using rule 140 (BasicLit -> RuneLit .)
    INC             reduce using rule 140 (BasicLit -> RuneLit .)
    DEC             reduce using rule 140 (BasicLit -> RuneLit .)


state 88

    (30) ExpressionList -> Expression .
    (89) Expression -> Expression . BinaryOp UnaryExpr
    (92) BinaryOp -> . LOR
    (93) BinaryOp -> . LAND
    (94) BinaryOp -> . RelOp
    (95) BinaryOp -> . AddOp
    (96) BinaryOp -> . MulOp
    (97) RelOp -> . EQL
    (98) RelOp -> . NEQ
    (99) RelOp -> . LTN
    (100) RelOp -> . LEQ
    (101) RelOp -> . GTN
    (102) RelOp -> . GEQ
    (103) AddOp -> . ADD
    (104) AddOp -> . SUB
    (105) AddOp -> . OR
    (106) AddOp -> . XOR
    (107) MulOp -> . MUL
    (108) MulOp -> . DIV
    (109) MulOp -> . MOD
    (110) MulOp -> . SHL
    (111) MulOp -> . SHR
    (112) MulOp -> . AND
    (113) MulOp -> . AND_NOT

    COMMA           reduce using rule 30 (ExpressionList -> Expression .)
    SEMICOLON       reduce using rule 30 (ExpressionList -> Expression .)
    LBRACE          reduce using rule 30 (ExpressionList -> Expression .)
    RPAREN          reduce using rule 30 (ExpressionList -> Expression .)
    LOR             shift and go to state 130
    LAND            shift and go to state 135
    EQL             shift and go to state 144
    NEQ             shift and go to state 133
    LTN             shift and go to state 146
    LEQ             shift and go to state 149
    GTN             shift and go to state 142
    GEQ             shift and go to state 134
    ADD             shift and go to state 143
    SUB             shift and go to state 129
    OR              shift and go to state 150
    XOR             shift and go to state 140
    MUL             shift and go to state 131
    DIV             shift and go to state 132
    MOD             shift and go to state 151
    SHL             shift and go to state 145
    SHR             shift and go to state 139
    AND             shift and go to state 147
    AND_NOT         shift and go to state 136

    AddOp                          shift and go to state 138
    BinaryOp                       shift and go to state 137
    MulOp                          shift and go to state 141
    RelOp                          shift and go to state 148

state 89

    (121) PrimaryExpr -> ID .

    DOT             reduce using rule 121 (PrimaryExpr -> ID .)
    LBRACK          reduce using rule 121 (PrimaryExpr -> ID .)
    LPAREN          reduce using rule 121 (PrimaryExpr -> ID .)
    LOR             reduce using rule 121 (PrimaryExpr -> ID .)
    LAND            reduce using rule 121 (PrimaryExpr -> ID .)
    EQL             reduce using rule 121 (PrimaryExpr -> ID .)
    NEQ             reduce using rule 121 (PrimaryExpr -> ID .)
    LTN             reduce using rule 121 (PrimaryExpr -> ID .)
    LEQ             reduce using rule 121 (PrimaryExpr -> ID .)
    GTN             reduce using rule 121 (PrimaryExpr -> ID .)
    GEQ             reduce using rule 121 (PrimaryExpr -> ID .)
    ADD             reduce using rule 121 (PrimaryExpr -> ID .)
    SUB             reduce using rule 121 (PrimaryExpr -> ID .)
    OR              reduce using rule 121 (PrimaryExpr -> ID .)
    XOR             reduce using rule 121 (PrimaryExpr -> ID .)
    MUL             reduce using rule 121 (PrimaryExpr -> ID .)
    DIV             reduce using rule 121 (PrimaryExpr -> ID .)
    MOD             reduce using rule 121 (PrimaryExpr -> ID .)
    SHL             reduce using rule 121 (PrimaryExpr -> ID .)
    SHR             reduce using rule 121 (PrimaryExpr -> ID .)
    AND             reduce using rule 121 (PrimaryExpr -> ID .)
    AND_NOT         reduce using rule 121 (PrimaryExpr -> ID .)
    COMMA           reduce using rule 121 (PrimaryExpr -> ID .)
    SEMICOLON       reduce using rule 121 (PrimaryExpr -> ID .)
    LBRACE          reduce using rule 121 (PrimaryExpr -> ID .)
    RBRACK          reduce using rule 121 (PrimaryExpr -> ID .)
    COLON           reduce using rule 121 (PrimaryExpr -> ID .)
    RPAREN          reduce using rule 121 (PrimaryExpr -> ID .)
    ADD_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    SUB_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    MUL_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    DIV_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    MOD_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    AND_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    AND_NOT_ASSIGN  reduce using rule 121 (PrimaryExpr -> ID .)
    OR_ASSIGN       reduce using rule 121 (PrimaryExpr -> ID .)
    XOR_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    SHL_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    SHR_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    ASSIGN          reduce using rule 121 (PrimaryExpr -> ID .)
    INC             reduce using rule 121 (PrimaryExpr -> ID .)
    DEC             reduce using rule 121 (PrimaryExpr -> ID .)


state 90

    (119) UnaryOp -> AND .

    ID              reduce using rule 119 (UnaryOp -> AND .)
    LPAREN          reduce using rule 119 (UnaryOp -> AND .)
    ADD             reduce using rule 119 (UnaryOp -> AND .)
    SUB             reduce using rule 119 (UnaryOp -> AND .)
    NOT             reduce using rule 119 (UnaryOp -> AND .)
    XOR             reduce using rule 119 (UnaryOp -> AND .)
    MUL             reduce using rule 119 (UnaryOp -> AND .)
    AND             reduce using rule 119 (UnaryOp -> AND .)
    INT             reduce using rule 119 (UnaryOp -> AND .)
    FLOAT           reduce using rule 119 (UnaryOp -> AND .)
    RUNE            reduce using rule 119 (UnaryOp -> AND .)
    STRING          reduce using rule 119 (UnaryOp -> AND .)
    TRUE            reduce using rule 119 (UnaryOp -> AND .)
    FALSE           reduce using rule 119 (UnaryOp -> AND .)


state 91

    (145) FalseLit -> FALSE .

    DOT             reduce using rule 145 (FalseLit -> FALSE .)
    LBRACK          reduce using rule 145 (FalseLit -> FALSE .)
    LPAREN          reduce using rule 145 (FalseLit -> FALSE .)
    RBRACK          reduce using rule 145 (FalseLit -> FALSE .)
    COLON           reduce using rule 145 (FalseLit -> FALSE .)
    LOR             reduce using rule 145 (FalseLit -> FALSE .)
    LAND            reduce using rule 145 (FalseLit -> FALSE .)
    EQL             reduce using rule 145 (FalseLit -> FALSE .)
    NEQ             reduce using rule 145 (FalseLit -> FALSE .)
    LTN             reduce using rule 145 (FalseLit -> FALSE .)
    LEQ             reduce using rule 145 (FalseLit -> FALSE .)
    GTN             reduce using rule 145 (FalseLit -> FALSE .)
    GEQ             reduce using rule 145 (FalseLit -> FALSE .)
    ADD             reduce using rule 145 (FalseLit -> FALSE .)
    SUB             reduce using rule 145 (FalseLit -> FALSE .)
    OR              reduce using rule 145 (FalseLit -> FALSE .)
    XOR             reduce using rule 145 (FalseLit -> FALSE .)
    MUL             reduce using rule 145 (FalseLit -> FALSE .)
    DIV             reduce using rule 145 (FalseLit -> FALSE .)
    MOD             reduce using rule 145 (FalseLit -> FALSE .)
    SHL             reduce using rule 145 (FalseLit -> FALSE .)
    SHR             reduce using rule 145 (FalseLit -> FALSE .)
    AND             reduce using rule 145 (FalseLit -> FALSE .)
    AND_NOT         reduce using rule 145 (FalseLit -> FALSE .)
    LBRACE          reduce using rule 145 (FalseLit -> FALSE .)
    INC             reduce using rule 145 (FalseLit -> FALSE .)
    DEC             reduce using rule 145 (FalseLit -> FALSE .)
    SEMICOLON       reduce using rule 145 (FalseLit -> FALSE .)
    COMMA           reduce using rule 145 (FalseLit -> FALSE .)
    ADD_ASSIGN      reduce using rule 145 (FalseLit -> FALSE .)
    SUB_ASSIGN      reduce using rule 145 (FalseLit -> FALSE .)
    MUL_ASSIGN      reduce using rule 145 (FalseLit -> FALSE .)
    DIV_ASSIGN      reduce using rule 145 (FalseLit -> FALSE .)
    MOD_ASSIGN      reduce using rule 145 (FalseLit -> FALSE .)
    AND_ASSIGN      reduce using rule 145 (FalseLit -> FALSE .)
    AND_NOT_ASSIGN  reduce using rule 145 (FalseLit -> FALSE .)
    OR_ASSIGN       reduce using rule 145 (FalseLit -> FALSE .)
    XOR_ASSIGN      reduce using rule 145 (FalseLit -> FALSE .)
    SHL_ASSIGN      reduce using rule 145 (FalseLit -> FALSE .)
    SHR_ASSIGN      reduce using rule 145 (FalseLit -> FALSE .)
    ASSIGN          reduce using rule 145 (FalseLit -> FALSE .)
    RPAREN          reduce using rule 145 (FalseLit -> FALSE .)


state 92

    (146) IntLit -> INT .

    DOT             reduce using rule 146 (IntLit -> INT .)
    LBRACK          reduce using rule 146 (IntLit -> INT .)
    LPAREN          reduce using rule 146 (IntLit -> INT .)
    RBRACK          reduce using rule 146 (IntLit -> INT .)
    LOR             reduce using rule 146 (IntLit -> INT .)
    LAND            reduce using rule 146 (IntLit -> INT .)
    EQL             reduce using rule 146 (IntLit -> INT .)
    NEQ             reduce using rule 146 (IntLit -> INT .)
    LTN             reduce using rule 146 (IntLit -> INT .)
    LEQ             reduce using rule 146 (IntLit -> INT .)
    GTN             reduce using rule 146 (IntLit -> INT .)
    GEQ             reduce using rule 146 (IntLit -> INT .)
    ADD             reduce using rule 146 (IntLit -> INT .)
    SUB             reduce using rule 146 (IntLit -> INT .)
    OR              reduce using rule 146 (IntLit -> INT .)
    XOR             reduce using rule 146 (IntLit -> INT .)
    MUL             reduce using rule 146 (IntLit -> INT .)
    DIV             reduce using rule 146 (IntLit -> INT .)
    MOD             reduce using rule 146 (IntLit -> INT .)
    SHL             reduce using rule 146 (IntLit -> INT .)
    SHR             reduce using rule 146 (IntLit -> INT .)
    AND             reduce using rule 146 (IntLit -> INT .)
    AND_NOT         reduce using rule 146 (IntLit -> INT .)
    RPAREN          reduce using rule 146 (IntLit -> INT .)
    COMMA           reduce using rule 146 (IntLit -> INT .)
    LBRACE          reduce using rule 146 (IntLit -> INT .)
    INC             reduce using rule 146 (IntLit -> INT .)
    DEC             reduce using rule 146 (IntLit -> INT .)
    ADD_ASSIGN      reduce using rule 146 (IntLit -> INT .)
    SUB_ASSIGN      reduce using rule 146 (IntLit -> INT .)
    MUL_ASSIGN      reduce using rule 146 (IntLit -> INT .)
    DIV_ASSIGN      reduce using rule 146 (IntLit -> INT .)
    MOD_ASSIGN      reduce using rule 146 (IntLit -> INT .)
    AND_ASSIGN      reduce using rule 146 (IntLit -> INT .)
    AND_NOT_ASSIGN  reduce using rule 146 (IntLit -> INT .)
    OR_ASSIGN       reduce using rule 146 (IntLit -> INT .)
    XOR_ASSIGN      reduce using rule 146 (IntLit -> INT .)
    SHL_ASSIGN      reduce using rule 146 (IntLit -> INT .)
    SHR_ASSIGN      reduce using rule 146 (IntLit -> INT .)
    ASSIGN          reduce using rule 146 (IntLit -> INT .)
    COLON           reduce using rule 146 (IntLit -> INT .)
    SEMICOLON       reduce using rule 146 (IntLit -> INT .)


state 93

    (147) FloatLit -> FLOAT .

    DOT             reduce using rule 147 (FloatLit -> FLOAT .)
    LBRACK          reduce using rule 147 (FloatLit -> FLOAT .)
    LPAREN          reduce using rule 147 (FloatLit -> FLOAT .)
    LOR             reduce using rule 147 (FloatLit -> FLOAT .)
    LAND            reduce using rule 147 (FloatLit -> FLOAT .)
    EQL             reduce using rule 147 (FloatLit -> FLOAT .)
    NEQ             reduce using rule 147 (FloatLit -> FLOAT .)
    LTN             reduce using rule 147 (FloatLit -> FLOAT .)
    LEQ             reduce using rule 147 (FloatLit -> FLOAT .)
    GTN             reduce using rule 147 (FloatLit -> FLOAT .)
    GEQ             reduce using rule 147 (FloatLit -> FLOAT .)
    ADD             reduce using rule 147 (FloatLit -> FLOAT .)
    SUB             reduce using rule 147 (FloatLit -> FLOAT .)
    OR              reduce using rule 147 (FloatLit -> FLOAT .)
    XOR             reduce using rule 147 (FloatLit -> FLOAT .)
    MUL             reduce using rule 147 (FloatLit -> FLOAT .)
    DIV             reduce using rule 147 (FloatLit -> FLOAT .)
    MOD             reduce using rule 147 (FloatLit -> FLOAT .)
    SHL             reduce using rule 147 (FloatLit -> FLOAT .)
    SHR             reduce using rule 147 (FloatLit -> FLOAT .)
    AND             reduce using rule 147 (FloatLit -> FLOAT .)
    AND_NOT         reduce using rule 147 (FloatLit -> FLOAT .)
    LBRACE          reduce using rule 147 (FloatLit -> FLOAT .)
    RPAREN          reduce using rule 147 (FloatLit -> FLOAT .)
    COMMA           reduce using rule 147 (FloatLit -> FLOAT .)
    SEMICOLON       reduce using rule 147 (FloatLit -> FLOAT .)
    INC             reduce using rule 147 (FloatLit -> FLOAT .)
    DEC             reduce using rule 147 (FloatLit -> FLOAT .)
    ADD_ASSIGN      reduce using rule 147 (FloatLit -> FLOAT .)
    SUB_ASSIGN      reduce using rule 147 (FloatLit -> FLOAT .)
    MUL_ASSIGN      reduce using rule 147 (FloatLit -> FLOAT .)
    DIV_ASSIGN      reduce using rule 147 (FloatLit -> FLOAT .)
    MOD_ASSIGN      reduce using rule 147 (FloatLit -> FLOAT .)
    AND_ASSIGN      reduce using rule 147 (FloatLit -> FLOAT .)
    AND_NOT_ASSIGN  reduce using rule 147 (FloatLit -> FLOAT .)
    OR_ASSIGN       reduce using rule 147 (FloatLit -> FLOAT .)
    XOR_ASSIGN      reduce using rule 147 (FloatLit -> FLOAT .)
    SHL_ASSIGN      reduce using rule 147 (FloatLit -> FLOAT .)
    SHR_ASSIGN      reduce using rule 147 (FloatLit -> FLOAT .)
    ASSIGN          reduce using rule 147 (FloatLit -> FLOAT .)
    RBRACK          reduce using rule 147 (FloatLit -> FLOAT .)
    COLON           reduce using rule 147 (FloatLit -> FLOAT .)


state 94

    (141) BasicLit -> StringLit .

    DOT             reduce using rule 141 (BasicLit -> StringLit .)
    LBRACK          reduce using rule 141 (BasicLit -> StringLit .)
    LPAREN          reduce using rule 141 (BasicLit -> StringLit .)
    LOR             reduce using rule 141 (BasicLit -> StringLit .)
    LAND            reduce using rule 141 (BasicLit -> StringLit .)
    EQL             reduce using rule 141 (BasicLit -> StringLit .)
    NEQ             reduce using rule 141 (BasicLit -> StringLit .)
    LTN             reduce using rule 141 (BasicLit -> StringLit .)
    LEQ             reduce using rule 141 (BasicLit -> StringLit .)
    GTN             reduce using rule 141 (BasicLit -> StringLit .)
    GEQ             reduce using rule 141 (BasicLit -> StringLit .)
    ADD             reduce using rule 141 (BasicLit -> StringLit .)
    SUB             reduce using rule 141 (BasicLit -> StringLit .)
    OR              reduce using rule 141 (BasicLit -> StringLit .)
    XOR             reduce using rule 141 (BasicLit -> StringLit .)
    MUL             reduce using rule 141 (BasicLit -> StringLit .)
    DIV             reduce using rule 141 (BasicLit -> StringLit .)
    MOD             reduce using rule 141 (BasicLit -> StringLit .)
    SHL             reduce using rule 141 (BasicLit -> StringLit .)
    SHR             reduce using rule 141 (BasicLit -> StringLit .)
    AND             reduce using rule 141 (BasicLit -> StringLit .)
    AND_NOT         reduce using rule 141 (BasicLit -> StringLit .)
    RPAREN          reduce using rule 141 (BasicLit -> StringLit .)
    COMMA           reduce using rule 141 (BasicLit -> StringLit .)
    RBRACK          reduce using rule 141 (BasicLit -> StringLit .)
    SEMICOLON       reduce using rule 141 (BasicLit -> StringLit .)
    ADD_ASSIGN      reduce using rule 141 (BasicLit -> StringLit .)
    SUB_ASSIGN      reduce using rule 141 (BasicLit -> StringLit .)
    MUL_ASSIGN      reduce using rule 141 (BasicLit -> StringLit .)
    DIV_ASSIGN      reduce using rule 141 (BasicLit -> StringLit .)
    MOD_ASSIGN      reduce using rule 141 (BasicLit -> StringLit .)
    AND_ASSIGN      reduce using rule 141 (BasicLit -> StringLit .)
    AND_NOT_ASSIGN  reduce using rule 141 (BasicLit -> StringLit .)
    OR_ASSIGN       reduce using rule 141 (BasicLit -> StringLit .)
    XOR_ASSIGN      reduce using rule 141 (BasicLit -> StringLit .)
    SHL_ASSIGN      reduce using rule 141 (BasicLit -> StringLit .)
    SHR_ASSIGN      reduce using rule 141 (BasicLit -> StringLit .)
    ASSIGN          reduce using rule 141 (BasicLit -> StringLit .)
    LBRACE          reduce using rule 141 (BasicLit -> StringLit .)
    COLON           reduce using rule 141 (BasicLit -> StringLit .)
    INC             reduce using rule 141 (BasicLit -> StringLit .)
    DEC             reduce using rule 141 (BasicLit -> StringLit .)


state 95

    (116) UnaryOp -> NOT .

    ID              reduce using rule 116 (UnaryOp -> NOT .)
    LPAREN          reduce using rule 116 (UnaryOp -> NOT .)
    ADD             reduce using rule 116 (UnaryOp -> NOT .)
    SUB             reduce using rule 116 (UnaryOp -> NOT .)
    NOT             reduce using rule 116 (UnaryOp -> NOT .)
    XOR             reduce using rule 116 (UnaryOp -> NOT .)
    MUL             reduce using rule 116 (UnaryOp -> NOT .)
    AND             reduce using rule 116 (UnaryOp -> NOT .)
    INT             reduce using rule 116 (UnaryOp -> NOT .)
    FLOAT           reduce using rule 116 (UnaryOp -> NOT .)
    RUNE            reduce using rule 116 (UnaryOp -> NOT .)
    STRING          reduce using rule 116 (UnaryOp -> NOT .)
    TRUE            reduce using rule 116 (UnaryOp -> NOT .)
    FALSE           reduce using rule 116 (UnaryOp -> NOT .)


state 96

    (142) BasicLit -> TrueLit .

    DOT             reduce using rule 142 (BasicLit -> TrueLit .)
    LBRACK          reduce using rule 142 (BasicLit -> TrueLit .)
    LPAREN          reduce using rule 142 (BasicLit -> TrueLit .)
    LOR             reduce using rule 142 (BasicLit -> TrueLit .)
    LAND            reduce using rule 142 (BasicLit -> TrueLit .)
    EQL             reduce using rule 142 (BasicLit -> TrueLit .)
    NEQ             reduce using rule 142 (BasicLit -> TrueLit .)
    LTN             reduce using rule 142 (BasicLit -> TrueLit .)
    LEQ             reduce using rule 142 (BasicLit -> TrueLit .)
    GTN             reduce using rule 142 (BasicLit -> TrueLit .)
    GEQ             reduce using rule 142 (BasicLit -> TrueLit .)
    ADD             reduce using rule 142 (BasicLit -> TrueLit .)
    SUB             reduce using rule 142 (BasicLit -> TrueLit .)
    OR              reduce using rule 142 (BasicLit -> TrueLit .)
    XOR             reduce using rule 142 (BasicLit -> TrueLit .)
    MUL             reduce using rule 142 (BasicLit -> TrueLit .)
    DIV             reduce using rule 142 (BasicLit -> TrueLit .)
    MOD             reduce using rule 142 (BasicLit -> TrueLit .)
    SHL             reduce using rule 142 (BasicLit -> TrueLit .)
    SHR             reduce using rule 142 (BasicLit -> TrueLit .)
    AND             reduce using rule 142 (BasicLit -> TrueLit .)
    AND_NOT         reduce using rule 142 (BasicLit -> TrueLit .)
    RPAREN          reduce using rule 142 (BasicLit -> TrueLit .)
    COMMA           reduce using rule 142 (BasicLit -> TrueLit .)
    RBRACK          reduce using rule 142 (BasicLit -> TrueLit .)
    SEMICOLON       reduce using rule 142 (BasicLit -> TrueLit .)
    ADD_ASSIGN      reduce using rule 142 (BasicLit -> TrueLit .)
    SUB_ASSIGN      reduce using rule 142 (BasicLit -> TrueLit .)
    MUL_ASSIGN      reduce using rule 142 (BasicLit -> TrueLit .)
    DIV_ASSIGN      reduce using rule 142 (BasicLit -> TrueLit .)
    MOD_ASSIGN      reduce using rule 142 (BasicLit -> TrueLit .)
    AND_ASSIGN      reduce using rule 142 (BasicLit -> TrueLit .)
    AND_NOT_ASSIGN  reduce using rule 142 (BasicLit -> TrueLit .)
    OR_ASSIGN       reduce using rule 142 (BasicLit -> TrueLit .)
    XOR_ASSIGN      reduce using rule 142 (BasicLit -> TrueLit .)
    SHL_ASSIGN      reduce using rule 142 (BasicLit -> TrueLit .)
    SHR_ASSIGN      reduce using rule 142 (BasicLit -> TrueLit .)
    ASSIGN          reduce using rule 142 (BasicLit -> TrueLit .)
    LBRACE          reduce using rule 142 (BasicLit -> TrueLit .)
    COLON           reduce using rule 142 (BasicLit -> TrueLit .)
    INC             reduce using rule 142 (BasicLit -> TrueLit .)
    DEC             reduce using rule 142 (BasicLit -> TrueLit .)


state 97

    (45) Type -> LPAREN Type . RPAREN

    RPAREN          shift and go to state 152


state 98

    (46) Type -> LPAREN ID . RPAREN

    RPAREN          shift and go to state 153


state 99

    (64) PointerType -> MUL Type .

    ASSIGN          reduce using rule 64 (PointerType -> MUL Type .)
    SEMICOLON       reduce using rule 64 (PointerType -> MUL Type .)
    RPAREN          reduce using rule 64 (PointerType -> MUL Type .)
    COMMA           reduce using rule 64 (PointerType -> MUL Type .)


state 100

    (65) PointerType -> MUL ID .

    ASSIGN          reduce using rule 65 (PointerType -> MUL ID .)
    SEMICOLON       reduce using rule 65 (PointerType -> MUL ID .)
    RPAREN          reduce using rule 65 (PointerType -> MUL ID .)
    COMMA           reduce using rule 65 (PointerType -> MUL ID .)


state 101

    (38) VarSpec -> IdentifierList Type ASSIGN . ExpressionList
    (30) ExpressionList -> . Expression
    (31) ExpressionList -> . ExpressionList COMMA Expression
    (88) Expression -> . UnaryExpr
    (89) Expression -> . Expression BinaryOp UnaryExpr
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (137) Literal -> . BasicLit
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    ID              shift and go to state 89
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    BasicLit                       shift and go to state 77
    RuneLit                        shift and go to state 87
    UnaryOp                        shift and go to state 71
    TrueLit                        shift and go to state 96
    UnaryExpr                      shift and go to state 81
    FloatLit                       shift and go to state 82
    FalseLit                       shift and go to state 72
    IntLit                         shift and go to state 74
    Literal                        shift and go to state 73
    ExpressionList                 shift and go to state 154
    PrimaryExpr                    shift and go to state 83
    StringLit                      shift and go to state 94
    Expression                     shift and go to state 88

state 102

    (39) VarSpec -> IdentifierList ID ASSIGN . ExpressionList
    (30) ExpressionList -> . Expression
    (31) ExpressionList -> . ExpressionList COMMA Expression
    (88) Expression -> . UnaryExpr
    (89) Expression -> . Expression BinaryOp UnaryExpr
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (137) Literal -> . BasicLit
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    ID              shift and go to state 89
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    RuneLit                        shift and go to state 87
    UnaryOp                        shift and go to state 71
    TrueLit                        shift and go to state 96
    BasicLit                       shift and go to state 77
    UnaryExpr                      shift and go to state 81
    FloatLit                       shift and go to state 82
    FalseLit                       shift and go to state 72
    IntLit                         shift and go to state 74
    Literal                        shift and go to state 73
    ExpressionList                 shift and go to state 155
    PrimaryExpr                    shift and go to state 83
    StringLit                      shift and go to state 94
    Expression                     shift and go to state 88

state 103

    (55) StructType -> STRUCT OpenStructS . LBRACE FieldDecl_curl RBRACE CloseStructS

    LBRACE          shift and go to state 156


state 104

    (13) ImportSpec_curl -> ImportSpec_curl ImportSpec SEMICOLON .

    RPAREN          reduce using rule 13 (ImportSpec_curl -> ImportSpec_curl ImportSpec SEMICOLON .)
    ID              reduce using rule 13 (ImportSpec_curl -> ImportSpec_curl ImportSpec SEMICOLON .)
    STRING          reduce using rule 13 (ImportSpec_curl -> ImportSpec_curl ImportSpec SEMICOLON .)


state 105

    (25) ConstSpec_curl -> ConstSpec_curl ConstSpec SEMICOLON .

    RPAREN          reduce using rule 25 (ConstSpec_curl -> ConstSpec_curl ConstSpec SEMICOLON .)
    ID              reduce using rule 25 (ConstSpec_curl -> ConstSpec_curl ConstSpec SEMICOLON .)


state 106

    (27) ConstSpec -> IdentifierList ID ASSIGN ExpressionList .
    (31) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 27 (ConstSpec -> IdentifierList ID ASSIGN ExpressionList .)
    COMMA           shift and go to state 127


state 107

    (73) Parameters -> LPAREN RPAREN .

    LPAREN          reduce using rule 73 (Parameters -> LPAREN RPAREN .)
    LBRACE          reduce using rule 73 (Parameters -> LPAREN RPAREN .)


state 108

    (74) Parameters -> LPAREN ParameterList . RPAREN
    (75) Parameters -> LPAREN ParameterList . COMMA RPAREN
    (77) ParameterList -> ParameterList . COMMA ParameterDecl

    RPAREN          shift and go to state 158
    COMMA           shift and go to state 157


state 109

    (78) ParameterDecl -> ParaIdList . Type
    (80) ParameterDecl -> ParaIdList . ID
    (83) ParaIdList -> ParaIdList . COMMA ID
    (45) Type -> . LPAREN Type RPAREN
    (46) Type -> . LPAREN ID RPAREN
    (47) Type -> . TypeLit
    (48) TypeLit -> . ArrayType
    (49) TypeLit -> . PointerType
    (50) TypeLit -> . SliceType
    (51) ArrayType -> . LBRACK INT RBRACK Type
    (52) ArrayType -> . LBRACK INT RBRACK ID
    (64) PointerType -> . MUL Type
    (65) PointerType -> . MUL ID
    (53) SliceType -> . LBRACK RBRACK Type
    (54) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 161
    COMMA           shift and go to state 159
    LPAREN          shift and go to state 49
    LBRACK          shift and go to state 46
    MUL             shift and go to state 51

    Type                           shift and go to state 160
    ArrayType                      shift and go to state 47
    PointerType                    shift and go to state 50
    TypeLit                        shift and go to state 45
    SliceType                      shift and go to state 54

state 110

    (76) ParameterList -> ParameterDecl .

    RPAREN          reduce using rule 76 (ParameterList -> ParameterDecl .)
    COMMA           reduce using rule 76 (ParameterList -> ParameterDecl .)


state 111

    (79) ParameterDecl -> ID . Type
    (81) ParameterDecl -> ID . ID
    (82) ParaIdList -> ID . COMMA ID
    (45) Type -> . LPAREN Type RPAREN
    (46) Type -> . LPAREN ID RPAREN
    (47) Type -> . TypeLit
    (48) TypeLit -> . ArrayType
    (49) TypeLit -> . PointerType
    (50) TypeLit -> . SliceType
    (51) ArrayType -> . LBRACK INT RBRACK Type
    (52) ArrayType -> . LBRACK INT RBRACK ID
    (64) PointerType -> . MUL Type
    (65) PointerType -> . MUL ID
    (53) SliceType -> . LBRACK RBRACK Type
    (54) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 164
    COMMA           shift and go to state 163
    LPAREN          shift and go to state 49
    LBRACK          shift and go to state 46
    MUL             shift and go to state 51

    PointerType                    shift and go to state 50
    TypeLit                        shift and go to state 45
    Type                           shift and go to state 162
    ArrayType                      shift and go to state 47
    SliceType                      shift and go to state 54

state 112

    (67) Result -> LPAREN . TypeList RPAREN
    (69) TypeList -> . ID
    (70) TypeList -> . Type
    (71) TypeList -> . TypeList COMMA ID
    (72) TypeList -> . TypeList COMMA Type
    (45) Type -> . LPAREN Type RPAREN
    (46) Type -> . LPAREN ID RPAREN
    (47) Type -> . TypeLit
    (48) TypeLit -> . ArrayType
    (49) TypeLit -> . PointerType
    (50) TypeLit -> . SliceType
    (51) ArrayType -> . LBRACK INT RBRACK Type
    (52) ArrayType -> . LBRACK INT RBRACK ID
    (64) PointerType -> . MUL Type
    (65) PointerType -> . MUL ID
    (53) SliceType -> . LBRACK RBRACK Type
    (54) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 167
    LPAREN          shift and go to state 49
    LBRACK          shift and go to state 46
    MUL             shift and go to state 51

    TypeList                       shift and go to state 165
    Type                           shift and go to state 166
    ArrayType                      shift and go to state 47
    PointerType                    shift and go to state 50
    TypeLit                        shift and go to state 45
    SliceType                      shift and go to state 54

state 113

    (66) Signature -> Parameters Result .

    LBRACE          reduce using rule 66 (Signature -> Parameters Result .)


state 114

    (84) Block -> LBRACE . StatementList RBRACE
    (85) StatementList -> . Statement_curl
    (86) Statement_curl -> . Statement_curl Statement SEMICOLON
    (87) Statement_curl -> .

    ID              reduce using rule 87 (Statement_curl -> .)
    RETURN          reduce using rule 87 (Statement_curl -> .)
    BREAK           reduce using rule 87 (Statement_curl -> .)
    CONTINUE        reduce using rule 87 (Statement_curl -> .)
    GOTO            reduce using rule 87 (Statement_curl -> .)
    FALLTHROUGH     reduce using rule 87 (Statement_curl -> .)
    IF              reduce using rule 87 (Statement_curl -> .)
    FOR             reduce using rule 87 (Statement_curl -> .)
    CONST           reduce using rule 87 (Statement_curl -> .)
    TYPE            reduce using rule 87 (Statement_curl -> .)
    VAR             reduce using rule 87 (Statement_curl -> .)
    SWITCH          reduce using rule 87 (Statement_curl -> .)
    LPAREN          reduce using rule 87 (Statement_curl -> .)
    ADD             reduce using rule 87 (Statement_curl -> .)
    SUB             reduce using rule 87 (Statement_curl -> .)
    NOT             reduce using rule 87 (Statement_curl -> .)
    XOR             reduce using rule 87 (Statement_curl -> .)
    MUL             reduce using rule 87 (Statement_curl -> .)
    AND             reduce using rule 87 (Statement_curl -> .)
    INT             reduce using rule 87 (Statement_curl -> .)
    FLOAT           reduce using rule 87 (Statement_curl -> .)
    RUNE            reduce using rule 87 (Statement_curl -> .)
    STRING          reduce using rule 87 (Statement_curl -> .)
    TRUE            reduce using rule 87 (Statement_curl -> .)
    FALSE           reduce using rule 87 (Statement_curl -> .)
    SEMICOLON       reduce using rule 87 (Statement_curl -> .)
    LBRACE          reduce using rule 87 (Statement_curl -> .)
    RBRACE          reduce using rule 87 (Statement_curl -> .)

    Statement_curl                 shift and go to state 168
    StatementList                  shift and go to state 169

state 115

    (43) FunctionDecl -> FUNC FuncName OpenS Signature Block . CloseS
    (3) CloseS -> .

    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 170

state 116

    (36) VarSpec_curl -> VarSpec_curl VarSpec SEMICOLON .

    RPAREN          reduce using rule 36 (VarSpec_curl -> VarSpec_curl VarSpec SEMICOLON .)
    ID              reduce using rule 36 (VarSpec_curl -> VarSpec_curl VarSpec SEMICOLON .)


state 117

    (51) ArrayType -> LBRACK INT RBRACK . Type
    (52) ArrayType -> LBRACK INT RBRACK . ID
    (45) Type -> . LPAREN Type RPAREN
    (46) Type -> . LPAREN ID RPAREN
    (47) Type -> . TypeLit
    (48) TypeLit -> . ArrayType
    (49) TypeLit -> . PointerType
    (50) TypeLit -> . SliceType
    (51) ArrayType -> . LBRACK INT RBRACK Type
    (52) ArrayType -> . LBRACK INT RBRACK ID
    (64) PointerType -> . MUL Type
    (65) PointerType -> . MUL ID
    (53) SliceType -> . LBRACK RBRACK Type
    (54) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 172
    LPAREN          shift and go to state 49
    LBRACK          shift and go to state 46
    MUL             shift and go to state 51

    PointerType                    shift and go to state 50
    TypeLit                        shift and go to state 45
    Type                           shift and go to state 171
    ArrayType                      shift and go to state 47
    SliceType                      shift and go to state 54

state 118

    (53) SliceType -> LBRACK RBRACK Type .

    RPAREN          reduce using rule 53 (SliceType -> LBRACK RBRACK Type .)
    COMMA           reduce using rule 53 (SliceType -> LBRACK RBRACK Type .)
    ASSIGN          reduce using rule 53 (SliceType -> LBRACK RBRACK Type .)
    SEMICOLON       reduce using rule 53 (SliceType -> LBRACK RBRACK Type .)


state 119

    (54) SliceType -> LBRACK RBRACK ID .

    RPAREN          reduce using rule 54 (SliceType -> LBRACK RBRACK ID .)
    COMMA           reduce using rule 54 (SliceType -> LBRACK RBRACK ID .)
    ASSIGN          reduce using rule 54 (SliceType -> LBRACK RBRACK ID .)
    SEMICOLON       reduce using rule 54 (SliceType -> LBRACK RBRACK ID .)


state 120

    (91) UnaryExpr -> UnaryOp UnaryExpr .

    LOR             reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    LAND            reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    EQL             reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    NEQ             reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    LTN             reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    LEQ             reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    GTN             reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    GEQ             reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    ADD             reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    SUB             reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR              reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    XOR             reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    MUL             reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIV             reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    MOD             reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHL             reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHR             reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND             reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND_NOT         reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    COMMA           reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    SEMICOLON       reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    LBRACE          reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    RPAREN          reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    RBRACK          reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    COLON           reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    ADD_ASSIGN      reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    SUB_ASSIGN      reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    MUL_ASSIGN      reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIV_ASSIGN      reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    MOD_ASSIGN      reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND_ASSIGN      reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR_ASSIGN       reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    XOR_ASSIGN      reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHL_ASSIGN      reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHR_ASSIGN      reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    ASSIGN          reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    INC             reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)
    DEC             reduce using rule 91 (UnaryExpr -> UnaryOp UnaryExpr .)


state 121

    (124) PrimaryExpr -> PrimaryExpr Index .

    DOT             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACK          reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    LPAREN          reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    LOR             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    LAND            reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    EQL             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    NEQ             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    LTN             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    LEQ             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    GTN             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    GEQ             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    ADD             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    SUB             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    OR              reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    XOR             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    MUL             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    DIV             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    MOD             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    SHL             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    SHR             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    AND             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    AND_NOT         reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    COMMA           reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    SEMICOLON       reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACE          reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    RBRACK          reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    COLON           reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    RPAREN          reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    ADD_ASSIGN      reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    SUB_ASSIGN      reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    MUL_ASSIGN      reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    DIV_ASSIGN      reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    MOD_ASSIGN      reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    AND_ASSIGN      reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    AND_NOT_ASSIGN  reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    OR_ASSIGN       reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    XOR_ASSIGN      reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    SHL_ASSIGN      reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    SHR_ASSIGN      reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    ASSIGN          reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    INC             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    DEC             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)


state 122

    (125) PrimaryExpr -> PrimaryExpr Slice .

    DOT             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACK          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    LPAREN          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    LOR             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    LAND            reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    EQL             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    NEQ             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    LTN             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    LEQ             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    GTN             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    GEQ             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    ADD             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    SUB             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    OR              reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    XOR             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    MUL             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    DIV             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    MOD             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    SHL             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    SHR             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    AND             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    AND_NOT         reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    COMMA           reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    SEMICOLON       reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACE          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    RBRACK          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    COLON           reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    RPAREN          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    ADD_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    SUB_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    MUL_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    DIV_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    MOD_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    AND_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    AND_NOT_ASSIGN  reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    OR_ASSIGN       reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    XOR_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    SHL_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    SHR_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    ASSIGN          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    INC             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    DEC             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)


state 123

    (127) Index -> LBRACK . Expression RBRACK
    (128) Slice -> LBRACK . Expression COLON Expression RBRACK
    (129) Slice -> LBRACK . COLON Expression RBRACK
    (130) Slice -> LBRACK . Expression COLON RBRACK
    (131) Slice -> LBRACK . COLON RBRACK
    (132) Slice -> LBRACK . Expression COLON Expression COLON Expression RBRACK
    (133) Slice -> LBRACK . COLON Expression COLON Expression RBRACK
    (88) Expression -> . UnaryExpr
    (89) Expression -> . Expression BinaryOp UnaryExpr
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (137) Literal -> . BasicLit
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    COLON           shift and go to state 173
    ID              shift and go to state 89
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    RuneLit                        shift and go to state 87
    UnaryOp                        shift and go to state 71
    TrueLit                        shift and go to state 96
    BasicLit                       shift and go to state 77
    UnaryExpr                      shift and go to state 81
    FloatLit                       shift and go to state 82
    FalseLit                       shift and go to state 72
    IntLit                         shift and go to state 74
    Literal                        shift and go to state 73
    PrimaryExpr                    shift and go to state 83
    StringLit                      shift and go to state 94
    Expression                     shift and go to state 174

state 124

    (126) PrimaryExpr -> PrimaryExpr Arguments .

    DOT             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACK          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    LPAREN          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    LOR             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    LAND            reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQL             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    NEQ             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    LTN             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    LEQ             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    GTN             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    GEQ             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    ADD             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    SUB             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR              reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    MUL             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    DIV             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    MOD             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHL             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHR             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_NOT         reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    COMMA           reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    SEMICOLON       reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACE          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    RBRACK          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    COLON           reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    RPAREN          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    ADD_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    SUB_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    MUL_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    DIV_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    MOD_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_NOT_ASSIGN  reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR_ASSIGN       reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHL_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHR_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    ASSIGN          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    INC             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    DEC             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)


state 125

    (134) Arguments -> LPAREN . RPAREN
    (135) Arguments -> LPAREN . ExpressionList RPAREN
    (136) Arguments -> LPAREN . ExpressionList COMMA RPAREN
    (30) ExpressionList -> . Expression
    (31) ExpressionList -> . ExpressionList COMMA Expression
    (88) Expression -> . UnaryExpr
    (89) Expression -> . Expression BinaryOp UnaryExpr
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (137) Literal -> . BasicLit
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    RPAREN          shift and go to state 175
    ID              shift and go to state 89
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    RuneLit                        shift and go to state 87
    UnaryOp                        shift and go to state 71
    TrueLit                        shift and go to state 96
    BasicLit                       shift and go to state 77
    UnaryExpr                      shift and go to state 81
    FloatLit                       shift and go to state 82
    FalseLit                       shift and go to state 72
    IntLit                         shift and go to state 74
    Literal                        shift and go to state 73
    ExpressionList                 shift and go to state 176
    PrimaryExpr                    shift and go to state 83
    StringLit                      shift and go to state 94
    Expression                     shift and go to state 88

state 126

    (122) PrimaryExpr -> PrimaryExpr DOT . ID

    ID              shift and go to state 177


state 127

    (31) ExpressionList -> ExpressionList COMMA . Expression
    (88) Expression -> . UnaryExpr
    (89) Expression -> . Expression BinaryOp UnaryExpr
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (137) Literal -> . BasicLit
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    ID              shift and go to state 89
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    RuneLit                        shift and go to state 87
    UnaryOp                        shift and go to state 71
    TrueLit                        shift and go to state 96
    BasicLit                       shift and go to state 77
    UnaryExpr                      shift and go to state 81
    FloatLit                       shift and go to state 82
    FalseLit                       shift and go to state 72
    IntLit                         shift and go to state 74
    Literal                        shift and go to state 73
    PrimaryExpr                    shift and go to state 83
    StringLit                      shift and go to state 94
    Expression                     shift and go to state 178

state 128

    (123) PrimaryExpr -> LPAREN Expression . RPAREN
    (89) Expression -> Expression . BinaryOp UnaryExpr
    (92) BinaryOp -> . LOR
    (93) BinaryOp -> . LAND
    (94) BinaryOp -> . RelOp
    (95) BinaryOp -> . AddOp
    (96) BinaryOp -> . MulOp
    (97) RelOp -> . EQL
    (98) RelOp -> . NEQ
    (99) RelOp -> . LTN
    (100) RelOp -> . LEQ
    (101) RelOp -> . GTN
    (102) RelOp -> . GEQ
    (103) AddOp -> . ADD
    (104) AddOp -> . SUB
    (105) AddOp -> . OR
    (106) AddOp -> . XOR
    (107) MulOp -> . MUL
    (108) MulOp -> . DIV
    (109) MulOp -> . MOD
    (110) MulOp -> . SHL
    (111) MulOp -> . SHR
    (112) MulOp -> . AND
    (113) MulOp -> . AND_NOT

    RPAREN          shift and go to state 179
    LOR             shift and go to state 130
    LAND            shift and go to state 135
    EQL             shift and go to state 144
    NEQ             shift and go to state 133
    LTN             shift and go to state 146
    LEQ             shift and go to state 149
    GTN             shift and go to state 142
    GEQ             shift and go to state 134
    ADD             shift and go to state 143
    SUB             shift and go to state 129
    OR              shift and go to state 150
    XOR             shift and go to state 140
    MUL             shift and go to state 131
    DIV             shift and go to state 132
    MOD             shift and go to state 151
    SHL             shift and go to state 145
    SHR             shift and go to state 139
    AND             shift and go to state 147
    AND_NOT         shift and go to state 136

    AddOp                          shift and go to state 138
    BinaryOp                       shift and go to state 137
    MulOp                          shift and go to state 141
    RelOp                          shift and go to state 148

state 129

    (104) AddOp -> SUB .

    ID              reduce using rule 104 (AddOp -> SUB .)
    LPAREN          reduce using rule 104 (AddOp -> SUB .)
    ADD             reduce using rule 104 (AddOp -> SUB .)
    SUB             reduce using rule 104 (AddOp -> SUB .)
    NOT             reduce using rule 104 (AddOp -> SUB .)
    XOR             reduce using rule 104 (AddOp -> SUB .)
    MUL             reduce using rule 104 (AddOp -> SUB .)
    AND             reduce using rule 104 (AddOp -> SUB .)
    INT             reduce using rule 104 (AddOp -> SUB .)
    FLOAT           reduce using rule 104 (AddOp -> SUB .)
    RUNE            reduce using rule 104 (AddOp -> SUB .)
    STRING          reduce using rule 104 (AddOp -> SUB .)
    TRUE            reduce using rule 104 (AddOp -> SUB .)
    FALSE           reduce using rule 104 (AddOp -> SUB .)


state 130

    (92) BinaryOp -> LOR .

    ID              reduce using rule 92 (BinaryOp -> LOR .)
    LPAREN          reduce using rule 92 (BinaryOp -> LOR .)
    ADD             reduce using rule 92 (BinaryOp -> LOR .)
    SUB             reduce using rule 92 (BinaryOp -> LOR .)
    NOT             reduce using rule 92 (BinaryOp -> LOR .)
    XOR             reduce using rule 92 (BinaryOp -> LOR .)
    MUL             reduce using rule 92 (BinaryOp -> LOR .)
    AND             reduce using rule 92 (BinaryOp -> LOR .)
    INT             reduce using rule 92 (BinaryOp -> LOR .)
    FLOAT           reduce using rule 92 (BinaryOp -> LOR .)
    RUNE            reduce using rule 92 (BinaryOp -> LOR .)
    STRING          reduce using rule 92 (BinaryOp -> LOR .)
    TRUE            reduce using rule 92 (BinaryOp -> LOR .)
    FALSE           reduce using rule 92 (BinaryOp -> LOR .)


state 131

    (107) MulOp -> MUL .

    ID              reduce using rule 107 (MulOp -> MUL .)
    LPAREN          reduce using rule 107 (MulOp -> MUL .)
    ADD             reduce using rule 107 (MulOp -> MUL .)
    SUB             reduce using rule 107 (MulOp -> MUL .)
    NOT             reduce using rule 107 (MulOp -> MUL .)
    XOR             reduce using rule 107 (MulOp -> MUL .)
    MUL             reduce using rule 107 (MulOp -> MUL .)
    AND             reduce using rule 107 (MulOp -> MUL .)
    INT             reduce using rule 107 (MulOp -> MUL .)
    FLOAT           reduce using rule 107 (MulOp -> MUL .)
    RUNE            reduce using rule 107 (MulOp -> MUL .)
    STRING          reduce using rule 107 (MulOp -> MUL .)
    TRUE            reduce using rule 107 (MulOp -> MUL .)
    FALSE           reduce using rule 107 (MulOp -> MUL .)


state 132

    (108) MulOp -> DIV .

    ID              reduce using rule 108 (MulOp -> DIV .)
    LPAREN          reduce using rule 108 (MulOp -> DIV .)
    ADD             reduce using rule 108 (MulOp -> DIV .)
    SUB             reduce using rule 108 (MulOp -> DIV .)
    NOT             reduce using rule 108 (MulOp -> DIV .)
    XOR             reduce using rule 108 (MulOp -> DIV .)
    MUL             reduce using rule 108 (MulOp -> DIV .)
    AND             reduce using rule 108 (MulOp -> DIV .)
    INT             reduce using rule 108 (MulOp -> DIV .)
    FLOAT           reduce using rule 108 (MulOp -> DIV .)
    RUNE            reduce using rule 108 (MulOp -> DIV .)
    STRING          reduce using rule 108 (MulOp -> DIV .)
    TRUE            reduce using rule 108 (MulOp -> DIV .)
    FALSE           reduce using rule 108 (MulOp -> DIV .)


state 133

    (98) RelOp -> NEQ .

    ID              reduce using rule 98 (RelOp -> NEQ .)
    LPAREN          reduce using rule 98 (RelOp -> NEQ .)
    ADD             reduce using rule 98 (RelOp -> NEQ .)
    SUB             reduce using rule 98 (RelOp -> NEQ .)
    NOT             reduce using rule 98 (RelOp -> NEQ .)
    XOR             reduce using rule 98 (RelOp -> NEQ .)
    MUL             reduce using rule 98 (RelOp -> NEQ .)
    AND             reduce using rule 98 (RelOp -> NEQ .)
    INT             reduce using rule 98 (RelOp -> NEQ .)
    FLOAT           reduce using rule 98 (RelOp -> NEQ .)
    RUNE            reduce using rule 98 (RelOp -> NEQ .)
    STRING          reduce using rule 98 (RelOp -> NEQ .)
    TRUE            reduce using rule 98 (RelOp -> NEQ .)
    FALSE           reduce using rule 98 (RelOp -> NEQ .)


state 134

    (102) RelOp -> GEQ .

    ID              reduce using rule 102 (RelOp -> GEQ .)
    LPAREN          reduce using rule 102 (RelOp -> GEQ .)
    ADD             reduce using rule 102 (RelOp -> GEQ .)
    SUB             reduce using rule 102 (RelOp -> GEQ .)
    NOT             reduce using rule 102 (RelOp -> GEQ .)
    XOR             reduce using rule 102 (RelOp -> GEQ .)
    MUL             reduce using rule 102 (RelOp -> GEQ .)
    AND             reduce using rule 102 (RelOp -> GEQ .)
    INT             reduce using rule 102 (RelOp -> GEQ .)
    FLOAT           reduce using rule 102 (RelOp -> GEQ .)
    RUNE            reduce using rule 102 (RelOp -> GEQ .)
    STRING          reduce using rule 102 (RelOp -> GEQ .)
    TRUE            reduce using rule 102 (RelOp -> GEQ .)
    FALSE           reduce using rule 102 (RelOp -> GEQ .)


state 135

    (93) BinaryOp -> LAND .

    ID              reduce using rule 93 (BinaryOp -> LAND .)
    LPAREN          reduce using rule 93 (BinaryOp -> LAND .)
    ADD             reduce using rule 93 (BinaryOp -> LAND .)
    SUB             reduce using rule 93 (BinaryOp -> LAND .)
    NOT             reduce using rule 93 (BinaryOp -> LAND .)
    XOR             reduce using rule 93 (BinaryOp -> LAND .)
    MUL             reduce using rule 93 (BinaryOp -> LAND .)
    AND             reduce using rule 93 (BinaryOp -> LAND .)
    INT             reduce using rule 93 (BinaryOp -> LAND .)
    FLOAT           reduce using rule 93 (BinaryOp -> LAND .)
    RUNE            reduce using rule 93 (BinaryOp -> LAND .)
    STRING          reduce using rule 93 (BinaryOp -> LAND .)
    TRUE            reduce using rule 93 (BinaryOp -> LAND .)
    FALSE           reduce using rule 93 (BinaryOp -> LAND .)


state 136

    (113) MulOp -> AND_NOT .

    ID              reduce using rule 113 (MulOp -> AND_NOT .)
    LPAREN          reduce using rule 113 (MulOp -> AND_NOT .)
    ADD             reduce using rule 113 (MulOp -> AND_NOT .)
    SUB             reduce using rule 113 (MulOp -> AND_NOT .)
    NOT             reduce using rule 113 (MulOp -> AND_NOT .)
    XOR             reduce using rule 113 (MulOp -> AND_NOT .)
    MUL             reduce using rule 113 (MulOp -> AND_NOT .)
    AND             reduce using rule 113 (MulOp -> AND_NOT .)
    INT             reduce using rule 113 (MulOp -> AND_NOT .)
    FLOAT           reduce using rule 113 (MulOp -> AND_NOT .)
    RUNE            reduce using rule 113 (MulOp -> AND_NOT .)
    STRING          reduce using rule 113 (MulOp -> AND_NOT .)
    TRUE            reduce using rule 113 (MulOp -> AND_NOT .)
    FALSE           reduce using rule 113 (MulOp -> AND_NOT .)


state 137

    (89) Expression -> Expression BinaryOp . UnaryExpr
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (137) Literal -> . BasicLit
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    ID              shift and go to state 89
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    RuneLit                        shift and go to state 87
    UnaryOp                        shift and go to state 71
    TrueLit                        shift and go to state 96
    BasicLit                       shift and go to state 77
    UnaryExpr                      shift and go to state 180
    FloatLit                       shift and go to state 82
    FalseLit                       shift and go to state 72
    IntLit                         shift and go to state 74
    Literal                        shift and go to state 73
    PrimaryExpr                    shift and go to state 83
    StringLit                      shift and go to state 94

state 138

    (95) BinaryOp -> AddOp .

    ID              reduce using rule 95 (BinaryOp -> AddOp .)
    LPAREN          reduce using rule 95 (BinaryOp -> AddOp .)
    ADD             reduce using rule 95 (BinaryOp -> AddOp .)
    SUB             reduce using rule 95 (BinaryOp -> AddOp .)
    NOT             reduce using rule 95 (BinaryOp -> AddOp .)
    XOR             reduce using rule 95 (BinaryOp -> AddOp .)
    MUL             reduce using rule 95 (BinaryOp -> AddOp .)
    AND             reduce using rule 95 (BinaryOp -> AddOp .)
    INT             reduce using rule 95 (BinaryOp -> AddOp .)
    FLOAT           reduce using rule 95 (BinaryOp -> AddOp .)
    RUNE            reduce using rule 95 (BinaryOp -> AddOp .)
    STRING          reduce using rule 95 (BinaryOp -> AddOp .)
    TRUE            reduce using rule 95 (BinaryOp -> AddOp .)
    FALSE           reduce using rule 95 (BinaryOp -> AddOp .)


state 139

    (111) MulOp -> SHR .

    ID              reduce using rule 111 (MulOp -> SHR .)
    LPAREN          reduce using rule 111 (MulOp -> SHR .)
    ADD             reduce using rule 111 (MulOp -> SHR .)
    SUB             reduce using rule 111 (MulOp -> SHR .)
    NOT             reduce using rule 111 (MulOp -> SHR .)
    XOR             reduce using rule 111 (MulOp -> SHR .)
    MUL             reduce using rule 111 (MulOp -> SHR .)
    AND             reduce using rule 111 (MulOp -> SHR .)
    INT             reduce using rule 111 (MulOp -> SHR .)
    FLOAT           reduce using rule 111 (MulOp -> SHR .)
    RUNE            reduce using rule 111 (MulOp -> SHR .)
    STRING          reduce using rule 111 (MulOp -> SHR .)
    TRUE            reduce using rule 111 (MulOp -> SHR .)
    FALSE           reduce using rule 111 (MulOp -> SHR .)


state 140

    (106) AddOp -> XOR .

    ID              reduce using rule 106 (AddOp -> XOR .)
    LPAREN          reduce using rule 106 (AddOp -> XOR .)
    ADD             reduce using rule 106 (AddOp -> XOR .)
    SUB             reduce using rule 106 (AddOp -> XOR .)
    NOT             reduce using rule 106 (AddOp -> XOR .)
    XOR             reduce using rule 106 (AddOp -> XOR .)
    MUL             reduce using rule 106 (AddOp -> XOR .)
    AND             reduce using rule 106 (AddOp -> XOR .)
    INT             reduce using rule 106 (AddOp -> XOR .)
    FLOAT           reduce using rule 106 (AddOp -> XOR .)
    RUNE            reduce using rule 106 (AddOp -> XOR .)
    STRING          reduce using rule 106 (AddOp -> XOR .)
    TRUE            reduce using rule 106 (AddOp -> XOR .)
    FALSE           reduce using rule 106 (AddOp -> XOR .)


state 141

    (96) BinaryOp -> MulOp .

    ID              reduce using rule 96 (BinaryOp -> MulOp .)
    LPAREN          reduce using rule 96 (BinaryOp -> MulOp .)
    ADD             reduce using rule 96 (BinaryOp -> MulOp .)
    SUB             reduce using rule 96 (BinaryOp -> MulOp .)
    NOT             reduce using rule 96 (BinaryOp -> MulOp .)
    XOR             reduce using rule 96 (BinaryOp -> MulOp .)
    MUL             reduce using rule 96 (BinaryOp -> MulOp .)
    AND             reduce using rule 96 (BinaryOp -> MulOp .)
    INT             reduce using rule 96 (BinaryOp -> MulOp .)
    FLOAT           reduce using rule 96 (BinaryOp -> MulOp .)
    RUNE            reduce using rule 96 (BinaryOp -> MulOp .)
    STRING          reduce using rule 96 (BinaryOp -> MulOp .)
    TRUE            reduce using rule 96 (BinaryOp -> MulOp .)
    FALSE           reduce using rule 96 (BinaryOp -> MulOp .)


state 142

    (101) RelOp -> GTN .

    ID              reduce using rule 101 (RelOp -> GTN .)
    LPAREN          reduce using rule 101 (RelOp -> GTN .)
    ADD             reduce using rule 101 (RelOp -> GTN .)
    SUB             reduce using rule 101 (RelOp -> GTN .)
    NOT             reduce using rule 101 (RelOp -> GTN .)
    XOR             reduce using rule 101 (RelOp -> GTN .)
    MUL             reduce using rule 101 (RelOp -> GTN .)
    AND             reduce using rule 101 (RelOp -> GTN .)
    INT             reduce using rule 101 (RelOp -> GTN .)
    FLOAT           reduce using rule 101 (RelOp -> GTN .)
    RUNE            reduce using rule 101 (RelOp -> GTN .)
    STRING          reduce using rule 101 (RelOp -> GTN .)
    TRUE            reduce using rule 101 (RelOp -> GTN .)
    FALSE           reduce using rule 101 (RelOp -> GTN .)


state 143

    (103) AddOp -> ADD .

    ID              reduce using rule 103 (AddOp -> ADD .)
    LPAREN          reduce using rule 103 (AddOp -> ADD .)
    ADD             reduce using rule 103 (AddOp -> ADD .)
    SUB             reduce using rule 103 (AddOp -> ADD .)
    NOT             reduce using rule 103 (AddOp -> ADD .)
    XOR             reduce using rule 103 (AddOp -> ADD .)
    MUL             reduce using rule 103 (AddOp -> ADD .)
    AND             reduce using rule 103 (AddOp -> ADD .)
    INT             reduce using rule 103 (AddOp -> ADD .)
    FLOAT           reduce using rule 103 (AddOp -> ADD .)
    RUNE            reduce using rule 103 (AddOp -> ADD .)
    STRING          reduce using rule 103 (AddOp -> ADD .)
    TRUE            reduce using rule 103 (AddOp -> ADD .)
    FALSE           reduce using rule 103 (AddOp -> ADD .)


state 144

    (97) RelOp -> EQL .

    ID              reduce using rule 97 (RelOp -> EQL .)
    LPAREN          reduce using rule 97 (RelOp -> EQL .)
    ADD             reduce using rule 97 (RelOp -> EQL .)
    SUB             reduce using rule 97 (RelOp -> EQL .)
    NOT             reduce using rule 97 (RelOp -> EQL .)
    XOR             reduce using rule 97 (RelOp -> EQL .)
    MUL             reduce using rule 97 (RelOp -> EQL .)
    AND             reduce using rule 97 (RelOp -> EQL .)
    INT             reduce using rule 97 (RelOp -> EQL .)
    FLOAT           reduce using rule 97 (RelOp -> EQL .)
    RUNE            reduce using rule 97 (RelOp -> EQL .)
    STRING          reduce using rule 97 (RelOp -> EQL .)
    TRUE            reduce using rule 97 (RelOp -> EQL .)
    FALSE           reduce using rule 97 (RelOp -> EQL .)


state 145

    (110) MulOp -> SHL .

    ID              reduce using rule 110 (MulOp -> SHL .)
    LPAREN          reduce using rule 110 (MulOp -> SHL .)
    ADD             reduce using rule 110 (MulOp -> SHL .)
    SUB             reduce using rule 110 (MulOp -> SHL .)
    NOT             reduce using rule 110 (MulOp -> SHL .)
    XOR             reduce using rule 110 (MulOp -> SHL .)
    MUL             reduce using rule 110 (MulOp -> SHL .)
    AND             reduce using rule 110 (MulOp -> SHL .)
    INT             reduce using rule 110 (MulOp -> SHL .)
    FLOAT           reduce using rule 110 (MulOp -> SHL .)
    RUNE            reduce using rule 110 (MulOp -> SHL .)
    STRING          reduce using rule 110 (MulOp -> SHL .)
    TRUE            reduce using rule 110 (MulOp -> SHL .)
    FALSE           reduce using rule 110 (MulOp -> SHL .)


state 146

    (99) RelOp -> LTN .

    ID              reduce using rule 99 (RelOp -> LTN .)
    LPAREN          reduce using rule 99 (RelOp -> LTN .)
    ADD             reduce using rule 99 (RelOp -> LTN .)
    SUB             reduce using rule 99 (RelOp -> LTN .)
    NOT             reduce using rule 99 (RelOp -> LTN .)
    XOR             reduce using rule 99 (RelOp -> LTN .)
    MUL             reduce using rule 99 (RelOp -> LTN .)
    AND             reduce using rule 99 (RelOp -> LTN .)
    INT             reduce using rule 99 (RelOp -> LTN .)
    FLOAT           reduce using rule 99 (RelOp -> LTN .)
    RUNE            reduce using rule 99 (RelOp -> LTN .)
    STRING          reduce using rule 99 (RelOp -> LTN .)
    TRUE            reduce using rule 99 (RelOp -> LTN .)
    FALSE           reduce using rule 99 (RelOp -> LTN .)


state 147

    (112) MulOp -> AND .

    ID              reduce using rule 112 (MulOp -> AND .)
    LPAREN          reduce using rule 112 (MulOp -> AND .)
    ADD             reduce using rule 112 (MulOp -> AND .)
    SUB             reduce using rule 112 (MulOp -> AND .)
    NOT             reduce using rule 112 (MulOp -> AND .)
    XOR             reduce using rule 112 (MulOp -> AND .)
    MUL             reduce using rule 112 (MulOp -> AND .)
    AND             reduce using rule 112 (MulOp -> AND .)
    INT             reduce using rule 112 (MulOp -> AND .)
    FLOAT           reduce using rule 112 (MulOp -> AND .)
    RUNE            reduce using rule 112 (MulOp -> AND .)
    STRING          reduce using rule 112 (MulOp -> AND .)
    TRUE            reduce using rule 112 (MulOp -> AND .)
    FALSE           reduce using rule 112 (MulOp -> AND .)


state 148

    (94) BinaryOp -> RelOp .

    ID              reduce using rule 94 (BinaryOp -> RelOp .)
    LPAREN          reduce using rule 94 (BinaryOp -> RelOp .)
    ADD             reduce using rule 94 (BinaryOp -> RelOp .)
    SUB             reduce using rule 94 (BinaryOp -> RelOp .)
    NOT             reduce using rule 94 (BinaryOp -> RelOp .)
    XOR             reduce using rule 94 (BinaryOp -> RelOp .)
    MUL             reduce using rule 94 (BinaryOp -> RelOp .)
    AND             reduce using rule 94 (BinaryOp -> RelOp .)
    INT             reduce using rule 94 (BinaryOp -> RelOp .)
    FLOAT           reduce using rule 94 (BinaryOp -> RelOp .)
    RUNE            reduce using rule 94 (BinaryOp -> RelOp .)
    STRING          reduce using rule 94 (BinaryOp -> RelOp .)
    TRUE            reduce using rule 94 (BinaryOp -> RelOp .)
    FALSE           reduce using rule 94 (BinaryOp -> RelOp .)


state 149

    (100) RelOp -> LEQ .

    ID              reduce using rule 100 (RelOp -> LEQ .)
    LPAREN          reduce using rule 100 (RelOp -> LEQ .)
    ADD             reduce using rule 100 (RelOp -> LEQ .)
    SUB             reduce using rule 100 (RelOp -> LEQ .)
    NOT             reduce using rule 100 (RelOp -> LEQ .)
    XOR             reduce using rule 100 (RelOp -> LEQ .)
    MUL             reduce using rule 100 (RelOp -> LEQ .)
    AND             reduce using rule 100 (RelOp -> LEQ .)
    INT             reduce using rule 100 (RelOp -> LEQ .)
    FLOAT           reduce using rule 100 (RelOp -> LEQ .)
    RUNE            reduce using rule 100 (RelOp -> LEQ .)
    STRING          reduce using rule 100 (RelOp -> LEQ .)
    TRUE            reduce using rule 100 (RelOp -> LEQ .)
    FALSE           reduce using rule 100 (RelOp -> LEQ .)


state 150

    (105) AddOp -> OR .

    ID              reduce using rule 105 (AddOp -> OR .)
    LPAREN          reduce using rule 105 (AddOp -> OR .)
    ADD             reduce using rule 105 (AddOp -> OR .)
    SUB             reduce using rule 105 (AddOp -> OR .)
    NOT             reduce using rule 105 (AddOp -> OR .)
    XOR             reduce using rule 105 (AddOp -> OR .)
    MUL             reduce using rule 105 (AddOp -> OR .)
    AND             reduce using rule 105 (AddOp -> OR .)
    INT             reduce using rule 105 (AddOp -> OR .)
    FLOAT           reduce using rule 105 (AddOp -> OR .)
    RUNE            reduce using rule 105 (AddOp -> OR .)
    STRING          reduce using rule 105 (AddOp -> OR .)
    TRUE            reduce using rule 105 (AddOp -> OR .)
    FALSE           reduce using rule 105 (AddOp -> OR .)


state 151

    (109) MulOp -> MOD .

    ID              reduce using rule 109 (MulOp -> MOD .)
    LPAREN          reduce using rule 109 (MulOp -> MOD .)
    ADD             reduce using rule 109 (MulOp -> MOD .)
    SUB             reduce using rule 109 (MulOp -> MOD .)
    NOT             reduce using rule 109 (MulOp -> MOD .)
    XOR             reduce using rule 109 (MulOp -> MOD .)
    MUL             reduce using rule 109 (MulOp -> MOD .)
    AND             reduce using rule 109 (MulOp -> MOD .)
    INT             reduce using rule 109 (MulOp -> MOD .)
    FLOAT           reduce using rule 109 (MulOp -> MOD .)
    RUNE            reduce using rule 109 (MulOp -> MOD .)
    STRING          reduce using rule 109 (MulOp -> MOD .)
    TRUE            reduce using rule 109 (MulOp -> MOD .)
    FALSE           reduce using rule 109 (MulOp -> MOD .)


state 152

    (45) Type -> LPAREN Type RPAREN .

    ASSIGN          reduce using rule 45 (Type -> LPAREN Type RPAREN .)
    SEMICOLON       reduce using rule 45 (Type -> LPAREN Type RPAREN .)
    RPAREN          reduce using rule 45 (Type -> LPAREN Type RPAREN .)
    COMMA           reduce using rule 45 (Type -> LPAREN Type RPAREN .)


state 153

    (46) Type -> LPAREN ID RPAREN .

    ASSIGN          reduce using rule 46 (Type -> LPAREN ID RPAREN .)
    SEMICOLON       reduce using rule 46 (Type -> LPAREN ID RPAREN .)
    RPAREN          reduce using rule 46 (Type -> LPAREN ID RPAREN .)
    COMMA           reduce using rule 46 (Type -> LPAREN ID RPAREN .)


state 154

    (38) VarSpec -> IdentifierList Type ASSIGN ExpressionList .
    (31) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 38 (VarSpec -> IdentifierList Type ASSIGN ExpressionList .)
    COMMA           shift and go to state 127


state 155

    (39) VarSpec -> IdentifierList ID ASSIGN ExpressionList .
    (31) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 39 (VarSpec -> IdentifierList ID ASSIGN ExpressionList .)
    COMMA           shift and go to state 127


state 156

    (55) StructType -> STRUCT OpenStructS LBRACE . FieldDecl_curl RBRACE CloseStructS
    (56) FieldDecl_curl -> . FieldDecl_curl FieldDecl SEMICOLON
    (57) FieldDecl_curl -> .

    RBRACE          reduce using rule 57 (FieldDecl_curl -> .)
    ID              reduce using rule 57 (FieldDecl_curl -> .)

    FieldDecl_curl                 shift and go to state 181

state 157

    (75) Parameters -> LPAREN ParameterList COMMA . RPAREN
    (77) ParameterList -> ParameterList COMMA . ParameterDecl
    (78) ParameterDecl -> . ParaIdList Type
    (79) ParameterDecl -> . ID Type
    (80) ParameterDecl -> . ParaIdList ID
    (81) ParameterDecl -> . ID ID
    (82) ParaIdList -> . ID COMMA ID
    (83) ParaIdList -> . ParaIdList COMMA ID

    RPAREN          shift and go to state 182
    ID              shift and go to state 111

    ParaIdList                     shift and go to state 109
    ParameterDecl                  shift and go to state 183

state 158

    (74) Parameters -> LPAREN ParameterList RPAREN .

    LPAREN          reduce using rule 74 (Parameters -> LPAREN ParameterList RPAREN .)
    LBRACE          reduce using rule 74 (Parameters -> LPAREN ParameterList RPAREN .)


state 159

    (83) ParaIdList -> ParaIdList COMMA . ID

    ID              shift and go to state 184


state 160

    (78) ParameterDecl -> ParaIdList Type .

    RPAREN          reduce using rule 78 (ParameterDecl -> ParaIdList Type .)
    COMMA           reduce using rule 78 (ParameterDecl -> ParaIdList Type .)


state 161

    (80) ParameterDecl -> ParaIdList ID .

    RPAREN          reduce using rule 80 (ParameterDecl -> ParaIdList ID .)
    COMMA           reduce using rule 80 (ParameterDecl -> ParaIdList ID .)


state 162

    (79) ParameterDecl -> ID Type .

    RPAREN          reduce using rule 79 (ParameterDecl -> ID Type .)
    COMMA           reduce using rule 79 (ParameterDecl -> ID Type .)


state 163

    (82) ParaIdList -> ID COMMA . ID

    ID              shift and go to state 185


state 164

    (81) ParameterDecl -> ID ID .

    RPAREN          reduce using rule 81 (ParameterDecl -> ID ID .)
    COMMA           reduce using rule 81 (ParameterDecl -> ID ID .)


state 165

    (67) Result -> LPAREN TypeList . RPAREN
    (71) TypeList -> TypeList . COMMA ID
    (72) TypeList -> TypeList . COMMA Type

    RPAREN          shift and go to state 186
    COMMA           shift and go to state 187


state 166

    (70) TypeList -> Type .

    RPAREN          reduce using rule 70 (TypeList -> Type .)
    COMMA           reduce using rule 70 (TypeList -> Type .)


state 167

    (69) TypeList -> ID .

    RPAREN          reduce using rule 69 (TypeList -> ID .)
    COMMA           reduce using rule 69 (TypeList -> ID .)


state 168

    (85) StatementList -> Statement_curl .
    (86) Statement_curl -> Statement_curl . Statement SEMICOLON
    (150) Statement -> . Declaration
    (151) Statement -> . LabelledStmt
    (152) Statement -> . SimpleStmt
    (153) Statement -> . ReturnStmt
    (154) Statement -> . BreakStmt
    (155) Statement -> . ContinueStmt
    (156) Statement -> . GotoStmt
    (157) Statement -> . FallthroughStmt
    (158) Statement -> . IfStmt
    (159) Statement -> . OpenS Block CloseS
    (160) Statement -> . SwitchStmt
    (161) Statement -> . ForStmt
    (20) Declaration -> . ConstDecl
    (21) Declaration -> . StructDecl
    (22) Declaration -> . VarDecl
    (182) LabelledStmt -> . ID COLON Statement
    (162) SimpleStmt -> . Expression
    (163) SimpleStmt -> . IncDecStmt
    (164) SimpleStmt -> . Assignment
    (165) SimpleStmt -> . ShortVarDecl
    (166) SimpleStmt -> .
    (183) ReturnStmt -> . RETURN ExpressionList
    (184) ReturnStmt -> . RETURN
    (185) BreakStmt -> . BREAK ID
    (186) BreakStmt -> . BREAK
    (187) ContinueStmt -> . CONTINUE ID
    (188) ContinueStmt -> . CONTINUE
    (189) GotoStmt -> . GOTO ID
    (190) FallthroughStmt -> . FALLTHROUGH
    (192) IfStmt -> . IF OpenS Expression Block CloseS
    (193) IfStmt -> . IF OpenS Expression Block CloseS ELSE IfStmt
    (194) IfStmt -> . IF OpenS Expression Block CloseS ELSE OpenS Block CloseS
    (2) OpenS -> .
    (195) SwitchStmt -> . ExprSwitchStmt
    (204) ForStmt -> . FOR OpenS OpenF Expression Block CloseF CloseS
    (205) ForStmt -> . FOR OpenS OpenF ForClause Block CloseF CloseS
    (206) ForStmt -> . FOR OpenS OpenF Block CloseF CloseS
    (23) ConstDecl -> . CONST ConstSpec
    (24) ConstDecl -> . CONST LPAREN ConstSpec_curl RPAREN
    (32) StructDecl -> . TYPE StructName StructType
    (34) VarDecl -> . VAR VarSpec
    (35) VarDecl -> . VAR LPAREN VarSpec_curl RPAREN
    (88) Expression -> . UnaryExpr
    (89) Expression -> . Expression BinaryOp UnaryExpr
    (167) IncDecStmt -> . Expression INC
    (168) IncDecStmt -> . Expression DEC
    (169) Assignment -> . ExpressionList AssignOp ExpressionList
    (191) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (196) ExprSwitchStmt -> . SWITCH ExpressionName LBRACE OpenW ExprCaseClause_curl CloseW RBRACE
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (30) ExpressionList -> . Expression
    (31) ExpressionList -> . ExpressionList COMMA Expression
    (28) IdentifierList -> . ID
    (29) IdentifierList -> . ID COMMA IdentifierList
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (137) Literal -> . BasicLit
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    RBRACE          reduce using rule 85 (StatementList -> Statement_curl .)
    CASE            reduce using rule 85 (StatementList -> Statement_curl .)
    ID              shift and go to state 204
    SEMICOLON       reduce using rule 166 (SimpleStmt -> .)
    RETURN          shift and go to state 195
    BREAK           shift and go to state 209
    CONTINUE        shift and go to state 202
    GOTO            shift and go to state 194
    FALLTHROUGH     shift and go to state 203
    IF              shift and go to state 215
    LBRACE          reduce using rule 2 (OpenS -> .)
    FOR             shift and go to state 199
    CONST           shift and go to state 10
    TYPE            shift and go to state 19
    VAR             shift and go to state 16
    SWITCH          shift and go to state 205
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    Statement                      shift and go to state 189
    UnaryOp                        shift and go to state 71
    ContinueStmt                   shift and go to state 188
    SimpleStmt                     shift and go to state 212
    FalseLit                       shift and go to state 72
    Literal                        shift and go to state 73
    ForStmt                        shift and go to state 213
    ExprSwitchStmt                 shift and go to state 196
    IdentifierList                 shift and go to state 197
    IntLit                         shift and go to state 74
    IfStmt                         shift and go to state 190
    RuneLit                        shift and go to state 87
    Assignment                     shift and go to state 191
    IncDecStmt                     shift and go to state 192
    Declaration                    shift and go to state 206
    OpenS                          shift and go to state 193
    GotoStmt                       shift and go to state 198
    UnaryExpr                      shift and go to state 81
    FloatLit                       shift and go to state 82
    StructDecl                     shift and go to state 11
    ExpressionList                 shift and go to state 207
    LabelledStmt                   shift and go to state 200
    Expression                     shift and go to state 208
    ShortVarDecl                   shift and go to state 214
    TrueLit                        shift and go to state 96
    BreakStmt                      shift and go to state 216
    SwitchStmt                     shift and go to state 201
    StringLit                      shift and go to state 94
    VarDecl                        shift and go to state 18
    BasicLit                       shift and go to state 77
    PrimaryExpr                    shift and go to state 83
    ReturnStmt                     shift and go to state 210
    ConstDecl                      shift and go to state 17
    FallthroughStmt                shift and go to state 211

state 169

    (84) Block -> LBRACE StatementList . RBRACE

    RBRACE          shift and go to state 217


state 170

    (43) FunctionDecl -> FUNC FuncName OpenS Signature Block CloseS .

    SEMICOLON       reduce using rule 43 (FunctionDecl -> FUNC FuncName OpenS Signature Block CloseS .)


state 171

    (51) ArrayType -> LBRACK INT RBRACK Type .

    SEMICOLON       reduce using rule 51 (ArrayType -> LBRACK INT RBRACK Type .)
    RPAREN          reduce using rule 51 (ArrayType -> LBRACK INT RBRACK Type .)
    COMMA           reduce using rule 51 (ArrayType -> LBRACK INT RBRACK Type .)
    ASSIGN          reduce using rule 51 (ArrayType -> LBRACK INT RBRACK Type .)


state 172

    (52) ArrayType -> LBRACK INT RBRACK ID .

    SEMICOLON       reduce using rule 52 (ArrayType -> LBRACK INT RBRACK ID .)
    RPAREN          reduce using rule 52 (ArrayType -> LBRACK INT RBRACK ID .)
    COMMA           reduce using rule 52 (ArrayType -> LBRACK INT RBRACK ID .)
    ASSIGN          reduce using rule 52 (ArrayType -> LBRACK INT RBRACK ID .)


state 173

    (129) Slice -> LBRACK COLON . Expression RBRACK
    (131) Slice -> LBRACK COLON . RBRACK
    (133) Slice -> LBRACK COLON . Expression COLON Expression RBRACK
    (88) Expression -> . UnaryExpr
    (89) Expression -> . Expression BinaryOp UnaryExpr
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (137) Literal -> . BasicLit
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    RBRACK          shift and go to state 218
    ID              shift and go to state 89
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    RuneLit                        shift and go to state 87
    UnaryOp                        shift and go to state 71
    TrueLit                        shift and go to state 96
    BasicLit                       shift and go to state 77
    UnaryExpr                      shift and go to state 81
    FloatLit                       shift and go to state 82
    FalseLit                       shift and go to state 72
    IntLit                         shift and go to state 74
    Literal                        shift and go to state 73
    PrimaryExpr                    shift and go to state 83
    StringLit                      shift and go to state 94
    Expression                     shift and go to state 219

state 174

    (127) Index -> LBRACK Expression . RBRACK
    (128) Slice -> LBRACK Expression . COLON Expression RBRACK
    (130) Slice -> LBRACK Expression . COLON RBRACK
    (132) Slice -> LBRACK Expression . COLON Expression COLON Expression RBRACK
    (89) Expression -> Expression . BinaryOp UnaryExpr
    (92) BinaryOp -> . LOR
    (93) BinaryOp -> . LAND
    (94) BinaryOp -> . RelOp
    (95) BinaryOp -> . AddOp
    (96) BinaryOp -> . MulOp
    (97) RelOp -> . EQL
    (98) RelOp -> . NEQ
    (99) RelOp -> . LTN
    (100) RelOp -> . LEQ
    (101) RelOp -> . GTN
    (102) RelOp -> . GEQ
    (103) AddOp -> . ADD
    (104) AddOp -> . SUB
    (105) AddOp -> . OR
    (106) AddOp -> . XOR
    (107) MulOp -> . MUL
    (108) MulOp -> . DIV
    (109) MulOp -> . MOD
    (110) MulOp -> . SHL
    (111) MulOp -> . SHR
    (112) MulOp -> . AND
    (113) MulOp -> . AND_NOT

    RBRACK          shift and go to state 221
    COLON           shift and go to state 220
    LOR             shift and go to state 130
    LAND            shift and go to state 135
    EQL             shift and go to state 144
    NEQ             shift and go to state 133
    LTN             shift and go to state 146
    LEQ             shift and go to state 149
    GTN             shift and go to state 142
    GEQ             shift and go to state 134
    ADD             shift and go to state 143
    SUB             shift and go to state 129
    OR              shift and go to state 150
    XOR             shift and go to state 140
    MUL             shift and go to state 131
    DIV             shift and go to state 132
    MOD             shift and go to state 151
    SHL             shift and go to state 145
    SHR             shift and go to state 139
    AND             shift and go to state 147
    AND_NOT         shift and go to state 136

    AddOp                          shift and go to state 138
    BinaryOp                       shift and go to state 137
    MulOp                          shift and go to state 141
    RelOp                          shift and go to state 148

state 175

    (134) Arguments -> LPAREN RPAREN .

    DOT             reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    LBRACK          reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    LPAREN          reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    LOR             reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    LAND            reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    EQL             reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    NEQ             reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    LTN             reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    LEQ             reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    GTN             reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    GEQ             reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    ADD             reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    SUB             reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    OR              reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    XOR             reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    MUL             reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    DIV             reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    MOD             reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    SHL             reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    SHR             reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    AND             reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    AND_NOT         reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    COMMA           reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    SEMICOLON       reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    RPAREN          reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    RBRACK          reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    COLON           reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    ADD_ASSIGN      reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    SUB_ASSIGN      reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    MUL_ASSIGN      reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    DIV_ASSIGN      reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    MOD_ASSIGN      reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    AND_ASSIGN      reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    OR_ASSIGN       reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    XOR_ASSIGN      reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    SHL_ASSIGN      reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    SHR_ASSIGN      reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    ASSIGN          reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    LBRACE          reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    INC             reduce using rule 134 (Arguments -> LPAREN RPAREN .)
    DEC             reduce using rule 134 (Arguments -> LPAREN RPAREN .)


state 176

    (135) Arguments -> LPAREN ExpressionList . RPAREN
    (136) Arguments -> LPAREN ExpressionList . COMMA RPAREN
    (31) ExpressionList -> ExpressionList . COMMA Expression

    RPAREN          shift and go to state 222
    COMMA           shift and go to state 223


state 177

    (122) PrimaryExpr -> PrimaryExpr DOT ID .

    DOT             reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    LBRACK          reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    LPAREN          reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    LOR             reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    LAND            reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    EQL             reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    NEQ             reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    LTN             reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    LEQ             reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    GTN             reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    GEQ             reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    ADD             reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    SUB             reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    OR              reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    XOR             reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    MUL             reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    DIV             reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    MOD             reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    SHL             reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    SHR             reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    AND             reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    AND_NOT         reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    COMMA           reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    SEMICOLON       reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    LBRACE          reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    RBRACK          reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    COLON           reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    RPAREN          reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    ADD_ASSIGN      reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    SUB_ASSIGN      reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    MUL_ASSIGN      reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    DIV_ASSIGN      reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    MOD_ASSIGN      reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    AND_ASSIGN      reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    AND_NOT_ASSIGN  reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    OR_ASSIGN       reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    XOR_ASSIGN      reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    SHL_ASSIGN      reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    SHR_ASSIGN      reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    ASSIGN          reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    INC             reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)
    DEC             reduce using rule 122 (PrimaryExpr -> PrimaryExpr DOT ID .)


state 178

    (31) ExpressionList -> ExpressionList COMMA Expression .
    (89) Expression -> Expression . BinaryOp UnaryExpr
    (92) BinaryOp -> . LOR
    (93) BinaryOp -> . LAND
    (94) BinaryOp -> . RelOp
    (95) BinaryOp -> . AddOp
    (96) BinaryOp -> . MulOp
    (97) RelOp -> . EQL
    (98) RelOp -> . NEQ
    (99) RelOp -> . LTN
    (100) RelOp -> . LEQ
    (101) RelOp -> . GTN
    (102) RelOp -> . GEQ
    (103) AddOp -> . ADD
    (104) AddOp -> . SUB
    (105) AddOp -> . OR
    (106) AddOp -> . XOR
    (107) MulOp -> . MUL
    (108) MulOp -> . DIV
    (109) MulOp -> . MOD
    (110) MulOp -> . SHL
    (111) MulOp -> . SHR
    (112) MulOp -> . AND
    (113) MulOp -> . AND_NOT

    COMMA           reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    SEMICOLON       reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    LBRACE          reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    ADD_ASSIGN      reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    SUB_ASSIGN      reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    MUL_ASSIGN      reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    DIV_ASSIGN      reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    MOD_ASSIGN      reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    AND_ASSIGN      reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    AND_NOT_ASSIGN  reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    OR_ASSIGN       reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    XOR_ASSIGN      reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    SHL_ASSIGN      reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    SHR_ASSIGN      reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    ASSIGN          reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    RPAREN          reduce using rule 31 (ExpressionList -> ExpressionList COMMA Expression .)
    LOR             shift and go to state 130
    LAND            shift and go to state 135
    EQL             shift and go to state 144
    NEQ             shift and go to state 133
    LTN             shift and go to state 146
    LEQ             shift and go to state 149
    GTN             shift and go to state 142
    GEQ             shift and go to state 134
    ADD             shift and go to state 143
    SUB             shift and go to state 129
    OR              shift and go to state 150
    XOR             shift and go to state 140
    MUL             shift and go to state 131
    DIV             shift and go to state 132
    MOD             shift and go to state 151
    SHL             shift and go to state 145
    SHR             shift and go to state 139
    AND             shift and go to state 147
    AND_NOT         shift and go to state 136

    AddOp                          shift and go to state 138
    RelOp                          shift and go to state 148
    BinaryOp                       shift and go to state 137
    MulOp                          shift and go to state 141

state 179

    (123) PrimaryExpr -> LPAREN Expression RPAREN .

    DOT             reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LBRACK          reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LOR             reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LAND            reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    EQL             reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    NEQ             reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LTN             reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LEQ             reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    GTN             reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    GEQ             reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    ADD             reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SUB             reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    OR              reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    XOR             reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    MUL             reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    DIV             reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    MOD             reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SHL             reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SHR             reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    AND             reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    AND_NOT         reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    RBRACK          reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    COLON           reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    ADD_ASSIGN      reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SUB_ASSIGN      reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    MUL_ASSIGN      reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    DIV_ASSIGN      reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    MOD_ASSIGN      reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    AND_ASSIGN      reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    OR_ASSIGN       reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    XOR_ASSIGN      reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SHL_ASSIGN      reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SHR_ASSIGN      reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    ASSIGN          reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    INC             reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)
    DEC             reduce using rule 123 (PrimaryExpr -> LPAREN Expression RPAREN .)


state 180

    (89) Expression -> Expression BinaryOp UnaryExpr .

    RBRACK          reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    LOR             reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    LAND            reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    EQL             reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    NEQ             reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    LTN             reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    LEQ             reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    GTN             reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    GEQ             reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    ADD             reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    SUB             reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    OR              reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    XOR             reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    MUL             reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    DIV             reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    MOD             reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    SHL             reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    SHR             reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    AND             reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    AND_NOT         reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    COMMA           reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    SEMICOLON       reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    COLON           reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    LBRACE          reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    RPAREN          reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    INC             reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    DEC             reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    ADD_ASSIGN      reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    SUB_ASSIGN      reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    MUL_ASSIGN      reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    DIV_ASSIGN      reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    MOD_ASSIGN      reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    AND_ASSIGN      reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    OR_ASSIGN       reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    XOR_ASSIGN      reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    SHL_ASSIGN      reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    SHR_ASSIGN      reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)
    ASSIGN          reduce using rule 89 (Expression -> Expression BinaryOp UnaryExpr .)


state 181

    (55) StructType -> STRUCT OpenStructS LBRACE FieldDecl_curl . RBRACE CloseStructS
    (56) FieldDecl_curl -> FieldDecl_curl . FieldDecl SEMICOLON
    (58) FieldDecl -> . ID COMMA IdentifierList Type
    (59) FieldDecl -> . ID COMMA IdentifierList ID
    (60) FieldDecl -> . ID Type
    (61) FieldDecl -> . ID ID
    (62) FieldDecl -> . ID STRUCT MUL ID
    (63) FieldDecl -> . ID COMMA IdentifierList STRUCT MUL ID

    RBRACE          shift and go to state 226
    ID              shift and go to state 225

    FieldDecl                      shift and go to state 224

state 182

    (75) Parameters -> LPAREN ParameterList COMMA RPAREN .

    LPAREN          reduce using rule 75 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    LBRACE          reduce using rule 75 (Parameters -> LPAREN ParameterList COMMA RPAREN .)


state 183

    (77) ParameterList -> ParameterList COMMA ParameterDecl .

    RPAREN          reduce using rule 77 (ParameterList -> ParameterList COMMA ParameterDecl .)
    COMMA           reduce using rule 77 (ParameterList -> ParameterList COMMA ParameterDecl .)


state 184

    (83) ParaIdList -> ParaIdList COMMA ID .

    ID              reduce using rule 83 (ParaIdList -> ParaIdList COMMA ID .)
    COMMA           reduce using rule 83 (ParaIdList -> ParaIdList COMMA ID .)
    LPAREN          reduce using rule 83 (ParaIdList -> ParaIdList COMMA ID .)
    LBRACK          reduce using rule 83 (ParaIdList -> ParaIdList COMMA ID .)
    MUL             reduce using rule 83 (ParaIdList -> ParaIdList COMMA ID .)


state 185

    (82) ParaIdList -> ID COMMA ID .

    ID              reduce using rule 82 (ParaIdList -> ID COMMA ID .)
    COMMA           reduce using rule 82 (ParaIdList -> ID COMMA ID .)
    LPAREN          reduce using rule 82 (ParaIdList -> ID COMMA ID .)
    LBRACK          reduce using rule 82 (ParaIdList -> ID COMMA ID .)
    MUL             reduce using rule 82 (ParaIdList -> ID COMMA ID .)


state 186

    (67) Result -> LPAREN TypeList RPAREN .

    LBRACE          reduce using rule 67 (Result -> LPAREN TypeList RPAREN .)


state 187

    (71) TypeList -> TypeList COMMA . ID
    (72) TypeList -> TypeList COMMA . Type
    (45) Type -> . LPAREN Type RPAREN
    (46) Type -> . LPAREN ID RPAREN
    (47) Type -> . TypeLit
    (48) TypeLit -> . ArrayType
    (49) TypeLit -> . PointerType
    (50) TypeLit -> . SliceType
    (51) ArrayType -> . LBRACK INT RBRACK Type
    (52) ArrayType -> . LBRACK INT RBRACK ID
    (64) PointerType -> . MUL Type
    (65) PointerType -> . MUL ID
    (53) SliceType -> . LBRACK RBRACK Type
    (54) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 228
    LPAREN          shift and go to state 49
    LBRACK          shift and go to state 46
    MUL             shift and go to state 51

    Type                           shift and go to state 227
    ArrayType                      shift and go to state 47
    PointerType                    shift and go to state 50
    TypeLit                        shift and go to state 45
    SliceType                      shift and go to state 54

state 188

    (155) Statement -> ContinueStmt .

    SEMICOLON       reduce using rule 155 (Statement -> ContinueStmt .)


state 189

    (86) Statement_curl -> Statement_curl Statement . SEMICOLON

    SEMICOLON       shift and go to state 229


state 190

    (158) Statement -> IfStmt .

    SEMICOLON       reduce using rule 158 (Statement -> IfStmt .)


state 191

    (164) SimpleStmt -> Assignment .

    LBRACE          reduce using rule 164 (SimpleStmt -> Assignment .)
    SEMICOLON       reduce using rule 164 (SimpleStmt -> Assignment .)


state 192

    (163) SimpleStmt -> IncDecStmt .

    LBRACE          reduce using rule 163 (SimpleStmt -> IncDecStmt .)
    SEMICOLON       reduce using rule 163 (SimpleStmt -> IncDecStmt .)


state 193

    (159) Statement -> OpenS . Block CloseS
    (84) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 114

    Block                          shift and go to state 230

state 194

    (189) GotoStmt -> GOTO . ID

    ID              shift and go to state 231


state 195

    (183) ReturnStmt -> RETURN . ExpressionList
    (184) ReturnStmt -> RETURN .
    (30) ExpressionList -> . Expression
    (31) ExpressionList -> . ExpressionList COMMA Expression
    (88) Expression -> . UnaryExpr
    (89) Expression -> . Expression BinaryOp UnaryExpr
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (137) Literal -> . BasicLit
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    SEMICOLON       reduce using rule 184 (ReturnStmt -> RETURN .)
    ID              shift and go to state 89
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    RuneLit                        shift and go to state 87
    UnaryOp                        shift and go to state 71
    TrueLit                        shift and go to state 96
    BasicLit                       shift and go to state 77
    UnaryExpr                      shift and go to state 81
    FloatLit                       shift and go to state 82
    FalseLit                       shift and go to state 72
    IntLit                         shift and go to state 74
    Literal                        shift and go to state 73
    ExpressionList                 shift and go to state 232
    PrimaryExpr                    shift and go to state 83
    StringLit                      shift and go to state 94
    Expression                     shift and go to state 88

state 196

    (195) SwitchStmt -> ExprSwitchStmt .

    SEMICOLON       reduce using rule 195 (SwitchStmt -> ExprSwitchStmt .)


state 197

    (191) ShortVarDecl -> IdentifierList . DEFINE ExpressionList

    DEFINE          shift and go to state 233


state 198

    (156) Statement -> GotoStmt .

    SEMICOLON       reduce using rule 156 (Statement -> GotoStmt .)


state 199

    (204) ForStmt -> FOR . OpenS OpenF Expression Block CloseF CloseS
    (205) ForStmt -> FOR . OpenS OpenF ForClause Block CloseF CloseS
    (206) ForStmt -> FOR . OpenS OpenF Block CloseF CloseS
    (2) OpenS -> .

    LBRACE          reduce using rule 2 (OpenS -> .)
    ID              reduce using rule 2 (OpenS -> .)
    LPAREN          reduce using rule 2 (OpenS -> .)
    ADD             reduce using rule 2 (OpenS -> .)
    SUB             reduce using rule 2 (OpenS -> .)
    NOT             reduce using rule 2 (OpenS -> .)
    XOR             reduce using rule 2 (OpenS -> .)
    MUL             reduce using rule 2 (OpenS -> .)
    AND             reduce using rule 2 (OpenS -> .)
    INT             reduce using rule 2 (OpenS -> .)
    FLOAT           reduce using rule 2 (OpenS -> .)
    RUNE            reduce using rule 2 (OpenS -> .)
    STRING          reduce using rule 2 (OpenS -> .)
    TRUE            reduce using rule 2 (OpenS -> .)
    FALSE           reduce using rule 2 (OpenS -> .)
    SEMICOLON       reduce using rule 2 (OpenS -> .)

    OpenS                          shift and go to state 234

state 200

    (151) Statement -> LabelledStmt .

    SEMICOLON       reduce using rule 151 (Statement -> LabelledStmt .)


state 201

    (160) Statement -> SwitchStmt .

    SEMICOLON       reduce using rule 160 (Statement -> SwitchStmt .)


state 202

    (187) ContinueStmt -> CONTINUE . ID
    (188) ContinueStmt -> CONTINUE .

    ID              shift and go to state 235
    SEMICOLON       reduce using rule 188 (ContinueStmt -> CONTINUE .)


state 203

    (190) FallthroughStmt -> FALLTHROUGH .

    SEMICOLON       reduce using rule 190 (FallthroughStmt -> FALLTHROUGH .)


state 204

    (182) LabelledStmt -> ID . COLON Statement
    (28) IdentifierList -> ID .
    (29) IdentifierList -> ID . COMMA IdentifierList
    (121) PrimaryExpr -> ID .

    COLON           shift and go to state 236
    DEFINE          reduce using rule 28 (IdentifierList -> ID .)
    COMMA           shift and go to state 42
    DOT             reduce using rule 121 (PrimaryExpr -> ID .)
    LBRACK          reduce using rule 121 (PrimaryExpr -> ID .)
    LPAREN          reduce using rule 121 (PrimaryExpr -> ID .)
    INC             reduce using rule 121 (PrimaryExpr -> ID .)
    DEC             reduce using rule 121 (PrimaryExpr -> ID .)
    LOR             reduce using rule 121 (PrimaryExpr -> ID .)
    LAND            reduce using rule 121 (PrimaryExpr -> ID .)
    EQL             reduce using rule 121 (PrimaryExpr -> ID .)
    NEQ             reduce using rule 121 (PrimaryExpr -> ID .)
    LTN             reduce using rule 121 (PrimaryExpr -> ID .)
    LEQ             reduce using rule 121 (PrimaryExpr -> ID .)
    GTN             reduce using rule 121 (PrimaryExpr -> ID .)
    GEQ             reduce using rule 121 (PrimaryExpr -> ID .)
    ADD             reduce using rule 121 (PrimaryExpr -> ID .)
    SUB             reduce using rule 121 (PrimaryExpr -> ID .)
    OR              reduce using rule 121 (PrimaryExpr -> ID .)
    XOR             reduce using rule 121 (PrimaryExpr -> ID .)
    MUL             reduce using rule 121 (PrimaryExpr -> ID .)
    DIV             reduce using rule 121 (PrimaryExpr -> ID .)
    MOD             reduce using rule 121 (PrimaryExpr -> ID .)
    SHL             reduce using rule 121 (PrimaryExpr -> ID .)
    SHR             reduce using rule 121 (PrimaryExpr -> ID .)
    AND             reduce using rule 121 (PrimaryExpr -> ID .)
    AND_NOT         reduce using rule 121 (PrimaryExpr -> ID .)
    SEMICOLON       reduce using rule 121 (PrimaryExpr -> ID .)
    ADD_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    SUB_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    MUL_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    DIV_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    MOD_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    AND_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    AND_NOT_ASSIGN  reduce using rule 121 (PrimaryExpr -> ID .)
    OR_ASSIGN       reduce using rule 121 (PrimaryExpr -> ID .)
    XOR_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    SHL_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    SHR_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    ASSIGN          reduce using rule 121 (PrimaryExpr -> ID .)

  ! COMMA           [ reduce using rule 121 (PrimaryExpr -> ID .) ]


state 205

    (196) ExprSwitchStmt -> SWITCH . ExpressionName LBRACE OpenW ExprCaseClause_curl CloseW RBRACE
    (197) ExpressionName -> . Expression
    (88) Expression -> . UnaryExpr
    (89) Expression -> . Expression BinaryOp UnaryExpr
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (137) Literal -> . BasicLit
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    ID              shift and go to state 89
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    TrueLit                        shift and go to state 96
    RuneLit                        shift and go to state 87
    FloatLit                       shift and go to state 82
    UnaryOp                        shift and go to state 71
    BasicLit                       shift and go to state 77
    ExpressionName                 shift and go to state 237
    UnaryExpr                      shift and go to state 81
    FalseLit                       shift and go to state 72
    IntLit                         shift and go to state 74
    Literal                        shift and go to state 73
    PrimaryExpr                    shift and go to state 83
    StringLit                      shift and go to state 94
    Expression                     shift and go to state 238

state 206

    (150) Statement -> Declaration .

    SEMICOLON       reduce using rule 150 (Statement -> Declaration .)


state 207

    (169) Assignment -> ExpressionList . AssignOp ExpressionList
    (31) ExpressionList -> ExpressionList . COMMA Expression
    (170) AssignOp -> . ADD_ASSIGN
    (171) AssignOp -> . SUB_ASSIGN
    (172) AssignOp -> . MUL_ASSIGN
    (173) AssignOp -> . DIV_ASSIGN
    (174) AssignOp -> . MOD_ASSIGN
    (175) AssignOp -> . AND_ASSIGN
    (176) AssignOp -> . AND_NOT_ASSIGN
    (177) AssignOp -> . OR_ASSIGN
    (178) AssignOp -> . XOR_ASSIGN
    (179) AssignOp -> . SHL_ASSIGN
    (180) AssignOp -> . SHR_ASSIGN
    (181) AssignOp -> . ASSIGN

    COMMA           shift and go to state 127
    ADD_ASSIGN      shift and go to state 250
    SUB_ASSIGN      shift and go to state 239
    MUL_ASSIGN      shift and go to state 241
    DIV_ASSIGN      shift and go to state 249
    MOD_ASSIGN      shift and go to state 246
    AND_ASSIGN      shift and go to state 248
    AND_NOT_ASSIGN  shift and go to state 251
    OR_ASSIGN       shift and go to state 245
    XOR_ASSIGN      shift and go to state 242
    SHL_ASSIGN      shift and go to state 247
    SHR_ASSIGN      shift and go to state 244
    ASSIGN          shift and go to state 243

    AssignOp                       shift and go to state 240

state 208

    (162) SimpleStmt -> Expression .
    (89) Expression -> Expression . BinaryOp UnaryExpr
    (167) IncDecStmt -> Expression . INC
    (168) IncDecStmt -> Expression . DEC
    (30) ExpressionList -> Expression .
    (92) BinaryOp -> . LOR
    (93) BinaryOp -> . LAND
    (94) BinaryOp -> . RelOp
    (95) BinaryOp -> . AddOp
    (96) BinaryOp -> . MulOp
    (97) RelOp -> . EQL
    (98) RelOp -> . NEQ
    (99) RelOp -> . LTN
    (100) RelOp -> . LEQ
    (101) RelOp -> . GTN
    (102) RelOp -> . GEQ
    (103) AddOp -> . ADD
    (104) AddOp -> . SUB
    (105) AddOp -> . OR
    (106) AddOp -> . XOR
    (107) MulOp -> . MUL
    (108) MulOp -> . DIV
    (109) MulOp -> . MOD
    (110) MulOp -> . SHL
    (111) MulOp -> . SHR
    (112) MulOp -> . AND
    (113) MulOp -> . AND_NOT

    LBRACE          reduce using rule 162 (SimpleStmt -> Expression .)
    SEMICOLON       reduce using rule 162 (SimpleStmt -> Expression .)
    INC             shift and go to state 253
    DEC             shift and go to state 252
    COMMA           reduce using rule 30 (ExpressionList -> Expression .)
    ADD_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    SUB_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    MUL_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    DIV_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    MOD_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    AND_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    AND_NOT_ASSIGN  reduce using rule 30 (ExpressionList -> Expression .)
    OR_ASSIGN       reduce using rule 30 (ExpressionList -> Expression .)
    XOR_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    SHL_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    SHR_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    ASSIGN          reduce using rule 30 (ExpressionList -> Expression .)
    LOR             shift and go to state 130
    LAND            shift and go to state 135
    EQL             shift and go to state 144
    NEQ             shift and go to state 133
    LTN             shift and go to state 146
    LEQ             shift and go to state 149
    GTN             shift and go to state 142
    GEQ             shift and go to state 134
    ADD             shift and go to state 143
    SUB             shift and go to state 129
    OR              shift and go to state 150
    XOR             shift and go to state 140
    MUL             shift and go to state 131
    DIV             shift and go to state 132
    MOD             shift and go to state 151
    SHL             shift and go to state 145
    SHR             shift and go to state 139
    AND             shift and go to state 147
    AND_NOT         shift and go to state 136

    AddOp                          shift and go to state 138
    BinaryOp                       shift and go to state 137
    MulOp                          shift and go to state 141
    RelOp                          shift and go to state 148

state 209

    (185) BreakStmt -> BREAK . ID
    (186) BreakStmt -> BREAK .

    ID              shift and go to state 254
    SEMICOLON       reduce using rule 186 (BreakStmt -> BREAK .)


state 210

    (153) Statement -> ReturnStmt .

    SEMICOLON       reduce using rule 153 (Statement -> ReturnStmt .)


state 211

    (157) Statement -> FallthroughStmt .

    SEMICOLON       reduce using rule 157 (Statement -> FallthroughStmt .)


state 212

    (152) Statement -> SimpleStmt .

    SEMICOLON       reduce using rule 152 (Statement -> SimpleStmt .)


state 213

    (161) Statement -> ForStmt .

    SEMICOLON       reduce using rule 161 (Statement -> ForStmt .)


state 214

    (165) SimpleStmt -> ShortVarDecl .

    LBRACE          reduce using rule 165 (SimpleStmt -> ShortVarDecl .)
    SEMICOLON       reduce using rule 165 (SimpleStmt -> ShortVarDecl .)


state 215

    (192) IfStmt -> IF . OpenS Expression Block CloseS
    (193) IfStmt -> IF . OpenS Expression Block CloseS ELSE IfStmt
    (194) IfStmt -> IF . OpenS Expression Block CloseS ELSE OpenS Block CloseS
    (2) OpenS -> .

    ID              reduce using rule 2 (OpenS -> .)
    LPAREN          reduce using rule 2 (OpenS -> .)
    ADD             reduce using rule 2 (OpenS -> .)
    SUB             reduce using rule 2 (OpenS -> .)
    NOT             reduce using rule 2 (OpenS -> .)
    XOR             reduce using rule 2 (OpenS -> .)
    MUL             reduce using rule 2 (OpenS -> .)
    AND             reduce using rule 2 (OpenS -> .)
    INT             reduce using rule 2 (OpenS -> .)
    FLOAT           reduce using rule 2 (OpenS -> .)
    RUNE            reduce using rule 2 (OpenS -> .)
    STRING          reduce using rule 2 (OpenS -> .)
    TRUE            reduce using rule 2 (OpenS -> .)
    FALSE           reduce using rule 2 (OpenS -> .)

    OpenS                          shift and go to state 255

state 216

    (154) Statement -> BreakStmt .

    SEMICOLON       reduce using rule 154 (Statement -> BreakStmt .)


state 217

    (84) Block -> LBRACE StatementList RBRACE .

    SEMICOLON       reduce using rule 84 (Block -> LBRACE StatementList RBRACE .)
    ELSE            reduce using rule 84 (Block -> LBRACE StatementList RBRACE .)


state 218

    (131) Slice -> LBRACK COLON RBRACK .

    DOT             reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    LBRACK          reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    LPAREN          reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    LOR             reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    LAND            reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    EQL             reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    NEQ             reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    LTN             reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    LEQ             reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    GTN             reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    GEQ             reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    ADD             reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    SUB             reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    OR              reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    XOR             reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    MUL             reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    DIV             reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    MOD             reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    SHL             reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    SHR             reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    AND             reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    AND_NOT         reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    COMMA           reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    SEMICOLON       reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    RPAREN          reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    RBRACK          reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    COLON           reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    ADD_ASSIGN      reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    SUB_ASSIGN      reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    MUL_ASSIGN      reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    DIV_ASSIGN      reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    MOD_ASSIGN      reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    AND_ASSIGN      reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    OR_ASSIGN       reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    XOR_ASSIGN      reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    SHL_ASSIGN      reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    SHR_ASSIGN      reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    ASSIGN          reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    LBRACE          reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    INC             reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)
    DEC             reduce using rule 131 (Slice -> LBRACK COLON RBRACK .)


state 219

    (129) Slice -> LBRACK COLON Expression . RBRACK
    (133) Slice -> LBRACK COLON Expression . COLON Expression RBRACK
    (89) Expression -> Expression . BinaryOp UnaryExpr
    (92) BinaryOp -> . LOR
    (93) BinaryOp -> . LAND
    (94) BinaryOp -> . RelOp
    (95) BinaryOp -> . AddOp
    (96) BinaryOp -> . MulOp
    (97) RelOp -> . EQL
    (98) RelOp -> . NEQ
    (99) RelOp -> . LTN
    (100) RelOp -> . LEQ
    (101) RelOp -> . GTN
    (102) RelOp -> . GEQ
    (103) AddOp -> . ADD
    (104) AddOp -> . SUB
    (105) AddOp -> . OR
    (106) AddOp -> . XOR
    (107) MulOp -> . MUL
    (108) MulOp -> . DIV
    (109) MulOp -> . MOD
    (110) MulOp -> . SHL
    (111) MulOp -> . SHR
    (112) MulOp -> . AND
    (113) MulOp -> . AND_NOT

    RBRACK          shift and go to state 257
    COLON           shift and go to state 256
    LOR             shift and go to state 130
    LAND            shift and go to state 135
    EQL             shift and go to state 144
    NEQ             shift and go to state 133
    LTN             shift and go to state 146
    LEQ             shift and go to state 149
    GTN             shift and go to state 142
    GEQ             shift and go to state 134
    ADD             shift and go to state 143
    SUB             shift and go to state 129
    OR              shift and go to state 150
    XOR             shift and go to state 140
    MUL             shift and go to state 131
    DIV             shift and go to state 132
    MOD             shift and go to state 151
    SHL             shift and go to state 145
    SHR             shift and go to state 139
    AND             shift and go to state 147
    AND_NOT         shift and go to state 136

    AddOp                          shift and go to state 138
    BinaryOp                       shift and go to state 137
    MulOp                          shift and go to state 141
    RelOp                          shift and go to state 148

state 220

    (128) Slice -> LBRACK Expression COLON . Expression RBRACK
    (130) Slice -> LBRACK Expression COLON . RBRACK
    (132) Slice -> LBRACK Expression COLON . Expression COLON Expression RBRACK
    (88) Expression -> . UnaryExpr
    (89) Expression -> . Expression BinaryOp UnaryExpr
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (137) Literal -> . BasicLit
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    RBRACK          shift and go to state 258
    ID              shift and go to state 89
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    RuneLit                        shift and go to state 87
    UnaryOp                        shift and go to state 71
    TrueLit                        shift and go to state 96
    BasicLit                       shift and go to state 77
    UnaryExpr                      shift and go to state 81
    FloatLit                       shift and go to state 82
    FalseLit                       shift and go to state 72
    IntLit                         shift and go to state 74
    Literal                        shift and go to state 73
    PrimaryExpr                    shift and go to state 83
    StringLit                      shift and go to state 94
    Expression                     shift and go to state 259

state 221

    (127) Index -> LBRACK Expression RBRACK .

    DOT             reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    LBRACK          reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    LPAREN          reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    LOR             reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    LAND            reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    EQL             reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    NEQ             reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    LTN             reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    LEQ             reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    GTN             reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    GEQ             reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    ADD             reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    SUB             reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    OR              reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    XOR             reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    MUL             reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    DIV             reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    MOD             reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    SHL             reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    SHR             reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    AND             reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    AND_NOT         reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    COMMA           reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    SEMICOLON       reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    COLON           reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    DIV_ASSIGN      reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    MOD_ASSIGN      reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    AND_ASSIGN      reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    OR_ASSIGN       reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    SHL_ASSIGN      reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    SHR_ASSIGN      reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    ASSIGN          reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    LBRACE          reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    INC             reduce using rule 127 (Index -> LBRACK Expression RBRACK .)
    DEC             reduce using rule 127 (Index -> LBRACK Expression RBRACK .)


state 222

    (135) Arguments -> LPAREN ExpressionList RPAREN .

    DOT             reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    LBRACK          reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    LPAREN          reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    LOR             reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    LAND            reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    EQL             reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    NEQ             reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    LTN             reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    LEQ             reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    GTN             reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    GEQ             reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    ADD             reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    SUB             reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    OR              reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    XOR             reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    MUL             reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    DIV             reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    MOD             reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHL             reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHR             reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    AND             reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    AND_NOT         reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    COMMA           reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    SEMICOLON       reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    RPAREN          reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    RBRACK          reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    COLON           reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    ADD_ASSIGN      reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    SUB_ASSIGN      reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    MUL_ASSIGN      reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    DIV_ASSIGN      reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    MOD_ASSIGN      reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    AND_ASSIGN      reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    OR_ASSIGN       reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    XOR_ASSIGN      reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHL_ASSIGN      reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHR_ASSIGN      reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    ASSIGN          reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    LBRACE          reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    INC             reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)
    DEC             reduce using rule 135 (Arguments -> LPAREN ExpressionList RPAREN .)


state 223

    (136) Arguments -> LPAREN ExpressionList COMMA . RPAREN
    (31) ExpressionList -> ExpressionList COMMA . Expression
    (88) Expression -> . UnaryExpr
    (89) Expression -> . Expression BinaryOp UnaryExpr
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (137) Literal -> . BasicLit
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    RPAREN          shift and go to state 260
    ID              shift and go to state 89
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    RuneLit                        shift and go to state 87
    UnaryOp                        shift and go to state 71
    TrueLit                        shift and go to state 96
    BasicLit                       shift and go to state 77
    UnaryExpr                      shift and go to state 81
    FloatLit                       shift and go to state 82
    FalseLit                       shift and go to state 72
    IntLit                         shift and go to state 74
    Literal                        shift and go to state 73
    PrimaryExpr                    shift and go to state 83
    StringLit                      shift and go to state 94
    Expression                     shift and go to state 178

state 224

    (56) FieldDecl_curl -> FieldDecl_curl FieldDecl . SEMICOLON

    SEMICOLON       shift and go to state 261


state 225

    (58) FieldDecl -> ID . COMMA IdentifierList Type
    (59) FieldDecl -> ID . COMMA IdentifierList ID
    (60) FieldDecl -> ID . Type
    (61) FieldDecl -> ID . ID
    (62) FieldDecl -> ID . STRUCT MUL ID
    (63) FieldDecl -> ID . COMMA IdentifierList STRUCT MUL ID
    (45) Type -> . LPAREN Type RPAREN
    (46) Type -> . LPAREN ID RPAREN
    (47) Type -> . TypeLit
    (48) TypeLit -> . ArrayType
    (49) TypeLit -> . PointerType
    (50) TypeLit -> . SliceType
    (51) ArrayType -> . LBRACK INT RBRACK Type
    (52) ArrayType -> . LBRACK INT RBRACK ID
    (64) PointerType -> . MUL Type
    (65) PointerType -> . MUL ID
    (53) SliceType -> . LBRACK RBRACK Type
    (54) SliceType -> . LBRACK RBRACK ID

    COMMA           shift and go to state 263
    ID              shift and go to state 265
    STRUCT          shift and go to state 262
    LPAREN          shift and go to state 49
    LBRACK          shift and go to state 46
    MUL             shift and go to state 51

    Type                           shift and go to state 264
    ArrayType                      shift and go to state 47
    PointerType                    shift and go to state 50
    TypeLit                        shift and go to state 45
    SliceType                      shift and go to state 54

state 226

    (55) StructType -> STRUCT OpenStructS LBRACE FieldDecl_curl RBRACE . CloseStructS
    (5) CloseStructS -> .

    SEMICOLON       reduce using rule 5 (CloseStructS -> .)

    CloseStructS                   shift and go to state 266

state 227

    (72) TypeList -> TypeList COMMA Type .

    RPAREN          reduce using rule 72 (TypeList -> TypeList COMMA Type .)
    COMMA           reduce using rule 72 (TypeList -> TypeList COMMA Type .)


state 228

    (71) TypeList -> TypeList COMMA ID .

    RPAREN          reduce using rule 71 (TypeList -> TypeList COMMA ID .)
    COMMA           reduce using rule 71 (TypeList -> TypeList COMMA ID .)


state 229

    (86) Statement_curl -> Statement_curl Statement SEMICOLON .

    ID              reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    RETURN          reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    BREAK           reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    CONTINUE        reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    GOTO            reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    FALLTHROUGH     reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    IF              reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    FOR             reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    CONST           reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    TYPE            reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    VAR             reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    SWITCH          reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    LPAREN          reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    ADD             reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    SUB             reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    NOT             reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    XOR             reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    MUL             reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    AND             reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    INT             reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    FLOAT           reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    RUNE            reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    STRING          reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    TRUE            reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    FALSE           reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    SEMICOLON       reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    LBRACE          reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    RBRACE          reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    CASE            reduce using rule 86 (Statement_curl -> Statement_curl Statement SEMICOLON .)


state 230

    (159) Statement -> OpenS Block . CloseS
    (3) CloseS -> .

    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 267

state 231

    (189) GotoStmt -> GOTO ID .

    SEMICOLON       reduce using rule 189 (GotoStmt -> GOTO ID .)


state 232

    (183) ReturnStmt -> RETURN ExpressionList .
    (31) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 183 (ReturnStmt -> RETURN ExpressionList .)
    COMMA           shift and go to state 127


state 233

    (191) ShortVarDecl -> IdentifierList DEFINE . ExpressionList
    (30) ExpressionList -> . Expression
    (31) ExpressionList -> . ExpressionList COMMA Expression
    (88) Expression -> . UnaryExpr
    (89) Expression -> . Expression BinaryOp UnaryExpr
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (137) Literal -> . BasicLit
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    ID              shift and go to state 89
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    RuneLit                        shift and go to state 87
    UnaryOp                        shift and go to state 71
    TrueLit                        shift and go to state 96
    BasicLit                       shift and go to state 77
    UnaryExpr                      shift and go to state 81
    FloatLit                       shift and go to state 82
    FalseLit                       shift and go to state 72
    IntLit                         shift and go to state 74
    Literal                        shift and go to state 73
    ExpressionList                 shift and go to state 268
    PrimaryExpr                    shift and go to state 83
    StringLit                      shift and go to state 94
    Expression                     shift and go to state 88

state 234

    (204) ForStmt -> FOR OpenS . OpenF Expression Block CloseF CloseS
    (205) ForStmt -> FOR OpenS . OpenF ForClause Block CloseF CloseS
    (206) ForStmt -> FOR OpenS . OpenF Block CloseF CloseS
    (207) OpenF -> .

    LBRACE          reduce using rule 207 (OpenF -> .)
    ID              reduce using rule 207 (OpenF -> .)
    LPAREN          reduce using rule 207 (OpenF -> .)
    ADD             reduce using rule 207 (OpenF -> .)
    SUB             reduce using rule 207 (OpenF -> .)
    NOT             reduce using rule 207 (OpenF -> .)
    XOR             reduce using rule 207 (OpenF -> .)
    MUL             reduce using rule 207 (OpenF -> .)
    AND             reduce using rule 207 (OpenF -> .)
    INT             reduce using rule 207 (OpenF -> .)
    FLOAT           reduce using rule 207 (OpenF -> .)
    RUNE            reduce using rule 207 (OpenF -> .)
    STRING          reduce using rule 207 (OpenF -> .)
    TRUE            reduce using rule 207 (OpenF -> .)
    FALSE           reduce using rule 207 (OpenF -> .)
    SEMICOLON       reduce using rule 207 (OpenF -> .)

    OpenF                          shift and go to state 269

state 235

    (187) ContinueStmt -> CONTINUE ID .

    SEMICOLON       reduce using rule 187 (ContinueStmt -> CONTINUE ID .)


state 236

    (182) LabelledStmt -> ID COLON . Statement
    (150) Statement -> . Declaration
    (151) Statement -> . LabelledStmt
    (152) Statement -> . SimpleStmt
    (153) Statement -> . ReturnStmt
    (154) Statement -> . BreakStmt
    (155) Statement -> . ContinueStmt
    (156) Statement -> . GotoStmt
    (157) Statement -> . FallthroughStmt
    (158) Statement -> . IfStmt
    (159) Statement -> . OpenS Block CloseS
    (160) Statement -> . SwitchStmt
    (161) Statement -> . ForStmt
    (20) Declaration -> . ConstDecl
    (21) Declaration -> . StructDecl
    (22) Declaration -> . VarDecl
    (182) LabelledStmt -> . ID COLON Statement
    (162) SimpleStmt -> . Expression
    (163) SimpleStmt -> . IncDecStmt
    (164) SimpleStmt -> . Assignment
    (165) SimpleStmt -> . ShortVarDecl
    (166) SimpleStmt -> .
    (183) ReturnStmt -> . RETURN ExpressionList
    (184) ReturnStmt -> . RETURN
    (185) BreakStmt -> . BREAK ID
    (186) BreakStmt -> . BREAK
    (187) ContinueStmt -> . CONTINUE ID
    (188) ContinueStmt -> . CONTINUE
    (189) GotoStmt -> . GOTO ID
    (190) FallthroughStmt -> . FALLTHROUGH
    (192) IfStmt -> . IF OpenS Expression Block CloseS
    (193) IfStmt -> . IF OpenS Expression Block CloseS ELSE IfStmt
    (194) IfStmt -> . IF OpenS Expression Block CloseS ELSE OpenS Block CloseS
    (2) OpenS -> .
    (195) SwitchStmt -> . ExprSwitchStmt
    (204) ForStmt -> . FOR OpenS OpenF Expression Block CloseF CloseS
    (205) ForStmt -> . FOR OpenS OpenF ForClause Block CloseF CloseS
    (206) ForStmt -> . FOR OpenS OpenF Block CloseF CloseS
    (23) ConstDecl -> . CONST ConstSpec
    (24) ConstDecl -> . CONST LPAREN ConstSpec_curl RPAREN
    (32) StructDecl -> . TYPE StructName StructType
    (34) VarDecl -> . VAR VarSpec
    (35) VarDecl -> . VAR LPAREN VarSpec_curl RPAREN
    (88) Expression -> . UnaryExpr
    (89) Expression -> . Expression BinaryOp UnaryExpr
    (167) IncDecStmt -> . Expression INC
    (168) IncDecStmt -> . Expression DEC
    (169) Assignment -> . ExpressionList AssignOp ExpressionList
    (191) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (196) ExprSwitchStmt -> . SWITCH ExpressionName LBRACE OpenW ExprCaseClause_curl CloseW RBRACE
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (30) ExpressionList -> . Expression
    (31) ExpressionList -> . ExpressionList COMMA Expression
    (28) IdentifierList -> . ID
    (29) IdentifierList -> . ID COMMA IdentifierList
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (137) Literal -> . BasicLit
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    ID              shift and go to state 204
    SEMICOLON       reduce using rule 166 (SimpleStmt -> .)
    RETURN          shift and go to state 195
    BREAK           shift and go to state 209
    CONTINUE        shift and go to state 202
    GOTO            shift and go to state 194
    FALLTHROUGH     shift and go to state 203
    IF              shift and go to state 215
    LBRACE          reduce using rule 2 (OpenS -> .)
    FOR             shift and go to state 199
    CONST           shift and go to state 10
    TYPE            shift and go to state 19
    VAR             shift and go to state 16
    SWITCH          shift and go to state 205
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    UnaryOp                        shift and go to state 71
    ContinueStmt                   shift and go to state 188
    SimpleStmt                     shift and go to state 212
    FalseLit                       shift and go to state 72
    Literal                        shift and go to state 73
    ForStmt                        shift and go to state 213
    ExprSwitchStmt                 shift and go to state 196
    Statement                      shift and go to state 270
    IdentifierList                 shift and go to state 197
    IntLit                         shift and go to state 74
    IfStmt                         shift and go to state 190
    RuneLit                        shift and go to state 87
    Assignment                     shift and go to state 191
    IncDecStmt                     shift and go to state 192
    Declaration                    shift and go to state 206
    OpenS                          shift and go to state 193
    GotoStmt                       shift and go to state 198
    UnaryExpr                      shift and go to state 81
    FloatLit                       shift and go to state 82
    StructDecl                     shift and go to state 11
    ExpressionList                 shift and go to state 207
    LabelledStmt                   shift and go to state 200
    Expression                     shift and go to state 208
    ShortVarDecl                   shift and go to state 214
    TrueLit                        shift and go to state 96
    BreakStmt                      shift and go to state 216
    SwitchStmt                     shift and go to state 201
    StringLit                      shift and go to state 94
    VarDecl                        shift and go to state 18
    BasicLit                       shift and go to state 77
    PrimaryExpr                    shift and go to state 83
    ReturnStmt                     shift and go to state 210
    ConstDecl                      shift and go to state 17
    FallthroughStmt                shift and go to state 211

state 237

    (196) ExprSwitchStmt -> SWITCH ExpressionName . LBRACE OpenW ExprCaseClause_curl CloseW RBRACE

    LBRACE          shift and go to state 271


state 238

    (197) ExpressionName -> Expression .
    (89) Expression -> Expression . BinaryOp UnaryExpr
    (92) BinaryOp -> . LOR
    (93) BinaryOp -> . LAND
    (94) BinaryOp -> . RelOp
    (95) BinaryOp -> . AddOp
    (96) BinaryOp -> . MulOp
    (97) RelOp -> . EQL
    (98) RelOp -> . NEQ
    (99) RelOp -> . LTN
    (100) RelOp -> . LEQ
    (101) RelOp -> . GTN
    (102) RelOp -> . GEQ
    (103) AddOp -> . ADD
    (104) AddOp -> . SUB
    (105) AddOp -> . OR
    (106) AddOp -> . XOR
    (107) MulOp -> . MUL
    (108) MulOp -> . DIV
    (109) MulOp -> . MOD
    (110) MulOp -> . SHL
    (111) MulOp -> . SHR
    (112) MulOp -> . AND
    (113) MulOp -> . AND_NOT

    LBRACE          reduce using rule 197 (ExpressionName -> Expression .)
    LOR             shift and go to state 130
    LAND            shift and go to state 135
    EQL             shift and go to state 144
    NEQ             shift and go to state 133
    LTN             shift and go to state 146
    LEQ             shift and go to state 149
    GTN             shift and go to state 142
    GEQ             shift and go to state 134
    ADD             shift and go to state 143
    SUB             shift and go to state 129
    OR              shift and go to state 150
    XOR             shift and go to state 140
    MUL             shift and go to state 131
    DIV             shift and go to state 132
    MOD             shift and go to state 151
    SHL             shift and go to state 145
    SHR             shift and go to state 139
    AND             shift and go to state 147
    AND_NOT         shift and go to state 136

    AddOp                          shift and go to state 138
    BinaryOp                       shift and go to state 137
    MulOp                          shift and go to state 141
    RelOp                          shift and go to state 148

state 239

    (171) AssignOp -> SUB_ASSIGN .

    ID              reduce using rule 171 (AssignOp -> SUB_ASSIGN .)
    LPAREN          reduce using rule 171 (AssignOp -> SUB_ASSIGN .)
    ADD             reduce using rule 171 (AssignOp -> SUB_ASSIGN .)
    SUB             reduce using rule 171 (AssignOp -> SUB_ASSIGN .)
    NOT             reduce using rule 171 (AssignOp -> SUB_ASSIGN .)
    XOR             reduce using rule 171 (AssignOp -> SUB_ASSIGN .)
    MUL             reduce using rule 171 (AssignOp -> SUB_ASSIGN .)
    AND             reduce using rule 171 (AssignOp -> SUB_ASSIGN .)
    INT             reduce using rule 171 (AssignOp -> SUB_ASSIGN .)
    FLOAT           reduce using rule 171 (AssignOp -> SUB_ASSIGN .)
    RUNE            reduce using rule 171 (AssignOp -> SUB_ASSIGN .)
    STRING          reduce using rule 171 (AssignOp -> SUB_ASSIGN .)
    TRUE            reduce using rule 171 (AssignOp -> SUB_ASSIGN .)
    FALSE           reduce using rule 171 (AssignOp -> SUB_ASSIGN .)


state 240

    (169) Assignment -> ExpressionList AssignOp . ExpressionList
    (30) ExpressionList -> . Expression
    (31) ExpressionList -> . ExpressionList COMMA Expression
    (88) Expression -> . UnaryExpr
    (89) Expression -> . Expression BinaryOp UnaryExpr
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (137) Literal -> . BasicLit
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    ID              shift and go to state 89
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    RuneLit                        shift and go to state 87
    UnaryOp                        shift and go to state 71
    TrueLit                        shift and go to state 96
    BasicLit                       shift and go to state 77
    UnaryExpr                      shift and go to state 81
    FloatLit                       shift and go to state 82
    FalseLit                       shift and go to state 72
    IntLit                         shift and go to state 74
    Literal                        shift and go to state 73
    ExpressionList                 shift and go to state 272
    PrimaryExpr                    shift and go to state 83
    StringLit                      shift and go to state 94
    Expression                     shift and go to state 88

state 241

    (172) AssignOp -> MUL_ASSIGN .

    ID              reduce using rule 172 (AssignOp -> MUL_ASSIGN .)
    LPAREN          reduce using rule 172 (AssignOp -> MUL_ASSIGN .)
    ADD             reduce using rule 172 (AssignOp -> MUL_ASSIGN .)
    SUB             reduce using rule 172 (AssignOp -> MUL_ASSIGN .)
    NOT             reduce using rule 172 (AssignOp -> MUL_ASSIGN .)
    XOR             reduce using rule 172 (AssignOp -> MUL_ASSIGN .)
    MUL             reduce using rule 172 (AssignOp -> MUL_ASSIGN .)
    AND             reduce using rule 172 (AssignOp -> MUL_ASSIGN .)
    INT             reduce using rule 172 (AssignOp -> MUL_ASSIGN .)
    FLOAT           reduce using rule 172 (AssignOp -> MUL_ASSIGN .)
    RUNE            reduce using rule 172 (AssignOp -> MUL_ASSIGN .)
    STRING          reduce using rule 172 (AssignOp -> MUL_ASSIGN .)
    TRUE            reduce using rule 172 (AssignOp -> MUL_ASSIGN .)
    FALSE           reduce using rule 172 (AssignOp -> MUL_ASSIGN .)


state 242

    (178) AssignOp -> XOR_ASSIGN .

    ID              reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    LPAREN          reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    ADD             reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    SUB             reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    NOT             reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    XOR             reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    MUL             reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    AND             reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    INT             reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    FLOAT           reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    RUNE            reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    STRING          reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    TRUE            reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    FALSE           reduce using rule 178 (AssignOp -> XOR_ASSIGN .)


state 243

    (181) AssignOp -> ASSIGN .

    ID              reduce using rule 181 (AssignOp -> ASSIGN .)
    LPAREN          reduce using rule 181 (AssignOp -> ASSIGN .)
    ADD             reduce using rule 181 (AssignOp -> ASSIGN .)
    SUB             reduce using rule 181 (AssignOp -> ASSIGN .)
    NOT             reduce using rule 181 (AssignOp -> ASSIGN .)
    XOR             reduce using rule 181 (AssignOp -> ASSIGN .)
    MUL             reduce using rule 181 (AssignOp -> ASSIGN .)
    AND             reduce using rule 181 (AssignOp -> ASSIGN .)
    INT             reduce using rule 181 (AssignOp -> ASSIGN .)
    FLOAT           reduce using rule 181 (AssignOp -> ASSIGN .)
    RUNE            reduce using rule 181 (AssignOp -> ASSIGN .)
    STRING          reduce using rule 181 (AssignOp -> ASSIGN .)
    TRUE            reduce using rule 181 (AssignOp -> ASSIGN .)
    FALSE           reduce using rule 181 (AssignOp -> ASSIGN .)


state 244

    (180) AssignOp -> SHR_ASSIGN .

    ID              reduce using rule 180 (AssignOp -> SHR_ASSIGN .)
    LPAREN          reduce using rule 180 (AssignOp -> SHR_ASSIGN .)
    ADD             reduce using rule 180 (AssignOp -> SHR_ASSIGN .)
    SUB             reduce using rule 180 (AssignOp -> SHR_ASSIGN .)
    NOT             reduce using rule 180 (AssignOp -> SHR_ASSIGN .)
    XOR             reduce using rule 180 (AssignOp -> SHR_ASSIGN .)
    MUL             reduce using rule 180 (AssignOp -> SHR_ASSIGN .)
    AND             reduce using rule 180 (AssignOp -> SHR_ASSIGN .)
    INT             reduce using rule 180 (AssignOp -> SHR_ASSIGN .)
    FLOAT           reduce using rule 180 (AssignOp -> SHR_ASSIGN .)
    RUNE            reduce using rule 180 (AssignOp -> SHR_ASSIGN .)
    STRING          reduce using rule 180 (AssignOp -> SHR_ASSIGN .)
    TRUE            reduce using rule 180 (AssignOp -> SHR_ASSIGN .)
    FALSE           reduce using rule 180 (AssignOp -> SHR_ASSIGN .)


state 245

    (177) AssignOp -> OR_ASSIGN .

    ID              reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    LPAREN          reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    ADD             reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    SUB             reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    NOT             reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    XOR             reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    MUL             reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    AND             reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    INT             reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    FLOAT           reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    RUNE            reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    STRING          reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    TRUE            reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    FALSE           reduce using rule 177 (AssignOp -> OR_ASSIGN .)


state 246

    (174) AssignOp -> MOD_ASSIGN .

    ID              reduce using rule 174 (AssignOp -> MOD_ASSIGN .)
    LPAREN          reduce using rule 174 (AssignOp -> MOD_ASSIGN .)
    ADD             reduce using rule 174 (AssignOp -> MOD_ASSIGN .)
    SUB             reduce using rule 174 (AssignOp -> MOD_ASSIGN .)
    NOT             reduce using rule 174 (AssignOp -> MOD_ASSIGN .)
    XOR             reduce using rule 174 (AssignOp -> MOD_ASSIGN .)
    MUL             reduce using rule 174 (AssignOp -> MOD_ASSIGN .)
    AND             reduce using rule 174 (AssignOp -> MOD_ASSIGN .)
    INT             reduce using rule 174 (AssignOp -> MOD_ASSIGN .)
    FLOAT           reduce using rule 174 (AssignOp -> MOD_ASSIGN .)
    RUNE            reduce using rule 174 (AssignOp -> MOD_ASSIGN .)
    STRING          reduce using rule 174 (AssignOp -> MOD_ASSIGN .)
    TRUE            reduce using rule 174 (AssignOp -> MOD_ASSIGN .)
    FALSE           reduce using rule 174 (AssignOp -> MOD_ASSIGN .)


state 247

    (179) AssignOp -> SHL_ASSIGN .

    ID              reduce using rule 179 (AssignOp -> SHL_ASSIGN .)
    LPAREN          reduce using rule 179 (AssignOp -> SHL_ASSIGN .)
    ADD             reduce using rule 179 (AssignOp -> SHL_ASSIGN .)
    SUB             reduce using rule 179 (AssignOp -> SHL_ASSIGN .)
    NOT             reduce using rule 179 (AssignOp -> SHL_ASSIGN .)
    XOR             reduce using rule 179 (AssignOp -> SHL_ASSIGN .)
    MUL             reduce using rule 179 (AssignOp -> SHL_ASSIGN .)
    AND             reduce using rule 179 (AssignOp -> SHL_ASSIGN .)
    INT             reduce using rule 179 (AssignOp -> SHL_ASSIGN .)
    FLOAT           reduce using rule 179 (AssignOp -> SHL_ASSIGN .)
    RUNE            reduce using rule 179 (AssignOp -> SHL_ASSIGN .)
    STRING          reduce using rule 179 (AssignOp -> SHL_ASSIGN .)
    TRUE            reduce using rule 179 (AssignOp -> SHL_ASSIGN .)
    FALSE           reduce using rule 179 (AssignOp -> SHL_ASSIGN .)


state 248

    (175) AssignOp -> AND_ASSIGN .

    ID              reduce using rule 175 (AssignOp -> AND_ASSIGN .)
    LPAREN          reduce using rule 175 (AssignOp -> AND_ASSIGN .)
    ADD             reduce using rule 175 (AssignOp -> AND_ASSIGN .)
    SUB             reduce using rule 175 (AssignOp -> AND_ASSIGN .)
    NOT             reduce using rule 175 (AssignOp -> AND_ASSIGN .)
    XOR             reduce using rule 175 (AssignOp -> AND_ASSIGN .)
    MUL             reduce using rule 175 (AssignOp -> AND_ASSIGN .)
    AND             reduce using rule 175 (AssignOp -> AND_ASSIGN .)
    INT             reduce using rule 175 (AssignOp -> AND_ASSIGN .)
    FLOAT           reduce using rule 175 (AssignOp -> AND_ASSIGN .)
    RUNE            reduce using rule 175 (AssignOp -> AND_ASSIGN .)
    STRING          reduce using rule 175 (AssignOp -> AND_ASSIGN .)
    TRUE            reduce using rule 175 (AssignOp -> AND_ASSIGN .)
    FALSE           reduce using rule 175 (AssignOp -> AND_ASSIGN .)


state 249

    (173) AssignOp -> DIV_ASSIGN .

    ID              reduce using rule 173 (AssignOp -> DIV_ASSIGN .)
    LPAREN          reduce using rule 173 (AssignOp -> DIV_ASSIGN .)
    ADD             reduce using rule 173 (AssignOp -> DIV_ASSIGN .)
    SUB             reduce using rule 173 (AssignOp -> DIV_ASSIGN .)
    NOT             reduce using rule 173 (AssignOp -> DIV_ASSIGN .)
    XOR             reduce using rule 173 (AssignOp -> DIV_ASSIGN .)
    MUL             reduce using rule 173 (AssignOp -> DIV_ASSIGN .)
    AND             reduce using rule 173 (AssignOp -> DIV_ASSIGN .)
    INT             reduce using rule 173 (AssignOp -> DIV_ASSIGN .)
    FLOAT           reduce using rule 173 (AssignOp -> DIV_ASSIGN .)
    RUNE            reduce using rule 173 (AssignOp -> DIV_ASSIGN .)
    STRING          reduce using rule 173 (AssignOp -> DIV_ASSIGN .)
    TRUE            reduce using rule 173 (AssignOp -> DIV_ASSIGN .)
    FALSE           reduce using rule 173 (AssignOp -> DIV_ASSIGN .)


state 250

    (170) AssignOp -> ADD_ASSIGN .

    ID              reduce using rule 170 (AssignOp -> ADD_ASSIGN .)
    LPAREN          reduce using rule 170 (AssignOp -> ADD_ASSIGN .)
    ADD             reduce using rule 170 (AssignOp -> ADD_ASSIGN .)
    SUB             reduce using rule 170 (AssignOp -> ADD_ASSIGN .)
    NOT             reduce using rule 170 (AssignOp -> ADD_ASSIGN .)
    XOR             reduce using rule 170 (AssignOp -> ADD_ASSIGN .)
    MUL             reduce using rule 170 (AssignOp -> ADD_ASSIGN .)
    AND             reduce using rule 170 (AssignOp -> ADD_ASSIGN .)
    INT             reduce using rule 170 (AssignOp -> ADD_ASSIGN .)
    FLOAT           reduce using rule 170 (AssignOp -> ADD_ASSIGN .)
    RUNE            reduce using rule 170 (AssignOp -> ADD_ASSIGN .)
    STRING          reduce using rule 170 (AssignOp -> ADD_ASSIGN .)
    TRUE            reduce using rule 170 (AssignOp -> ADD_ASSIGN .)
    FALSE           reduce using rule 170 (AssignOp -> ADD_ASSIGN .)


state 251

    (176) AssignOp -> AND_NOT_ASSIGN .

    ID              reduce using rule 176 (AssignOp -> AND_NOT_ASSIGN .)
    LPAREN          reduce using rule 176 (AssignOp -> AND_NOT_ASSIGN .)
    ADD             reduce using rule 176 (AssignOp -> AND_NOT_ASSIGN .)
    SUB             reduce using rule 176 (AssignOp -> AND_NOT_ASSIGN .)
    NOT             reduce using rule 176 (AssignOp -> AND_NOT_ASSIGN .)
    XOR             reduce using rule 176 (AssignOp -> AND_NOT_ASSIGN .)
    MUL             reduce using rule 176 (AssignOp -> AND_NOT_ASSIGN .)
    AND             reduce using rule 176 (AssignOp -> AND_NOT_ASSIGN .)
    INT             reduce using rule 176 (AssignOp -> AND_NOT_ASSIGN .)
    FLOAT           reduce using rule 176 (AssignOp -> AND_NOT_ASSIGN .)
    RUNE            reduce using rule 176 (AssignOp -> AND_NOT_ASSIGN .)
    STRING          reduce using rule 176 (AssignOp -> AND_NOT_ASSIGN .)
    TRUE            reduce using rule 176 (AssignOp -> AND_NOT_ASSIGN .)
    FALSE           reduce using rule 176 (AssignOp -> AND_NOT_ASSIGN .)


state 252

    (168) IncDecStmt -> Expression DEC .

    SEMICOLON       reduce using rule 168 (IncDecStmt -> Expression DEC .)
    LBRACE          reduce using rule 168 (IncDecStmt -> Expression DEC .)


state 253

    (167) IncDecStmt -> Expression INC .

    SEMICOLON       reduce using rule 167 (IncDecStmt -> Expression INC .)
    LBRACE          reduce using rule 167 (IncDecStmt -> Expression INC .)


state 254

    (185) BreakStmt -> BREAK ID .

    SEMICOLON       reduce using rule 185 (BreakStmt -> BREAK ID .)


state 255

    (192) IfStmt -> IF OpenS . Expression Block CloseS
    (193) IfStmt -> IF OpenS . Expression Block CloseS ELSE IfStmt
    (194) IfStmt -> IF OpenS . Expression Block CloseS ELSE OpenS Block CloseS
    (88) Expression -> . UnaryExpr
    (89) Expression -> . Expression BinaryOp UnaryExpr
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (137) Literal -> . BasicLit
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    ID              shift and go to state 89
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    TrueLit                        shift and go to state 96
    RuneLit                        shift and go to state 87
    UnaryOp                        shift and go to state 71
    BasicLit                       shift and go to state 77
    UnaryExpr                      shift and go to state 81
    FloatLit                       shift and go to state 82
    FalseLit                       shift and go to state 72
    IntLit                         shift and go to state 74
    Literal                        shift and go to state 73
    PrimaryExpr                    shift and go to state 83
    StringLit                      shift and go to state 94
    Expression                     shift and go to state 273

state 256

    (133) Slice -> LBRACK COLON Expression COLON . Expression RBRACK
    (88) Expression -> . UnaryExpr
    (89) Expression -> . Expression BinaryOp UnaryExpr
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (137) Literal -> . BasicLit
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    ID              shift and go to state 89
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    RuneLit                        shift and go to state 87
    UnaryOp                        shift and go to state 71
    TrueLit                        shift and go to state 96
    BasicLit                       shift and go to state 77
    UnaryExpr                      shift and go to state 81
    FloatLit                       shift and go to state 82
    FalseLit                       shift and go to state 72
    IntLit                         shift and go to state 74
    Literal                        shift and go to state 73
    PrimaryExpr                    shift and go to state 83
    StringLit                      shift and go to state 94
    Expression                     shift and go to state 274

state 257

    (129) Slice -> LBRACK COLON Expression RBRACK .

    DOT             reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    LBRACK          reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    LPAREN          reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    LOR             reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    LAND            reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    EQL             reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    NEQ             reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    LTN             reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    LEQ             reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    GTN             reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    GEQ             reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    ADD             reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    SUB             reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    OR              reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    XOR             reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    MUL             reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    DIV             reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    MOD             reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    SHL             reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    SHR             reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    AND             reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    AND_NOT         reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    COMMA           reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    SEMICOLON       reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    RPAREN          reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    RBRACK          reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    COLON           reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    DIV_ASSIGN      reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    MOD_ASSIGN      reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    AND_ASSIGN      reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    OR_ASSIGN       reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    SHL_ASSIGN      reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    SHR_ASSIGN      reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    ASSIGN          reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    LBRACE          reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    INC             reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)
    DEC             reduce using rule 129 (Slice -> LBRACK COLON Expression RBRACK .)


state 258

    (130) Slice -> LBRACK Expression COLON RBRACK .

    DOT             reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    LBRACK          reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    LPAREN          reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    LOR             reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    LAND            reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    EQL             reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    NEQ             reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    LTN             reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    LEQ             reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    GTN             reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    GEQ             reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    ADD             reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    SUB             reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    OR              reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    XOR             reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    MUL             reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    DIV             reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    MOD             reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    SHL             reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    SHR             reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    AND             reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    AND_NOT         reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    COMMA           reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    SEMICOLON       reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    RPAREN          reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    RBRACK          reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    COLON           reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    ADD_ASSIGN      reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    SUB_ASSIGN      reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    MUL_ASSIGN      reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    DIV_ASSIGN      reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    MOD_ASSIGN      reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    AND_ASSIGN      reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    OR_ASSIGN       reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    XOR_ASSIGN      reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    SHL_ASSIGN      reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    SHR_ASSIGN      reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    ASSIGN          reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    LBRACE          reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    INC             reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)
    DEC             reduce using rule 130 (Slice -> LBRACK Expression COLON RBRACK .)


state 259

    (128) Slice -> LBRACK Expression COLON Expression . RBRACK
    (132) Slice -> LBRACK Expression COLON Expression . COLON Expression RBRACK
    (89) Expression -> Expression . BinaryOp UnaryExpr
    (92) BinaryOp -> . LOR
    (93) BinaryOp -> . LAND
    (94) BinaryOp -> . RelOp
    (95) BinaryOp -> . AddOp
    (96) BinaryOp -> . MulOp
    (97) RelOp -> . EQL
    (98) RelOp -> . NEQ
    (99) RelOp -> . LTN
    (100) RelOp -> . LEQ
    (101) RelOp -> . GTN
    (102) RelOp -> . GEQ
    (103) AddOp -> . ADD
    (104) AddOp -> . SUB
    (105) AddOp -> . OR
    (106) AddOp -> . XOR
    (107) MulOp -> . MUL
    (108) MulOp -> . DIV
    (109) MulOp -> . MOD
    (110) MulOp -> . SHL
    (111) MulOp -> . SHR
    (112) MulOp -> . AND
    (113) MulOp -> . AND_NOT

    RBRACK          shift and go to state 276
    COLON           shift and go to state 275
    LOR             shift and go to state 130
    LAND            shift and go to state 135
    EQL             shift and go to state 144
    NEQ             shift and go to state 133
    LTN             shift and go to state 146
    LEQ             shift and go to state 149
    GTN             shift and go to state 142
    GEQ             shift and go to state 134
    ADD             shift and go to state 143
    SUB             shift and go to state 129
    OR              shift and go to state 150
    XOR             shift and go to state 140
    MUL             shift and go to state 131
    DIV             shift and go to state 132
    MOD             shift and go to state 151
    SHL             shift and go to state 145
    SHR             shift and go to state 139
    AND             shift and go to state 147
    AND_NOT         shift and go to state 136

    AddOp                          shift and go to state 138
    BinaryOp                       shift and go to state 137
    MulOp                          shift and go to state 141
    RelOp                          shift and go to state 148

state 260

    (136) Arguments -> LPAREN ExpressionList COMMA RPAREN .

    DOT             reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LBRACK          reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LPAREN          reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LOR             reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LAND            reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    EQL             reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    NEQ             reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LTN             reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LEQ             reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    GTN             reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    GEQ             reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    ADD             reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SUB             reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    OR              reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    XOR             reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    MUL             reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    DIV             reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    MOD             reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHL             reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHR             reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    AND             reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    AND_NOT         reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    COMMA           reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SEMICOLON       reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    RPAREN          reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    RBRACK          reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    COLON           reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    ADD_ASSIGN      reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SUB_ASSIGN      reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    MUL_ASSIGN      reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    DIV_ASSIGN      reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    MOD_ASSIGN      reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    AND_ASSIGN      reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    OR_ASSIGN       reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    XOR_ASSIGN      reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHL_ASSIGN      reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHR_ASSIGN      reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    ASSIGN          reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LBRACE          reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    INC             reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    DEC             reduce using rule 136 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)


state 261

    (56) FieldDecl_curl -> FieldDecl_curl FieldDecl SEMICOLON .

    RBRACE          reduce using rule 56 (FieldDecl_curl -> FieldDecl_curl FieldDecl SEMICOLON .)
    ID              reduce using rule 56 (FieldDecl_curl -> FieldDecl_curl FieldDecl SEMICOLON .)


state 262

    (62) FieldDecl -> ID STRUCT . MUL ID

    MUL             shift and go to state 277


state 263

    (58) FieldDecl -> ID COMMA . IdentifierList Type
    (59) FieldDecl -> ID COMMA . IdentifierList ID
    (63) FieldDecl -> ID COMMA . IdentifierList STRUCT MUL ID
    (28) IdentifierList -> . ID
    (29) IdentifierList -> . ID COMMA IdentifierList

    ID              shift and go to state 29

    IdentifierList                 shift and go to state 278

state 264

    (60) FieldDecl -> ID Type .

    SEMICOLON       reduce using rule 60 (FieldDecl -> ID Type .)


state 265

    (61) FieldDecl -> ID ID .

    SEMICOLON       reduce using rule 61 (FieldDecl -> ID ID .)


state 266

    (55) StructType -> STRUCT OpenStructS LBRACE FieldDecl_curl RBRACE CloseStructS .

    SEMICOLON       reduce using rule 55 (StructType -> STRUCT OpenStructS LBRACE FieldDecl_curl RBRACE CloseStructS .)


state 267

    (159) Statement -> OpenS Block CloseS .

    SEMICOLON       reduce using rule 159 (Statement -> OpenS Block CloseS .)


state 268

    (191) ShortVarDecl -> IdentifierList DEFINE ExpressionList .
    (31) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 191 (ShortVarDecl -> IdentifierList DEFINE ExpressionList .)
    LBRACE          reduce using rule 191 (ShortVarDecl -> IdentifierList DEFINE ExpressionList .)
    COMMA           shift and go to state 127


state 269

    (204) ForStmt -> FOR OpenS OpenF . Expression Block CloseF CloseS
    (205) ForStmt -> FOR OpenS OpenF . ForClause Block CloseF CloseS
    (206) ForStmt -> FOR OpenS OpenF . Block CloseF CloseS
    (88) Expression -> . UnaryExpr
    (89) Expression -> . Expression BinaryOp UnaryExpr
    (211) ForClause -> . SimpleStmt SEMICOLON SEMICOLON SimpleStmt
    (212) ForClause -> . SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt
    (84) Block -> . LBRACE StatementList RBRACE
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (162) SimpleStmt -> . Expression
    (163) SimpleStmt -> . IncDecStmt
    (164) SimpleStmt -> . Assignment
    (165) SimpleStmt -> . ShortVarDecl
    (166) SimpleStmt -> .
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (167) IncDecStmt -> . Expression INC
    (168) IncDecStmt -> . Expression DEC
    (169) Assignment -> . ExpressionList AssignOp ExpressionList
    (191) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (137) Literal -> . BasicLit
    (30) ExpressionList -> . Expression
    (31) ExpressionList -> . ExpressionList COMMA Expression
    (28) IdentifierList -> . ID
    (29) IdentifierList -> . ID COMMA IdentifierList
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    LBRACE          shift and go to state 114
    SEMICOLON       reduce using rule 166 (SimpleStmt -> .)
    ID              shift and go to state 282
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    UnaryOp                        shift and go to state 71
    SimpleStmt                     shift and go to state 279
    FalseLit                       shift and go to state 72
    Literal                        shift and go to state 73
    IdentifierList                 shift and go to state 197
    IntLit                         shift and go to state 74
    RuneLit                        shift and go to state 87
    Assignment                     shift and go to state 191
    IncDecStmt                     shift and go to state 192
    UnaryExpr                      shift and go to state 81
    FloatLit                       shift and go to state 82
    ExpressionList                 shift and go to state 207
    ForClause                      shift and go to state 280
    Expression                     shift and go to state 281
    ShortVarDecl                   shift and go to state 214
    Block                          shift and go to state 283
    StringLit                      shift and go to state 94
    BasicLit                       shift and go to state 77
    PrimaryExpr                    shift and go to state 83
    TrueLit                        shift and go to state 96

state 270

    (182) LabelledStmt -> ID COLON Statement .

    SEMICOLON       reduce using rule 182 (LabelledStmt -> ID COLON Statement .)


state 271

    (196) ExprSwitchStmt -> SWITCH ExpressionName LBRACE . OpenW ExprCaseClause_curl CloseW RBRACE
    (209) OpenW -> .

    RBRACE          reduce using rule 209 (OpenW -> .)
    CASE            reduce using rule 209 (OpenW -> .)
    DEFAULT         reduce using rule 209 (OpenW -> .)

    OpenW                          shift and go to state 284

state 272

    (169) Assignment -> ExpressionList AssignOp ExpressionList .
    (31) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 169 (Assignment -> ExpressionList AssignOp ExpressionList .)
    LBRACE          reduce using rule 169 (Assignment -> ExpressionList AssignOp ExpressionList .)
    COMMA           shift and go to state 127


state 273

    (192) IfStmt -> IF OpenS Expression . Block CloseS
    (193) IfStmt -> IF OpenS Expression . Block CloseS ELSE IfStmt
    (194) IfStmt -> IF OpenS Expression . Block CloseS ELSE OpenS Block CloseS
    (89) Expression -> Expression . BinaryOp UnaryExpr
    (84) Block -> . LBRACE StatementList RBRACE
    (92) BinaryOp -> . LOR
    (93) BinaryOp -> . LAND
    (94) BinaryOp -> . RelOp
    (95) BinaryOp -> . AddOp
    (96) BinaryOp -> . MulOp
    (97) RelOp -> . EQL
    (98) RelOp -> . NEQ
    (99) RelOp -> . LTN
    (100) RelOp -> . LEQ
    (101) RelOp -> . GTN
    (102) RelOp -> . GEQ
    (103) AddOp -> . ADD
    (104) AddOp -> . SUB
    (105) AddOp -> . OR
    (106) AddOp -> . XOR
    (107) MulOp -> . MUL
    (108) MulOp -> . DIV
    (109) MulOp -> . MOD
    (110) MulOp -> . SHL
    (111) MulOp -> . SHR
    (112) MulOp -> . AND
    (113) MulOp -> . AND_NOT

    LBRACE          shift and go to state 114
    LOR             shift and go to state 130
    LAND            shift and go to state 135
    EQL             shift and go to state 144
    NEQ             shift and go to state 133
    LTN             shift and go to state 146
    LEQ             shift and go to state 149
    GTN             shift and go to state 142
    GEQ             shift and go to state 134
    ADD             shift and go to state 143
    SUB             shift and go to state 129
    OR              shift and go to state 150
    XOR             shift and go to state 140
    MUL             shift and go to state 131
    DIV             shift and go to state 132
    MOD             shift and go to state 151
    SHL             shift and go to state 145
    SHR             shift and go to state 139
    AND             shift and go to state 147
    AND_NOT         shift and go to state 136

    RelOp                          shift and go to state 148
    AddOp                          shift and go to state 138
    BinaryOp                       shift and go to state 137
    MulOp                          shift and go to state 141
    Block                          shift and go to state 285

state 274

    (133) Slice -> LBRACK COLON Expression COLON Expression . RBRACK
    (89) Expression -> Expression . BinaryOp UnaryExpr
    (92) BinaryOp -> . LOR
    (93) BinaryOp -> . LAND
    (94) BinaryOp -> . RelOp
    (95) BinaryOp -> . AddOp
    (96) BinaryOp -> . MulOp
    (97) RelOp -> . EQL
    (98) RelOp -> . NEQ
    (99) RelOp -> . LTN
    (100) RelOp -> . LEQ
    (101) RelOp -> . GTN
    (102) RelOp -> . GEQ
    (103) AddOp -> . ADD
    (104) AddOp -> . SUB
    (105) AddOp -> . OR
    (106) AddOp -> . XOR
    (107) MulOp -> . MUL
    (108) MulOp -> . DIV
    (109) MulOp -> . MOD
    (110) MulOp -> . SHL
    (111) MulOp -> . SHR
    (112) MulOp -> . AND
    (113) MulOp -> . AND_NOT

    RBRACK          shift and go to state 286
    LOR             shift and go to state 130
    LAND            shift and go to state 135
    EQL             shift and go to state 144
    NEQ             shift and go to state 133
    LTN             shift and go to state 146
    LEQ             shift and go to state 149
    GTN             shift and go to state 142
    GEQ             shift and go to state 134
    ADD             shift and go to state 143
    SUB             shift and go to state 129
    OR              shift and go to state 150
    XOR             shift and go to state 140
    MUL             shift and go to state 131
    DIV             shift and go to state 132
    MOD             shift and go to state 151
    SHL             shift and go to state 145
    SHR             shift and go to state 139
    AND             shift and go to state 147
    AND_NOT         shift and go to state 136

    AddOp                          shift and go to state 138
    BinaryOp                       shift and go to state 137
    MulOp                          shift and go to state 141
    RelOp                          shift and go to state 148

state 275

    (132) Slice -> LBRACK Expression COLON Expression COLON . Expression RBRACK
    (88) Expression -> . UnaryExpr
    (89) Expression -> . Expression BinaryOp UnaryExpr
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (137) Literal -> . BasicLit
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    ID              shift and go to state 89
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    RuneLit                        shift and go to state 87
    UnaryOp                        shift and go to state 71
    TrueLit                        shift and go to state 96
    BasicLit                       shift and go to state 77
    UnaryExpr                      shift and go to state 81
    FloatLit                       shift and go to state 82
    FalseLit                       shift and go to state 72
    IntLit                         shift and go to state 74
    Literal                        shift and go to state 73
    PrimaryExpr                    shift and go to state 83
    StringLit                      shift and go to state 94
    Expression                     shift and go to state 287

state 276

    (128) Slice -> LBRACK Expression COLON Expression RBRACK .

    DOT             reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    LBRACK          reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    LPAREN          reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    LOR             reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    LAND            reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    EQL             reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    NEQ             reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    LTN             reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    LEQ             reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    GTN             reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    GEQ             reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    ADD             reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    SUB             reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    OR              reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    XOR             reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    MUL             reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    DIV             reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    MOD             reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    SHL             reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    SHR             reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    AND             reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    AND_NOT         reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    COMMA           reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    SEMICOLON       reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    RPAREN          reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    RBRACK          reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    COLON           reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    DIV_ASSIGN      reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    MOD_ASSIGN      reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    AND_ASSIGN      reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    OR_ASSIGN       reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    SHL_ASSIGN      reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    SHR_ASSIGN      reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    ASSIGN          reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    LBRACE          reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    INC             reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    DEC             reduce using rule 128 (Slice -> LBRACK Expression COLON Expression RBRACK .)


state 277

    (62) FieldDecl -> ID STRUCT MUL . ID

    ID              shift and go to state 288


state 278

    (58) FieldDecl -> ID COMMA IdentifierList . Type
    (59) FieldDecl -> ID COMMA IdentifierList . ID
    (63) FieldDecl -> ID COMMA IdentifierList . STRUCT MUL ID
    (45) Type -> . LPAREN Type RPAREN
    (46) Type -> . LPAREN ID RPAREN
    (47) Type -> . TypeLit
    (48) TypeLit -> . ArrayType
    (49) TypeLit -> . PointerType
    (50) TypeLit -> . SliceType
    (51) ArrayType -> . LBRACK INT RBRACK Type
    (52) ArrayType -> . LBRACK INT RBRACK ID
    (64) PointerType -> . MUL Type
    (65) PointerType -> . MUL ID
    (53) SliceType -> . LBRACK RBRACK Type
    (54) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 291
    STRUCT          shift and go to state 289
    LPAREN          shift and go to state 49
    LBRACK          shift and go to state 46
    MUL             shift and go to state 51

    Type                           shift and go to state 290
    ArrayType                      shift and go to state 47
    PointerType                    shift and go to state 50
    TypeLit                        shift and go to state 45
    SliceType                      shift and go to state 54

state 279

    (211) ForClause -> SimpleStmt . SEMICOLON SEMICOLON SimpleStmt
    (212) ForClause -> SimpleStmt . SEMICOLON Expression SEMICOLON SimpleStmt

    SEMICOLON       shift and go to state 292


state 280

    (205) ForStmt -> FOR OpenS OpenF ForClause . Block CloseF CloseS
    (84) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 114

    Block                          shift and go to state 293

state 281

    (204) ForStmt -> FOR OpenS OpenF Expression . Block CloseF CloseS
    (89) Expression -> Expression . BinaryOp UnaryExpr
    (162) SimpleStmt -> Expression .
    (167) IncDecStmt -> Expression . INC
    (168) IncDecStmt -> Expression . DEC
    (30) ExpressionList -> Expression .
    (84) Block -> . LBRACE StatementList RBRACE
    (92) BinaryOp -> . LOR
    (93) BinaryOp -> . LAND
    (94) BinaryOp -> . RelOp
    (95) BinaryOp -> . AddOp
    (96) BinaryOp -> . MulOp
    (97) RelOp -> . EQL
    (98) RelOp -> . NEQ
    (99) RelOp -> . LTN
    (100) RelOp -> . LEQ
    (101) RelOp -> . GTN
    (102) RelOp -> . GEQ
    (103) AddOp -> . ADD
    (104) AddOp -> . SUB
    (105) AddOp -> . OR
    (106) AddOp -> . XOR
    (107) MulOp -> . MUL
    (108) MulOp -> . DIV
    (109) MulOp -> . MOD
    (110) MulOp -> . SHL
    (111) MulOp -> . SHR
    (112) MulOp -> . AND
    (113) MulOp -> . AND_NOT

    SEMICOLON       reduce using rule 162 (SimpleStmt -> Expression .)
    INC             shift and go to state 253
    DEC             shift and go to state 252
    COMMA           reduce using rule 30 (ExpressionList -> Expression .)
    ADD_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    SUB_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    MUL_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    DIV_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    MOD_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    AND_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    AND_NOT_ASSIGN  reduce using rule 30 (ExpressionList -> Expression .)
    OR_ASSIGN       reduce using rule 30 (ExpressionList -> Expression .)
    XOR_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    SHL_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    SHR_ASSIGN      reduce using rule 30 (ExpressionList -> Expression .)
    ASSIGN          reduce using rule 30 (ExpressionList -> Expression .)
    LBRACE          shift and go to state 114
    LOR             shift and go to state 130
    LAND            shift and go to state 135
    EQL             shift and go to state 144
    NEQ             shift and go to state 133
    LTN             shift and go to state 146
    LEQ             shift and go to state 149
    GTN             shift and go to state 142
    GEQ             shift and go to state 134
    ADD             shift and go to state 143
    SUB             shift and go to state 129
    OR              shift and go to state 150
    XOR             shift and go to state 140
    MUL             shift and go to state 131
    DIV             shift and go to state 132
    MOD             shift and go to state 151
    SHL             shift and go to state 145
    SHR             shift and go to state 139
    AND             shift and go to state 147
    AND_NOT         shift and go to state 136

    RelOp                          shift and go to state 148
    AddOp                          shift and go to state 138
    BinaryOp                       shift and go to state 137
    MulOp                          shift and go to state 141
    Block                          shift and go to state 294

state 282

    (121) PrimaryExpr -> ID .
    (28) IdentifierList -> ID .
    (29) IdentifierList -> ID . COMMA IdentifierList

    DOT             reduce using rule 121 (PrimaryExpr -> ID .)
    LBRACK          reduce using rule 121 (PrimaryExpr -> ID .)
    LPAREN          reduce using rule 121 (PrimaryExpr -> ID .)
    INC             reduce using rule 121 (PrimaryExpr -> ID .)
    DEC             reduce using rule 121 (PrimaryExpr -> ID .)
    LBRACE          reduce using rule 121 (PrimaryExpr -> ID .)
    LOR             reduce using rule 121 (PrimaryExpr -> ID .)
    LAND            reduce using rule 121 (PrimaryExpr -> ID .)
    EQL             reduce using rule 121 (PrimaryExpr -> ID .)
    NEQ             reduce using rule 121 (PrimaryExpr -> ID .)
    LTN             reduce using rule 121 (PrimaryExpr -> ID .)
    LEQ             reduce using rule 121 (PrimaryExpr -> ID .)
    GTN             reduce using rule 121 (PrimaryExpr -> ID .)
    GEQ             reduce using rule 121 (PrimaryExpr -> ID .)
    ADD             reduce using rule 121 (PrimaryExpr -> ID .)
    SUB             reduce using rule 121 (PrimaryExpr -> ID .)
    OR              reduce using rule 121 (PrimaryExpr -> ID .)
    XOR             reduce using rule 121 (PrimaryExpr -> ID .)
    MUL             reduce using rule 121 (PrimaryExpr -> ID .)
    DIV             reduce using rule 121 (PrimaryExpr -> ID .)
    MOD             reduce using rule 121 (PrimaryExpr -> ID .)
    SHL             reduce using rule 121 (PrimaryExpr -> ID .)
    SHR             reduce using rule 121 (PrimaryExpr -> ID .)
    AND             reduce using rule 121 (PrimaryExpr -> ID .)
    AND_NOT         reduce using rule 121 (PrimaryExpr -> ID .)
    SEMICOLON       reduce using rule 121 (PrimaryExpr -> ID .)
    ADD_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    SUB_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    MUL_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    DIV_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    MOD_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    AND_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    AND_NOT_ASSIGN  reduce using rule 121 (PrimaryExpr -> ID .)
    OR_ASSIGN       reduce using rule 121 (PrimaryExpr -> ID .)
    XOR_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    SHL_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    SHR_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    ASSIGN          reduce using rule 121 (PrimaryExpr -> ID .)
    DEFINE          reduce using rule 28 (IdentifierList -> ID .)
    COMMA           shift and go to state 42

  ! COMMA           [ reduce using rule 121 (PrimaryExpr -> ID .) ]


state 283

    (206) ForStmt -> FOR OpenS OpenF Block . CloseF CloseS
    (208) CloseF -> .

    SEMICOLON       reduce using rule 208 (CloseF -> .)

    CloseF                         shift and go to state 295

state 284

    (196) ExprSwitchStmt -> SWITCH ExpressionName LBRACE OpenW . ExprCaseClause_curl CloseW RBRACE
    (198) ExprCaseClause_curl -> . ExprCaseClause_curl ExprCaseClause
    (199) ExprCaseClause_curl -> . DefCaseClause
    (200) ExprCaseClause_curl -> .
    (203) DefCaseClause -> . OpenS DEFAULT COLON StatementList CloseS
    (2) OpenS -> .

    RBRACE          reduce using rule 200 (ExprCaseClause_curl -> .)
    CASE            reduce using rule 200 (ExprCaseClause_curl -> .)
    DEFAULT         reduce using rule 2 (OpenS -> .)

    DefCaseClause                  shift and go to state 296
    ExprCaseClause_curl            shift and go to state 297
    OpenS                          shift and go to state 298

state 285

    (192) IfStmt -> IF OpenS Expression Block . CloseS
    (193) IfStmt -> IF OpenS Expression Block . CloseS ELSE IfStmt
    (194) IfStmt -> IF OpenS Expression Block . CloseS ELSE OpenS Block CloseS
    (3) CloseS -> .

    ELSE            reduce using rule 3 (CloseS -> .)
    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 299

state 286

    (133) Slice -> LBRACK COLON Expression COLON Expression RBRACK .

    DOT             reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    LBRACK          reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    LPAREN          reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    LOR             reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    LAND            reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    EQL             reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    NEQ             reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    LTN             reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    LEQ             reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    GTN             reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    GEQ             reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    ADD             reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    SUB             reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    OR              reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    XOR             reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    MUL             reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    DIV             reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    MOD             reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    SHL             reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    SHR             reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    AND             reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    AND_NOT         reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    COMMA           reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    SEMICOLON       reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    RPAREN          reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    RBRACK          reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    COLON           reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    DIV_ASSIGN      reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    MOD_ASSIGN      reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    AND_ASSIGN      reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    OR_ASSIGN       reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    SHL_ASSIGN      reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    SHR_ASSIGN      reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    ASSIGN          reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    LBRACE          reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    INC             reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    DEC             reduce using rule 133 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)


state 287

    (132) Slice -> LBRACK Expression COLON Expression COLON Expression . RBRACK
    (89) Expression -> Expression . BinaryOp UnaryExpr
    (92) BinaryOp -> . LOR
    (93) BinaryOp -> . LAND
    (94) BinaryOp -> . RelOp
    (95) BinaryOp -> . AddOp
    (96) BinaryOp -> . MulOp
    (97) RelOp -> . EQL
    (98) RelOp -> . NEQ
    (99) RelOp -> . LTN
    (100) RelOp -> . LEQ
    (101) RelOp -> . GTN
    (102) RelOp -> . GEQ
    (103) AddOp -> . ADD
    (104) AddOp -> . SUB
    (105) AddOp -> . OR
    (106) AddOp -> . XOR
    (107) MulOp -> . MUL
    (108) MulOp -> . DIV
    (109) MulOp -> . MOD
    (110) MulOp -> . SHL
    (111) MulOp -> . SHR
    (112) MulOp -> . AND
    (113) MulOp -> . AND_NOT

    RBRACK          shift and go to state 300
    LOR             shift and go to state 130
    LAND            shift and go to state 135
    EQL             shift and go to state 144
    NEQ             shift and go to state 133
    LTN             shift and go to state 146
    LEQ             shift and go to state 149
    GTN             shift and go to state 142
    GEQ             shift and go to state 134
    ADD             shift and go to state 143
    SUB             shift and go to state 129
    OR              shift and go to state 150
    XOR             shift and go to state 140
    MUL             shift and go to state 131
    DIV             shift and go to state 132
    MOD             shift and go to state 151
    SHL             shift and go to state 145
    SHR             shift and go to state 139
    AND             shift and go to state 147
    AND_NOT         shift and go to state 136

    AddOp                          shift and go to state 138
    BinaryOp                       shift and go to state 137
    MulOp                          shift and go to state 141
    RelOp                          shift and go to state 148

state 288

    (62) FieldDecl -> ID STRUCT MUL ID .

    SEMICOLON       reduce using rule 62 (FieldDecl -> ID STRUCT MUL ID .)


state 289

    (63) FieldDecl -> ID COMMA IdentifierList STRUCT . MUL ID

    MUL             shift and go to state 301


state 290

    (58) FieldDecl -> ID COMMA IdentifierList Type .

    SEMICOLON       reduce using rule 58 (FieldDecl -> ID COMMA IdentifierList Type .)


state 291

    (59) FieldDecl -> ID COMMA IdentifierList ID .

    SEMICOLON       reduce using rule 59 (FieldDecl -> ID COMMA IdentifierList ID .)


state 292

    (211) ForClause -> SimpleStmt SEMICOLON . SEMICOLON SimpleStmt
    (212) ForClause -> SimpleStmt SEMICOLON . Expression SEMICOLON SimpleStmt
    (88) Expression -> . UnaryExpr
    (89) Expression -> . Expression BinaryOp UnaryExpr
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (137) Literal -> . BasicLit
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    SEMICOLON       shift and go to state 302
    ID              shift and go to state 89
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    RuneLit                        shift and go to state 87
    UnaryOp                        shift and go to state 71
    TrueLit                        shift and go to state 96
    BasicLit                       shift and go to state 77
    UnaryExpr                      shift and go to state 81
    FloatLit                       shift and go to state 82
    FalseLit                       shift and go to state 72
    IntLit                         shift and go to state 74
    Literal                        shift and go to state 73
    PrimaryExpr                    shift and go to state 83
    StringLit                      shift and go to state 94
    Expression                     shift and go to state 303

state 293

    (205) ForStmt -> FOR OpenS OpenF ForClause Block . CloseF CloseS
    (208) CloseF -> .

    SEMICOLON       reduce using rule 208 (CloseF -> .)

    CloseF                         shift and go to state 304

state 294

    (204) ForStmt -> FOR OpenS OpenF Expression Block . CloseF CloseS
    (208) CloseF -> .

    SEMICOLON       reduce using rule 208 (CloseF -> .)

    CloseF                         shift and go to state 305

state 295

    (206) ForStmt -> FOR OpenS OpenF Block CloseF . CloseS
    (3) CloseS -> .

    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 306

state 296

    (199) ExprCaseClause_curl -> DefCaseClause .

    RBRACE          reduce using rule 199 (ExprCaseClause_curl -> DefCaseClause .)
    CASE            reduce using rule 199 (ExprCaseClause_curl -> DefCaseClause .)


state 297

    (196) ExprSwitchStmt -> SWITCH ExpressionName LBRACE OpenW ExprCaseClause_curl . CloseW RBRACE
    (198) ExprCaseClause_curl -> ExprCaseClause_curl . ExprCaseClause
    (210) CloseW -> .
    (201) ExprCaseClause -> . OpenS ExprSwitchCase COLON StatementList CloseS
    (2) OpenS -> .

    RBRACE          reduce using rule 210 (CloseW -> .)
    CASE            reduce using rule 2 (OpenS -> .)

    CloseW                         shift and go to state 307
    ExprCaseClause                 shift and go to state 308
    OpenS                          shift and go to state 309

state 298

    (203) DefCaseClause -> OpenS . DEFAULT COLON StatementList CloseS

    DEFAULT         shift and go to state 310


state 299

    (192) IfStmt -> IF OpenS Expression Block CloseS .
    (193) IfStmt -> IF OpenS Expression Block CloseS . ELSE IfStmt
    (194) IfStmt -> IF OpenS Expression Block CloseS . ELSE OpenS Block CloseS

    SEMICOLON       reduce using rule 192 (IfStmt -> IF OpenS Expression Block CloseS .)
    ELSE            shift and go to state 311


state 300

    (132) Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .

    DOT             reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    LBRACK          reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    LPAREN          reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    LOR             reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    LAND            reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    EQL             reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    NEQ             reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    LTN             reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    LEQ             reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    GTN             reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    GEQ             reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    ADD             reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    SUB             reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    OR              reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    XOR             reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    MUL             reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    DIV             reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    MOD             reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    SHL             reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    SHR             reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    AND             reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    AND_NOT         reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    COMMA           reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    SEMICOLON       reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    RPAREN          reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    RBRACK          reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    COLON           reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    DIV_ASSIGN      reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    MOD_ASSIGN      reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    AND_ASSIGN      reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    OR_ASSIGN       reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    SHL_ASSIGN      reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    SHR_ASSIGN      reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    ASSIGN          reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    LBRACE          reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    INC             reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    DEC             reduce using rule 132 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)


state 301

    (63) FieldDecl -> ID COMMA IdentifierList STRUCT MUL . ID

    ID              shift and go to state 312


state 302

    (211) ForClause -> SimpleStmt SEMICOLON SEMICOLON . SimpleStmt
    (162) SimpleStmt -> . Expression
    (163) SimpleStmt -> . IncDecStmt
    (164) SimpleStmt -> . Assignment
    (165) SimpleStmt -> . ShortVarDecl
    (166) SimpleStmt -> .
    (88) Expression -> . UnaryExpr
    (89) Expression -> . Expression BinaryOp UnaryExpr
    (167) IncDecStmt -> . Expression INC
    (168) IncDecStmt -> . Expression DEC
    (169) Assignment -> . ExpressionList AssignOp ExpressionList
    (191) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (30) ExpressionList -> . Expression
    (31) ExpressionList -> . ExpressionList COMMA Expression
    (28) IdentifierList -> . ID
    (29) IdentifierList -> . ID COMMA IdentifierList
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (137) Literal -> . BasicLit
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    LBRACE          reduce using rule 166 (SimpleStmt -> .)
    ID              shift and go to state 314
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    UnaryOp                        shift and go to state 71
    SimpleStmt                     shift and go to state 313
    FalseLit                       shift and go to state 72
    Literal                        shift and go to state 73
    IdentifierList                 shift and go to state 197
    IntLit                         shift and go to state 74
    RuneLit                        shift and go to state 87
    Assignment                     shift and go to state 191
    IncDecStmt                     shift and go to state 192
    UnaryExpr                      shift and go to state 81
    FloatLit                       shift and go to state 82
    ExpressionList                 shift and go to state 207
    Expression                     shift and go to state 208
    ShortVarDecl                   shift and go to state 214
    StringLit                      shift and go to state 94
    BasicLit                       shift and go to state 77
    PrimaryExpr                    shift and go to state 83
    TrueLit                        shift and go to state 96

state 303

    (212) ForClause -> SimpleStmt SEMICOLON Expression . SEMICOLON SimpleStmt
    (89) Expression -> Expression . BinaryOp UnaryExpr
    (92) BinaryOp -> . LOR
    (93) BinaryOp -> . LAND
    (94) BinaryOp -> . RelOp
    (95) BinaryOp -> . AddOp
    (96) BinaryOp -> . MulOp
    (97) RelOp -> . EQL
    (98) RelOp -> . NEQ
    (99) RelOp -> . LTN
    (100) RelOp -> . LEQ
    (101) RelOp -> . GTN
    (102) RelOp -> . GEQ
    (103) AddOp -> . ADD
    (104) AddOp -> . SUB
    (105) AddOp -> . OR
    (106) AddOp -> . XOR
    (107) MulOp -> . MUL
    (108) MulOp -> . DIV
    (109) MulOp -> . MOD
    (110) MulOp -> . SHL
    (111) MulOp -> . SHR
    (112) MulOp -> . AND
    (113) MulOp -> . AND_NOT

    SEMICOLON       shift and go to state 315
    LOR             shift and go to state 130
    LAND            shift and go to state 135
    EQL             shift and go to state 144
    NEQ             shift and go to state 133
    LTN             shift and go to state 146
    LEQ             shift and go to state 149
    GTN             shift and go to state 142
    GEQ             shift and go to state 134
    ADD             shift and go to state 143
    SUB             shift and go to state 129
    OR              shift and go to state 150
    XOR             shift and go to state 140
    MUL             shift and go to state 131
    DIV             shift and go to state 132
    MOD             shift and go to state 151
    SHL             shift and go to state 145
    SHR             shift and go to state 139
    AND             shift and go to state 147
    AND_NOT         shift and go to state 136

    AddOp                          shift and go to state 138
    RelOp                          shift and go to state 148
    BinaryOp                       shift and go to state 137
    MulOp                          shift and go to state 141

state 304

    (205) ForStmt -> FOR OpenS OpenF ForClause Block CloseF . CloseS
    (3) CloseS -> .

    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 316

state 305

    (204) ForStmt -> FOR OpenS OpenF Expression Block CloseF . CloseS
    (3) CloseS -> .

    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 317

state 306

    (206) ForStmt -> FOR OpenS OpenF Block CloseF CloseS .

    SEMICOLON       reduce using rule 206 (ForStmt -> FOR OpenS OpenF Block CloseF CloseS .)


state 307

    (196) ExprSwitchStmt -> SWITCH ExpressionName LBRACE OpenW ExprCaseClause_curl CloseW . RBRACE

    RBRACE          shift and go to state 318


state 308

    (198) ExprCaseClause_curl -> ExprCaseClause_curl ExprCaseClause .

    RBRACE          reduce using rule 198 (ExprCaseClause_curl -> ExprCaseClause_curl ExprCaseClause .)
    CASE            reduce using rule 198 (ExprCaseClause_curl -> ExprCaseClause_curl ExprCaseClause .)


state 309

    (201) ExprCaseClause -> OpenS . ExprSwitchCase COLON StatementList CloseS
    (202) ExprSwitchCase -> . CASE Expression

    CASE            shift and go to state 319

    ExprSwitchCase                 shift and go to state 320

state 310

    (203) DefCaseClause -> OpenS DEFAULT . COLON StatementList CloseS

    COLON           shift and go to state 321


state 311

    (193) IfStmt -> IF OpenS Expression Block CloseS ELSE . IfStmt
    (194) IfStmt -> IF OpenS Expression Block CloseS ELSE . OpenS Block CloseS
    (192) IfStmt -> . IF OpenS Expression Block CloseS
    (193) IfStmt -> . IF OpenS Expression Block CloseS ELSE IfStmt
    (194) IfStmt -> . IF OpenS Expression Block CloseS ELSE OpenS Block CloseS
    (2) OpenS -> .

    IF              shift and go to state 215
    LBRACE          reduce using rule 2 (OpenS -> .)

    OpenS                          shift and go to state 322
    IfStmt                         shift and go to state 323

state 312

    (63) FieldDecl -> ID COMMA IdentifierList STRUCT MUL ID .

    SEMICOLON       reduce using rule 63 (FieldDecl -> ID COMMA IdentifierList STRUCT MUL ID .)


state 313

    (211) ForClause -> SimpleStmt SEMICOLON SEMICOLON SimpleStmt .

    LBRACE          reduce using rule 211 (ForClause -> SimpleStmt SEMICOLON SEMICOLON SimpleStmt .)


state 314

    (28) IdentifierList -> ID .
    (29) IdentifierList -> ID . COMMA IdentifierList
    (121) PrimaryExpr -> ID .

    DEFINE          reduce using rule 28 (IdentifierList -> ID .)
    COMMA           shift and go to state 42
    DOT             reduce using rule 121 (PrimaryExpr -> ID .)
    LBRACK          reduce using rule 121 (PrimaryExpr -> ID .)
    LPAREN          reduce using rule 121 (PrimaryExpr -> ID .)
    INC             reduce using rule 121 (PrimaryExpr -> ID .)
    DEC             reduce using rule 121 (PrimaryExpr -> ID .)
    LOR             reduce using rule 121 (PrimaryExpr -> ID .)
    LAND            reduce using rule 121 (PrimaryExpr -> ID .)
    EQL             reduce using rule 121 (PrimaryExpr -> ID .)
    NEQ             reduce using rule 121 (PrimaryExpr -> ID .)
    LTN             reduce using rule 121 (PrimaryExpr -> ID .)
    LEQ             reduce using rule 121 (PrimaryExpr -> ID .)
    GTN             reduce using rule 121 (PrimaryExpr -> ID .)
    GEQ             reduce using rule 121 (PrimaryExpr -> ID .)
    ADD             reduce using rule 121 (PrimaryExpr -> ID .)
    SUB             reduce using rule 121 (PrimaryExpr -> ID .)
    OR              reduce using rule 121 (PrimaryExpr -> ID .)
    XOR             reduce using rule 121 (PrimaryExpr -> ID .)
    MUL             reduce using rule 121 (PrimaryExpr -> ID .)
    DIV             reduce using rule 121 (PrimaryExpr -> ID .)
    MOD             reduce using rule 121 (PrimaryExpr -> ID .)
    SHL             reduce using rule 121 (PrimaryExpr -> ID .)
    SHR             reduce using rule 121 (PrimaryExpr -> ID .)
    AND             reduce using rule 121 (PrimaryExpr -> ID .)
    AND_NOT         reduce using rule 121 (PrimaryExpr -> ID .)
    LBRACE          reduce using rule 121 (PrimaryExpr -> ID .)
    ADD_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    SUB_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    MUL_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    DIV_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    MOD_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    AND_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    AND_NOT_ASSIGN  reduce using rule 121 (PrimaryExpr -> ID .)
    OR_ASSIGN       reduce using rule 121 (PrimaryExpr -> ID .)
    XOR_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    SHL_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    SHR_ASSIGN      reduce using rule 121 (PrimaryExpr -> ID .)
    ASSIGN          reduce using rule 121 (PrimaryExpr -> ID .)

  ! COMMA           [ reduce using rule 121 (PrimaryExpr -> ID .) ]


state 315

    (212) ForClause -> SimpleStmt SEMICOLON Expression SEMICOLON . SimpleStmt
    (162) SimpleStmt -> . Expression
    (163) SimpleStmt -> . IncDecStmt
    (164) SimpleStmt -> . Assignment
    (165) SimpleStmt -> . ShortVarDecl
    (166) SimpleStmt -> .
    (88) Expression -> . UnaryExpr
    (89) Expression -> . Expression BinaryOp UnaryExpr
    (167) IncDecStmt -> . Expression INC
    (168) IncDecStmt -> . Expression DEC
    (169) Assignment -> . ExpressionList AssignOp ExpressionList
    (191) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (30) ExpressionList -> . Expression
    (31) ExpressionList -> . ExpressionList COMMA Expression
    (28) IdentifierList -> . ID
    (29) IdentifierList -> . ID COMMA IdentifierList
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (137) Literal -> . BasicLit
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    LBRACE          reduce using rule 166 (SimpleStmt -> .)
    ID              shift and go to state 314
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    UnaryOp                        shift and go to state 71
    SimpleStmt                     shift and go to state 324
    FalseLit                       shift and go to state 72
    Literal                        shift and go to state 73
    IdentifierList                 shift and go to state 197
    IntLit                         shift and go to state 74
    RuneLit                        shift and go to state 87
    Assignment                     shift and go to state 191
    IncDecStmt                     shift and go to state 192
    UnaryExpr                      shift and go to state 81
    FloatLit                       shift and go to state 82
    ExpressionList                 shift and go to state 207
    Expression                     shift and go to state 208
    ShortVarDecl                   shift and go to state 214
    StringLit                      shift and go to state 94
    BasicLit                       shift and go to state 77
    PrimaryExpr                    shift and go to state 83
    TrueLit                        shift and go to state 96

state 316

    (205) ForStmt -> FOR OpenS OpenF ForClause Block CloseF CloseS .

    SEMICOLON       reduce using rule 205 (ForStmt -> FOR OpenS OpenF ForClause Block CloseF CloseS .)


state 317

    (204) ForStmt -> FOR OpenS OpenF Expression Block CloseF CloseS .

    SEMICOLON       reduce using rule 204 (ForStmt -> FOR OpenS OpenF Expression Block CloseF CloseS .)


state 318

    (196) ExprSwitchStmt -> SWITCH ExpressionName LBRACE OpenW ExprCaseClause_curl CloseW RBRACE .

    SEMICOLON       reduce using rule 196 (ExprSwitchStmt -> SWITCH ExpressionName LBRACE OpenW ExprCaseClause_curl CloseW RBRACE .)


state 319

    (202) ExprSwitchCase -> CASE . Expression
    (88) Expression -> . UnaryExpr
    (89) Expression -> . Expression BinaryOp UnaryExpr
    (90) UnaryExpr -> . PrimaryExpr
    (91) UnaryExpr -> . UnaryOp UnaryExpr
    (120) PrimaryExpr -> . Literal
    (121) PrimaryExpr -> . ID
    (122) PrimaryExpr -> . PrimaryExpr DOT ID
    (123) PrimaryExpr -> . LPAREN Expression RPAREN
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (114) UnaryOp -> . ADD
    (115) UnaryOp -> . SUB
    (116) UnaryOp -> . NOT
    (117) UnaryOp -> . XOR
    (118) UnaryOp -> . MUL
    (119) UnaryOp -> . AND
    (137) Literal -> . BasicLit
    (138) BasicLit -> . IntLit
    (139) BasicLit -> . FloatLit
    (140) BasicLit -> . RuneLit
    (141) BasicLit -> . StringLit
    (142) BasicLit -> . TrueLit
    (143) BasicLit -> . FalseLit
    (146) IntLit -> . INT
    (147) FloatLit -> . FLOAT
    (148) RuneLit -> . RUNE
    (149) StringLit -> . STRING
    (144) TrueLit -> . TRUE
    (145) FalseLit -> . FALSE

    ID              shift and go to state 89
    LPAREN          shift and go to state 86
    ADD             shift and go to state 84
    SUB             shift and go to state 70
    NOT             shift and go to state 95
    XOR             shift and go to state 79
    MUL             shift and go to state 75
    AND             shift and go to state 90
    INT             shift and go to state 92
    FLOAT           shift and go to state 93
    RUNE            shift and go to state 78
    STRING          shift and go to state 80
    TRUE            shift and go to state 76
    FALSE           shift and go to state 91

    RuneLit                        shift and go to state 87
    UnaryOp                        shift and go to state 71
    TrueLit                        shift and go to state 96
    BasicLit                       shift and go to state 77
    UnaryExpr                      shift and go to state 81
    FloatLit                       shift and go to state 82
    FalseLit                       shift and go to state 72
    IntLit                         shift and go to state 74
    Literal                        shift and go to state 73
    PrimaryExpr                    shift and go to state 83
    StringLit                      shift and go to state 94
    Expression                     shift and go to state 325

state 320

    (201) ExprCaseClause -> OpenS ExprSwitchCase . COLON StatementList CloseS

    COLON           shift and go to state 326


state 321

    (203) DefCaseClause -> OpenS DEFAULT COLON . StatementList CloseS
    (85) StatementList -> . Statement_curl
    (86) Statement_curl -> . Statement_curl Statement SEMICOLON
    (87) Statement_curl -> .

    ID              reduce using rule 87 (Statement_curl -> .)
    RETURN          reduce using rule 87 (Statement_curl -> .)
    BREAK           reduce using rule 87 (Statement_curl -> .)
    CONTINUE        reduce using rule 87 (Statement_curl -> .)
    GOTO            reduce using rule 87 (Statement_curl -> .)
    FALLTHROUGH     reduce using rule 87 (Statement_curl -> .)
    IF              reduce using rule 87 (Statement_curl -> .)
    FOR             reduce using rule 87 (Statement_curl -> .)
    CONST           reduce using rule 87 (Statement_curl -> .)
    TYPE            reduce using rule 87 (Statement_curl -> .)
    VAR             reduce using rule 87 (Statement_curl -> .)
    SWITCH          reduce using rule 87 (Statement_curl -> .)
    LPAREN          reduce using rule 87 (Statement_curl -> .)
    ADD             reduce using rule 87 (Statement_curl -> .)
    SUB             reduce using rule 87 (Statement_curl -> .)
    NOT             reduce using rule 87 (Statement_curl -> .)
    XOR             reduce using rule 87 (Statement_curl -> .)
    MUL             reduce using rule 87 (Statement_curl -> .)
    AND             reduce using rule 87 (Statement_curl -> .)
    INT             reduce using rule 87 (Statement_curl -> .)
    FLOAT           reduce using rule 87 (Statement_curl -> .)
    RUNE            reduce using rule 87 (Statement_curl -> .)
    STRING          reduce using rule 87 (Statement_curl -> .)
    TRUE            reduce using rule 87 (Statement_curl -> .)
    FALSE           reduce using rule 87 (Statement_curl -> .)
    SEMICOLON       reduce using rule 87 (Statement_curl -> .)
    LBRACE          reduce using rule 87 (Statement_curl -> .)
    RBRACE          reduce using rule 87 (Statement_curl -> .)
    CASE            reduce using rule 87 (Statement_curl -> .)

    Statement_curl                 shift and go to state 168
    StatementList                  shift and go to state 327

state 322

    (194) IfStmt -> IF OpenS Expression Block CloseS ELSE OpenS . Block CloseS
    (84) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 114

    Block                          shift and go to state 328

state 323

    (193) IfStmt -> IF OpenS Expression Block CloseS ELSE IfStmt .

    SEMICOLON       reduce using rule 193 (IfStmt -> IF OpenS Expression Block CloseS ELSE IfStmt .)


state 324

    (212) ForClause -> SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt .

    LBRACE          reduce using rule 212 (ForClause -> SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt .)


state 325

    (202) ExprSwitchCase -> CASE Expression .
    (89) Expression -> Expression . BinaryOp UnaryExpr
    (92) BinaryOp -> . LOR
    (93) BinaryOp -> . LAND
    (94) BinaryOp -> . RelOp
    (95) BinaryOp -> . AddOp
    (96) BinaryOp -> . MulOp
    (97) RelOp -> . EQL
    (98) RelOp -> . NEQ
    (99) RelOp -> . LTN
    (100) RelOp -> . LEQ
    (101) RelOp -> . GTN
    (102) RelOp -> . GEQ
    (103) AddOp -> . ADD
    (104) AddOp -> . SUB
    (105) AddOp -> . OR
    (106) AddOp -> . XOR
    (107) MulOp -> . MUL
    (108) MulOp -> . DIV
    (109) MulOp -> . MOD
    (110) MulOp -> . SHL
    (111) MulOp -> . SHR
    (112) MulOp -> . AND
    (113) MulOp -> . AND_NOT

    COLON           reduce using rule 202 (ExprSwitchCase -> CASE Expression .)
    LOR             shift and go to state 130
    LAND            shift and go to state 135
    EQL             shift and go to state 144
    NEQ             shift and go to state 133
    LTN             shift and go to state 146
    LEQ             shift and go to state 149
    GTN             shift and go to state 142
    GEQ             shift and go to state 134
    ADD             shift and go to state 143
    SUB             shift and go to state 129
    OR              shift and go to state 150
    XOR             shift and go to state 140
    MUL             shift and go to state 131
    DIV             shift and go to state 132
    MOD             shift and go to state 151
    SHL             shift and go to state 145
    SHR             shift and go to state 139
    AND             shift and go to state 147
    AND_NOT         shift and go to state 136

    AddOp                          shift and go to state 138
    BinaryOp                       shift and go to state 137
    MulOp                          shift and go to state 141
    RelOp                          shift and go to state 148

state 326

    (201) ExprCaseClause -> OpenS ExprSwitchCase COLON . StatementList CloseS
    (85) StatementList -> . Statement_curl
    (86) Statement_curl -> . Statement_curl Statement SEMICOLON
    (87) Statement_curl -> .

    ID              reduce using rule 87 (Statement_curl -> .)
    RETURN          reduce using rule 87 (Statement_curl -> .)
    BREAK           reduce using rule 87 (Statement_curl -> .)
    CONTINUE        reduce using rule 87 (Statement_curl -> .)
    GOTO            reduce using rule 87 (Statement_curl -> .)
    FALLTHROUGH     reduce using rule 87 (Statement_curl -> .)
    IF              reduce using rule 87 (Statement_curl -> .)
    FOR             reduce using rule 87 (Statement_curl -> .)
    CONST           reduce using rule 87 (Statement_curl -> .)
    TYPE            reduce using rule 87 (Statement_curl -> .)
    VAR             reduce using rule 87 (Statement_curl -> .)
    SWITCH          reduce using rule 87 (Statement_curl -> .)
    LPAREN          reduce using rule 87 (Statement_curl -> .)
    ADD             reduce using rule 87 (Statement_curl -> .)
    SUB             reduce using rule 87 (Statement_curl -> .)
    NOT             reduce using rule 87 (Statement_curl -> .)
    XOR             reduce using rule 87 (Statement_curl -> .)
    MUL             reduce using rule 87 (Statement_curl -> .)
    AND             reduce using rule 87 (Statement_curl -> .)
    INT             reduce using rule 87 (Statement_curl -> .)
    FLOAT           reduce using rule 87 (Statement_curl -> .)
    RUNE            reduce using rule 87 (Statement_curl -> .)
    STRING          reduce using rule 87 (Statement_curl -> .)
    TRUE            reduce using rule 87 (Statement_curl -> .)
    FALSE           reduce using rule 87 (Statement_curl -> .)
    SEMICOLON       reduce using rule 87 (Statement_curl -> .)
    LBRACE          reduce using rule 87 (Statement_curl -> .)
    RBRACE          reduce using rule 87 (Statement_curl -> .)
    CASE            reduce using rule 87 (Statement_curl -> .)

    Statement_curl                 shift and go to state 168
    StatementList                  shift and go to state 329

state 327

    (203) DefCaseClause -> OpenS DEFAULT COLON StatementList . CloseS
    (3) CloseS -> .

    RBRACE          reduce using rule 3 (CloseS -> .)
    CASE            reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 330

state 328

    (194) IfStmt -> IF OpenS Expression Block CloseS ELSE OpenS Block . CloseS
    (3) CloseS -> .

    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 331

state 329

    (201) ExprCaseClause -> OpenS ExprSwitchCase COLON StatementList . CloseS
    (3) CloseS -> .

    RBRACE          reduce using rule 3 (CloseS -> .)
    CASE            reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 332

state 330

    (203) DefCaseClause -> OpenS DEFAULT COLON StatementList CloseS .

    RBRACE          reduce using rule 203 (DefCaseClause -> OpenS DEFAULT COLON StatementList CloseS .)
    CASE            reduce using rule 203 (DefCaseClause -> OpenS DEFAULT COLON StatementList CloseS .)


state 331

    (194) IfStmt -> IF OpenS Expression Block CloseS ELSE OpenS Block CloseS .

    SEMICOLON       reduce using rule 194 (IfStmt -> IF OpenS Expression Block CloseS ELSE OpenS Block CloseS .)


state 332

    (201) ExprCaseClause -> OpenS ExprSwitchCase COLON StatementList CloseS .

    RBRACE          reduce using rule 201 (ExprCaseClause -> OpenS ExprSwitchCase COLON StatementList CloseS .)
    CASE            reduce using rule 201 (ExprCaseClause -> OpenS ExprSwitchCase COLON StatementList CloseS .)

