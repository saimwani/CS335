Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> SourceFile
Rule 1     SourceFile -> PackageClause SEMICOLON ImportDecl_curl TopLevelDecl_curl
Rule 2     OpenS -> <empty>
Rule 3     CloseS -> <empty>
Rule 4     OpenStructS -> <empty>
Rule 5     CloseStructS -> <empty>
Rule 6     TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON
Rule 7     TopLevelDecl_curl -> <empty>
Rule 8     ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON
Rule 9     ImportDecl_curl -> <empty>
Rule 10    PackageClause -> PACKAGE ID
Rule 11    ImportDecl -> IMPORT ImportSpec
Rule 12    ImportDecl -> IMPORT LPAREN ImportSpec_curl RPAREN
Rule 13    ImportSpec_curl -> ImportSpec_curl ImportSpec SEMICOLON
Rule 14    ImportSpec_curl -> <empty>
Rule 15    ImportSpec -> DOT ImportPath
Rule 16    ImportSpec -> ID ImportPath
Rule 17    ImportSpec -> ImportPath
Rule 18    ImportPath -> STRING
Rule 19    TopLevelDecl -> Declaration
Rule 20    TopLevelDecl -> FunctionDecl
Rule 21    Declaration -> ConstDecl
Rule 22    Declaration -> StructDecl
Rule 23    Declaration -> VarDecl
Rule 24    ConstDecl -> CONST ConstSpec
Rule 25    ConstDecl -> CONST LPAREN ConstSpec_curl RPAREN
Rule 26    ConstSpec_curl -> ConstSpec_curl ConstSpec SEMICOLON
Rule 27    ConstSpec_curl -> <empty>
Rule 28    ConstSpec -> IdentifierList ID ASSIGN ExpressionList
Rule 29    IdentifierList -> ID
Rule 30    IdentifierList -> ID COMMA IdentifierList
Rule 31    ExpressionList -> Expression
Rule 32    ExpressionList -> ExpressionList COMMA Expression
Rule 33    StructDecl -> TYPE StructName StructType
Rule 34    StructName -> ID
Rule 35    VarDecl -> VAR VarSpec
Rule 36    VarDecl -> VAR LPAREN VarSpec_curl RPAREN
Rule 37    VarSpec_curl -> VarSpec_curl VarSpec SEMICOLON
Rule 38    VarSpec_curl -> <empty>
Rule 39    VarSpec -> IdentifierList Type ASSIGN ExpressionList
Rule 40    VarSpec -> IdentifierList ID ASSIGN ExpressionList
Rule 41    VarSpec -> IdentifierList ASSIGN ExpressionList
Rule 42    VarSpec -> IdentifierList ID
Rule 43    VarSpec -> IdentifierList Type
Rule 44    FunctionDecl -> FUNC FuncName OpenS Signature Block CloseS
Rule 45    FuncName -> ID
Rule 46    Type -> LPAREN Type RPAREN
Rule 47    Type -> LPAREN ID RPAREN
Rule 48    Type -> TypeLit
Rule 49    TypeLit -> ArrayType
Rule 50    TypeLit -> PointerType
Rule 51    TypeLit -> SliceType
Rule 52    ArrayType -> LBRACK INT RBRACK Type
Rule 53    ArrayType -> LBRACK INT RBRACK ID
Rule 54    SliceType -> LBRACK RBRACK Type
Rule 55    SliceType -> LBRACK RBRACK ID
Rule 56    StructType -> STRUCT OpenStructS LBRACE FieldDecl_curl RBRACE CloseStructS
Rule 57    FieldDecl_curl -> FieldDecl_curl FieldDecl SEMICOLON
Rule 58    FieldDecl_curl -> <empty>
Rule 59    FieldDecl -> ID COMMA IdentifierList Type
Rule 60    FieldDecl -> ID COMMA IdentifierList ID
Rule 61    FieldDecl -> ID Type
Rule 62    FieldDecl -> ID ID
Rule 63    FieldDecl -> ID STRUCT MUL ID
Rule 64    FieldDecl -> ID COMMA IdentifierList STRUCT MUL ID
Rule 65    PointerType -> MUL Type
Rule 66    PointerType -> MUL ID
Rule 67    Signature -> Parameters Result
Rule 68    Result -> LPAREN TypeList RPAREN
Rule 69    Result -> <empty>
Rule 70    TypeList -> ID
Rule 71    TypeList -> Type
Rule 72    TypeList -> TypeList COMMA ID
Rule 73    TypeList -> TypeList COMMA Type
Rule 74    Parameters -> LPAREN RPAREN
Rule 75    Parameters -> LPAREN ParameterList RPAREN
Rule 76    Parameters -> LPAREN ParameterList COMMA RPAREN
Rule 77    ParameterList -> ParameterDecl
Rule 78    ParameterList -> ParameterList COMMA ParameterDecl
Rule 79    ParameterDecl -> ParaIdList Type
Rule 80    ParameterDecl -> ID Type
Rule 81    ParameterDecl -> ParaIdList ID
Rule 82    ParameterDecl -> ID ID
Rule 83    ParaIdList -> ID COMMA ID
Rule 84    ParaIdList -> ParaIdList COMMA ID
Rule 85    Block -> LBRACE StatementList RBRACE
Rule 86    StatementList -> Statement_curl
Rule 87    Statement_curl -> Statement_curl Statement SEMICOLON
Rule 88    Statement_curl -> <empty>
Rule 89    Expression -> UnaryExpr
Rule 90    Expression -> Expression BinaryOp UnaryExpr
Rule 91    UnaryExpr -> PrimaryExpr
Rule 92    UnaryExpr -> UnaryOp UnaryExpr
Rule 93    BinaryOp -> LOR
Rule 94    BinaryOp -> LAND
Rule 95    BinaryOp -> RelOp
Rule 96    BinaryOp -> AddOp
Rule 97    BinaryOp -> MulOp
Rule 98    RelOp -> EQL
Rule 99    RelOp -> NEQ
Rule 100   RelOp -> LTN
Rule 101   RelOp -> LEQ
Rule 102   RelOp -> GTN
Rule 103   RelOp -> GEQ
Rule 104   AddOp -> ADD
Rule 105   AddOp -> SUB
Rule 106   AddOp -> OR
Rule 107   AddOp -> XOR
Rule 108   MulOp -> MUL
Rule 109   MulOp -> DIV
Rule 110   MulOp -> MOD
Rule 111   MulOp -> SHL
Rule 112   MulOp -> SHR
Rule 113   MulOp -> AND
Rule 114   MulOp -> AND_NOT
Rule 115   UnaryOp -> ADD
Rule 116   UnaryOp -> SUB
Rule 117   UnaryOp -> NOT
Rule 118   UnaryOp -> XOR
Rule 119   UnaryOp -> MUL
Rule 120   UnaryOp -> AND
Rule 121   PrimaryExpr -> Literal
Rule 122   PrimaryExpr -> ID
Rule 123   PrimaryExpr -> PrimaryExpr DOT ID
Rule 124   PrimaryExpr -> LPAREN Expression RPAREN
Rule 125   PrimaryExpr -> PrimaryExpr Index
Rule 126   PrimaryExpr -> PrimaryExpr Slice
Rule 127   PrimaryExpr -> PrimaryExpr Arguments
Rule 128   Index -> LBRACK Expression RBRACK
Rule 129   Slice -> LBRACK Expression COLON Expression RBRACK
Rule 130   Slice -> LBRACK COLON Expression RBRACK
Rule 131   Slice -> LBRACK Expression COLON RBRACK
Rule 132   Slice -> LBRACK COLON RBRACK
Rule 133   Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK
Rule 134   Slice -> LBRACK COLON Expression COLON Expression RBRACK
Rule 135   Arguments -> LPAREN RPAREN
Rule 136   Arguments -> LPAREN ExpressionList RPAREN
Rule 137   Arguments -> LPAREN ExpressionList COMMA RPAREN
Rule 138   Literal -> BasicLit
Rule 139   BasicLit -> IntLit
Rule 140   BasicLit -> FloatLit
Rule 141   BasicLit -> RuneLit
Rule 142   BasicLit -> StringLit
Rule 143   BasicLit -> TrueLit
Rule 144   BasicLit -> FalseLit
Rule 145   TrueLit -> TRUE
Rule 146   FalseLit -> FALSE
Rule 147   IntLit -> INT
Rule 148   FloatLit -> FLOAT
Rule 149   RuneLit -> RUNE
Rule 150   StringLit -> STRING
Rule 151   Statement -> Declaration
Rule 152   Statement -> LabelledStmt
Rule 153   Statement -> SimpleStmt
Rule 154   Statement -> ReturnStmt
Rule 155   Statement -> BreakStmt
Rule 156   Statement -> ContinueStmt
Rule 157   Statement -> GotoStmt
Rule 158   Statement -> FallthroughStmt
Rule 159   Statement -> IfStmt
Rule 160   Statement -> OpenS Block CloseS
Rule 161   Statement -> SwitchStmt
Rule 162   Statement -> ForStmt
Rule 163   SimpleStmt -> Expression
Rule 164   SimpleStmt -> IncDecStmt
Rule 165   SimpleStmt -> Assignment
Rule 166   SimpleStmt -> ShortVarDecl
Rule 167   SimpleStmt -> <empty>
Rule 168   IncDecStmt -> Expression INC
Rule 169   IncDecStmt -> Expression DEC
Rule 170   Assignment -> ExpressionList AssignOp ExpressionList
Rule 171   AssignOp -> ADD_ASSIGN
Rule 172   AssignOp -> SUB_ASSIGN
Rule 173   AssignOp -> MUL_ASSIGN
Rule 174   AssignOp -> DIV_ASSIGN
Rule 175   AssignOp -> MOD_ASSIGN
Rule 176   AssignOp -> AND_ASSIGN
Rule 177   AssignOp -> AND_NOT_ASSIGN
Rule 178   AssignOp -> OR_ASSIGN
Rule 179   AssignOp -> XOR_ASSIGN
Rule 180   AssignOp -> SHL_ASSIGN
Rule 181   AssignOp -> SHR_ASSIGN
Rule 182   AssignOp -> ASSIGN
Rule 183   LabelledStmt -> ID COLON Statement
Rule 184   ReturnStmt -> RETURN ExpressionList
Rule 185   ReturnStmt -> RETURN
Rule 186   BreakStmt -> BREAK ID
Rule 187   BreakStmt -> BREAK
Rule 188   ContinueStmt -> CONTINUE ID
Rule 189   ContinueStmt -> CONTINUE
Rule 190   GotoStmt -> GOTO ID
Rule 191   FallthroughStmt -> FALLTHROUGH
Rule 192   ShortVarDecl -> IdentifierList DEFINE ExpressionList
Rule 193   IfStmt -> IF OpenS Expression Block CloseS
Rule 194   IfStmt -> IF OpenS Expression Block CloseS ELSE IfStmt
Rule 195   IfStmt -> IF OpenS Expression Block CloseS ELSE OpenS Block CloseS
Rule 196   SwitchStmt -> ExprSwitchStmt
Rule 197   ExprSwitchStmt -> SWITCH ExpressionName LBRACE OpenW ExprCaseClause_curl CloseW RBRACE
Rule 198   ExpressionName -> Expression
Rule 199   ExprCaseClause_curl -> ExprCaseClause_curl ExprCaseClause
Rule 200   ExprCaseClause_curl -> DefCaseClause
Rule 201   ExprCaseClause_curl -> <empty>
Rule 202   ExprCaseClause -> OpenS ExprSwitchCase COLON StatementList CloseS
Rule 203   ExprSwitchCase -> CASE Expression
Rule 204   DefCaseClause -> OpenS DEFAULT COLON StatementList CloseS
Rule 205   ForStmt -> FOR OpenS OpenF Expression Block CloseF CloseS
Rule 206   ForStmt -> FOR OpenS OpenF ForClause Block CloseF CloseS
Rule 207   ForStmt -> FOR OpenS OpenF Block CloseF CloseS
Rule 208   OpenF -> <empty>
Rule 209   CloseF -> <empty>
Rule 210   OpenW -> <empty>
Rule 211   CloseW -> <empty>
Rule 212   ForClause -> SimpleStmt SEMICOLON SEMICOLON SimpleStmt
Rule 213   ForClause -> SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt

Terminals, with rules where they appear

ADD                  : 104 115
ADD_ASSIGN           : 171
AND                  : 113 120
AND_ASSIGN           : 176
AND_NOT              : 114
AND_NOT_ASSIGN       : 177
ASSIGN               : 28 39 40 41 182
BREAK                : 186 187
CASE                 : 203
COLON                : 129 130 131 132 133 133 134 134 183 202 204
COMMA                : 30 32 59 60 64 72 73 76 78 83 84 137
CONST                : 24 25
CONTINUE             : 188 189
DEC                  : 169
DEFAULT              : 204
DEFINE               : 192
DIV                  : 109
DIV_ASSIGN           : 174
DOT                  : 15 123
ELSE                 : 194 195
EQL                  : 98
FALLTHROUGH          : 191
FALSE                : 146
FLOAT                : 148
FOR                  : 205 206 207
FUNC                 : 44
GEQ                  : 103
GOTO                 : 190
GTN                  : 102
ID                   : 10 16 28 29 30 34 40 42 45 47 53 55 59 60 60 61 62 62 63 63 64 64 66 70 72 80 81 82 82 83 83 84 122 123 183 186 188 190
IF                   : 193 194 195
IMPORT               : 11 12
INC                  : 168
INT                  : 52 53 147
LAND                 : 94
LBRACE               : 56 85 197
LBRACK               : 52 53 54 55 128 129 130 131 132 133 134
LEQ                  : 101
LOR                  : 93
LPAREN               : 12 25 36 46 47 68 74 75 76 124 135 136 137
LTN                  : 100
MOD                  : 110
MOD_ASSIGN           : 175
MUL                  : 63 64 65 66 108 119
MUL_ASSIGN           : 173
NEQ                  : 99
NOT                  : 117
OR                   : 106
OR_ASSIGN            : 178
PACKAGE              : 10
RBRACE               : 56 85 197
RBRACK               : 52 53 54 55 128 129 130 131 132 133 134
RETURN               : 184 185
RPAREN               : 12 25 36 46 47 68 74 75 76 124 135 136 137
RUNE                 : 149
SEMICOLON            : 1 6 8 13 26 37 57 87 212 212 213 213
SHL                  : 111
SHL_ASSIGN           : 180
SHR                  : 112
SHR_ASSIGN           : 181
STRING               : 18 150
STRUCT               : 56 63 64
SUB                  : 105 116
SUB_ASSIGN           : 172
SWITCH               : 197
TRUE                 : 145
TYPE                 : 33
VAR                  : 35 36
XOR                  : 107 118
XOR_ASSIGN           : 179
error                : 

Nonterminals, with rules where they appear

AddOp                : 96
Arguments            : 127
ArrayType            : 49
AssignOp             : 170
Assignment           : 165
BasicLit             : 138
BinaryOp             : 90
Block                : 44 160 193 194 195 195 205 206 207
BreakStmt            : 155
CloseF               : 205 206 207
CloseS               : 44 160 193 194 195 195 202 204 205 206 207
CloseStructS         : 56
CloseW               : 197
ConstDecl            : 21
ConstSpec            : 24 26
ConstSpec_curl       : 25 26
ContinueStmt         : 156
Declaration          : 19 151
DefCaseClause        : 200
ExprCaseClause       : 199
ExprCaseClause_curl  : 197 199
ExprSwitchCase       : 202
ExprSwitchStmt       : 196
Expression           : 31 32 90 124 128 129 129 130 131 133 133 133 134 134 163 168 169 193 194 195 198 203 205 213
ExpressionList       : 28 32 39 40 41 136 137 170 170 184 192
ExpressionName       : 197
FallthroughStmt      : 158
FalseLit             : 144
FieldDecl            : 57
FieldDecl_curl       : 56 57
FloatLit             : 140
ForClause            : 206
ForStmt              : 162
FuncName             : 44
FunctionDecl         : 20
GotoStmt             : 157
IdentifierList       : 28 30 39 40 41 42 43 59 60 64 192
IfStmt               : 159 194
ImportDecl           : 8
ImportDecl_curl      : 1 8
ImportPath           : 15 16 17
ImportSpec           : 11 13
ImportSpec_curl      : 12 13
IncDecStmt           : 164
Index                : 125
IntLit               : 139
LabelledStmt         : 152
Literal              : 121
MulOp                : 97
OpenF                : 205 206 207
OpenS                : 44 160 193 194 195 195 202 204 205 206 207
OpenStructS          : 56
OpenW                : 197
PackageClause        : 1
ParaIdList           : 79 81 84
ParameterDecl        : 77 78
ParameterList        : 75 76 78
Parameters           : 67
PointerType          : 50
PrimaryExpr          : 91 123 125 126 127
RelOp                : 95
Result               : 67
ReturnStmt           : 154
RuneLit              : 141
ShortVarDecl         : 166
Signature            : 44
SimpleStmt           : 153 212 212 213 213
Slice                : 126
SliceType            : 51
SourceFile           : 0
Statement            : 87 183
StatementList        : 85 202 204
Statement_curl       : 86 87
StringLit            : 142
StructDecl           : 22
StructName           : 33
StructType           : 33
SwitchStmt           : 161
TopLevelDecl         : 6
TopLevelDecl_curl    : 1 6
TrueLit              : 143
Type                 : 39 43 46 52 54 59 61 65 71 73 79 80
TypeList             : 68 72 73
TypeLit              : 48
UnaryExpr            : 89 90 92
UnaryOp              : 92
VarDecl              : 23
VarSpec              : 35 37
VarSpec_curl         : 36 37

Parsing method: LALR

state 0

    (0) S' -> . SourceFile
    (1) SourceFile -> . PackageClause SEMICOLON ImportDecl_curl TopLevelDecl_curl
    (10) PackageClause -> . PACKAGE ID

    PACKAGE         shift and go to state 3

    PackageClause                  shift and go to state 1
    SourceFile                     shift and go to state 2

state 1

    (1) SourceFile -> PackageClause . SEMICOLON ImportDecl_curl TopLevelDecl_curl

    SEMICOLON       shift and go to state 4


state 2

    (0) S' -> SourceFile .



state 3

    (10) PackageClause -> PACKAGE . ID

    ID              shift and go to state 5


state 4

    (1) SourceFile -> PackageClause SEMICOLON . ImportDecl_curl TopLevelDecl_curl
    (8) ImportDecl_curl -> . ImportDecl_curl ImportDecl SEMICOLON
    (9) ImportDecl_curl -> .

    IMPORT          reduce using rule 9 (ImportDecl_curl -> .)
    FUNC            reduce using rule 9 (ImportDecl_curl -> .)
    CONST           reduce using rule 9 (ImportDecl_curl -> .)
    TYPE            reduce using rule 9 (ImportDecl_curl -> .)
    VAR             reduce using rule 9 (ImportDecl_curl -> .)
    $end            reduce using rule 9 (ImportDecl_curl -> .)

    ImportDecl_curl                shift and go to state 6

state 5

    (10) PackageClause -> PACKAGE ID .

    SEMICOLON       reduce using rule 10 (PackageClause -> PACKAGE ID .)


state 6

    (1) SourceFile -> PackageClause SEMICOLON ImportDecl_curl . TopLevelDecl_curl
    (8) ImportDecl_curl -> ImportDecl_curl . ImportDecl SEMICOLON
    (6) TopLevelDecl_curl -> . TopLevelDecl_curl TopLevelDecl SEMICOLON
    (7) TopLevelDecl_curl -> .
    (11) ImportDecl -> . IMPORT ImportSpec
    (12) ImportDecl -> . IMPORT LPAREN ImportSpec_curl RPAREN

    FUNC            reduce using rule 7 (TopLevelDecl_curl -> .)
    CONST           reduce using rule 7 (TopLevelDecl_curl -> .)
    TYPE            reduce using rule 7 (TopLevelDecl_curl -> .)
    VAR             reduce using rule 7 (TopLevelDecl_curl -> .)
    $end            reduce using rule 7 (TopLevelDecl_curl -> .)
    IMPORT          shift and go to state 8

    TopLevelDecl_curl              shift and go to state 7
    ImportDecl                     shift and go to state 9

state 7

    (1) SourceFile -> PackageClause SEMICOLON ImportDecl_curl TopLevelDecl_curl .
    (6) TopLevelDecl_curl -> TopLevelDecl_curl . TopLevelDecl SEMICOLON
    (19) TopLevelDecl -> . Declaration
    (20) TopLevelDecl -> . FunctionDecl
    (21) Declaration -> . ConstDecl
    (22) Declaration -> . StructDecl
    (23) Declaration -> . VarDecl
    (44) FunctionDecl -> . FUNC FuncName OpenS Signature Block CloseS
    (24) ConstDecl -> . CONST ConstSpec
    (25) ConstDecl -> . CONST LPAREN ConstSpec_curl RPAREN
    (33) StructDecl -> . TYPE StructName StructType
    (35) VarDecl -> . VAR VarSpec
    (36) VarDecl -> . VAR LPAREN VarSpec_curl RPAREN

    $end            reduce using rule 1 (SourceFile -> PackageClause SEMICOLON ImportDecl_curl TopLevelDecl_curl .)
    FUNC            shift and go to state 15
    CONST           shift and go to state 10
    TYPE            shift and go to state 19
    VAR             shift and go to state 16

    StructDecl                     shift and go to state 11
    VarDecl                        shift and go to state 18
    FunctionDecl                   shift and go to state 12
    TopLevelDecl                   shift and go to state 13
    Declaration                    shift and go to state 14
    ConstDecl                      shift and go to state 17

state 8

    (11) ImportDecl -> IMPORT . ImportSpec
    (12) ImportDecl -> IMPORT . LPAREN ImportSpec_curl RPAREN
    (15) ImportSpec -> . DOT ImportPath
    (16) ImportSpec -> . ID ImportPath
    (17) ImportSpec -> . ImportPath
    (18) ImportPath -> . STRING

    LPAREN          shift and go to state 23
    DOT             shift and go to state 25
    ID              shift and go to state 24
    STRING          shift and go to state 20

    ImportSpec                     shift and go to state 21
    ImportPath                     shift and go to state 22

state 9

    (8) ImportDecl_curl -> ImportDecl_curl ImportDecl . SEMICOLON

    SEMICOLON       shift and go to state 26


state 10

    (24) ConstDecl -> CONST . ConstSpec
    (25) ConstDecl -> CONST . LPAREN ConstSpec_curl RPAREN
    (28) ConstSpec -> . IdentifierList ID ASSIGN ExpressionList
    (29) IdentifierList -> . ID
    (30) IdentifierList -> . ID COMMA IdentifierList

    LPAREN          shift and go to state 28
    ID              shift and go to state 30

    ConstSpec                      shift and go to state 27
    IdentifierList                 shift and go to state 29

state 11

    (22) Declaration -> StructDecl .

    SEMICOLON       reduce using rule 22 (Declaration -> StructDecl .)


state 12

    (20) TopLevelDecl -> FunctionDecl .

    SEMICOLON       reduce using rule 20 (TopLevelDecl -> FunctionDecl .)


state 13

    (6) TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl . SEMICOLON

    SEMICOLON       shift and go to state 31


state 14

    (19) TopLevelDecl -> Declaration .

    SEMICOLON       reduce using rule 19 (TopLevelDecl -> Declaration .)


state 15

    (44) FunctionDecl -> FUNC . FuncName OpenS Signature Block CloseS
    (45) FuncName -> . ID

    ID              shift and go to state 33

    FuncName                       shift and go to state 32

state 16

    (35) VarDecl -> VAR . VarSpec
    (36) VarDecl -> VAR . LPAREN VarSpec_curl RPAREN
    (39) VarSpec -> . IdentifierList Type ASSIGN ExpressionList
    (40) VarSpec -> . IdentifierList ID ASSIGN ExpressionList
    (41) VarSpec -> . IdentifierList ASSIGN ExpressionList
    (42) VarSpec -> . IdentifierList ID
    (43) VarSpec -> . IdentifierList Type
    (29) IdentifierList -> . ID
    (30) IdentifierList -> . ID COMMA IdentifierList

    LPAREN          shift and go to state 35
    ID              shift and go to state 30

    VarSpec                        shift and go to state 34
    IdentifierList                 shift and go to state 36

state 17

    (21) Declaration -> ConstDecl .

    SEMICOLON       reduce using rule 21 (Declaration -> ConstDecl .)


state 18

    (23) Declaration -> VarDecl .

    SEMICOLON       reduce using rule 23 (Declaration -> VarDecl .)


state 19

    (33) StructDecl -> TYPE . StructName StructType
    (34) StructName -> . ID

    ID              shift and go to state 38

    StructName                     shift and go to state 37

state 20

    (18) ImportPath -> STRING .

    SEMICOLON       reduce using rule 18 (ImportPath -> STRING .)


state 21

    (11) ImportDecl -> IMPORT ImportSpec .

    SEMICOLON       reduce using rule 11 (ImportDecl -> IMPORT ImportSpec .)


state 22

    (17) ImportSpec -> ImportPath .

    SEMICOLON       reduce using rule 17 (ImportSpec -> ImportPath .)


state 23

    (12) ImportDecl -> IMPORT LPAREN . ImportSpec_curl RPAREN
    (13) ImportSpec_curl -> . ImportSpec_curl ImportSpec SEMICOLON
    (14) ImportSpec_curl -> .

    RPAREN          reduce using rule 14 (ImportSpec_curl -> .)
    DOT             reduce using rule 14 (ImportSpec_curl -> .)
    ID              reduce using rule 14 (ImportSpec_curl -> .)
    STRING          reduce using rule 14 (ImportSpec_curl -> .)

    ImportSpec_curl                shift and go to state 39

state 24

    (16) ImportSpec -> ID . ImportPath
    (18) ImportPath -> . STRING

    STRING          shift and go to state 20

    ImportPath                     shift and go to state 40

state 25

    (15) ImportSpec -> DOT . ImportPath
    (18) ImportPath -> . STRING

    STRING          shift and go to state 20

    ImportPath                     shift and go to state 41

state 26

    (8) ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .

    IMPORT          reduce using rule 8 (ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .)
    FUNC            reduce using rule 8 (ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .)
    CONST           reduce using rule 8 (ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .)
    TYPE            reduce using rule 8 (ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .)
    VAR             reduce using rule 8 (ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .)
    $end            reduce using rule 8 (ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON .)


state 27

    (24) ConstDecl -> CONST ConstSpec .

    SEMICOLON       reduce using rule 24 (ConstDecl -> CONST ConstSpec .)


state 28

    (25) ConstDecl -> CONST LPAREN . ConstSpec_curl RPAREN
    (26) ConstSpec_curl -> . ConstSpec_curl ConstSpec SEMICOLON
    (27) ConstSpec_curl -> .

    RPAREN          reduce using rule 27 (ConstSpec_curl -> .)
    ID              reduce using rule 27 (ConstSpec_curl -> .)

    ConstSpec_curl                 shift and go to state 42

state 29

    (28) ConstSpec -> IdentifierList . ID ASSIGN ExpressionList

    ID              shift and go to state 43


state 30

    (29) IdentifierList -> ID .
    (30) IdentifierList -> ID . COMMA IdentifierList

    ID              reduce using rule 29 (IdentifierList -> ID .)
    ASSIGN          reduce using rule 29 (IdentifierList -> ID .)
    LPAREN          reduce using rule 29 (IdentifierList -> ID .)
    LBRACK          reduce using rule 29 (IdentifierList -> ID .)
    MUL             reduce using rule 29 (IdentifierList -> ID .)
    DEFINE          reduce using rule 29 (IdentifierList -> ID .)
    STRUCT          reduce using rule 29 (IdentifierList -> ID .)
    COMMA           shift and go to state 44


state 31

    (6) TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON .

    FUNC            reduce using rule 6 (TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON .)
    CONST           reduce using rule 6 (TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON .)
    TYPE            reduce using rule 6 (TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON .)
    VAR             reduce using rule 6 (TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON .)
    $end            reduce using rule 6 (TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON .)


state 32

    (44) FunctionDecl -> FUNC FuncName . OpenS Signature Block CloseS
    (2) OpenS -> .

    LPAREN          reduce using rule 2 (OpenS -> .)

    OpenS                          shift and go to state 45

state 33

    (45) FuncName -> ID .

    LPAREN          reduce using rule 45 (FuncName -> ID .)


state 34

    (35) VarDecl -> VAR VarSpec .

    SEMICOLON       reduce using rule 35 (VarDecl -> VAR VarSpec .)


state 35

    (36) VarDecl -> VAR LPAREN . VarSpec_curl RPAREN
    (37) VarSpec_curl -> . VarSpec_curl VarSpec SEMICOLON
    (38) VarSpec_curl -> .

    RPAREN          reduce using rule 38 (VarSpec_curl -> .)
    ID              reduce using rule 38 (VarSpec_curl -> .)

    VarSpec_curl                   shift and go to state 46

state 36

    (39) VarSpec -> IdentifierList . Type ASSIGN ExpressionList
    (40) VarSpec -> IdentifierList . ID ASSIGN ExpressionList
    (41) VarSpec -> IdentifierList . ASSIGN ExpressionList
    (42) VarSpec -> IdentifierList . ID
    (43) VarSpec -> IdentifierList . Type
    (46) Type -> . LPAREN Type RPAREN
    (47) Type -> . LPAREN ID RPAREN
    (48) Type -> . TypeLit
    (49) TypeLit -> . ArrayType
    (50) TypeLit -> . PointerType
    (51) TypeLit -> . SliceType
    (52) ArrayType -> . LBRACK INT RBRACK Type
    (53) ArrayType -> . LBRACK INT RBRACK ID
    (65) PointerType -> . MUL Type
    (66) PointerType -> . MUL ID
    (54) SliceType -> . LBRACK RBRACK Type
    (55) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 55
    ASSIGN          shift and go to state 50
    LPAREN          shift and go to state 51
    LBRACK          shift and go to state 48
    MUL             shift and go to state 53

    Type                           shift and go to state 54
    ArrayType                      shift and go to state 49
    PointerType                    shift and go to state 52
    TypeLit                        shift and go to state 47
    SliceType                      shift and go to state 56

state 37

    (33) StructDecl -> TYPE StructName . StructType
    (56) StructType -> . STRUCT OpenStructS LBRACE FieldDecl_curl RBRACE CloseStructS

    STRUCT          shift and go to state 58

    StructType                     shift and go to state 57

state 38

    (34) StructName -> ID .

    STRUCT          reduce using rule 34 (StructName -> ID .)


state 39

    (12) ImportDecl -> IMPORT LPAREN ImportSpec_curl . RPAREN
    (13) ImportSpec_curl -> ImportSpec_curl . ImportSpec SEMICOLON
    (15) ImportSpec -> . DOT ImportPath
    (16) ImportSpec -> . ID ImportPath
    (17) ImportSpec -> . ImportPath
    (18) ImportPath -> . STRING

    RPAREN          shift and go to state 59
    DOT             shift and go to state 25
    ID              shift and go to state 24
    STRING          shift and go to state 20

    ImportSpec                     shift and go to state 60
    ImportPath                     shift and go to state 22

state 40

    (16) ImportSpec -> ID ImportPath .

    SEMICOLON       reduce using rule 16 (ImportSpec -> ID ImportPath .)


state 41

    (15) ImportSpec -> DOT ImportPath .

    SEMICOLON       reduce using rule 15 (ImportSpec -> DOT ImportPath .)


state 42

    (25) ConstDecl -> CONST LPAREN ConstSpec_curl . RPAREN
    (26) ConstSpec_curl -> ConstSpec_curl . ConstSpec SEMICOLON
    (28) ConstSpec -> . IdentifierList ID ASSIGN ExpressionList
    (29) IdentifierList -> . ID
    (30) IdentifierList -> . ID COMMA IdentifierList

    RPAREN          shift and go to state 61
    ID              shift and go to state 30

    ConstSpec                      shift and go to state 62
    IdentifierList                 shift and go to state 29

state 43

    (28) ConstSpec -> IdentifierList ID . ASSIGN ExpressionList

    ASSIGN          shift and go to state 63


state 44

    (30) IdentifierList -> ID COMMA . IdentifierList
    (29) IdentifierList -> . ID
    (30) IdentifierList -> . ID COMMA IdentifierList

    ID              shift and go to state 30

    IdentifierList                 shift and go to state 64

state 45

    (44) FunctionDecl -> FUNC FuncName OpenS . Signature Block CloseS
    (67) Signature -> . Parameters Result
    (74) Parameters -> . LPAREN RPAREN
    (75) Parameters -> . LPAREN ParameterList RPAREN
    (76) Parameters -> . LPAREN ParameterList COMMA RPAREN

    LPAREN          shift and go to state 65

    Parameters                     shift and go to state 66
    Signature                      shift and go to state 67

state 46

    (36) VarDecl -> VAR LPAREN VarSpec_curl . RPAREN
    (37) VarSpec_curl -> VarSpec_curl . VarSpec SEMICOLON
    (39) VarSpec -> . IdentifierList Type ASSIGN ExpressionList
    (40) VarSpec -> . IdentifierList ID ASSIGN ExpressionList
    (41) VarSpec -> . IdentifierList ASSIGN ExpressionList
    (42) VarSpec -> . IdentifierList ID
    (43) VarSpec -> . IdentifierList Type
    (29) IdentifierList -> . ID
    (30) IdentifierList -> . ID COMMA IdentifierList

    RPAREN          shift and go to state 68
    ID              shift and go to state 30

    VarSpec                        shift and go to state 69
    IdentifierList                 shift and go to state 36

state 47

    (48) Type -> TypeLit .

    RPAREN          reduce using rule 48 (Type -> TypeLit .)
    COMMA           reduce using rule 48 (Type -> TypeLit .)
    ASSIGN          reduce using rule 48 (Type -> TypeLit .)
    SEMICOLON       reduce using rule 48 (Type -> TypeLit .)


state 48

    (52) ArrayType -> LBRACK . INT RBRACK Type
    (53) ArrayType -> LBRACK . INT RBRACK ID
    (54) SliceType -> LBRACK . RBRACK Type
    (55) SliceType -> LBRACK . RBRACK ID

    INT             shift and go to state 70
    RBRACK          shift and go to state 71


state 49

    (49) TypeLit -> ArrayType .

    SEMICOLON       reduce using rule 49 (TypeLit -> ArrayType .)
    RPAREN          reduce using rule 49 (TypeLit -> ArrayType .)
    COMMA           reduce using rule 49 (TypeLit -> ArrayType .)
    ASSIGN          reduce using rule 49 (TypeLit -> ArrayType .)


state 50

    (41) VarSpec -> IdentifierList ASSIGN . ExpressionList
    (31) ExpressionList -> . Expression
    (32) ExpressionList -> . ExpressionList COMMA Expression
    (89) Expression -> . UnaryExpr
    (90) Expression -> . Expression BinaryOp UnaryExpr
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (138) Literal -> . BasicLit
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    ID              shift and go to state 91
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    RuneLit                        shift and go to state 89
    UnaryOp                        shift and go to state 73
    TrueLit                        shift and go to state 98
    BasicLit                       shift and go to state 79
    UnaryExpr                      shift and go to state 83
    FloatLit                       shift and go to state 84
    FalseLit                       shift and go to state 74
    IntLit                         shift and go to state 76
    Literal                        shift and go to state 75
    ExpressionList                 shift and go to state 87
    PrimaryExpr                    shift and go to state 85
    StringLit                      shift and go to state 96
    Expression                     shift and go to state 90

state 51

    (46) Type -> LPAREN . Type RPAREN
    (47) Type -> LPAREN . ID RPAREN
    (46) Type -> . LPAREN Type RPAREN
    (47) Type -> . LPAREN ID RPAREN
    (48) Type -> . TypeLit
    (49) TypeLit -> . ArrayType
    (50) TypeLit -> . PointerType
    (51) TypeLit -> . SliceType
    (52) ArrayType -> . LBRACK INT RBRACK Type
    (53) ArrayType -> . LBRACK INT RBRACK ID
    (65) PointerType -> . MUL Type
    (66) PointerType -> . MUL ID
    (54) SliceType -> . LBRACK RBRACK Type
    (55) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 100
    LPAREN          shift and go to state 51
    LBRACK          shift and go to state 48
    MUL             shift and go to state 53

    PointerType                    shift and go to state 52
    TypeLit                        shift and go to state 47
    Type                           shift and go to state 99
    ArrayType                      shift and go to state 49
    SliceType                      shift and go to state 56

state 52

    (50) TypeLit -> PointerType .

    SEMICOLON       reduce using rule 50 (TypeLit -> PointerType .)
    RPAREN          reduce using rule 50 (TypeLit -> PointerType .)
    COMMA           reduce using rule 50 (TypeLit -> PointerType .)
    ASSIGN          reduce using rule 50 (TypeLit -> PointerType .)


state 53

    (65) PointerType -> MUL . Type
    (66) PointerType -> MUL . ID
    (46) Type -> . LPAREN Type RPAREN
    (47) Type -> . LPAREN ID RPAREN
    (48) Type -> . TypeLit
    (49) TypeLit -> . ArrayType
    (50) TypeLit -> . PointerType
    (51) TypeLit -> . SliceType
    (52) ArrayType -> . LBRACK INT RBRACK Type
    (53) ArrayType -> . LBRACK INT RBRACK ID
    (65) PointerType -> . MUL Type
    (66) PointerType -> . MUL ID
    (54) SliceType -> . LBRACK RBRACK Type
    (55) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 102
    LPAREN          shift and go to state 51
    LBRACK          shift and go to state 48
    MUL             shift and go to state 53

    PointerType                    shift and go to state 52
    TypeLit                        shift and go to state 47
    Type                           shift and go to state 101
    ArrayType                      shift and go to state 49
    SliceType                      shift and go to state 56

state 54

    (39) VarSpec -> IdentifierList Type . ASSIGN ExpressionList
    (43) VarSpec -> IdentifierList Type .

    ASSIGN          shift and go to state 103
    SEMICOLON       reduce using rule 43 (VarSpec -> IdentifierList Type .)


state 55

    (40) VarSpec -> IdentifierList ID . ASSIGN ExpressionList
    (42) VarSpec -> IdentifierList ID .

    ASSIGN          shift and go to state 104
    SEMICOLON       reduce using rule 42 (VarSpec -> IdentifierList ID .)


state 56

    (51) TypeLit -> SliceType .

    SEMICOLON       reduce using rule 51 (TypeLit -> SliceType .)
    RPAREN          reduce using rule 51 (TypeLit -> SliceType .)
    COMMA           reduce using rule 51 (TypeLit -> SliceType .)
    ASSIGN          reduce using rule 51 (TypeLit -> SliceType .)


state 57

    (33) StructDecl -> TYPE StructName StructType .

    SEMICOLON       reduce using rule 33 (StructDecl -> TYPE StructName StructType .)


state 58

    (56) StructType -> STRUCT . OpenStructS LBRACE FieldDecl_curl RBRACE CloseStructS
    (4) OpenStructS -> .

    LBRACE          reduce using rule 4 (OpenStructS -> .)

    OpenStructS                    shift and go to state 105

state 59

    (12) ImportDecl -> IMPORT LPAREN ImportSpec_curl RPAREN .

    SEMICOLON       reduce using rule 12 (ImportDecl -> IMPORT LPAREN ImportSpec_curl RPAREN .)


state 60

    (13) ImportSpec_curl -> ImportSpec_curl ImportSpec . SEMICOLON

    SEMICOLON       shift and go to state 106


state 61

    (25) ConstDecl -> CONST LPAREN ConstSpec_curl RPAREN .

    SEMICOLON       reduce using rule 25 (ConstDecl -> CONST LPAREN ConstSpec_curl RPAREN .)


state 62

    (26) ConstSpec_curl -> ConstSpec_curl ConstSpec . SEMICOLON

    SEMICOLON       shift and go to state 107


state 63

    (28) ConstSpec -> IdentifierList ID ASSIGN . ExpressionList
    (31) ExpressionList -> . Expression
    (32) ExpressionList -> . ExpressionList COMMA Expression
    (89) Expression -> . UnaryExpr
    (90) Expression -> . Expression BinaryOp UnaryExpr
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (138) Literal -> . BasicLit
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    ID              shift and go to state 91
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    RuneLit                        shift and go to state 89
    UnaryOp                        shift and go to state 73
    TrueLit                        shift and go to state 98
    BasicLit                       shift and go to state 79
    UnaryExpr                      shift and go to state 83
    FloatLit                       shift and go to state 84
    FalseLit                       shift and go to state 74
    IntLit                         shift and go to state 76
    Literal                        shift and go to state 75
    ExpressionList                 shift and go to state 108
    PrimaryExpr                    shift and go to state 85
    StringLit                      shift and go to state 96
    Expression                     shift and go to state 90

state 64

    (30) IdentifierList -> ID COMMA IdentifierList .

    DEFINE          reduce using rule 30 (IdentifierList -> ID COMMA IdentifierList .)
    ID              reduce using rule 30 (IdentifierList -> ID COMMA IdentifierList .)
    ASSIGN          reduce using rule 30 (IdentifierList -> ID COMMA IdentifierList .)
    LPAREN          reduce using rule 30 (IdentifierList -> ID COMMA IdentifierList .)
    LBRACK          reduce using rule 30 (IdentifierList -> ID COMMA IdentifierList .)
    MUL             reduce using rule 30 (IdentifierList -> ID COMMA IdentifierList .)
    STRUCT          reduce using rule 30 (IdentifierList -> ID COMMA IdentifierList .)


state 65

    (74) Parameters -> LPAREN . RPAREN
    (75) Parameters -> LPAREN . ParameterList RPAREN
    (76) Parameters -> LPAREN . ParameterList COMMA RPAREN
    (77) ParameterList -> . ParameterDecl
    (78) ParameterList -> . ParameterList COMMA ParameterDecl
    (79) ParameterDecl -> . ParaIdList Type
    (80) ParameterDecl -> . ID Type
    (81) ParameterDecl -> . ParaIdList ID
    (82) ParameterDecl -> . ID ID
    (83) ParaIdList -> . ID COMMA ID
    (84) ParaIdList -> . ParaIdList COMMA ID

    RPAREN          shift and go to state 109
    ID              shift and go to state 113

    ParameterList                  shift and go to state 110
    ParaIdList                     shift and go to state 111
    ParameterDecl                  shift and go to state 112

state 66

    (67) Signature -> Parameters . Result
    (68) Result -> . LPAREN TypeList RPAREN
    (69) Result -> .

    LPAREN          shift and go to state 114
    LBRACE          reduce using rule 69 (Result -> .)

    Result                         shift and go to state 115

state 67

    (44) FunctionDecl -> FUNC FuncName OpenS Signature . Block CloseS
    (85) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 116

    Block                          shift and go to state 117

state 68

    (36) VarDecl -> VAR LPAREN VarSpec_curl RPAREN .

    SEMICOLON       reduce using rule 36 (VarDecl -> VAR LPAREN VarSpec_curl RPAREN .)


state 69

    (37) VarSpec_curl -> VarSpec_curl VarSpec . SEMICOLON

    SEMICOLON       shift and go to state 118


state 70

    (52) ArrayType -> LBRACK INT . RBRACK Type
    (53) ArrayType -> LBRACK INT . RBRACK ID

    RBRACK          shift and go to state 119


state 71

    (54) SliceType -> LBRACK RBRACK . Type
    (55) SliceType -> LBRACK RBRACK . ID
    (46) Type -> . LPAREN Type RPAREN
    (47) Type -> . LPAREN ID RPAREN
    (48) Type -> . TypeLit
    (49) TypeLit -> . ArrayType
    (50) TypeLit -> . PointerType
    (51) TypeLit -> . SliceType
    (52) ArrayType -> . LBRACK INT RBRACK Type
    (53) ArrayType -> . LBRACK INT RBRACK ID
    (65) PointerType -> . MUL Type
    (66) PointerType -> . MUL ID
    (54) SliceType -> . LBRACK RBRACK Type
    (55) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 121
    LPAREN          shift and go to state 51
    LBRACK          shift and go to state 48
    MUL             shift and go to state 53

    PointerType                    shift and go to state 52
    TypeLit                        shift and go to state 47
    Type                           shift and go to state 120
    ArrayType                      shift and go to state 49
    SliceType                      shift and go to state 56

state 72

    (116) UnaryOp -> SUB .

    ID              reduce using rule 116 (UnaryOp -> SUB .)
    LPAREN          reduce using rule 116 (UnaryOp -> SUB .)
    ADD             reduce using rule 116 (UnaryOp -> SUB .)
    SUB             reduce using rule 116 (UnaryOp -> SUB .)
    NOT             reduce using rule 116 (UnaryOp -> SUB .)
    XOR             reduce using rule 116 (UnaryOp -> SUB .)
    MUL             reduce using rule 116 (UnaryOp -> SUB .)
    AND             reduce using rule 116 (UnaryOp -> SUB .)
    INT             reduce using rule 116 (UnaryOp -> SUB .)
    FLOAT           reduce using rule 116 (UnaryOp -> SUB .)
    RUNE            reduce using rule 116 (UnaryOp -> SUB .)
    STRING          reduce using rule 116 (UnaryOp -> SUB .)
    TRUE            reduce using rule 116 (UnaryOp -> SUB .)
    FALSE           reduce using rule 116 (UnaryOp -> SUB .)


state 73

    (92) UnaryExpr -> UnaryOp . UnaryExpr
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (138) Literal -> . BasicLit
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    ID              shift and go to state 91
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    RuneLit                        shift and go to state 89
    UnaryOp                        shift and go to state 73
    TrueLit                        shift and go to state 98
    BasicLit                       shift and go to state 79
    UnaryExpr                      shift and go to state 122
    FloatLit                       shift and go to state 84
    FalseLit                       shift and go to state 74
    IntLit                         shift and go to state 76
    Literal                        shift and go to state 75
    PrimaryExpr                    shift and go to state 85
    StringLit                      shift and go to state 96

state 74

    (144) BasicLit -> FalseLit .

    DOT             reduce using rule 144 (BasicLit -> FalseLit .)
    LBRACK          reduce using rule 144 (BasicLit -> FalseLit .)
    LPAREN          reduce using rule 144 (BasicLit -> FalseLit .)
    LOR             reduce using rule 144 (BasicLit -> FalseLit .)
    LAND            reduce using rule 144 (BasicLit -> FalseLit .)
    EQL             reduce using rule 144 (BasicLit -> FalseLit .)
    NEQ             reduce using rule 144 (BasicLit -> FalseLit .)
    LTN             reduce using rule 144 (BasicLit -> FalseLit .)
    LEQ             reduce using rule 144 (BasicLit -> FalseLit .)
    GTN             reduce using rule 144 (BasicLit -> FalseLit .)
    GEQ             reduce using rule 144 (BasicLit -> FalseLit .)
    ADD             reduce using rule 144 (BasicLit -> FalseLit .)
    SUB             reduce using rule 144 (BasicLit -> FalseLit .)
    OR              reduce using rule 144 (BasicLit -> FalseLit .)
    XOR             reduce using rule 144 (BasicLit -> FalseLit .)
    MUL             reduce using rule 144 (BasicLit -> FalseLit .)
    DIV             reduce using rule 144 (BasicLit -> FalseLit .)
    MOD             reduce using rule 144 (BasicLit -> FalseLit .)
    SHL             reduce using rule 144 (BasicLit -> FalseLit .)
    SHR             reduce using rule 144 (BasicLit -> FalseLit .)
    AND             reduce using rule 144 (BasicLit -> FalseLit .)
    AND_NOT         reduce using rule 144 (BasicLit -> FalseLit .)
    COMMA           reduce using rule 144 (BasicLit -> FalseLit .)
    SEMICOLON       reduce using rule 144 (BasicLit -> FalseLit .)
    LBRACE          reduce using rule 144 (BasicLit -> FalseLit .)
    RPAREN          reduce using rule 144 (BasicLit -> FalseLit .)
    RBRACK          reduce using rule 144 (BasicLit -> FalseLit .)
    COLON           reduce using rule 144 (BasicLit -> FalseLit .)
    ADD_ASSIGN      reduce using rule 144 (BasicLit -> FalseLit .)
    SUB_ASSIGN      reduce using rule 144 (BasicLit -> FalseLit .)
    MUL_ASSIGN      reduce using rule 144 (BasicLit -> FalseLit .)
    DIV_ASSIGN      reduce using rule 144 (BasicLit -> FalseLit .)
    MOD_ASSIGN      reduce using rule 144 (BasicLit -> FalseLit .)
    AND_ASSIGN      reduce using rule 144 (BasicLit -> FalseLit .)
    AND_NOT_ASSIGN  reduce using rule 144 (BasicLit -> FalseLit .)
    OR_ASSIGN       reduce using rule 144 (BasicLit -> FalseLit .)
    XOR_ASSIGN      reduce using rule 144 (BasicLit -> FalseLit .)
    SHL_ASSIGN      reduce using rule 144 (BasicLit -> FalseLit .)
    SHR_ASSIGN      reduce using rule 144 (BasicLit -> FalseLit .)
    ASSIGN          reduce using rule 144 (BasicLit -> FalseLit .)
    INC             reduce using rule 144 (BasicLit -> FalseLit .)
    DEC             reduce using rule 144 (BasicLit -> FalseLit .)


state 75

    (121) PrimaryExpr -> Literal .

    DOT             reduce using rule 121 (PrimaryExpr -> Literal .)
    LBRACK          reduce using rule 121 (PrimaryExpr -> Literal .)
    LPAREN          reduce using rule 121 (PrimaryExpr -> Literal .)
    LOR             reduce using rule 121 (PrimaryExpr -> Literal .)
    LAND            reduce using rule 121 (PrimaryExpr -> Literal .)
    EQL             reduce using rule 121 (PrimaryExpr -> Literal .)
    NEQ             reduce using rule 121 (PrimaryExpr -> Literal .)
    LTN             reduce using rule 121 (PrimaryExpr -> Literal .)
    LEQ             reduce using rule 121 (PrimaryExpr -> Literal .)
    GTN             reduce using rule 121 (PrimaryExpr -> Literal .)
    GEQ             reduce using rule 121 (PrimaryExpr -> Literal .)
    ADD             reduce using rule 121 (PrimaryExpr -> Literal .)
    SUB             reduce using rule 121 (PrimaryExpr -> Literal .)
    OR              reduce using rule 121 (PrimaryExpr -> Literal .)
    XOR             reduce using rule 121 (PrimaryExpr -> Literal .)
    MUL             reduce using rule 121 (PrimaryExpr -> Literal .)
    DIV             reduce using rule 121 (PrimaryExpr -> Literal .)
    MOD             reduce using rule 121 (PrimaryExpr -> Literal .)
    SHL             reduce using rule 121 (PrimaryExpr -> Literal .)
    SHR             reduce using rule 121 (PrimaryExpr -> Literal .)
    AND             reduce using rule 121 (PrimaryExpr -> Literal .)
    AND_NOT         reduce using rule 121 (PrimaryExpr -> Literal .)
    COMMA           reduce using rule 121 (PrimaryExpr -> Literal .)
    SEMICOLON       reduce using rule 121 (PrimaryExpr -> Literal .)
    RPAREN          reduce using rule 121 (PrimaryExpr -> Literal .)
    LBRACE          reduce using rule 121 (PrimaryExpr -> Literal .)
    RBRACK          reduce using rule 121 (PrimaryExpr -> Literal .)
    COLON           reduce using rule 121 (PrimaryExpr -> Literal .)
    ADD_ASSIGN      reduce using rule 121 (PrimaryExpr -> Literal .)
    SUB_ASSIGN      reduce using rule 121 (PrimaryExpr -> Literal .)
    MUL_ASSIGN      reduce using rule 121 (PrimaryExpr -> Literal .)
    DIV_ASSIGN      reduce using rule 121 (PrimaryExpr -> Literal .)
    MOD_ASSIGN      reduce using rule 121 (PrimaryExpr -> Literal .)
    AND_ASSIGN      reduce using rule 121 (PrimaryExpr -> Literal .)
    AND_NOT_ASSIGN  reduce using rule 121 (PrimaryExpr -> Literal .)
    OR_ASSIGN       reduce using rule 121 (PrimaryExpr -> Literal .)
    XOR_ASSIGN      reduce using rule 121 (PrimaryExpr -> Literal .)
    SHL_ASSIGN      reduce using rule 121 (PrimaryExpr -> Literal .)
    SHR_ASSIGN      reduce using rule 121 (PrimaryExpr -> Literal .)
    ASSIGN          reduce using rule 121 (PrimaryExpr -> Literal .)
    INC             reduce using rule 121 (PrimaryExpr -> Literal .)
    DEC             reduce using rule 121 (PrimaryExpr -> Literal .)


state 76

    (139) BasicLit -> IntLit .

    DOT             reduce using rule 139 (BasicLit -> IntLit .)
    LBRACK          reduce using rule 139 (BasicLit -> IntLit .)
    LPAREN          reduce using rule 139 (BasicLit -> IntLit .)
    LOR             reduce using rule 139 (BasicLit -> IntLit .)
    LAND            reduce using rule 139 (BasicLit -> IntLit .)
    EQL             reduce using rule 139 (BasicLit -> IntLit .)
    NEQ             reduce using rule 139 (BasicLit -> IntLit .)
    LTN             reduce using rule 139 (BasicLit -> IntLit .)
    LEQ             reduce using rule 139 (BasicLit -> IntLit .)
    GTN             reduce using rule 139 (BasicLit -> IntLit .)
    GEQ             reduce using rule 139 (BasicLit -> IntLit .)
    ADD             reduce using rule 139 (BasicLit -> IntLit .)
    SUB             reduce using rule 139 (BasicLit -> IntLit .)
    OR              reduce using rule 139 (BasicLit -> IntLit .)
    XOR             reduce using rule 139 (BasicLit -> IntLit .)
    MUL             reduce using rule 139 (BasicLit -> IntLit .)
    DIV             reduce using rule 139 (BasicLit -> IntLit .)
    MOD             reduce using rule 139 (BasicLit -> IntLit .)
    SHL             reduce using rule 139 (BasicLit -> IntLit .)
    SHR             reduce using rule 139 (BasicLit -> IntLit .)
    AND             reduce using rule 139 (BasicLit -> IntLit .)
    AND_NOT         reduce using rule 139 (BasicLit -> IntLit .)
    COMMA           reduce using rule 139 (BasicLit -> IntLit .)
    SEMICOLON       reduce using rule 139 (BasicLit -> IntLit .)
    LBRACE          reduce using rule 139 (BasicLit -> IntLit .)
    RPAREN          reduce using rule 139 (BasicLit -> IntLit .)
    RBRACK          reduce using rule 139 (BasicLit -> IntLit .)
    COLON           reduce using rule 139 (BasicLit -> IntLit .)
    ADD_ASSIGN      reduce using rule 139 (BasicLit -> IntLit .)
    SUB_ASSIGN      reduce using rule 139 (BasicLit -> IntLit .)
    MUL_ASSIGN      reduce using rule 139 (BasicLit -> IntLit .)
    DIV_ASSIGN      reduce using rule 139 (BasicLit -> IntLit .)
    MOD_ASSIGN      reduce using rule 139 (BasicLit -> IntLit .)
    AND_ASSIGN      reduce using rule 139 (BasicLit -> IntLit .)
    AND_NOT_ASSIGN  reduce using rule 139 (BasicLit -> IntLit .)
    OR_ASSIGN       reduce using rule 139 (BasicLit -> IntLit .)
    XOR_ASSIGN      reduce using rule 139 (BasicLit -> IntLit .)
    SHL_ASSIGN      reduce using rule 139 (BasicLit -> IntLit .)
    SHR_ASSIGN      reduce using rule 139 (BasicLit -> IntLit .)
    ASSIGN          reduce using rule 139 (BasicLit -> IntLit .)
    INC             reduce using rule 139 (BasicLit -> IntLit .)
    DEC             reduce using rule 139 (BasicLit -> IntLit .)


state 77

    (119) UnaryOp -> MUL .

    ID              reduce using rule 119 (UnaryOp -> MUL .)
    LPAREN          reduce using rule 119 (UnaryOp -> MUL .)
    ADD             reduce using rule 119 (UnaryOp -> MUL .)
    SUB             reduce using rule 119 (UnaryOp -> MUL .)
    NOT             reduce using rule 119 (UnaryOp -> MUL .)
    XOR             reduce using rule 119 (UnaryOp -> MUL .)
    MUL             reduce using rule 119 (UnaryOp -> MUL .)
    AND             reduce using rule 119 (UnaryOp -> MUL .)
    INT             reduce using rule 119 (UnaryOp -> MUL .)
    FLOAT           reduce using rule 119 (UnaryOp -> MUL .)
    RUNE            reduce using rule 119 (UnaryOp -> MUL .)
    STRING          reduce using rule 119 (UnaryOp -> MUL .)
    TRUE            reduce using rule 119 (UnaryOp -> MUL .)
    FALSE           reduce using rule 119 (UnaryOp -> MUL .)


state 78

    (145) TrueLit -> TRUE .

    DOT             reduce using rule 145 (TrueLit -> TRUE .)
    LBRACK          reduce using rule 145 (TrueLit -> TRUE .)
    LPAREN          reduce using rule 145 (TrueLit -> TRUE .)
    LOR             reduce using rule 145 (TrueLit -> TRUE .)
    LAND            reduce using rule 145 (TrueLit -> TRUE .)
    EQL             reduce using rule 145 (TrueLit -> TRUE .)
    NEQ             reduce using rule 145 (TrueLit -> TRUE .)
    LTN             reduce using rule 145 (TrueLit -> TRUE .)
    LEQ             reduce using rule 145 (TrueLit -> TRUE .)
    GTN             reduce using rule 145 (TrueLit -> TRUE .)
    GEQ             reduce using rule 145 (TrueLit -> TRUE .)
    ADD             reduce using rule 145 (TrueLit -> TRUE .)
    SUB             reduce using rule 145 (TrueLit -> TRUE .)
    OR              reduce using rule 145 (TrueLit -> TRUE .)
    XOR             reduce using rule 145 (TrueLit -> TRUE .)
    MUL             reduce using rule 145 (TrueLit -> TRUE .)
    DIV             reduce using rule 145 (TrueLit -> TRUE .)
    MOD             reduce using rule 145 (TrueLit -> TRUE .)
    SHL             reduce using rule 145 (TrueLit -> TRUE .)
    SHR             reduce using rule 145 (TrueLit -> TRUE .)
    AND             reduce using rule 145 (TrueLit -> TRUE .)
    AND_NOT         reduce using rule 145 (TrueLit -> TRUE .)
    COMMA           reduce using rule 145 (TrueLit -> TRUE .)
    SEMICOLON       reduce using rule 145 (TrueLit -> TRUE .)
    ADD_ASSIGN      reduce using rule 145 (TrueLit -> TRUE .)
    SUB_ASSIGN      reduce using rule 145 (TrueLit -> TRUE .)
    MUL_ASSIGN      reduce using rule 145 (TrueLit -> TRUE .)
    DIV_ASSIGN      reduce using rule 145 (TrueLit -> TRUE .)
    MOD_ASSIGN      reduce using rule 145 (TrueLit -> TRUE .)
    AND_ASSIGN      reduce using rule 145 (TrueLit -> TRUE .)
    AND_NOT_ASSIGN  reduce using rule 145 (TrueLit -> TRUE .)
    OR_ASSIGN       reduce using rule 145 (TrueLit -> TRUE .)
    XOR_ASSIGN      reduce using rule 145 (TrueLit -> TRUE .)
    SHL_ASSIGN      reduce using rule 145 (TrueLit -> TRUE .)
    SHR_ASSIGN      reduce using rule 145 (TrueLit -> TRUE .)
    ASSIGN          reduce using rule 145 (TrueLit -> TRUE .)
    LBRACE          reduce using rule 145 (TrueLit -> TRUE .)
    RBRACK          reduce using rule 145 (TrueLit -> TRUE .)
    COLON           reduce using rule 145 (TrueLit -> TRUE .)
    INC             reduce using rule 145 (TrueLit -> TRUE .)
    DEC             reduce using rule 145 (TrueLit -> TRUE .)
    RPAREN          reduce using rule 145 (TrueLit -> TRUE .)


state 79

    (138) Literal -> BasicLit .

    DOT             reduce using rule 138 (Literal -> BasicLit .)
    LBRACK          reduce using rule 138 (Literal -> BasicLit .)
    LPAREN          reduce using rule 138 (Literal -> BasicLit .)
    INC             reduce using rule 138 (Literal -> BasicLit .)
    DEC             reduce using rule 138 (Literal -> BasicLit .)
    LOR             reduce using rule 138 (Literal -> BasicLit .)
    LAND            reduce using rule 138 (Literal -> BasicLit .)
    EQL             reduce using rule 138 (Literal -> BasicLit .)
    NEQ             reduce using rule 138 (Literal -> BasicLit .)
    LTN             reduce using rule 138 (Literal -> BasicLit .)
    LEQ             reduce using rule 138 (Literal -> BasicLit .)
    GTN             reduce using rule 138 (Literal -> BasicLit .)
    GEQ             reduce using rule 138 (Literal -> BasicLit .)
    ADD             reduce using rule 138 (Literal -> BasicLit .)
    SUB             reduce using rule 138 (Literal -> BasicLit .)
    OR              reduce using rule 138 (Literal -> BasicLit .)
    XOR             reduce using rule 138 (Literal -> BasicLit .)
    MUL             reduce using rule 138 (Literal -> BasicLit .)
    DIV             reduce using rule 138 (Literal -> BasicLit .)
    MOD             reduce using rule 138 (Literal -> BasicLit .)
    SHL             reduce using rule 138 (Literal -> BasicLit .)
    SHR             reduce using rule 138 (Literal -> BasicLit .)
    AND             reduce using rule 138 (Literal -> BasicLit .)
    AND_NOT         reduce using rule 138 (Literal -> BasicLit .)
    SEMICOLON       reduce using rule 138 (Literal -> BasicLit .)
    COMMA           reduce using rule 138 (Literal -> BasicLit .)
    ADD_ASSIGN      reduce using rule 138 (Literal -> BasicLit .)
    SUB_ASSIGN      reduce using rule 138 (Literal -> BasicLit .)
    MUL_ASSIGN      reduce using rule 138 (Literal -> BasicLit .)
    DIV_ASSIGN      reduce using rule 138 (Literal -> BasicLit .)
    MOD_ASSIGN      reduce using rule 138 (Literal -> BasicLit .)
    AND_ASSIGN      reduce using rule 138 (Literal -> BasicLit .)
    AND_NOT_ASSIGN  reduce using rule 138 (Literal -> BasicLit .)
    OR_ASSIGN       reduce using rule 138 (Literal -> BasicLit .)
    XOR_ASSIGN      reduce using rule 138 (Literal -> BasicLit .)
    SHL_ASSIGN      reduce using rule 138 (Literal -> BasicLit .)
    SHR_ASSIGN      reduce using rule 138 (Literal -> BasicLit .)
    ASSIGN          reduce using rule 138 (Literal -> BasicLit .)
    RBRACK          reduce using rule 138 (Literal -> BasicLit .)
    LBRACE          reduce using rule 138 (Literal -> BasicLit .)
    COLON           reduce using rule 138 (Literal -> BasicLit .)
    RPAREN          reduce using rule 138 (Literal -> BasicLit .)


state 80

    (149) RuneLit -> RUNE .

    DOT             reduce using rule 149 (RuneLit -> RUNE .)
    LBRACK          reduce using rule 149 (RuneLit -> RUNE .)
    LPAREN          reduce using rule 149 (RuneLit -> RUNE .)
    RPAREN          reduce using rule 149 (RuneLit -> RUNE .)
    LOR             reduce using rule 149 (RuneLit -> RUNE .)
    LAND            reduce using rule 149 (RuneLit -> RUNE .)
    EQL             reduce using rule 149 (RuneLit -> RUNE .)
    NEQ             reduce using rule 149 (RuneLit -> RUNE .)
    LTN             reduce using rule 149 (RuneLit -> RUNE .)
    LEQ             reduce using rule 149 (RuneLit -> RUNE .)
    GTN             reduce using rule 149 (RuneLit -> RUNE .)
    GEQ             reduce using rule 149 (RuneLit -> RUNE .)
    ADD             reduce using rule 149 (RuneLit -> RUNE .)
    SUB             reduce using rule 149 (RuneLit -> RUNE .)
    OR              reduce using rule 149 (RuneLit -> RUNE .)
    XOR             reduce using rule 149 (RuneLit -> RUNE .)
    MUL             reduce using rule 149 (RuneLit -> RUNE .)
    DIV             reduce using rule 149 (RuneLit -> RUNE .)
    MOD             reduce using rule 149 (RuneLit -> RUNE .)
    SHL             reduce using rule 149 (RuneLit -> RUNE .)
    SHR             reduce using rule 149 (RuneLit -> RUNE .)
    AND             reduce using rule 149 (RuneLit -> RUNE .)
    AND_NOT         reduce using rule 149 (RuneLit -> RUNE .)
    COMMA           reduce using rule 149 (RuneLit -> RUNE .)
    SEMICOLON       reduce using rule 149 (RuneLit -> RUNE .)
    RBRACK          reduce using rule 149 (RuneLit -> RUNE .)
    COLON           reduce using rule 149 (RuneLit -> RUNE .)
    ADD_ASSIGN      reduce using rule 149 (RuneLit -> RUNE .)
    SUB_ASSIGN      reduce using rule 149 (RuneLit -> RUNE .)
    MUL_ASSIGN      reduce using rule 149 (RuneLit -> RUNE .)
    DIV_ASSIGN      reduce using rule 149 (RuneLit -> RUNE .)
    MOD_ASSIGN      reduce using rule 149 (RuneLit -> RUNE .)
    AND_ASSIGN      reduce using rule 149 (RuneLit -> RUNE .)
    AND_NOT_ASSIGN  reduce using rule 149 (RuneLit -> RUNE .)
    OR_ASSIGN       reduce using rule 149 (RuneLit -> RUNE .)
    XOR_ASSIGN      reduce using rule 149 (RuneLit -> RUNE .)
    SHL_ASSIGN      reduce using rule 149 (RuneLit -> RUNE .)
    SHR_ASSIGN      reduce using rule 149 (RuneLit -> RUNE .)
    ASSIGN          reduce using rule 149 (RuneLit -> RUNE .)
    LBRACE          reduce using rule 149 (RuneLit -> RUNE .)
    INC             reduce using rule 149 (RuneLit -> RUNE .)
    DEC             reduce using rule 149 (RuneLit -> RUNE .)


state 81

    (118) UnaryOp -> XOR .

    ID              reduce using rule 118 (UnaryOp -> XOR .)
    LPAREN          reduce using rule 118 (UnaryOp -> XOR .)
    ADD             reduce using rule 118 (UnaryOp -> XOR .)
    SUB             reduce using rule 118 (UnaryOp -> XOR .)
    NOT             reduce using rule 118 (UnaryOp -> XOR .)
    XOR             reduce using rule 118 (UnaryOp -> XOR .)
    MUL             reduce using rule 118 (UnaryOp -> XOR .)
    AND             reduce using rule 118 (UnaryOp -> XOR .)
    INT             reduce using rule 118 (UnaryOp -> XOR .)
    FLOAT           reduce using rule 118 (UnaryOp -> XOR .)
    RUNE            reduce using rule 118 (UnaryOp -> XOR .)
    STRING          reduce using rule 118 (UnaryOp -> XOR .)
    TRUE            reduce using rule 118 (UnaryOp -> XOR .)
    FALSE           reduce using rule 118 (UnaryOp -> XOR .)


state 82

    (150) StringLit -> STRING .

    DOT             reduce using rule 150 (StringLit -> STRING .)
    LBRACK          reduce using rule 150 (StringLit -> STRING .)
    LPAREN          reduce using rule 150 (StringLit -> STRING .)
    LOR             reduce using rule 150 (StringLit -> STRING .)
    LAND            reduce using rule 150 (StringLit -> STRING .)
    EQL             reduce using rule 150 (StringLit -> STRING .)
    NEQ             reduce using rule 150 (StringLit -> STRING .)
    LTN             reduce using rule 150 (StringLit -> STRING .)
    LEQ             reduce using rule 150 (StringLit -> STRING .)
    GTN             reduce using rule 150 (StringLit -> STRING .)
    GEQ             reduce using rule 150 (StringLit -> STRING .)
    ADD             reduce using rule 150 (StringLit -> STRING .)
    SUB             reduce using rule 150 (StringLit -> STRING .)
    OR              reduce using rule 150 (StringLit -> STRING .)
    XOR             reduce using rule 150 (StringLit -> STRING .)
    MUL             reduce using rule 150 (StringLit -> STRING .)
    DIV             reduce using rule 150 (StringLit -> STRING .)
    MOD             reduce using rule 150 (StringLit -> STRING .)
    SHL             reduce using rule 150 (StringLit -> STRING .)
    SHR             reduce using rule 150 (StringLit -> STRING .)
    AND             reduce using rule 150 (StringLit -> STRING .)
    AND_NOT         reduce using rule 150 (StringLit -> STRING .)
    COMMA           reduce using rule 150 (StringLit -> STRING .)
    SEMICOLON       reduce using rule 150 (StringLit -> STRING .)
    RPAREN          reduce using rule 150 (StringLit -> STRING .)
    RBRACK          reduce using rule 150 (StringLit -> STRING .)
    COLON           reduce using rule 150 (StringLit -> STRING .)
    ADD_ASSIGN      reduce using rule 150 (StringLit -> STRING .)
    SUB_ASSIGN      reduce using rule 150 (StringLit -> STRING .)
    MUL_ASSIGN      reduce using rule 150 (StringLit -> STRING .)
    DIV_ASSIGN      reduce using rule 150 (StringLit -> STRING .)
    MOD_ASSIGN      reduce using rule 150 (StringLit -> STRING .)
    AND_ASSIGN      reduce using rule 150 (StringLit -> STRING .)
    AND_NOT_ASSIGN  reduce using rule 150 (StringLit -> STRING .)
    OR_ASSIGN       reduce using rule 150 (StringLit -> STRING .)
    XOR_ASSIGN      reduce using rule 150 (StringLit -> STRING .)
    SHL_ASSIGN      reduce using rule 150 (StringLit -> STRING .)
    SHR_ASSIGN      reduce using rule 150 (StringLit -> STRING .)
    ASSIGN          reduce using rule 150 (StringLit -> STRING .)
    LBRACE          reduce using rule 150 (StringLit -> STRING .)
    INC             reduce using rule 150 (StringLit -> STRING .)
    DEC             reduce using rule 150 (StringLit -> STRING .)


state 83

    (89) Expression -> UnaryExpr .

    LOR             reduce using rule 89 (Expression -> UnaryExpr .)
    LAND            reduce using rule 89 (Expression -> UnaryExpr .)
    EQL             reduce using rule 89 (Expression -> UnaryExpr .)
    NEQ             reduce using rule 89 (Expression -> UnaryExpr .)
    LTN             reduce using rule 89 (Expression -> UnaryExpr .)
    LEQ             reduce using rule 89 (Expression -> UnaryExpr .)
    GTN             reduce using rule 89 (Expression -> UnaryExpr .)
    GEQ             reduce using rule 89 (Expression -> UnaryExpr .)
    ADD             reduce using rule 89 (Expression -> UnaryExpr .)
    SUB             reduce using rule 89 (Expression -> UnaryExpr .)
    OR              reduce using rule 89 (Expression -> UnaryExpr .)
    XOR             reduce using rule 89 (Expression -> UnaryExpr .)
    MUL             reduce using rule 89 (Expression -> UnaryExpr .)
    DIV             reduce using rule 89 (Expression -> UnaryExpr .)
    MOD             reduce using rule 89 (Expression -> UnaryExpr .)
    SHL             reduce using rule 89 (Expression -> UnaryExpr .)
    SHR             reduce using rule 89 (Expression -> UnaryExpr .)
    AND             reduce using rule 89 (Expression -> UnaryExpr .)
    AND_NOT         reduce using rule 89 (Expression -> UnaryExpr .)
    LBRACE          reduce using rule 89 (Expression -> UnaryExpr .)
    RBRACK          reduce using rule 89 (Expression -> UnaryExpr .)
    COLON           reduce using rule 89 (Expression -> UnaryExpr .)
    RPAREN          reduce using rule 89 (Expression -> UnaryExpr .)
    INC             reduce using rule 89 (Expression -> UnaryExpr .)
    DEC             reduce using rule 89 (Expression -> UnaryExpr .)
    SEMICOLON       reduce using rule 89 (Expression -> UnaryExpr .)
    COMMA           reduce using rule 89 (Expression -> UnaryExpr .)
    ADD_ASSIGN      reduce using rule 89 (Expression -> UnaryExpr .)
    SUB_ASSIGN      reduce using rule 89 (Expression -> UnaryExpr .)
    MUL_ASSIGN      reduce using rule 89 (Expression -> UnaryExpr .)
    DIV_ASSIGN      reduce using rule 89 (Expression -> UnaryExpr .)
    MOD_ASSIGN      reduce using rule 89 (Expression -> UnaryExpr .)
    AND_ASSIGN      reduce using rule 89 (Expression -> UnaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 89 (Expression -> UnaryExpr .)
    OR_ASSIGN       reduce using rule 89 (Expression -> UnaryExpr .)
    XOR_ASSIGN      reduce using rule 89 (Expression -> UnaryExpr .)
    SHL_ASSIGN      reduce using rule 89 (Expression -> UnaryExpr .)
    SHR_ASSIGN      reduce using rule 89 (Expression -> UnaryExpr .)
    ASSIGN          reduce using rule 89 (Expression -> UnaryExpr .)


state 84

    (140) BasicLit -> FloatLit .

    DOT             reduce using rule 140 (BasicLit -> FloatLit .)
    LBRACK          reduce using rule 140 (BasicLit -> FloatLit .)
    LPAREN          reduce using rule 140 (BasicLit -> FloatLit .)
    LOR             reduce using rule 140 (BasicLit -> FloatLit .)
    LAND            reduce using rule 140 (BasicLit -> FloatLit .)
    EQL             reduce using rule 140 (BasicLit -> FloatLit .)
    NEQ             reduce using rule 140 (BasicLit -> FloatLit .)
    LTN             reduce using rule 140 (BasicLit -> FloatLit .)
    LEQ             reduce using rule 140 (BasicLit -> FloatLit .)
    GTN             reduce using rule 140 (BasicLit -> FloatLit .)
    GEQ             reduce using rule 140 (BasicLit -> FloatLit .)
    ADD             reduce using rule 140 (BasicLit -> FloatLit .)
    SUB             reduce using rule 140 (BasicLit -> FloatLit .)
    OR              reduce using rule 140 (BasicLit -> FloatLit .)
    XOR             reduce using rule 140 (BasicLit -> FloatLit .)
    MUL             reduce using rule 140 (BasicLit -> FloatLit .)
    DIV             reduce using rule 140 (BasicLit -> FloatLit .)
    MOD             reduce using rule 140 (BasicLit -> FloatLit .)
    SHL             reduce using rule 140 (BasicLit -> FloatLit .)
    SHR             reduce using rule 140 (BasicLit -> FloatLit .)
    AND             reduce using rule 140 (BasicLit -> FloatLit .)
    AND_NOT         reduce using rule 140 (BasicLit -> FloatLit .)
    COMMA           reduce using rule 140 (BasicLit -> FloatLit .)
    SEMICOLON       reduce using rule 140 (BasicLit -> FloatLit .)
    LBRACE          reduce using rule 140 (BasicLit -> FloatLit .)
    RPAREN          reduce using rule 140 (BasicLit -> FloatLit .)
    RBRACK          reduce using rule 140 (BasicLit -> FloatLit .)
    COLON           reduce using rule 140 (BasicLit -> FloatLit .)
    ADD_ASSIGN      reduce using rule 140 (BasicLit -> FloatLit .)
    SUB_ASSIGN      reduce using rule 140 (BasicLit -> FloatLit .)
    MUL_ASSIGN      reduce using rule 140 (BasicLit -> FloatLit .)
    DIV_ASSIGN      reduce using rule 140 (BasicLit -> FloatLit .)
    MOD_ASSIGN      reduce using rule 140 (BasicLit -> FloatLit .)
    AND_ASSIGN      reduce using rule 140 (BasicLit -> FloatLit .)
    AND_NOT_ASSIGN  reduce using rule 140 (BasicLit -> FloatLit .)
    OR_ASSIGN       reduce using rule 140 (BasicLit -> FloatLit .)
    XOR_ASSIGN      reduce using rule 140 (BasicLit -> FloatLit .)
    SHL_ASSIGN      reduce using rule 140 (BasicLit -> FloatLit .)
    SHR_ASSIGN      reduce using rule 140 (BasicLit -> FloatLit .)
    ASSIGN          reduce using rule 140 (BasicLit -> FloatLit .)
    INC             reduce using rule 140 (BasicLit -> FloatLit .)
    DEC             reduce using rule 140 (BasicLit -> FloatLit .)


state 85

    (91) UnaryExpr -> PrimaryExpr .
    (123) PrimaryExpr -> PrimaryExpr . DOT ID
    (125) PrimaryExpr -> PrimaryExpr . Index
    (126) PrimaryExpr -> PrimaryExpr . Slice
    (127) PrimaryExpr -> PrimaryExpr . Arguments
    (128) Index -> . LBRACK Expression RBRACK
    (129) Slice -> . LBRACK Expression COLON Expression RBRACK
    (130) Slice -> . LBRACK COLON Expression RBRACK
    (131) Slice -> . LBRACK Expression COLON RBRACK
    (132) Slice -> . LBRACK COLON RBRACK
    (133) Slice -> . LBRACK Expression COLON Expression COLON Expression RBRACK
    (134) Slice -> . LBRACK COLON Expression COLON Expression RBRACK
    (135) Arguments -> . LPAREN RPAREN
    (136) Arguments -> . LPAREN ExpressionList RPAREN
    (137) Arguments -> . LPAREN ExpressionList COMMA RPAREN

    LOR             reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    LAND            reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    EQL             reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    NEQ             reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    LTN             reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    LEQ             reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    GTN             reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    GEQ             reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    ADD             reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    SUB             reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    XOR             reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    MUL             reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    DIV             reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    MOD             reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    SHL             reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    SHR             reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    AND             reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    AND_NOT         reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    SEMICOLON       reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    ADD_ASSIGN      reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    SUB_ASSIGN      reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    MUL_ASSIGN      reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    DIV_ASSIGN      reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    MOD_ASSIGN      reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    AND_ASSIGN      reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    OR_ASSIGN       reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    XOR_ASSIGN      reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    SHL_ASSIGN      reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    SHR_ASSIGN      reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    ASSIGN          reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    LBRACE          reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    RPAREN          reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    RBRACK          reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    COLON           reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    INC             reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    DEC             reduce using rule 91 (UnaryExpr -> PrimaryExpr .)
    DOT             shift and go to state 128
    LBRACK          shift and go to state 125
    LPAREN          shift and go to state 127

    Index                          shift and go to state 123
    Slice                          shift and go to state 124
    Arguments                      shift and go to state 126

state 86

    (115) UnaryOp -> ADD .

    ID              reduce using rule 115 (UnaryOp -> ADD .)
    LPAREN          reduce using rule 115 (UnaryOp -> ADD .)
    ADD             reduce using rule 115 (UnaryOp -> ADD .)
    SUB             reduce using rule 115 (UnaryOp -> ADD .)
    NOT             reduce using rule 115 (UnaryOp -> ADD .)
    XOR             reduce using rule 115 (UnaryOp -> ADD .)
    MUL             reduce using rule 115 (UnaryOp -> ADD .)
    AND             reduce using rule 115 (UnaryOp -> ADD .)
    INT             reduce using rule 115 (UnaryOp -> ADD .)
    FLOAT           reduce using rule 115 (UnaryOp -> ADD .)
    RUNE            reduce using rule 115 (UnaryOp -> ADD .)
    STRING          reduce using rule 115 (UnaryOp -> ADD .)
    TRUE            reduce using rule 115 (UnaryOp -> ADD .)
    FALSE           reduce using rule 115 (UnaryOp -> ADD .)


state 87

    (41) VarSpec -> IdentifierList ASSIGN ExpressionList .
    (32) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 41 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    COMMA           shift and go to state 129


state 88

    (124) PrimaryExpr -> LPAREN . Expression RPAREN
    (89) Expression -> . UnaryExpr
    (90) Expression -> . Expression BinaryOp UnaryExpr
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (138) Literal -> . BasicLit
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    ID              shift and go to state 91
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    RuneLit                        shift and go to state 89
    UnaryOp                        shift and go to state 73
    TrueLit                        shift and go to state 98
    BasicLit                       shift and go to state 79
    UnaryExpr                      shift and go to state 83
    FloatLit                       shift and go to state 84
    FalseLit                       shift and go to state 74
    IntLit                         shift and go to state 76
    Literal                        shift and go to state 75
    PrimaryExpr                    shift and go to state 85
    StringLit                      shift and go to state 96
    Expression                     shift and go to state 130

state 89

    (141) BasicLit -> RuneLit .

    DOT             reduce using rule 141 (BasicLit -> RuneLit .)
    LBRACK          reduce using rule 141 (BasicLit -> RuneLit .)
    LPAREN          reduce using rule 141 (BasicLit -> RuneLit .)
    LOR             reduce using rule 141 (BasicLit -> RuneLit .)
    LAND            reduce using rule 141 (BasicLit -> RuneLit .)
    EQL             reduce using rule 141 (BasicLit -> RuneLit .)
    NEQ             reduce using rule 141 (BasicLit -> RuneLit .)
    LTN             reduce using rule 141 (BasicLit -> RuneLit .)
    LEQ             reduce using rule 141 (BasicLit -> RuneLit .)
    GTN             reduce using rule 141 (BasicLit -> RuneLit .)
    GEQ             reduce using rule 141 (BasicLit -> RuneLit .)
    ADD             reduce using rule 141 (BasicLit -> RuneLit .)
    SUB             reduce using rule 141 (BasicLit -> RuneLit .)
    OR              reduce using rule 141 (BasicLit -> RuneLit .)
    XOR             reduce using rule 141 (BasicLit -> RuneLit .)
    MUL             reduce using rule 141 (BasicLit -> RuneLit .)
    DIV             reduce using rule 141 (BasicLit -> RuneLit .)
    MOD             reduce using rule 141 (BasicLit -> RuneLit .)
    SHL             reduce using rule 141 (BasicLit -> RuneLit .)
    SHR             reduce using rule 141 (BasicLit -> RuneLit .)
    AND             reduce using rule 141 (BasicLit -> RuneLit .)
    AND_NOT         reduce using rule 141 (BasicLit -> RuneLit .)
    COMMA           reduce using rule 141 (BasicLit -> RuneLit .)
    SEMICOLON       reduce using rule 141 (BasicLit -> RuneLit .)
    LBRACE          reduce using rule 141 (BasicLit -> RuneLit .)
    RPAREN          reduce using rule 141 (BasicLit -> RuneLit .)
    RBRACK          reduce using rule 141 (BasicLit -> RuneLit .)
    COLON           reduce using rule 141 (BasicLit -> RuneLit .)
    ADD_ASSIGN      reduce using rule 141 (BasicLit -> RuneLit .)
    SUB_ASSIGN      reduce using rule 141 (BasicLit -> RuneLit .)
    MUL_ASSIGN      reduce using rule 141 (BasicLit -> RuneLit .)
    DIV_ASSIGN      reduce using rule 141 (BasicLit -> RuneLit .)
    MOD_ASSIGN      reduce using rule 141 (BasicLit -> RuneLit .)
    AND_ASSIGN      reduce using rule 141 (BasicLit -> RuneLit .)
    AND_NOT_ASSIGN  reduce using rule 141 (BasicLit -> RuneLit .)
    OR_ASSIGN       reduce using rule 141 (BasicLit -> RuneLit .)
    XOR_ASSIGN      reduce using rule 141 (BasicLit -> RuneLit .)
    SHL_ASSIGN      reduce using rule 141 (BasicLit -> RuneLit .)
    SHR_ASSIGN      reduce using rule 141 (BasicLit -> RuneLit .)
    ASSIGN          reduce using rule 141 (BasicLit -> RuneLit .)
    INC             reduce using rule 141 (BasicLit -> RuneLit .)
    DEC             reduce using rule 141 (BasicLit -> RuneLit .)


state 90

    (31) ExpressionList -> Expression .
    (90) Expression -> Expression . BinaryOp UnaryExpr
    (93) BinaryOp -> . LOR
    (94) BinaryOp -> . LAND
    (95) BinaryOp -> . RelOp
    (96) BinaryOp -> . AddOp
    (97) BinaryOp -> . MulOp
    (98) RelOp -> . EQL
    (99) RelOp -> . NEQ
    (100) RelOp -> . LTN
    (101) RelOp -> . LEQ
    (102) RelOp -> . GTN
    (103) RelOp -> . GEQ
    (104) AddOp -> . ADD
    (105) AddOp -> . SUB
    (106) AddOp -> . OR
    (107) AddOp -> . XOR
    (108) MulOp -> . MUL
    (109) MulOp -> . DIV
    (110) MulOp -> . MOD
    (111) MulOp -> . SHL
    (112) MulOp -> . SHR
    (113) MulOp -> . AND
    (114) MulOp -> . AND_NOT

    RPAREN          reduce using rule 31 (ExpressionList -> Expression .)
    COMMA           reduce using rule 31 (ExpressionList -> Expression .)
    SEMICOLON       reduce using rule 31 (ExpressionList -> Expression .)
    LBRACE          reduce using rule 31 (ExpressionList -> Expression .)
    LOR             shift and go to state 132
    LAND            shift and go to state 137
    EQL             shift and go to state 146
    NEQ             shift and go to state 135
    LTN             shift and go to state 148
    LEQ             shift and go to state 151
    GTN             shift and go to state 144
    GEQ             shift and go to state 136
    ADD             shift and go to state 145
    SUB             shift and go to state 131
    OR              shift and go to state 152
    XOR             shift and go to state 142
    MUL             shift and go to state 133
    DIV             shift and go to state 134
    MOD             shift and go to state 153
    SHL             shift and go to state 147
    SHR             shift and go to state 141
    AND             shift and go to state 149
    AND_NOT         shift and go to state 138

    AddOp                          shift and go to state 140
    BinaryOp                       shift and go to state 139
    MulOp                          shift and go to state 143
    RelOp                          shift and go to state 150

state 91

    (122) PrimaryExpr -> ID .

    DOT             reduce using rule 122 (PrimaryExpr -> ID .)
    LBRACK          reduce using rule 122 (PrimaryExpr -> ID .)
    LPAREN          reduce using rule 122 (PrimaryExpr -> ID .)
    LOR             reduce using rule 122 (PrimaryExpr -> ID .)
    LAND            reduce using rule 122 (PrimaryExpr -> ID .)
    EQL             reduce using rule 122 (PrimaryExpr -> ID .)
    NEQ             reduce using rule 122 (PrimaryExpr -> ID .)
    LTN             reduce using rule 122 (PrimaryExpr -> ID .)
    LEQ             reduce using rule 122 (PrimaryExpr -> ID .)
    GTN             reduce using rule 122 (PrimaryExpr -> ID .)
    GEQ             reduce using rule 122 (PrimaryExpr -> ID .)
    ADD             reduce using rule 122 (PrimaryExpr -> ID .)
    SUB             reduce using rule 122 (PrimaryExpr -> ID .)
    OR              reduce using rule 122 (PrimaryExpr -> ID .)
    XOR             reduce using rule 122 (PrimaryExpr -> ID .)
    MUL             reduce using rule 122 (PrimaryExpr -> ID .)
    DIV             reduce using rule 122 (PrimaryExpr -> ID .)
    MOD             reduce using rule 122 (PrimaryExpr -> ID .)
    SHL             reduce using rule 122 (PrimaryExpr -> ID .)
    SHR             reduce using rule 122 (PrimaryExpr -> ID .)
    AND             reduce using rule 122 (PrimaryExpr -> ID .)
    AND_NOT         reduce using rule 122 (PrimaryExpr -> ID .)
    COMMA           reduce using rule 122 (PrimaryExpr -> ID .)
    SEMICOLON       reduce using rule 122 (PrimaryExpr -> ID .)
    RPAREN          reduce using rule 122 (PrimaryExpr -> ID .)
    LBRACE          reduce using rule 122 (PrimaryExpr -> ID .)
    RBRACK          reduce using rule 122 (PrimaryExpr -> ID .)
    COLON           reduce using rule 122 (PrimaryExpr -> ID .)
    ADD_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    SUB_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    MUL_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    DIV_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    MOD_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    AND_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    AND_NOT_ASSIGN  reduce using rule 122 (PrimaryExpr -> ID .)
    OR_ASSIGN       reduce using rule 122 (PrimaryExpr -> ID .)
    XOR_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    SHL_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    SHR_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    ASSIGN          reduce using rule 122 (PrimaryExpr -> ID .)
    INC             reduce using rule 122 (PrimaryExpr -> ID .)
    DEC             reduce using rule 122 (PrimaryExpr -> ID .)


state 92

    (120) UnaryOp -> AND .

    ID              reduce using rule 120 (UnaryOp -> AND .)
    LPAREN          reduce using rule 120 (UnaryOp -> AND .)
    ADD             reduce using rule 120 (UnaryOp -> AND .)
    SUB             reduce using rule 120 (UnaryOp -> AND .)
    NOT             reduce using rule 120 (UnaryOp -> AND .)
    XOR             reduce using rule 120 (UnaryOp -> AND .)
    MUL             reduce using rule 120 (UnaryOp -> AND .)
    AND             reduce using rule 120 (UnaryOp -> AND .)
    INT             reduce using rule 120 (UnaryOp -> AND .)
    FLOAT           reduce using rule 120 (UnaryOp -> AND .)
    RUNE            reduce using rule 120 (UnaryOp -> AND .)
    STRING          reduce using rule 120 (UnaryOp -> AND .)
    TRUE            reduce using rule 120 (UnaryOp -> AND .)
    FALSE           reduce using rule 120 (UnaryOp -> AND .)


state 93

    (146) FalseLit -> FALSE .

    DOT             reduce using rule 146 (FalseLit -> FALSE .)
    LBRACK          reduce using rule 146 (FalseLit -> FALSE .)
    LPAREN          reduce using rule 146 (FalseLit -> FALSE .)
    INC             reduce using rule 146 (FalseLit -> FALSE .)
    DEC             reduce using rule 146 (FalseLit -> FALSE .)
    LOR             reduce using rule 146 (FalseLit -> FALSE .)
    LAND            reduce using rule 146 (FalseLit -> FALSE .)
    EQL             reduce using rule 146 (FalseLit -> FALSE .)
    NEQ             reduce using rule 146 (FalseLit -> FALSE .)
    LTN             reduce using rule 146 (FalseLit -> FALSE .)
    LEQ             reduce using rule 146 (FalseLit -> FALSE .)
    GTN             reduce using rule 146 (FalseLit -> FALSE .)
    GEQ             reduce using rule 146 (FalseLit -> FALSE .)
    ADD             reduce using rule 146 (FalseLit -> FALSE .)
    SUB             reduce using rule 146 (FalseLit -> FALSE .)
    OR              reduce using rule 146 (FalseLit -> FALSE .)
    XOR             reduce using rule 146 (FalseLit -> FALSE .)
    MUL             reduce using rule 146 (FalseLit -> FALSE .)
    DIV             reduce using rule 146 (FalseLit -> FALSE .)
    MOD             reduce using rule 146 (FalseLit -> FALSE .)
    SHL             reduce using rule 146 (FalseLit -> FALSE .)
    SHR             reduce using rule 146 (FalseLit -> FALSE .)
    AND             reduce using rule 146 (FalseLit -> FALSE .)
    AND_NOT         reduce using rule 146 (FalseLit -> FALSE .)
    SEMICOLON       reduce using rule 146 (FalseLit -> FALSE .)
    COMMA           reduce using rule 146 (FalseLit -> FALSE .)
    ADD_ASSIGN      reduce using rule 146 (FalseLit -> FALSE .)
    SUB_ASSIGN      reduce using rule 146 (FalseLit -> FALSE .)
    MUL_ASSIGN      reduce using rule 146 (FalseLit -> FALSE .)
    DIV_ASSIGN      reduce using rule 146 (FalseLit -> FALSE .)
    MOD_ASSIGN      reduce using rule 146 (FalseLit -> FALSE .)
    AND_ASSIGN      reduce using rule 146 (FalseLit -> FALSE .)
    AND_NOT_ASSIGN  reduce using rule 146 (FalseLit -> FALSE .)
    OR_ASSIGN       reduce using rule 146 (FalseLit -> FALSE .)
    XOR_ASSIGN      reduce using rule 146 (FalseLit -> FALSE .)
    SHL_ASSIGN      reduce using rule 146 (FalseLit -> FALSE .)
    SHR_ASSIGN      reduce using rule 146 (FalseLit -> FALSE .)
    ASSIGN          reduce using rule 146 (FalseLit -> FALSE .)
    LBRACE          reduce using rule 146 (FalseLit -> FALSE .)
    RBRACK          reduce using rule 146 (FalseLit -> FALSE .)
    COLON           reduce using rule 146 (FalseLit -> FALSE .)
    RPAREN          reduce using rule 146 (FalseLit -> FALSE .)


state 94

    (147) IntLit -> INT .

    DOT             reduce using rule 147 (IntLit -> INT .)
    LBRACK          reduce using rule 147 (IntLit -> INT .)
    LPAREN          reduce using rule 147 (IntLit -> INT .)
    LOR             reduce using rule 147 (IntLit -> INT .)
    LAND            reduce using rule 147 (IntLit -> INT .)
    EQL             reduce using rule 147 (IntLit -> INT .)
    NEQ             reduce using rule 147 (IntLit -> INT .)
    LTN             reduce using rule 147 (IntLit -> INT .)
    LEQ             reduce using rule 147 (IntLit -> INT .)
    GTN             reduce using rule 147 (IntLit -> INT .)
    GEQ             reduce using rule 147 (IntLit -> INT .)
    ADD             reduce using rule 147 (IntLit -> INT .)
    SUB             reduce using rule 147 (IntLit -> INT .)
    OR              reduce using rule 147 (IntLit -> INT .)
    XOR             reduce using rule 147 (IntLit -> INT .)
    MUL             reduce using rule 147 (IntLit -> INT .)
    DIV             reduce using rule 147 (IntLit -> INT .)
    MOD             reduce using rule 147 (IntLit -> INT .)
    SHL             reduce using rule 147 (IntLit -> INT .)
    SHR             reduce using rule 147 (IntLit -> INT .)
    AND             reduce using rule 147 (IntLit -> INT .)
    AND_NOT         reduce using rule 147 (IntLit -> INT .)
    COLON           reduce using rule 147 (IntLit -> INT .)
    COMMA           reduce using rule 147 (IntLit -> INT .)
    SEMICOLON       reduce using rule 147 (IntLit -> INT .)
    RPAREN          reduce using rule 147 (IntLit -> INT .)
    RBRACK          reduce using rule 147 (IntLit -> INT .)
    ADD_ASSIGN      reduce using rule 147 (IntLit -> INT .)
    SUB_ASSIGN      reduce using rule 147 (IntLit -> INT .)
    MUL_ASSIGN      reduce using rule 147 (IntLit -> INT .)
    DIV_ASSIGN      reduce using rule 147 (IntLit -> INT .)
    MOD_ASSIGN      reduce using rule 147 (IntLit -> INT .)
    AND_ASSIGN      reduce using rule 147 (IntLit -> INT .)
    AND_NOT_ASSIGN  reduce using rule 147 (IntLit -> INT .)
    OR_ASSIGN       reduce using rule 147 (IntLit -> INT .)
    XOR_ASSIGN      reduce using rule 147 (IntLit -> INT .)
    SHL_ASSIGN      reduce using rule 147 (IntLit -> INT .)
    SHR_ASSIGN      reduce using rule 147 (IntLit -> INT .)
    ASSIGN          reduce using rule 147 (IntLit -> INT .)
    LBRACE          reduce using rule 147 (IntLit -> INT .)
    INC             reduce using rule 147 (IntLit -> INT .)
    DEC             reduce using rule 147 (IntLit -> INT .)


state 95

    (148) FloatLit -> FLOAT .

    DOT             reduce using rule 148 (FloatLit -> FLOAT .)
    LBRACK          reduce using rule 148 (FloatLit -> FLOAT .)
    LPAREN          reduce using rule 148 (FloatLit -> FLOAT .)
    RBRACK          reduce using rule 148 (FloatLit -> FLOAT .)
    COLON           reduce using rule 148 (FloatLit -> FLOAT .)
    LOR             reduce using rule 148 (FloatLit -> FLOAT .)
    LAND            reduce using rule 148 (FloatLit -> FLOAT .)
    EQL             reduce using rule 148 (FloatLit -> FLOAT .)
    NEQ             reduce using rule 148 (FloatLit -> FLOAT .)
    LTN             reduce using rule 148 (FloatLit -> FLOAT .)
    LEQ             reduce using rule 148 (FloatLit -> FLOAT .)
    GTN             reduce using rule 148 (FloatLit -> FLOAT .)
    GEQ             reduce using rule 148 (FloatLit -> FLOAT .)
    ADD             reduce using rule 148 (FloatLit -> FLOAT .)
    SUB             reduce using rule 148 (FloatLit -> FLOAT .)
    OR              reduce using rule 148 (FloatLit -> FLOAT .)
    XOR             reduce using rule 148 (FloatLit -> FLOAT .)
    MUL             reduce using rule 148 (FloatLit -> FLOAT .)
    DIV             reduce using rule 148 (FloatLit -> FLOAT .)
    MOD             reduce using rule 148 (FloatLit -> FLOAT .)
    SHL             reduce using rule 148 (FloatLit -> FLOAT .)
    SHR             reduce using rule 148 (FloatLit -> FLOAT .)
    AND             reduce using rule 148 (FloatLit -> FLOAT .)
    AND_NOT         reduce using rule 148 (FloatLit -> FLOAT .)
    COMMA           reduce using rule 148 (FloatLit -> FLOAT .)
    SEMICOLON       reduce using rule 148 (FloatLit -> FLOAT .)
    LBRACE          reduce using rule 148 (FloatLit -> FLOAT .)
    INC             reduce using rule 148 (FloatLit -> FLOAT .)
    DEC             reduce using rule 148 (FloatLit -> FLOAT .)
    ADD_ASSIGN      reduce using rule 148 (FloatLit -> FLOAT .)
    SUB_ASSIGN      reduce using rule 148 (FloatLit -> FLOAT .)
    MUL_ASSIGN      reduce using rule 148 (FloatLit -> FLOAT .)
    DIV_ASSIGN      reduce using rule 148 (FloatLit -> FLOAT .)
    MOD_ASSIGN      reduce using rule 148 (FloatLit -> FLOAT .)
    AND_ASSIGN      reduce using rule 148 (FloatLit -> FLOAT .)
    AND_NOT_ASSIGN  reduce using rule 148 (FloatLit -> FLOAT .)
    OR_ASSIGN       reduce using rule 148 (FloatLit -> FLOAT .)
    XOR_ASSIGN      reduce using rule 148 (FloatLit -> FLOAT .)
    SHL_ASSIGN      reduce using rule 148 (FloatLit -> FLOAT .)
    SHR_ASSIGN      reduce using rule 148 (FloatLit -> FLOAT .)
    ASSIGN          reduce using rule 148 (FloatLit -> FLOAT .)
    RPAREN          reduce using rule 148 (FloatLit -> FLOAT .)


state 96

    (142) BasicLit -> StringLit .

    DOT             reduce using rule 142 (BasicLit -> StringLit .)
    LBRACK          reduce using rule 142 (BasicLit -> StringLit .)
    LPAREN          reduce using rule 142 (BasicLit -> StringLit .)
    LOR             reduce using rule 142 (BasicLit -> StringLit .)
    LAND            reduce using rule 142 (BasicLit -> StringLit .)
    EQL             reduce using rule 142 (BasicLit -> StringLit .)
    NEQ             reduce using rule 142 (BasicLit -> StringLit .)
    LTN             reduce using rule 142 (BasicLit -> StringLit .)
    LEQ             reduce using rule 142 (BasicLit -> StringLit .)
    GTN             reduce using rule 142 (BasicLit -> StringLit .)
    GEQ             reduce using rule 142 (BasicLit -> StringLit .)
    ADD             reduce using rule 142 (BasicLit -> StringLit .)
    SUB             reduce using rule 142 (BasicLit -> StringLit .)
    OR              reduce using rule 142 (BasicLit -> StringLit .)
    XOR             reduce using rule 142 (BasicLit -> StringLit .)
    MUL             reduce using rule 142 (BasicLit -> StringLit .)
    DIV             reduce using rule 142 (BasicLit -> StringLit .)
    MOD             reduce using rule 142 (BasicLit -> StringLit .)
    SHL             reduce using rule 142 (BasicLit -> StringLit .)
    SHR             reduce using rule 142 (BasicLit -> StringLit .)
    AND             reduce using rule 142 (BasicLit -> StringLit .)
    AND_NOT         reduce using rule 142 (BasicLit -> StringLit .)
    COMMA           reduce using rule 142 (BasicLit -> StringLit .)
    SEMICOLON       reduce using rule 142 (BasicLit -> StringLit .)
    LBRACE          reduce using rule 142 (BasicLit -> StringLit .)
    RPAREN          reduce using rule 142 (BasicLit -> StringLit .)
    RBRACK          reduce using rule 142 (BasicLit -> StringLit .)
    COLON           reduce using rule 142 (BasicLit -> StringLit .)
    ADD_ASSIGN      reduce using rule 142 (BasicLit -> StringLit .)
    SUB_ASSIGN      reduce using rule 142 (BasicLit -> StringLit .)
    MUL_ASSIGN      reduce using rule 142 (BasicLit -> StringLit .)
    DIV_ASSIGN      reduce using rule 142 (BasicLit -> StringLit .)
    MOD_ASSIGN      reduce using rule 142 (BasicLit -> StringLit .)
    AND_ASSIGN      reduce using rule 142 (BasicLit -> StringLit .)
    AND_NOT_ASSIGN  reduce using rule 142 (BasicLit -> StringLit .)
    OR_ASSIGN       reduce using rule 142 (BasicLit -> StringLit .)
    XOR_ASSIGN      reduce using rule 142 (BasicLit -> StringLit .)
    SHL_ASSIGN      reduce using rule 142 (BasicLit -> StringLit .)
    SHR_ASSIGN      reduce using rule 142 (BasicLit -> StringLit .)
    ASSIGN          reduce using rule 142 (BasicLit -> StringLit .)
    INC             reduce using rule 142 (BasicLit -> StringLit .)
    DEC             reduce using rule 142 (BasicLit -> StringLit .)


state 97

    (117) UnaryOp -> NOT .

    ID              reduce using rule 117 (UnaryOp -> NOT .)
    LPAREN          reduce using rule 117 (UnaryOp -> NOT .)
    ADD             reduce using rule 117 (UnaryOp -> NOT .)
    SUB             reduce using rule 117 (UnaryOp -> NOT .)
    NOT             reduce using rule 117 (UnaryOp -> NOT .)
    XOR             reduce using rule 117 (UnaryOp -> NOT .)
    MUL             reduce using rule 117 (UnaryOp -> NOT .)
    AND             reduce using rule 117 (UnaryOp -> NOT .)
    INT             reduce using rule 117 (UnaryOp -> NOT .)
    FLOAT           reduce using rule 117 (UnaryOp -> NOT .)
    RUNE            reduce using rule 117 (UnaryOp -> NOT .)
    STRING          reduce using rule 117 (UnaryOp -> NOT .)
    TRUE            reduce using rule 117 (UnaryOp -> NOT .)
    FALSE           reduce using rule 117 (UnaryOp -> NOT .)


state 98

    (143) BasicLit -> TrueLit .

    DOT             reduce using rule 143 (BasicLit -> TrueLit .)
    LBRACK          reduce using rule 143 (BasicLit -> TrueLit .)
    LPAREN          reduce using rule 143 (BasicLit -> TrueLit .)
    LOR             reduce using rule 143 (BasicLit -> TrueLit .)
    LAND            reduce using rule 143 (BasicLit -> TrueLit .)
    EQL             reduce using rule 143 (BasicLit -> TrueLit .)
    NEQ             reduce using rule 143 (BasicLit -> TrueLit .)
    LTN             reduce using rule 143 (BasicLit -> TrueLit .)
    LEQ             reduce using rule 143 (BasicLit -> TrueLit .)
    GTN             reduce using rule 143 (BasicLit -> TrueLit .)
    GEQ             reduce using rule 143 (BasicLit -> TrueLit .)
    ADD             reduce using rule 143 (BasicLit -> TrueLit .)
    SUB             reduce using rule 143 (BasicLit -> TrueLit .)
    OR              reduce using rule 143 (BasicLit -> TrueLit .)
    XOR             reduce using rule 143 (BasicLit -> TrueLit .)
    MUL             reduce using rule 143 (BasicLit -> TrueLit .)
    DIV             reduce using rule 143 (BasicLit -> TrueLit .)
    MOD             reduce using rule 143 (BasicLit -> TrueLit .)
    SHL             reduce using rule 143 (BasicLit -> TrueLit .)
    SHR             reduce using rule 143 (BasicLit -> TrueLit .)
    AND             reduce using rule 143 (BasicLit -> TrueLit .)
    AND_NOT         reduce using rule 143 (BasicLit -> TrueLit .)
    COMMA           reduce using rule 143 (BasicLit -> TrueLit .)
    SEMICOLON       reduce using rule 143 (BasicLit -> TrueLit .)
    LBRACE          reduce using rule 143 (BasicLit -> TrueLit .)
    RPAREN          reduce using rule 143 (BasicLit -> TrueLit .)
    RBRACK          reduce using rule 143 (BasicLit -> TrueLit .)
    COLON           reduce using rule 143 (BasicLit -> TrueLit .)
    ADD_ASSIGN      reduce using rule 143 (BasicLit -> TrueLit .)
    SUB_ASSIGN      reduce using rule 143 (BasicLit -> TrueLit .)
    MUL_ASSIGN      reduce using rule 143 (BasicLit -> TrueLit .)
    DIV_ASSIGN      reduce using rule 143 (BasicLit -> TrueLit .)
    MOD_ASSIGN      reduce using rule 143 (BasicLit -> TrueLit .)
    AND_ASSIGN      reduce using rule 143 (BasicLit -> TrueLit .)
    AND_NOT_ASSIGN  reduce using rule 143 (BasicLit -> TrueLit .)
    OR_ASSIGN       reduce using rule 143 (BasicLit -> TrueLit .)
    XOR_ASSIGN      reduce using rule 143 (BasicLit -> TrueLit .)
    SHL_ASSIGN      reduce using rule 143 (BasicLit -> TrueLit .)
    SHR_ASSIGN      reduce using rule 143 (BasicLit -> TrueLit .)
    ASSIGN          reduce using rule 143 (BasicLit -> TrueLit .)
    INC             reduce using rule 143 (BasicLit -> TrueLit .)
    DEC             reduce using rule 143 (BasicLit -> TrueLit .)


state 99

    (46) Type -> LPAREN Type . RPAREN

    RPAREN          shift and go to state 154


state 100

    (47) Type -> LPAREN ID . RPAREN

    RPAREN          shift and go to state 155


state 101

    (65) PointerType -> MUL Type .

    ASSIGN          reduce using rule 65 (PointerType -> MUL Type .)
    SEMICOLON       reduce using rule 65 (PointerType -> MUL Type .)
    RPAREN          reduce using rule 65 (PointerType -> MUL Type .)
    COMMA           reduce using rule 65 (PointerType -> MUL Type .)


state 102

    (66) PointerType -> MUL ID .

    ASSIGN          reduce using rule 66 (PointerType -> MUL ID .)
    SEMICOLON       reduce using rule 66 (PointerType -> MUL ID .)
    RPAREN          reduce using rule 66 (PointerType -> MUL ID .)
    COMMA           reduce using rule 66 (PointerType -> MUL ID .)


state 103

    (39) VarSpec -> IdentifierList Type ASSIGN . ExpressionList
    (31) ExpressionList -> . Expression
    (32) ExpressionList -> . ExpressionList COMMA Expression
    (89) Expression -> . UnaryExpr
    (90) Expression -> . Expression BinaryOp UnaryExpr
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (138) Literal -> . BasicLit
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    ID              shift and go to state 91
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    BasicLit                       shift and go to state 79
    RuneLit                        shift and go to state 89
    UnaryOp                        shift and go to state 73
    TrueLit                        shift and go to state 98
    UnaryExpr                      shift and go to state 83
    FloatLit                       shift and go to state 84
    FalseLit                       shift and go to state 74
    IntLit                         shift and go to state 76
    Literal                        shift and go to state 75
    ExpressionList                 shift and go to state 156
    PrimaryExpr                    shift and go to state 85
    StringLit                      shift and go to state 96
    Expression                     shift and go to state 90

state 104

    (40) VarSpec -> IdentifierList ID ASSIGN . ExpressionList
    (31) ExpressionList -> . Expression
    (32) ExpressionList -> . ExpressionList COMMA Expression
    (89) Expression -> . UnaryExpr
    (90) Expression -> . Expression BinaryOp UnaryExpr
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (138) Literal -> . BasicLit
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    ID              shift and go to state 91
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    RuneLit                        shift and go to state 89
    UnaryOp                        shift and go to state 73
    TrueLit                        shift and go to state 98
    BasicLit                       shift and go to state 79
    UnaryExpr                      shift and go to state 83
    FloatLit                       shift and go to state 84
    FalseLit                       shift and go to state 74
    IntLit                         shift and go to state 76
    Literal                        shift and go to state 75
    ExpressionList                 shift and go to state 157
    PrimaryExpr                    shift and go to state 85
    StringLit                      shift and go to state 96
    Expression                     shift and go to state 90

state 105

    (56) StructType -> STRUCT OpenStructS . LBRACE FieldDecl_curl RBRACE CloseStructS

    LBRACE          shift and go to state 158


state 106

    (13) ImportSpec_curl -> ImportSpec_curl ImportSpec SEMICOLON .

    RPAREN          reduce using rule 13 (ImportSpec_curl -> ImportSpec_curl ImportSpec SEMICOLON .)
    DOT             reduce using rule 13 (ImportSpec_curl -> ImportSpec_curl ImportSpec SEMICOLON .)
    ID              reduce using rule 13 (ImportSpec_curl -> ImportSpec_curl ImportSpec SEMICOLON .)
    STRING          reduce using rule 13 (ImportSpec_curl -> ImportSpec_curl ImportSpec SEMICOLON .)


state 107

    (26) ConstSpec_curl -> ConstSpec_curl ConstSpec SEMICOLON .

    RPAREN          reduce using rule 26 (ConstSpec_curl -> ConstSpec_curl ConstSpec SEMICOLON .)
    ID              reduce using rule 26 (ConstSpec_curl -> ConstSpec_curl ConstSpec SEMICOLON .)


state 108

    (28) ConstSpec -> IdentifierList ID ASSIGN ExpressionList .
    (32) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 28 (ConstSpec -> IdentifierList ID ASSIGN ExpressionList .)
    COMMA           shift and go to state 129


state 109

    (74) Parameters -> LPAREN RPAREN .

    LPAREN          reduce using rule 74 (Parameters -> LPAREN RPAREN .)
    LBRACE          reduce using rule 74 (Parameters -> LPAREN RPAREN .)


state 110

    (75) Parameters -> LPAREN ParameterList . RPAREN
    (76) Parameters -> LPAREN ParameterList . COMMA RPAREN
    (78) ParameterList -> ParameterList . COMMA ParameterDecl

    RPAREN          shift and go to state 160
    COMMA           shift and go to state 159


state 111

    (79) ParameterDecl -> ParaIdList . Type
    (81) ParameterDecl -> ParaIdList . ID
    (84) ParaIdList -> ParaIdList . COMMA ID
    (46) Type -> . LPAREN Type RPAREN
    (47) Type -> . LPAREN ID RPAREN
    (48) Type -> . TypeLit
    (49) TypeLit -> . ArrayType
    (50) TypeLit -> . PointerType
    (51) TypeLit -> . SliceType
    (52) ArrayType -> . LBRACK INT RBRACK Type
    (53) ArrayType -> . LBRACK INT RBRACK ID
    (65) PointerType -> . MUL Type
    (66) PointerType -> . MUL ID
    (54) SliceType -> . LBRACK RBRACK Type
    (55) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 163
    COMMA           shift and go to state 161
    LPAREN          shift and go to state 51
    LBRACK          shift and go to state 48
    MUL             shift and go to state 53

    Type                           shift and go to state 162
    ArrayType                      shift and go to state 49
    PointerType                    shift and go to state 52
    TypeLit                        shift and go to state 47
    SliceType                      shift and go to state 56

state 112

    (77) ParameterList -> ParameterDecl .

    RPAREN          reduce using rule 77 (ParameterList -> ParameterDecl .)
    COMMA           reduce using rule 77 (ParameterList -> ParameterDecl .)


state 113

    (80) ParameterDecl -> ID . Type
    (82) ParameterDecl -> ID . ID
    (83) ParaIdList -> ID . COMMA ID
    (46) Type -> . LPAREN Type RPAREN
    (47) Type -> . LPAREN ID RPAREN
    (48) Type -> . TypeLit
    (49) TypeLit -> . ArrayType
    (50) TypeLit -> . PointerType
    (51) TypeLit -> . SliceType
    (52) ArrayType -> . LBRACK INT RBRACK Type
    (53) ArrayType -> . LBRACK INT RBRACK ID
    (65) PointerType -> . MUL Type
    (66) PointerType -> . MUL ID
    (54) SliceType -> . LBRACK RBRACK Type
    (55) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 166
    COMMA           shift and go to state 165
    LPAREN          shift and go to state 51
    LBRACK          shift and go to state 48
    MUL             shift and go to state 53

    PointerType                    shift and go to state 52
    TypeLit                        shift and go to state 47
    Type                           shift and go to state 164
    ArrayType                      shift and go to state 49
    SliceType                      shift and go to state 56

state 114

    (68) Result -> LPAREN . TypeList RPAREN
    (70) TypeList -> . ID
    (71) TypeList -> . Type
    (72) TypeList -> . TypeList COMMA ID
    (73) TypeList -> . TypeList COMMA Type
    (46) Type -> . LPAREN Type RPAREN
    (47) Type -> . LPAREN ID RPAREN
    (48) Type -> . TypeLit
    (49) TypeLit -> . ArrayType
    (50) TypeLit -> . PointerType
    (51) TypeLit -> . SliceType
    (52) ArrayType -> . LBRACK INT RBRACK Type
    (53) ArrayType -> . LBRACK INT RBRACK ID
    (65) PointerType -> . MUL Type
    (66) PointerType -> . MUL ID
    (54) SliceType -> . LBRACK RBRACK Type
    (55) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 169
    LPAREN          shift and go to state 51
    LBRACK          shift and go to state 48
    MUL             shift and go to state 53

    TypeList                       shift and go to state 167
    Type                           shift and go to state 168
    ArrayType                      shift and go to state 49
    PointerType                    shift and go to state 52
    TypeLit                        shift and go to state 47
    SliceType                      shift and go to state 56

state 115

    (67) Signature -> Parameters Result .

    LBRACE          reduce using rule 67 (Signature -> Parameters Result .)


state 116

    (85) Block -> LBRACE . StatementList RBRACE
    (86) StatementList -> . Statement_curl
    (87) Statement_curl -> . Statement_curl Statement SEMICOLON
    (88) Statement_curl -> .

    ID              reduce using rule 88 (Statement_curl -> .)
    RETURN          reduce using rule 88 (Statement_curl -> .)
    BREAK           reduce using rule 88 (Statement_curl -> .)
    CONTINUE        reduce using rule 88 (Statement_curl -> .)
    GOTO            reduce using rule 88 (Statement_curl -> .)
    FALLTHROUGH     reduce using rule 88 (Statement_curl -> .)
    IF              reduce using rule 88 (Statement_curl -> .)
    FOR             reduce using rule 88 (Statement_curl -> .)
    CONST           reduce using rule 88 (Statement_curl -> .)
    TYPE            reduce using rule 88 (Statement_curl -> .)
    VAR             reduce using rule 88 (Statement_curl -> .)
    SWITCH          reduce using rule 88 (Statement_curl -> .)
    LPAREN          reduce using rule 88 (Statement_curl -> .)
    ADD             reduce using rule 88 (Statement_curl -> .)
    SUB             reduce using rule 88 (Statement_curl -> .)
    NOT             reduce using rule 88 (Statement_curl -> .)
    XOR             reduce using rule 88 (Statement_curl -> .)
    MUL             reduce using rule 88 (Statement_curl -> .)
    AND             reduce using rule 88 (Statement_curl -> .)
    INT             reduce using rule 88 (Statement_curl -> .)
    FLOAT           reduce using rule 88 (Statement_curl -> .)
    RUNE            reduce using rule 88 (Statement_curl -> .)
    STRING          reduce using rule 88 (Statement_curl -> .)
    TRUE            reduce using rule 88 (Statement_curl -> .)
    FALSE           reduce using rule 88 (Statement_curl -> .)
    SEMICOLON       reduce using rule 88 (Statement_curl -> .)
    LBRACE          reduce using rule 88 (Statement_curl -> .)
    RBRACE          reduce using rule 88 (Statement_curl -> .)

    Statement_curl                 shift and go to state 170
    StatementList                  shift and go to state 171

state 117

    (44) FunctionDecl -> FUNC FuncName OpenS Signature Block . CloseS
    (3) CloseS -> .

    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 172

state 118

    (37) VarSpec_curl -> VarSpec_curl VarSpec SEMICOLON .

    RPAREN          reduce using rule 37 (VarSpec_curl -> VarSpec_curl VarSpec SEMICOLON .)
    ID              reduce using rule 37 (VarSpec_curl -> VarSpec_curl VarSpec SEMICOLON .)


state 119

    (52) ArrayType -> LBRACK INT RBRACK . Type
    (53) ArrayType -> LBRACK INT RBRACK . ID
    (46) Type -> . LPAREN Type RPAREN
    (47) Type -> . LPAREN ID RPAREN
    (48) Type -> . TypeLit
    (49) TypeLit -> . ArrayType
    (50) TypeLit -> . PointerType
    (51) TypeLit -> . SliceType
    (52) ArrayType -> . LBRACK INT RBRACK Type
    (53) ArrayType -> . LBRACK INT RBRACK ID
    (65) PointerType -> . MUL Type
    (66) PointerType -> . MUL ID
    (54) SliceType -> . LBRACK RBRACK Type
    (55) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 174
    LPAREN          shift and go to state 51
    LBRACK          shift and go to state 48
    MUL             shift and go to state 53

    PointerType                    shift and go to state 52
    TypeLit                        shift and go to state 47
    Type                           shift and go to state 173
    ArrayType                      shift and go to state 49
    SliceType                      shift and go to state 56

state 120

    (54) SliceType -> LBRACK RBRACK Type .

    ASSIGN          reduce using rule 54 (SliceType -> LBRACK RBRACK Type .)
    SEMICOLON       reduce using rule 54 (SliceType -> LBRACK RBRACK Type .)
    RPAREN          reduce using rule 54 (SliceType -> LBRACK RBRACK Type .)
    COMMA           reduce using rule 54 (SliceType -> LBRACK RBRACK Type .)


state 121

    (55) SliceType -> LBRACK RBRACK ID .

    ASSIGN          reduce using rule 55 (SliceType -> LBRACK RBRACK ID .)
    SEMICOLON       reduce using rule 55 (SliceType -> LBRACK RBRACK ID .)
    RPAREN          reduce using rule 55 (SliceType -> LBRACK RBRACK ID .)
    COMMA           reduce using rule 55 (SliceType -> LBRACK RBRACK ID .)


state 122

    (92) UnaryExpr -> UnaryOp UnaryExpr .

    LOR             reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    LAND            reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    EQL             reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    NEQ             reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    LTN             reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    LEQ             reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    GTN             reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    GEQ             reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    ADD             reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    SUB             reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR              reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    XOR             reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    MUL             reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIV             reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    MOD             reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHL             reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHR             reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND             reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND_NOT         reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    COMMA           reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    SEMICOLON       reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    ADD_ASSIGN      reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    SUB_ASSIGN      reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    MUL_ASSIGN      reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIV_ASSIGN      reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    MOD_ASSIGN      reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND_ASSIGN      reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR_ASSIGN       reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    XOR_ASSIGN      reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHL_ASSIGN      reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHR_ASSIGN      reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    ASSIGN          reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    LBRACE          reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    RPAREN          reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    RBRACK          reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    COLON           reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    INC             reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)
    DEC             reduce using rule 92 (UnaryExpr -> UnaryOp UnaryExpr .)


state 123

    (125) PrimaryExpr -> PrimaryExpr Index .

    DOT             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACK          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    LPAREN          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    LOR             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    LAND            reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    EQL             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    NEQ             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    LTN             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    LEQ             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    GTN             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    GEQ             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    ADD             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    SUB             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    OR              reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    XOR             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    MUL             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    DIV             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    MOD             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    SHL             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    SHR             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    AND             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    AND_NOT         reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    COMMA           reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    SEMICOLON       reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    RPAREN          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACE          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    RBRACK          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    COLON           reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    ADD_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    SUB_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    MUL_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    DIV_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    MOD_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    AND_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    AND_NOT_ASSIGN  reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    OR_ASSIGN       reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    XOR_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    SHL_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    SHR_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    ASSIGN          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    INC             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)
    DEC             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Index .)


state 124

    (126) PrimaryExpr -> PrimaryExpr Slice .

    DOT             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACK          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    LPAREN          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    LOR             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    LAND            reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    EQL             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    NEQ             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    LTN             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    LEQ             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    GTN             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    GEQ             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    ADD             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    SUB             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    OR              reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    XOR             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    MUL             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    DIV             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    MOD             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    SHL             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    SHR             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    AND             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    AND_NOT         reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    COMMA           reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    SEMICOLON       reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    RPAREN          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACE          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    RBRACK          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    COLON           reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    ADD_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    SUB_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    MUL_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    DIV_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    MOD_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    AND_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    AND_NOT_ASSIGN  reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    OR_ASSIGN       reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    XOR_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    SHL_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    SHR_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    ASSIGN          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    INC             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)
    DEC             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Slice .)


state 125

    (128) Index -> LBRACK . Expression RBRACK
    (129) Slice -> LBRACK . Expression COLON Expression RBRACK
    (130) Slice -> LBRACK . COLON Expression RBRACK
    (131) Slice -> LBRACK . Expression COLON RBRACK
    (132) Slice -> LBRACK . COLON RBRACK
    (133) Slice -> LBRACK . Expression COLON Expression COLON Expression RBRACK
    (134) Slice -> LBRACK . COLON Expression COLON Expression RBRACK
    (89) Expression -> . UnaryExpr
    (90) Expression -> . Expression BinaryOp UnaryExpr
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (138) Literal -> . BasicLit
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    COLON           shift and go to state 175
    ID              shift and go to state 91
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    RuneLit                        shift and go to state 89
    UnaryOp                        shift and go to state 73
    TrueLit                        shift and go to state 98
    BasicLit                       shift and go to state 79
    UnaryExpr                      shift and go to state 83
    FloatLit                       shift and go to state 84
    FalseLit                       shift and go to state 74
    IntLit                         shift and go to state 76
    Literal                        shift and go to state 75
    PrimaryExpr                    shift and go to state 85
    StringLit                      shift and go to state 96
    Expression                     shift and go to state 176

state 126

    (127) PrimaryExpr -> PrimaryExpr Arguments .

    DOT             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACK          reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    LPAREN          reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    LOR             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    LAND            reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQL             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    NEQ             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    LTN             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    LEQ             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    GTN             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    GEQ             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    ADD             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    SUB             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR              reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    MUL             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    DIV             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    MOD             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHL             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHR             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_NOT         reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    COMMA           reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    SEMICOLON       reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    RPAREN          reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACE          reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    RBRACK          reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    COLON           reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    ADD_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    SUB_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    MUL_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    DIV_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    MOD_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_NOT_ASSIGN  reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR_ASSIGN       reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHL_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHR_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    ASSIGN          reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    INC             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)
    DEC             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Arguments .)


state 127

    (135) Arguments -> LPAREN . RPAREN
    (136) Arguments -> LPAREN . ExpressionList RPAREN
    (137) Arguments -> LPAREN . ExpressionList COMMA RPAREN
    (31) ExpressionList -> . Expression
    (32) ExpressionList -> . ExpressionList COMMA Expression
    (89) Expression -> . UnaryExpr
    (90) Expression -> . Expression BinaryOp UnaryExpr
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (138) Literal -> . BasicLit
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    RPAREN          shift and go to state 177
    ID              shift and go to state 91
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    RuneLit                        shift and go to state 89
    UnaryOp                        shift and go to state 73
    TrueLit                        shift and go to state 98
    BasicLit                       shift and go to state 79
    UnaryExpr                      shift and go to state 83
    FloatLit                       shift and go to state 84
    FalseLit                       shift and go to state 74
    IntLit                         shift and go to state 76
    Literal                        shift and go to state 75
    ExpressionList                 shift and go to state 178
    PrimaryExpr                    shift and go to state 85
    StringLit                      shift and go to state 96
    Expression                     shift and go to state 90

state 128

    (123) PrimaryExpr -> PrimaryExpr DOT . ID

    ID              shift and go to state 179


state 129

    (32) ExpressionList -> ExpressionList COMMA . Expression
    (89) Expression -> . UnaryExpr
    (90) Expression -> . Expression BinaryOp UnaryExpr
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (138) Literal -> . BasicLit
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    ID              shift and go to state 91
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    RuneLit                        shift and go to state 89
    UnaryOp                        shift and go to state 73
    TrueLit                        shift and go to state 98
    BasicLit                       shift and go to state 79
    UnaryExpr                      shift and go to state 83
    FloatLit                       shift and go to state 84
    FalseLit                       shift and go to state 74
    IntLit                         shift and go to state 76
    Literal                        shift and go to state 75
    PrimaryExpr                    shift and go to state 85
    StringLit                      shift and go to state 96
    Expression                     shift and go to state 180

state 130

    (124) PrimaryExpr -> LPAREN Expression . RPAREN
    (90) Expression -> Expression . BinaryOp UnaryExpr
    (93) BinaryOp -> . LOR
    (94) BinaryOp -> . LAND
    (95) BinaryOp -> . RelOp
    (96) BinaryOp -> . AddOp
    (97) BinaryOp -> . MulOp
    (98) RelOp -> . EQL
    (99) RelOp -> . NEQ
    (100) RelOp -> . LTN
    (101) RelOp -> . LEQ
    (102) RelOp -> . GTN
    (103) RelOp -> . GEQ
    (104) AddOp -> . ADD
    (105) AddOp -> . SUB
    (106) AddOp -> . OR
    (107) AddOp -> . XOR
    (108) MulOp -> . MUL
    (109) MulOp -> . DIV
    (110) MulOp -> . MOD
    (111) MulOp -> . SHL
    (112) MulOp -> . SHR
    (113) MulOp -> . AND
    (114) MulOp -> . AND_NOT

    RPAREN          shift and go to state 181
    LOR             shift and go to state 132
    LAND            shift and go to state 137
    EQL             shift and go to state 146
    NEQ             shift and go to state 135
    LTN             shift and go to state 148
    LEQ             shift and go to state 151
    GTN             shift and go to state 144
    GEQ             shift and go to state 136
    ADD             shift and go to state 145
    SUB             shift and go to state 131
    OR              shift and go to state 152
    XOR             shift and go to state 142
    MUL             shift and go to state 133
    DIV             shift and go to state 134
    MOD             shift and go to state 153
    SHL             shift and go to state 147
    SHR             shift and go to state 141
    AND             shift and go to state 149
    AND_NOT         shift and go to state 138

    AddOp                          shift and go to state 140
    BinaryOp                       shift and go to state 139
    MulOp                          shift and go to state 143
    RelOp                          shift and go to state 150

state 131

    (105) AddOp -> SUB .

    ID              reduce using rule 105 (AddOp -> SUB .)
    LPAREN          reduce using rule 105 (AddOp -> SUB .)
    ADD             reduce using rule 105 (AddOp -> SUB .)
    SUB             reduce using rule 105 (AddOp -> SUB .)
    NOT             reduce using rule 105 (AddOp -> SUB .)
    XOR             reduce using rule 105 (AddOp -> SUB .)
    MUL             reduce using rule 105 (AddOp -> SUB .)
    AND             reduce using rule 105 (AddOp -> SUB .)
    INT             reduce using rule 105 (AddOp -> SUB .)
    FLOAT           reduce using rule 105 (AddOp -> SUB .)
    RUNE            reduce using rule 105 (AddOp -> SUB .)
    STRING          reduce using rule 105 (AddOp -> SUB .)
    TRUE            reduce using rule 105 (AddOp -> SUB .)
    FALSE           reduce using rule 105 (AddOp -> SUB .)


state 132

    (93) BinaryOp -> LOR .

    ID              reduce using rule 93 (BinaryOp -> LOR .)
    LPAREN          reduce using rule 93 (BinaryOp -> LOR .)
    ADD             reduce using rule 93 (BinaryOp -> LOR .)
    SUB             reduce using rule 93 (BinaryOp -> LOR .)
    NOT             reduce using rule 93 (BinaryOp -> LOR .)
    XOR             reduce using rule 93 (BinaryOp -> LOR .)
    MUL             reduce using rule 93 (BinaryOp -> LOR .)
    AND             reduce using rule 93 (BinaryOp -> LOR .)
    INT             reduce using rule 93 (BinaryOp -> LOR .)
    FLOAT           reduce using rule 93 (BinaryOp -> LOR .)
    RUNE            reduce using rule 93 (BinaryOp -> LOR .)
    STRING          reduce using rule 93 (BinaryOp -> LOR .)
    TRUE            reduce using rule 93 (BinaryOp -> LOR .)
    FALSE           reduce using rule 93 (BinaryOp -> LOR .)


state 133

    (108) MulOp -> MUL .

    ID              reduce using rule 108 (MulOp -> MUL .)
    LPAREN          reduce using rule 108 (MulOp -> MUL .)
    ADD             reduce using rule 108 (MulOp -> MUL .)
    SUB             reduce using rule 108 (MulOp -> MUL .)
    NOT             reduce using rule 108 (MulOp -> MUL .)
    XOR             reduce using rule 108 (MulOp -> MUL .)
    MUL             reduce using rule 108 (MulOp -> MUL .)
    AND             reduce using rule 108 (MulOp -> MUL .)
    INT             reduce using rule 108 (MulOp -> MUL .)
    FLOAT           reduce using rule 108 (MulOp -> MUL .)
    RUNE            reduce using rule 108 (MulOp -> MUL .)
    STRING          reduce using rule 108 (MulOp -> MUL .)
    TRUE            reduce using rule 108 (MulOp -> MUL .)
    FALSE           reduce using rule 108 (MulOp -> MUL .)


state 134

    (109) MulOp -> DIV .

    ID              reduce using rule 109 (MulOp -> DIV .)
    LPAREN          reduce using rule 109 (MulOp -> DIV .)
    ADD             reduce using rule 109 (MulOp -> DIV .)
    SUB             reduce using rule 109 (MulOp -> DIV .)
    NOT             reduce using rule 109 (MulOp -> DIV .)
    XOR             reduce using rule 109 (MulOp -> DIV .)
    MUL             reduce using rule 109 (MulOp -> DIV .)
    AND             reduce using rule 109 (MulOp -> DIV .)
    INT             reduce using rule 109 (MulOp -> DIV .)
    FLOAT           reduce using rule 109 (MulOp -> DIV .)
    RUNE            reduce using rule 109 (MulOp -> DIV .)
    STRING          reduce using rule 109 (MulOp -> DIV .)
    TRUE            reduce using rule 109 (MulOp -> DIV .)
    FALSE           reduce using rule 109 (MulOp -> DIV .)


state 135

    (99) RelOp -> NEQ .

    ID              reduce using rule 99 (RelOp -> NEQ .)
    LPAREN          reduce using rule 99 (RelOp -> NEQ .)
    ADD             reduce using rule 99 (RelOp -> NEQ .)
    SUB             reduce using rule 99 (RelOp -> NEQ .)
    NOT             reduce using rule 99 (RelOp -> NEQ .)
    XOR             reduce using rule 99 (RelOp -> NEQ .)
    MUL             reduce using rule 99 (RelOp -> NEQ .)
    AND             reduce using rule 99 (RelOp -> NEQ .)
    INT             reduce using rule 99 (RelOp -> NEQ .)
    FLOAT           reduce using rule 99 (RelOp -> NEQ .)
    RUNE            reduce using rule 99 (RelOp -> NEQ .)
    STRING          reduce using rule 99 (RelOp -> NEQ .)
    TRUE            reduce using rule 99 (RelOp -> NEQ .)
    FALSE           reduce using rule 99 (RelOp -> NEQ .)


state 136

    (103) RelOp -> GEQ .

    ID              reduce using rule 103 (RelOp -> GEQ .)
    LPAREN          reduce using rule 103 (RelOp -> GEQ .)
    ADD             reduce using rule 103 (RelOp -> GEQ .)
    SUB             reduce using rule 103 (RelOp -> GEQ .)
    NOT             reduce using rule 103 (RelOp -> GEQ .)
    XOR             reduce using rule 103 (RelOp -> GEQ .)
    MUL             reduce using rule 103 (RelOp -> GEQ .)
    AND             reduce using rule 103 (RelOp -> GEQ .)
    INT             reduce using rule 103 (RelOp -> GEQ .)
    FLOAT           reduce using rule 103 (RelOp -> GEQ .)
    RUNE            reduce using rule 103 (RelOp -> GEQ .)
    STRING          reduce using rule 103 (RelOp -> GEQ .)
    TRUE            reduce using rule 103 (RelOp -> GEQ .)
    FALSE           reduce using rule 103 (RelOp -> GEQ .)


state 137

    (94) BinaryOp -> LAND .

    ID              reduce using rule 94 (BinaryOp -> LAND .)
    LPAREN          reduce using rule 94 (BinaryOp -> LAND .)
    ADD             reduce using rule 94 (BinaryOp -> LAND .)
    SUB             reduce using rule 94 (BinaryOp -> LAND .)
    NOT             reduce using rule 94 (BinaryOp -> LAND .)
    XOR             reduce using rule 94 (BinaryOp -> LAND .)
    MUL             reduce using rule 94 (BinaryOp -> LAND .)
    AND             reduce using rule 94 (BinaryOp -> LAND .)
    INT             reduce using rule 94 (BinaryOp -> LAND .)
    FLOAT           reduce using rule 94 (BinaryOp -> LAND .)
    RUNE            reduce using rule 94 (BinaryOp -> LAND .)
    STRING          reduce using rule 94 (BinaryOp -> LAND .)
    TRUE            reduce using rule 94 (BinaryOp -> LAND .)
    FALSE           reduce using rule 94 (BinaryOp -> LAND .)


state 138

    (114) MulOp -> AND_NOT .

    ID              reduce using rule 114 (MulOp -> AND_NOT .)
    LPAREN          reduce using rule 114 (MulOp -> AND_NOT .)
    ADD             reduce using rule 114 (MulOp -> AND_NOT .)
    SUB             reduce using rule 114 (MulOp -> AND_NOT .)
    NOT             reduce using rule 114 (MulOp -> AND_NOT .)
    XOR             reduce using rule 114 (MulOp -> AND_NOT .)
    MUL             reduce using rule 114 (MulOp -> AND_NOT .)
    AND             reduce using rule 114 (MulOp -> AND_NOT .)
    INT             reduce using rule 114 (MulOp -> AND_NOT .)
    FLOAT           reduce using rule 114 (MulOp -> AND_NOT .)
    RUNE            reduce using rule 114 (MulOp -> AND_NOT .)
    STRING          reduce using rule 114 (MulOp -> AND_NOT .)
    TRUE            reduce using rule 114 (MulOp -> AND_NOT .)
    FALSE           reduce using rule 114 (MulOp -> AND_NOT .)


state 139

    (90) Expression -> Expression BinaryOp . UnaryExpr
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (138) Literal -> . BasicLit
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    ID              shift and go to state 91
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    RuneLit                        shift and go to state 89
    UnaryOp                        shift and go to state 73
    TrueLit                        shift and go to state 98
    BasicLit                       shift and go to state 79
    UnaryExpr                      shift and go to state 182
    FloatLit                       shift and go to state 84
    FalseLit                       shift and go to state 74
    IntLit                         shift and go to state 76
    Literal                        shift and go to state 75
    PrimaryExpr                    shift and go to state 85
    StringLit                      shift and go to state 96

state 140

    (96) BinaryOp -> AddOp .

    ID              reduce using rule 96 (BinaryOp -> AddOp .)
    LPAREN          reduce using rule 96 (BinaryOp -> AddOp .)
    ADD             reduce using rule 96 (BinaryOp -> AddOp .)
    SUB             reduce using rule 96 (BinaryOp -> AddOp .)
    NOT             reduce using rule 96 (BinaryOp -> AddOp .)
    XOR             reduce using rule 96 (BinaryOp -> AddOp .)
    MUL             reduce using rule 96 (BinaryOp -> AddOp .)
    AND             reduce using rule 96 (BinaryOp -> AddOp .)
    INT             reduce using rule 96 (BinaryOp -> AddOp .)
    FLOAT           reduce using rule 96 (BinaryOp -> AddOp .)
    RUNE            reduce using rule 96 (BinaryOp -> AddOp .)
    STRING          reduce using rule 96 (BinaryOp -> AddOp .)
    TRUE            reduce using rule 96 (BinaryOp -> AddOp .)
    FALSE           reduce using rule 96 (BinaryOp -> AddOp .)


state 141

    (112) MulOp -> SHR .

    ID              reduce using rule 112 (MulOp -> SHR .)
    LPAREN          reduce using rule 112 (MulOp -> SHR .)
    ADD             reduce using rule 112 (MulOp -> SHR .)
    SUB             reduce using rule 112 (MulOp -> SHR .)
    NOT             reduce using rule 112 (MulOp -> SHR .)
    XOR             reduce using rule 112 (MulOp -> SHR .)
    MUL             reduce using rule 112 (MulOp -> SHR .)
    AND             reduce using rule 112 (MulOp -> SHR .)
    INT             reduce using rule 112 (MulOp -> SHR .)
    FLOAT           reduce using rule 112 (MulOp -> SHR .)
    RUNE            reduce using rule 112 (MulOp -> SHR .)
    STRING          reduce using rule 112 (MulOp -> SHR .)
    TRUE            reduce using rule 112 (MulOp -> SHR .)
    FALSE           reduce using rule 112 (MulOp -> SHR .)


state 142

    (107) AddOp -> XOR .

    ID              reduce using rule 107 (AddOp -> XOR .)
    LPAREN          reduce using rule 107 (AddOp -> XOR .)
    ADD             reduce using rule 107 (AddOp -> XOR .)
    SUB             reduce using rule 107 (AddOp -> XOR .)
    NOT             reduce using rule 107 (AddOp -> XOR .)
    XOR             reduce using rule 107 (AddOp -> XOR .)
    MUL             reduce using rule 107 (AddOp -> XOR .)
    AND             reduce using rule 107 (AddOp -> XOR .)
    INT             reduce using rule 107 (AddOp -> XOR .)
    FLOAT           reduce using rule 107 (AddOp -> XOR .)
    RUNE            reduce using rule 107 (AddOp -> XOR .)
    STRING          reduce using rule 107 (AddOp -> XOR .)
    TRUE            reduce using rule 107 (AddOp -> XOR .)
    FALSE           reduce using rule 107 (AddOp -> XOR .)


state 143

    (97) BinaryOp -> MulOp .

    ID              reduce using rule 97 (BinaryOp -> MulOp .)
    LPAREN          reduce using rule 97 (BinaryOp -> MulOp .)
    ADD             reduce using rule 97 (BinaryOp -> MulOp .)
    SUB             reduce using rule 97 (BinaryOp -> MulOp .)
    NOT             reduce using rule 97 (BinaryOp -> MulOp .)
    XOR             reduce using rule 97 (BinaryOp -> MulOp .)
    MUL             reduce using rule 97 (BinaryOp -> MulOp .)
    AND             reduce using rule 97 (BinaryOp -> MulOp .)
    INT             reduce using rule 97 (BinaryOp -> MulOp .)
    FLOAT           reduce using rule 97 (BinaryOp -> MulOp .)
    RUNE            reduce using rule 97 (BinaryOp -> MulOp .)
    STRING          reduce using rule 97 (BinaryOp -> MulOp .)
    TRUE            reduce using rule 97 (BinaryOp -> MulOp .)
    FALSE           reduce using rule 97 (BinaryOp -> MulOp .)


state 144

    (102) RelOp -> GTN .

    ID              reduce using rule 102 (RelOp -> GTN .)
    LPAREN          reduce using rule 102 (RelOp -> GTN .)
    ADD             reduce using rule 102 (RelOp -> GTN .)
    SUB             reduce using rule 102 (RelOp -> GTN .)
    NOT             reduce using rule 102 (RelOp -> GTN .)
    XOR             reduce using rule 102 (RelOp -> GTN .)
    MUL             reduce using rule 102 (RelOp -> GTN .)
    AND             reduce using rule 102 (RelOp -> GTN .)
    INT             reduce using rule 102 (RelOp -> GTN .)
    FLOAT           reduce using rule 102 (RelOp -> GTN .)
    RUNE            reduce using rule 102 (RelOp -> GTN .)
    STRING          reduce using rule 102 (RelOp -> GTN .)
    TRUE            reduce using rule 102 (RelOp -> GTN .)
    FALSE           reduce using rule 102 (RelOp -> GTN .)


state 145

    (104) AddOp -> ADD .

    ID              reduce using rule 104 (AddOp -> ADD .)
    LPAREN          reduce using rule 104 (AddOp -> ADD .)
    ADD             reduce using rule 104 (AddOp -> ADD .)
    SUB             reduce using rule 104 (AddOp -> ADD .)
    NOT             reduce using rule 104 (AddOp -> ADD .)
    XOR             reduce using rule 104 (AddOp -> ADD .)
    MUL             reduce using rule 104 (AddOp -> ADD .)
    AND             reduce using rule 104 (AddOp -> ADD .)
    INT             reduce using rule 104 (AddOp -> ADD .)
    FLOAT           reduce using rule 104 (AddOp -> ADD .)
    RUNE            reduce using rule 104 (AddOp -> ADD .)
    STRING          reduce using rule 104 (AddOp -> ADD .)
    TRUE            reduce using rule 104 (AddOp -> ADD .)
    FALSE           reduce using rule 104 (AddOp -> ADD .)


state 146

    (98) RelOp -> EQL .

    ID              reduce using rule 98 (RelOp -> EQL .)
    LPAREN          reduce using rule 98 (RelOp -> EQL .)
    ADD             reduce using rule 98 (RelOp -> EQL .)
    SUB             reduce using rule 98 (RelOp -> EQL .)
    NOT             reduce using rule 98 (RelOp -> EQL .)
    XOR             reduce using rule 98 (RelOp -> EQL .)
    MUL             reduce using rule 98 (RelOp -> EQL .)
    AND             reduce using rule 98 (RelOp -> EQL .)
    INT             reduce using rule 98 (RelOp -> EQL .)
    FLOAT           reduce using rule 98 (RelOp -> EQL .)
    RUNE            reduce using rule 98 (RelOp -> EQL .)
    STRING          reduce using rule 98 (RelOp -> EQL .)
    TRUE            reduce using rule 98 (RelOp -> EQL .)
    FALSE           reduce using rule 98 (RelOp -> EQL .)


state 147

    (111) MulOp -> SHL .

    ID              reduce using rule 111 (MulOp -> SHL .)
    LPAREN          reduce using rule 111 (MulOp -> SHL .)
    ADD             reduce using rule 111 (MulOp -> SHL .)
    SUB             reduce using rule 111 (MulOp -> SHL .)
    NOT             reduce using rule 111 (MulOp -> SHL .)
    XOR             reduce using rule 111 (MulOp -> SHL .)
    MUL             reduce using rule 111 (MulOp -> SHL .)
    AND             reduce using rule 111 (MulOp -> SHL .)
    INT             reduce using rule 111 (MulOp -> SHL .)
    FLOAT           reduce using rule 111 (MulOp -> SHL .)
    RUNE            reduce using rule 111 (MulOp -> SHL .)
    STRING          reduce using rule 111 (MulOp -> SHL .)
    TRUE            reduce using rule 111 (MulOp -> SHL .)
    FALSE           reduce using rule 111 (MulOp -> SHL .)


state 148

    (100) RelOp -> LTN .

    ID              reduce using rule 100 (RelOp -> LTN .)
    LPAREN          reduce using rule 100 (RelOp -> LTN .)
    ADD             reduce using rule 100 (RelOp -> LTN .)
    SUB             reduce using rule 100 (RelOp -> LTN .)
    NOT             reduce using rule 100 (RelOp -> LTN .)
    XOR             reduce using rule 100 (RelOp -> LTN .)
    MUL             reduce using rule 100 (RelOp -> LTN .)
    AND             reduce using rule 100 (RelOp -> LTN .)
    INT             reduce using rule 100 (RelOp -> LTN .)
    FLOAT           reduce using rule 100 (RelOp -> LTN .)
    RUNE            reduce using rule 100 (RelOp -> LTN .)
    STRING          reduce using rule 100 (RelOp -> LTN .)
    TRUE            reduce using rule 100 (RelOp -> LTN .)
    FALSE           reduce using rule 100 (RelOp -> LTN .)


state 149

    (113) MulOp -> AND .

    ID              reduce using rule 113 (MulOp -> AND .)
    LPAREN          reduce using rule 113 (MulOp -> AND .)
    ADD             reduce using rule 113 (MulOp -> AND .)
    SUB             reduce using rule 113 (MulOp -> AND .)
    NOT             reduce using rule 113 (MulOp -> AND .)
    XOR             reduce using rule 113 (MulOp -> AND .)
    MUL             reduce using rule 113 (MulOp -> AND .)
    AND             reduce using rule 113 (MulOp -> AND .)
    INT             reduce using rule 113 (MulOp -> AND .)
    FLOAT           reduce using rule 113 (MulOp -> AND .)
    RUNE            reduce using rule 113 (MulOp -> AND .)
    STRING          reduce using rule 113 (MulOp -> AND .)
    TRUE            reduce using rule 113 (MulOp -> AND .)
    FALSE           reduce using rule 113 (MulOp -> AND .)


state 150

    (95) BinaryOp -> RelOp .

    ID              reduce using rule 95 (BinaryOp -> RelOp .)
    LPAREN          reduce using rule 95 (BinaryOp -> RelOp .)
    ADD             reduce using rule 95 (BinaryOp -> RelOp .)
    SUB             reduce using rule 95 (BinaryOp -> RelOp .)
    NOT             reduce using rule 95 (BinaryOp -> RelOp .)
    XOR             reduce using rule 95 (BinaryOp -> RelOp .)
    MUL             reduce using rule 95 (BinaryOp -> RelOp .)
    AND             reduce using rule 95 (BinaryOp -> RelOp .)
    INT             reduce using rule 95 (BinaryOp -> RelOp .)
    FLOAT           reduce using rule 95 (BinaryOp -> RelOp .)
    RUNE            reduce using rule 95 (BinaryOp -> RelOp .)
    STRING          reduce using rule 95 (BinaryOp -> RelOp .)
    TRUE            reduce using rule 95 (BinaryOp -> RelOp .)
    FALSE           reduce using rule 95 (BinaryOp -> RelOp .)


state 151

    (101) RelOp -> LEQ .

    ID              reduce using rule 101 (RelOp -> LEQ .)
    LPAREN          reduce using rule 101 (RelOp -> LEQ .)
    ADD             reduce using rule 101 (RelOp -> LEQ .)
    SUB             reduce using rule 101 (RelOp -> LEQ .)
    NOT             reduce using rule 101 (RelOp -> LEQ .)
    XOR             reduce using rule 101 (RelOp -> LEQ .)
    MUL             reduce using rule 101 (RelOp -> LEQ .)
    AND             reduce using rule 101 (RelOp -> LEQ .)
    INT             reduce using rule 101 (RelOp -> LEQ .)
    FLOAT           reduce using rule 101 (RelOp -> LEQ .)
    RUNE            reduce using rule 101 (RelOp -> LEQ .)
    STRING          reduce using rule 101 (RelOp -> LEQ .)
    TRUE            reduce using rule 101 (RelOp -> LEQ .)
    FALSE           reduce using rule 101 (RelOp -> LEQ .)


state 152

    (106) AddOp -> OR .

    ID              reduce using rule 106 (AddOp -> OR .)
    LPAREN          reduce using rule 106 (AddOp -> OR .)
    ADD             reduce using rule 106 (AddOp -> OR .)
    SUB             reduce using rule 106 (AddOp -> OR .)
    NOT             reduce using rule 106 (AddOp -> OR .)
    XOR             reduce using rule 106 (AddOp -> OR .)
    MUL             reduce using rule 106 (AddOp -> OR .)
    AND             reduce using rule 106 (AddOp -> OR .)
    INT             reduce using rule 106 (AddOp -> OR .)
    FLOAT           reduce using rule 106 (AddOp -> OR .)
    RUNE            reduce using rule 106 (AddOp -> OR .)
    STRING          reduce using rule 106 (AddOp -> OR .)
    TRUE            reduce using rule 106 (AddOp -> OR .)
    FALSE           reduce using rule 106 (AddOp -> OR .)


state 153

    (110) MulOp -> MOD .

    ID              reduce using rule 110 (MulOp -> MOD .)
    LPAREN          reduce using rule 110 (MulOp -> MOD .)
    ADD             reduce using rule 110 (MulOp -> MOD .)
    SUB             reduce using rule 110 (MulOp -> MOD .)
    NOT             reduce using rule 110 (MulOp -> MOD .)
    XOR             reduce using rule 110 (MulOp -> MOD .)
    MUL             reduce using rule 110 (MulOp -> MOD .)
    AND             reduce using rule 110 (MulOp -> MOD .)
    INT             reduce using rule 110 (MulOp -> MOD .)
    FLOAT           reduce using rule 110 (MulOp -> MOD .)
    RUNE            reduce using rule 110 (MulOp -> MOD .)
    STRING          reduce using rule 110 (MulOp -> MOD .)
    TRUE            reduce using rule 110 (MulOp -> MOD .)
    FALSE           reduce using rule 110 (MulOp -> MOD .)


state 154

    (46) Type -> LPAREN Type RPAREN .

    RPAREN          reduce using rule 46 (Type -> LPAREN Type RPAREN .)
    COMMA           reduce using rule 46 (Type -> LPAREN Type RPAREN .)
    ASSIGN          reduce using rule 46 (Type -> LPAREN Type RPAREN .)
    SEMICOLON       reduce using rule 46 (Type -> LPAREN Type RPAREN .)


state 155

    (47) Type -> LPAREN ID RPAREN .

    RPAREN          reduce using rule 47 (Type -> LPAREN ID RPAREN .)
    COMMA           reduce using rule 47 (Type -> LPAREN ID RPAREN .)
    ASSIGN          reduce using rule 47 (Type -> LPAREN ID RPAREN .)
    SEMICOLON       reduce using rule 47 (Type -> LPAREN ID RPAREN .)


state 156

    (39) VarSpec -> IdentifierList Type ASSIGN ExpressionList .
    (32) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 39 (VarSpec -> IdentifierList Type ASSIGN ExpressionList .)
    COMMA           shift and go to state 129


state 157

    (40) VarSpec -> IdentifierList ID ASSIGN ExpressionList .
    (32) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 40 (VarSpec -> IdentifierList ID ASSIGN ExpressionList .)
    COMMA           shift and go to state 129


state 158

    (56) StructType -> STRUCT OpenStructS LBRACE . FieldDecl_curl RBRACE CloseStructS
    (57) FieldDecl_curl -> . FieldDecl_curl FieldDecl SEMICOLON
    (58) FieldDecl_curl -> .

    RBRACE          reduce using rule 58 (FieldDecl_curl -> .)
    ID              reduce using rule 58 (FieldDecl_curl -> .)

    FieldDecl_curl                 shift and go to state 183

state 159

    (76) Parameters -> LPAREN ParameterList COMMA . RPAREN
    (78) ParameterList -> ParameterList COMMA . ParameterDecl
    (79) ParameterDecl -> . ParaIdList Type
    (80) ParameterDecl -> . ID Type
    (81) ParameterDecl -> . ParaIdList ID
    (82) ParameterDecl -> . ID ID
    (83) ParaIdList -> . ID COMMA ID
    (84) ParaIdList -> . ParaIdList COMMA ID

    RPAREN          shift and go to state 184
    ID              shift and go to state 113

    ParaIdList                     shift and go to state 111
    ParameterDecl                  shift and go to state 185

state 160

    (75) Parameters -> LPAREN ParameterList RPAREN .

    LPAREN          reduce using rule 75 (Parameters -> LPAREN ParameterList RPAREN .)
    LBRACE          reduce using rule 75 (Parameters -> LPAREN ParameterList RPAREN .)


state 161

    (84) ParaIdList -> ParaIdList COMMA . ID

    ID              shift and go to state 186


state 162

    (79) ParameterDecl -> ParaIdList Type .

    RPAREN          reduce using rule 79 (ParameterDecl -> ParaIdList Type .)
    COMMA           reduce using rule 79 (ParameterDecl -> ParaIdList Type .)


state 163

    (81) ParameterDecl -> ParaIdList ID .

    RPAREN          reduce using rule 81 (ParameterDecl -> ParaIdList ID .)
    COMMA           reduce using rule 81 (ParameterDecl -> ParaIdList ID .)


state 164

    (80) ParameterDecl -> ID Type .

    RPAREN          reduce using rule 80 (ParameterDecl -> ID Type .)
    COMMA           reduce using rule 80 (ParameterDecl -> ID Type .)


state 165

    (83) ParaIdList -> ID COMMA . ID

    ID              shift and go to state 187


state 166

    (82) ParameterDecl -> ID ID .

    RPAREN          reduce using rule 82 (ParameterDecl -> ID ID .)
    COMMA           reduce using rule 82 (ParameterDecl -> ID ID .)


state 167

    (68) Result -> LPAREN TypeList . RPAREN
    (72) TypeList -> TypeList . COMMA ID
    (73) TypeList -> TypeList . COMMA Type

    RPAREN          shift and go to state 188
    COMMA           shift and go to state 189


state 168

    (71) TypeList -> Type .

    RPAREN          reduce using rule 71 (TypeList -> Type .)
    COMMA           reduce using rule 71 (TypeList -> Type .)


state 169

    (70) TypeList -> ID .

    RPAREN          reduce using rule 70 (TypeList -> ID .)
    COMMA           reduce using rule 70 (TypeList -> ID .)


state 170

    (86) StatementList -> Statement_curl .
    (87) Statement_curl -> Statement_curl . Statement SEMICOLON
    (151) Statement -> . Declaration
    (152) Statement -> . LabelledStmt
    (153) Statement -> . SimpleStmt
    (154) Statement -> . ReturnStmt
    (155) Statement -> . BreakStmt
    (156) Statement -> . ContinueStmt
    (157) Statement -> . GotoStmt
    (158) Statement -> . FallthroughStmt
    (159) Statement -> . IfStmt
    (160) Statement -> . OpenS Block CloseS
    (161) Statement -> . SwitchStmt
    (162) Statement -> . ForStmt
    (21) Declaration -> . ConstDecl
    (22) Declaration -> . StructDecl
    (23) Declaration -> . VarDecl
    (183) LabelledStmt -> . ID COLON Statement
    (163) SimpleStmt -> . Expression
    (164) SimpleStmt -> . IncDecStmt
    (165) SimpleStmt -> . Assignment
    (166) SimpleStmt -> . ShortVarDecl
    (167) SimpleStmt -> .
    (184) ReturnStmt -> . RETURN ExpressionList
    (185) ReturnStmt -> . RETURN
    (186) BreakStmt -> . BREAK ID
    (187) BreakStmt -> . BREAK
    (188) ContinueStmt -> . CONTINUE ID
    (189) ContinueStmt -> . CONTINUE
    (190) GotoStmt -> . GOTO ID
    (191) FallthroughStmt -> . FALLTHROUGH
    (193) IfStmt -> . IF OpenS Expression Block CloseS
    (194) IfStmt -> . IF OpenS Expression Block CloseS ELSE IfStmt
    (195) IfStmt -> . IF OpenS Expression Block CloseS ELSE OpenS Block CloseS
    (2) OpenS -> .
    (196) SwitchStmt -> . ExprSwitchStmt
    (205) ForStmt -> . FOR OpenS OpenF Expression Block CloseF CloseS
    (206) ForStmt -> . FOR OpenS OpenF ForClause Block CloseF CloseS
    (207) ForStmt -> . FOR OpenS OpenF Block CloseF CloseS
    (24) ConstDecl -> . CONST ConstSpec
    (25) ConstDecl -> . CONST LPAREN ConstSpec_curl RPAREN
    (33) StructDecl -> . TYPE StructName StructType
    (35) VarDecl -> . VAR VarSpec
    (36) VarDecl -> . VAR LPAREN VarSpec_curl RPAREN
    (89) Expression -> . UnaryExpr
    (90) Expression -> . Expression BinaryOp UnaryExpr
    (168) IncDecStmt -> . Expression INC
    (169) IncDecStmt -> . Expression DEC
    (170) Assignment -> . ExpressionList AssignOp ExpressionList
    (192) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (197) ExprSwitchStmt -> . SWITCH ExpressionName LBRACE OpenW ExprCaseClause_curl CloseW RBRACE
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (31) ExpressionList -> . Expression
    (32) ExpressionList -> . ExpressionList COMMA Expression
    (29) IdentifierList -> . ID
    (30) IdentifierList -> . ID COMMA IdentifierList
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (138) Literal -> . BasicLit
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    RBRACE          reduce using rule 86 (StatementList -> Statement_curl .)
    CASE            reduce using rule 86 (StatementList -> Statement_curl .)
    ID              shift and go to state 206
    SEMICOLON       reduce using rule 167 (SimpleStmt -> .)
    RETURN          shift and go to state 197
    BREAK           shift and go to state 211
    CONTINUE        shift and go to state 204
    GOTO            shift and go to state 196
    FALLTHROUGH     shift and go to state 205
    IF              shift and go to state 217
    LBRACE          reduce using rule 2 (OpenS -> .)
    FOR             shift and go to state 201
    CONST           shift and go to state 10
    TYPE            shift and go to state 19
    VAR             shift and go to state 16
    SWITCH          shift and go to state 207
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    Statement                      shift and go to state 191
    UnaryOp                        shift and go to state 73
    ContinueStmt                   shift and go to state 190
    SimpleStmt                     shift and go to state 214
    FalseLit                       shift and go to state 74
    Literal                        shift and go to state 75
    ForStmt                        shift and go to state 215
    ExprSwitchStmt                 shift and go to state 198
    IdentifierList                 shift and go to state 199
    IntLit                         shift and go to state 76
    IfStmt                         shift and go to state 192
    RuneLit                        shift and go to state 89
    Assignment                     shift and go to state 193
    IncDecStmt                     shift and go to state 194
    Declaration                    shift and go to state 208
    OpenS                          shift and go to state 195
    GotoStmt                       shift and go to state 200
    UnaryExpr                      shift and go to state 83
    FloatLit                       shift and go to state 84
    StructDecl                     shift and go to state 11
    ExpressionList                 shift and go to state 209
    LabelledStmt                   shift and go to state 202
    Expression                     shift and go to state 210
    ShortVarDecl                   shift and go to state 216
    TrueLit                        shift and go to state 98
    BreakStmt                      shift and go to state 218
    SwitchStmt                     shift and go to state 203
    StringLit                      shift and go to state 96
    VarDecl                        shift and go to state 18
    BasicLit                       shift and go to state 79
    PrimaryExpr                    shift and go to state 85
    ReturnStmt                     shift and go to state 212
    ConstDecl                      shift and go to state 17
    FallthroughStmt                shift and go to state 213

state 171

    (85) Block -> LBRACE StatementList . RBRACE

    RBRACE          shift and go to state 219


state 172

    (44) FunctionDecl -> FUNC FuncName OpenS Signature Block CloseS .

    SEMICOLON       reduce using rule 44 (FunctionDecl -> FUNC FuncName OpenS Signature Block CloseS .)


state 173

    (52) ArrayType -> LBRACK INT RBRACK Type .

    ASSIGN          reduce using rule 52 (ArrayType -> LBRACK INT RBRACK Type .)
    SEMICOLON       reduce using rule 52 (ArrayType -> LBRACK INT RBRACK Type .)
    RPAREN          reduce using rule 52 (ArrayType -> LBRACK INT RBRACK Type .)
    COMMA           reduce using rule 52 (ArrayType -> LBRACK INT RBRACK Type .)


state 174

    (53) ArrayType -> LBRACK INT RBRACK ID .

    ASSIGN          reduce using rule 53 (ArrayType -> LBRACK INT RBRACK ID .)
    SEMICOLON       reduce using rule 53 (ArrayType -> LBRACK INT RBRACK ID .)
    RPAREN          reduce using rule 53 (ArrayType -> LBRACK INT RBRACK ID .)
    COMMA           reduce using rule 53 (ArrayType -> LBRACK INT RBRACK ID .)


state 175

    (130) Slice -> LBRACK COLON . Expression RBRACK
    (132) Slice -> LBRACK COLON . RBRACK
    (134) Slice -> LBRACK COLON . Expression COLON Expression RBRACK
    (89) Expression -> . UnaryExpr
    (90) Expression -> . Expression BinaryOp UnaryExpr
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (138) Literal -> . BasicLit
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    RBRACK          shift and go to state 220
    ID              shift and go to state 91
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    RuneLit                        shift and go to state 89
    UnaryOp                        shift and go to state 73
    TrueLit                        shift and go to state 98
    BasicLit                       shift and go to state 79
    UnaryExpr                      shift and go to state 83
    FloatLit                       shift and go to state 84
    FalseLit                       shift and go to state 74
    IntLit                         shift and go to state 76
    Literal                        shift and go to state 75
    PrimaryExpr                    shift and go to state 85
    StringLit                      shift and go to state 96
    Expression                     shift and go to state 221

state 176

    (128) Index -> LBRACK Expression . RBRACK
    (129) Slice -> LBRACK Expression . COLON Expression RBRACK
    (131) Slice -> LBRACK Expression . COLON RBRACK
    (133) Slice -> LBRACK Expression . COLON Expression COLON Expression RBRACK
    (90) Expression -> Expression . BinaryOp UnaryExpr
    (93) BinaryOp -> . LOR
    (94) BinaryOp -> . LAND
    (95) BinaryOp -> . RelOp
    (96) BinaryOp -> . AddOp
    (97) BinaryOp -> . MulOp
    (98) RelOp -> . EQL
    (99) RelOp -> . NEQ
    (100) RelOp -> . LTN
    (101) RelOp -> . LEQ
    (102) RelOp -> . GTN
    (103) RelOp -> . GEQ
    (104) AddOp -> . ADD
    (105) AddOp -> . SUB
    (106) AddOp -> . OR
    (107) AddOp -> . XOR
    (108) MulOp -> . MUL
    (109) MulOp -> . DIV
    (110) MulOp -> . MOD
    (111) MulOp -> . SHL
    (112) MulOp -> . SHR
    (113) MulOp -> . AND
    (114) MulOp -> . AND_NOT

    RBRACK          shift and go to state 223
    COLON           shift and go to state 222
    LOR             shift and go to state 132
    LAND            shift and go to state 137
    EQL             shift and go to state 146
    NEQ             shift and go to state 135
    LTN             shift and go to state 148
    LEQ             shift and go to state 151
    GTN             shift and go to state 144
    GEQ             shift and go to state 136
    ADD             shift and go to state 145
    SUB             shift and go to state 131
    OR              shift and go to state 152
    XOR             shift and go to state 142
    MUL             shift and go to state 133
    DIV             shift and go to state 134
    MOD             shift and go to state 153
    SHL             shift and go to state 147
    SHR             shift and go to state 141
    AND             shift and go to state 149
    AND_NOT         shift and go to state 138

    AddOp                          shift and go to state 140
    BinaryOp                       shift and go to state 139
    MulOp                          shift and go to state 143
    RelOp                          shift and go to state 150

state 177

    (135) Arguments -> LPAREN RPAREN .

    DOT             reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    LBRACK          reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    LPAREN          reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    LOR             reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    LAND            reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    EQL             reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    NEQ             reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    LTN             reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    LEQ             reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    GTN             reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    GEQ             reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    ADD             reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    SUB             reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    OR              reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    XOR             reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    MUL             reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    DIV             reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    MOD             reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    SHL             reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    SHR             reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    AND             reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    AND_NOT         reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    COMMA           reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    SEMICOLON       reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    RPAREN          reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    RBRACK          reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    COLON           reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    ADD_ASSIGN      reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    SUB_ASSIGN      reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    MUL_ASSIGN      reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    DIV_ASSIGN      reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    MOD_ASSIGN      reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    AND_ASSIGN      reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    OR_ASSIGN       reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    XOR_ASSIGN      reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    SHL_ASSIGN      reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    SHR_ASSIGN      reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    ASSIGN          reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    LBRACE          reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    INC             reduce using rule 135 (Arguments -> LPAREN RPAREN .)
    DEC             reduce using rule 135 (Arguments -> LPAREN RPAREN .)


state 178

    (136) Arguments -> LPAREN ExpressionList . RPAREN
    (137) Arguments -> LPAREN ExpressionList . COMMA RPAREN
    (32) ExpressionList -> ExpressionList . COMMA Expression

    RPAREN          shift and go to state 224
    COMMA           shift and go to state 225


state 179

    (123) PrimaryExpr -> PrimaryExpr DOT ID .

    DOT             reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    LBRACK          reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    LPAREN          reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    LOR             reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    LAND            reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    EQL             reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    NEQ             reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    LTN             reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    LEQ             reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    GTN             reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    GEQ             reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    ADD             reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    SUB             reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    OR              reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    XOR             reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    MUL             reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    DIV             reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    MOD             reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    SHL             reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    SHR             reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    AND             reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    AND_NOT         reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    COMMA           reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    SEMICOLON       reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    RPAREN          reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    LBRACE          reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    RBRACK          reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    COLON           reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    ADD_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    SUB_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    MUL_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    DIV_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    MOD_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    AND_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    AND_NOT_ASSIGN  reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    OR_ASSIGN       reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    XOR_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    SHL_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    SHR_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    ASSIGN          reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    INC             reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)
    DEC             reduce using rule 123 (PrimaryExpr -> PrimaryExpr DOT ID .)


state 180

    (32) ExpressionList -> ExpressionList COMMA Expression .
    (90) Expression -> Expression . BinaryOp UnaryExpr
    (93) BinaryOp -> . LOR
    (94) BinaryOp -> . LAND
    (95) BinaryOp -> . RelOp
    (96) BinaryOp -> . AddOp
    (97) BinaryOp -> . MulOp
    (98) RelOp -> . EQL
    (99) RelOp -> . NEQ
    (100) RelOp -> . LTN
    (101) RelOp -> . LEQ
    (102) RelOp -> . GTN
    (103) RelOp -> . GEQ
    (104) AddOp -> . ADD
    (105) AddOp -> . SUB
    (106) AddOp -> . OR
    (107) AddOp -> . XOR
    (108) MulOp -> . MUL
    (109) MulOp -> . DIV
    (110) MulOp -> . MOD
    (111) MulOp -> . SHL
    (112) MulOp -> . SHR
    (113) MulOp -> . AND
    (114) MulOp -> . AND_NOT

    COMMA           reduce using rule 32 (ExpressionList -> ExpressionList COMMA Expression .)
    ADD_ASSIGN      reduce using rule 32 (ExpressionList -> ExpressionList COMMA Expression .)
    SUB_ASSIGN      reduce using rule 32 (ExpressionList -> ExpressionList COMMA Expression .)
    MUL_ASSIGN      reduce using rule 32 (ExpressionList -> ExpressionList COMMA Expression .)
    DIV_ASSIGN      reduce using rule 32 (ExpressionList -> ExpressionList COMMA Expression .)
    MOD_ASSIGN      reduce using rule 32 (ExpressionList -> ExpressionList COMMA Expression .)
    AND_ASSIGN      reduce using rule 32 (ExpressionList -> ExpressionList COMMA Expression .)
    AND_NOT_ASSIGN  reduce using rule 32 (ExpressionList -> ExpressionList COMMA Expression .)
    OR_ASSIGN       reduce using rule 32 (ExpressionList -> ExpressionList COMMA Expression .)
    XOR_ASSIGN      reduce using rule 32 (ExpressionList -> ExpressionList COMMA Expression .)
    SHL_ASSIGN      reduce using rule 32 (ExpressionList -> ExpressionList COMMA Expression .)
    SHR_ASSIGN      reduce using rule 32 (ExpressionList -> ExpressionList COMMA Expression .)
    ASSIGN          reduce using rule 32 (ExpressionList -> ExpressionList COMMA Expression .)
    RPAREN          reduce using rule 32 (ExpressionList -> ExpressionList COMMA Expression .)
    SEMICOLON       reduce using rule 32 (ExpressionList -> ExpressionList COMMA Expression .)
    LBRACE          reduce using rule 32 (ExpressionList -> ExpressionList COMMA Expression .)
    LOR             shift and go to state 132
    LAND            shift and go to state 137
    EQL             shift and go to state 146
    NEQ             shift and go to state 135
    LTN             shift and go to state 148
    LEQ             shift and go to state 151
    GTN             shift and go to state 144
    GEQ             shift and go to state 136
    ADD             shift and go to state 145
    SUB             shift and go to state 131
    OR              shift and go to state 152
    XOR             shift and go to state 142
    MUL             shift and go to state 133
    DIV             shift and go to state 134
    MOD             shift and go to state 153
    SHL             shift and go to state 147
    SHR             shift and go to state 141
    AND             shift and go to state 149
    AND_NOT         shift and go to state 138

    AddOp                          shift and go to state 140
    RelOp                          shift and go to state 150
    BinaryOp                       shift and go to state 139
    MulOp                          shift and go to state 143

state 181

    (124) PrimaryExpr -> LPAREN Expression RPAREN .

    DOT             reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LBRACK          reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LOR             reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LAND            reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    EQL             reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    NEQ             reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LTN             reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LEQ             reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    GTN             reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    GEQ             reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    ADD             reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SUB             reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    OR              reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    XOR             reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    MUL             reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    DIV             reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    MOD             reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SHL             reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SHR             reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    AND             reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    AND_NOT         reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    RBRACK          reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    COLON           reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    ADD_ASSIGN      reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SUB_ASSIGN      reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    MUL_ASSIGN      reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    DIV_ASSIGN      reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    MOD_ASSIGN      reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    AND_ASSIGN      reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    OR_ASSIGN       reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    XOR_ASSIGN      reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SHL_ASSIGN      reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    SHR_ASSIGN      reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    ASSIGN          reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    INC             reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)
    DEC             reduce using rule 124 (PrimaryExpr -> LPAREN Expression RPAREN .)


state 182

    (90) Expression -> Expression BinaryOp UnaryExpr .

    LOR             reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    LAND            reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    EQL             reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    NEQ             reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    LTN             reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    LEQ             reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    GTN             reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    GEQ             reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    ADD             reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    SUB             reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    OR              reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    XOR             reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    MUL             reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    DIV             reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    MOD             reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    SHL             reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    SHR             reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    AND             reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    AND_NOT         reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    LBRACE          reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    RBRACK          reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    COLON           reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    RPAREN          reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    INC             reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    DEC             reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    SEMICOLON       reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    COMMA           reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    ADD_ASSIGN      reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    SUB_ASSIGN      reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    MUL_ASSIGN      reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    DIV_ASSIGN      reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    MOD_ASSIGN      reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    AND_ASSIGN      reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    OR_ASSIGN       reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    XOR_ASSIGN      reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    SHL_ASSIGN      reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    SHR_ASSIGN      reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)
    ASSIGN          reduce using rule 90 (Expression -> Expression BinaryOp UnaryExpr .)


state 183

    (56) StructType -> STRUCT OpenStructS LBRACE FieldDecl_curl . RBRACE CloseStructS
    (57) FieldDecl_curl -> FieldDecl_curl . FieldDecl SEMICOLON
    (59) FieldDecl -> . ID COMMA IdentifierList Type
    (60) FieldDecl -> . ID COMMA IdentifierList ID
    (61) FieldDecl -> . ID Type
    (62) FieldDecl -> . ID ID
    (63) FieldDecl -> . ID STRUCT MUL ID
    (64) FieldDecl -> . ID COMMA IdentifierList STRUCT MUL ID

    RBRACE          shift and go to state 228
    ID              shift and go to state 227

    FieldDecl                      shift and go to state 226

state 184

    (76) Parameters -> LPAREN ParameterList COMMA RPAREN .

    LPAREN          reduce using rule 76 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    LBRACE          reduce using rule 76 (Parameters -> LPAREN ParameterList COMMA RPAREN .)


state 185

    (78) ParameterList -> ParameterList COMMA ParameterDecl .

    RPAREN          reduce using rule 78 (ParameterList -> ParameterList COMMA ParameterDecl .)
    COMMA           reduce using rule 78 (ParameterList -> ParameterList COMMA ParameterDecl .)


state 186

    (84) ParaIdList -> ParaIdList COMMA ID .

    ID              reduce using rule 84 (ParaIdList -> ParaIdList COMMA ID .)
    COMMA           reduce using rule 84 (ParaIdList -> ParaIdList COMMA ID .)
    LPAREN          reduce using rule 84 (ParaIdList -> ParaIdList COMMA ID .)
    LBRACK          reduce using rule 84 (ParaIdList -> ParaIdList COMMA ID .)
    MUL             reduce using rule 84 (ParaIdList -> ParaIdList COMMA ID .)


state 187

    (83) ParaIdList -> ID COMMA ID .

    ID              reduce using rule 83 (ParaIdList -> ID COMMA ID .)
    COMMA           reduce using rule 83 (ParaIdList -> ID COMMA ID .)
    LPAREN          reduce using rule 83 (ParaIdList -> ID COMMA ID .)
    LBRACK          reduce using rule 83 (ParaIdList -> ID COMMA ID .)
    MUL             reduce using rule 83 (ParaIdList -> ID COMMA ID .)


state 188

    (68) Result -> LPAREN TypeList RPAREN .

    LBRACE          reduce using rule 68 (Result -> LPAREN TypeList RPAREN .)


state 189

    (72) TypeList -> TypeList COMMA . ID
    (73) TypeList -> TypeList COMMA . Type
    (46) Type -> . LPAREN Type RPAREN
    (47) Type -> . LPAREN ID RPAREN
    (48) Type -> . TypeLit
    (49) TypeLit -> . ArrayType
    (50) TypeLit -> . PointerType
    (51) TypeLit -> . SliceType
    (52) ArrayType -> . LBRACK INT RBRACK Type
    (53) ArrayType -> . LBRACK INT RBRACK ID
    (65) PointerType -> . MUL Type
    (66) PointerType -> . MUL ID
    (54) SliceType -> . LBRACK RBRACK Type
    (55) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 230
    LPAREN          shift and go to state 51
    LBRACK          shift and go to state 48
    MUL             shift and go to state 53

    Type                           shift and go to state 229
    ArrayType                      shift and go to state 49
    PointerType                    shift and go to state 52
    TypeLit                        shift and go to state 47
    SliceType                      shift and go to state 56

state 190

    (156) Statement -> ContinueStmt .

    SEMICOLON       reduce using rule 156 (Statement -> ContinueStmt .)


state 191

    (87) Statement_curl -> Statement_curl Statement . SEMICOLON

    SEMICOLON       shift and go to state 231


state 192

    (159) Statement -> IfStmt .

    SEMICOLON       reduce using rule 159 (Statement -> IfStmt .)


state 193

    (165) SimpleStmt -> Assignment .

    SEMICOLON       reduce using rule 165 (SimpleStmt -> Assignment .)
    LBRACE          reduce using rule 165 (SimpleStmt -> Assignment .)


state 194

    (164) SimpleStmt -> IncDecStmt .

    SEMICOLON       reduce using rule 164 (SimpleStmt -> IncDecStmt .)
    LBRACE          reduce using rule 164 (SimpleStmt -> IncDecStmt .)


state 195

    (160) Statement -> OpenS . Block CloseS
    (85) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 116

    Block                          shift and go to state 232

state 196

    (190) GotoStmt -> GOTO . ID

    ID              shift and go to state 233


state 197

    (184) ReturnStmt -> RETURN . ExpressionList
    (185) ReturnStmt -> RETURN .
    (31) ExpressionList -> . Expression
    (32) ExpressionList -> . ExpressionList COMMA Expression
    (89) Expression -> . UnaryExpr
    (90) Expression -> . Expression BinaryOp UnaryExpr
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (138) Literal -> . BasicLit
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    SEMICOLON       reduce using rule 185 (ReturnStmt -> RETURN .)
    ID              shift and go to state 91
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    RuneLit                        shift and go to state 89
    UnaryOp                        shift and go to state 73
    TrueLit                        shift and go to state 98
    BasicLit                       shift and go to state 79
    UnaryExpr                      shift and go to state 83
    FloatLit                       shift and go to state 84
    FalseLit                       shift and go to state 74
    IntLit                         shift and go to state 76
    Literal                        shift and go to state 75
    ExpressionList                 shift and go to state 234
    PrimaryExpr                    shift and go to state 85
    StringLit                      shift and go to state 96
    Expression                     shift and go to state 90

state 198

    (196) SwitchStmt -> ExprSwitchStmt .

    SEMICOLON       reduce using rule 196 (SwitchStmt -> ExprSwitchStmt .)


state 199

    (192) ShortVarDecl -> IdentifierList . DEFINE ExpressionList

    DEFINE          shift and go to state 235


state 200

    (157) Statement -> GotoStmt .

    SEMICOLON       reduce using rule 157 (Statement -> GotoStmt .)


state 201

    (205) ForStmt -> FOR . OpenS OpenF Expression Block CloseF CloseS
    (206) ForStmt -> FOR . OpenS OpenF ForClause Block CloseF CloseS
    (207) ForStmt -> FOR . OpenS OpenF Block CloseF CloseS
    (2) OpenS -> .

    LBRACE          reduce using rule 2 (OpenS -> .)
    ID              reduce using rule 2 (OpenS -> .)
    LPAREN          reduce using rule 2 (OpenS -> .)
    ADD             reduce using rule 2 (OpenS -> .)
    SUB             reduce using rule 2 (OpenS -> .)
    NOT             reduce using rule 2 (OpenS -> .)
    XOR             reduce using rule 2 (OpenS -> .)
    MUL             reduce using rule 2 (OpenS -> .)
    AND             reduce using rule 2 (OpenS -> .)
    INT             reduce using rule 2 (OpenS -> .)
    FLOAT           reduce using rule 2 (OpenS -> .)
    RUNE            reduce using rule 2 (OpenS -> .)
    STRING          reduce using rule 2 (OpenS -> .)
    TRUE            reduce using rule 2 (OpenS -> .)
    FALSE           reduce using rule 2 (OpenS -> .)
    SEMICOLON       reduce using rule 2 (OpenS -> .)

    OpenS                          shift and go to state 236

state 202

    (152) Statement -> LabelledStmt .

    SEMICOLON       reduce using rule 152 (Statement -> LabelledStmt .)


state 203

    (161) Statement -> SwitchStmt .

    SEMICOLON       reduce using rule 161 (Statement -> SwitchStmt .)


state 204

    (188) ContinueStmt -> CONTINUE . ID
    (189) ContinueStmt -> CONTINUE .

    ID              shift and go to state 237
    SEMICOLON       reduce using rule 189 (ContinueStmt -> CONTINUE .)


state 205

    (191) FallthroughStmt -> FALLTHROUGH .

    SEMICOLON       reduce using rule 191 (FallthroughStmt -> FALLTHROUGH .)


state 206

    (183) LabelledStmt -> ID . COLON Statement
    (29) IdentifierList -> ID .
    (30) IdentifierList -> ID . COMMA IdentifierList
    (122) PrimaryExpr -> ID .

    COLON           shift and go to state 238
    DEFINE          reduce using rule 29 (IdentifierList -> ID .)
    COMMA           shift and go to state 44
    DOT             reduce using rule 122 (PrimaryExpr -> ID .)
    LBRACK          reduce using rule 122 (PrimaryExpr -> ID .)
    LPAREN          reduce using rule 122 (PrimaryExpr -> ID .)
    INC             reduce using rule 122 (PrimaryExpr -> ID .)
    DEC             reduce using rule 122 (PrimaryExpr -> ID .)
    LOR             reduce using rule 122 (PrimaryExpr -> ID .)
    LAND            reduce using rule 122 (PrimaryExpr -> ID .)
    EQL             reduce using rule 122 (PrimaryExpr -> ID .)
    NEQ             reduce using rule 122 (PrimaryExpr -> ID .)
    LTN             reduce using rule 122 (PrimaryExpr -> ID .)
    LEQ             reduce using rule 122 (PrimaryExpr -> ID .)
    GTN             reduce using rule 122 (PrimaryExpr -> ID .)
    GEQ             reduce using rule 122 (PrimaryExpr -> ID .)
    ADD             reduce using rule 122 (PrimaryExpr -> ID .)
    SUB             reduce using rule 122 (PrimaryExpr -> ID .)
    OR              reduce using rule 122 (PrimaryExpr -> ID .)
    XOR             reduce using rule 122 (PrimaryExpr -> ID .)
    MUL             reduce using rule 122 (PrimaryExpr -> ID .)
    DIV             reduce using rule 122 (PrimaryExpr -> ID .)
    MOD             reduce using rule 122 (PrimaryExpr -> ID .)
    SHL             reduce using rule 122 (PrimaryExpr -> ID .)
    SHR             reduce using rule 122 (PrimaryExpr -> ID .)
    AND             reduce using rule 122 (PrimaryExpr -> ID .)
    AND_NOT         reduce using rule 122 (PrimaryExpr -> ID .)
    SEMICOLON       reduce using rule 122 (PrimaryExpr -> ID .)
    ADD_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    SUB_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    MUL_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    DIV_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    MOD_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    AND_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    AND_NOT_ASSIGN  reduce using rule 122 (PrimaryExpr -> ID .)
    OR_ASSIGN       reduce using rule 122 (PrimaryExpr -> ID .)
    XOR_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    SHL_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    SHR_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    ASSIGN          reduce using rule 122 (PrimaryExpr -> ID .)

  ! COMMA           [ reduce using rule 122 (PrimaryExpr -> ID .) ]


state 207

    (197) ExprSwitchStmt -> SWITCH . ExpressionName LBRACE OpenW ExprCaseClause_curl CloseW RBRACE
    (198) ExpressionName -> . Expression
    (89) Expression -> . UnaryExpr
    (90) Expression -> . Expression BinaryOp UnaryExpr
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (138) Literal -> . BasicLit
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    ID              shift and go to state 91
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    TrueLit                        shift and go to state 98
    RuneLit                        shift and go to state 89
    FloatLit                       shift and go to state 84
    UnaryOp                        shift and go to state 73
    BasicLit                       shift and go to state 79
    ExpressionName                 shift and go to state 239
    UnaryExpr                      shift and go to state 83
    FalseLit                       shift and go to state 74
    IntLit                         shift and go to state 76
    Literal                        shift and go to state 75
    PrimaryExpr                    shift and go to state 85
    StringLit                      shift and go to state 96
    Expression                     shift and go to state 240

state 208

    (151) Statement -> Declaration .

    SEMICOLON       reduce using rule 151 (Statement -> Declaration .)


state 209

    (170) Assignment -> ExpressionList . AssignOp ExpressionList
    (32) ExpressionList -> ExpressionList . COMMA Expression
    (171) AssignOp -> . ADD_ASSIGN
    (172) AssignOp -> . SUB_ASSIGN
    (173) AssignOp -> . MUL_ASSIGN
    (174) AssignOp -> . DIV_ASSIGN
    (175) AssignOp -> . MOD_ASSIGN
    (176) AssignOp -> . AND_ASSIGN
    (177) AssignOp -> . AND_NOT_ASSIGN
    (178) AssignOp -> . OR_ASSIGN
    (179) AssignOp -> . XOR_ASSIGN
    (180) AssignOp -> . SHL_ASSIGN
    (181) AssignOp -> . SHR_ASSIGN
    (182) AssignOp -> . ASSIGN

    COMMA           shift and go to state 129
    ADD_ASSIGN      shift and go to state 252
    SUB_ASSIGN      shift and go to state 241
    MUL_ASSIGN      shift and go to state 243
    DIV_ASSIGN      shift and go to state 251
    MOD_ASSIGN      shift and go to state 248
    AND_ASSIGN      shift and go to state 250
    AND_NOT_ASSIGN  shift and go to state 253
    OR_ASSIGN       shift and go to state 247
    XOR_ASSIGN      shift and go to state 244
    SHL_ASSIGN      shift and go to state 249
    SHR_ASSIGN      shift and go to state 246
    ASSIGN          shift and go to state 245

    AssignOp                       shift and go to state 242

state 210

    (163) SimpleStmt -> Expression .
    (90) Expression -> Expression . BinaryOp UnaryExpr
    (168) IncDecStmt -> Expression . INC
    (169) IncDecStmt -> Expression . DEC
    (31) ExpressionList -> Expression .
    (93) BinaryOp -> . LOR
    (94) BinaryOp -> . LAND
    (95) BinaryOp -> . RelOp
    (96) BinaryOp -> . AddOp
    (97) BinaryOp -> . MulOp
    (98) RelOp -> . EQL
    (99) RelOp -> . NEQ
    (100) RelOp -> . LTN
    (101) RelOp -> . LEQ
    (102) RelOp -> . GTN
    (103) RelOp -> . GEQ
    (104) AddOp -> . ADD
    (105) AddOp -> . SUB
    (106) AddOp -> . OR
    (107) AddOp -> . XOR
    (108) MulOp -> . MUL
    (109) MulOp -> . DIV
    (110) MulOp -> . MOD
    (111) MulOp -> . SHL
    (112) MulOp -> . SHR
    (113) MulOp -> . AND
    (114) MulOp -> . AND_NOT

    SEMICOLON       reduce using rule 163 (SimpleStmt -> Expression .)
    LBRACE          reduce using rule 163 (SimpleStmt -> Expression .)
    INC             shift and go to state 255
    DEC             shift and go to state 254
    COMMA           reduce using rule 31 (ExpressionList -> Expression .)
    ADD_ASSIGN      reduce using rule 31 (ExpressionList -> Expression .)
    SUB_ASSIGN      reduce using rule 31 (ExpressionList -> Expression .)
    MUL_ASSIGN      reduce using rule 31 (ExpressionList -> Expression .)
    DIV_ASSIGN      reduce using rule 31 (ExpressionList -> Expression .)
    MOD_ASSIGN      reduce using rule 31 (ExpressionList -> Expression .)
    AND_ASSIGN      reduce using rule 31 (ExpressionList -> Expression .)
    AND_NOT_ASSIGN  reduce using rule 31 (ExpressionList -> Expression .)
    OR_ASSIGN       reduce using rule 31 (ExpressionList -> Expression .)
    XOR_ASSIGN      reduce using rule 31 (ExpressionList -> Expression .)
    SHL_ASSIGN      reduce using rule 31 (ExpressionList -> Expression .)
    SHR_ASSIGN      reduce using rule 31 (ExpressionList -> Expression .)
    ASSIGN          reduce using rule 31 (ExpressionList -> Expression .)
    LOR             shift and go to state 132
    LAND            shift and go to state 137
    EQL             shift and go to state 146
    NEQ             shift and go to state 135
    LTN             shift and go to state 148
    LEQ             shift and go to state 151
    GTN             shift and go to state 144
    GEQ             shift and go to state 136
    ADD             shift and go to state 145
    SUB             shift and go to state 131
    OR              shift and go to state 152
    XOR             shift and go to state 142
    MUL             shift and go to state 133
    DIV             shift and go to state 134
    MOD             shift and go to state 153
    SHL             shift and go to state 147
    SHR             shift and go to state 141
    AND             shift and go to state 149
    AND_NOT         shift and go to state 138

    AddOp                          shift and go to state 140
    BinaryOp                       shift and go to state 139
    MulOp                          shift and go to state 143
    RelOp                          shift and go to state 150

state 211

    (186) BreakStmt -> BREAK . ID
    (187) BreakStmt -> BREAK .

    ID              shift and go to state 256
    SEMICOLON       reduce using rule 187 (BreakStmt -> BREAK .)


state 212

    (154) Statement -> ReturnStmt .

    SEMICOLON       reduce using rule 154 (Statement -> ReturnStmt .)


state 213

    (158) Statement -> FallthroughStmt .

    SEMICOLON       reduce using rule 158 (Statement -> FallthroughStmt .)


state 214

    (153) Statement -> SimpleStmt .

    SEMICOLON       reduce using rule 153 (Statement -> SimpleStmt .)


state 215

    (162) Statement -> ForStmt .

    SEMICOLON       reduce using rule 162 (Statement -> ForStmt .)


state 216

    (166) SimpleStmt -> ShortVarDecl .

    SEMICOLON       reduce using rule 166 (SimpleStmt -> ShortVarDecl .)
    LBRACE          reduce using rule 166 (SimpleStmt -> ShortVarDecl .)


state 217

    (193) IfStmt -> IF . OpenS Expression Block CloseS
    (194) IfStmt -> IF . OpenS Expression Block CloseS ELSE IfStmt
    (195) IfStmt -> IF . OpenS Expression Block CloseS ELSE OpenS Block CloseS
    (2) OpenS -> .

    ID              reduce using rule 2 (OpenS -> .)
    LPAREN          reduce using rule 2 (OpenS -> .)
    ADD             reduce using rule 2 (OpenS -> .)
    SUB             reduce using rule 2 (OpenS -> .)
    NOT             reduce using rule 2 (OpenS -> .)
    XOR             reduce using rule 2 (OpenS -> .)
    MUL             reduce using rule 2 (OpenS -> .)
    AND             reduce using rule 2 (OpenS -> .)
    INT             reduce using rule 2 (OpenS -> .)
    FLOAT           reduce using rule 2 (OpenS -> .)
    RUNE            reduce using rule 2 (OpenS -> .)
    STRING          reduce using rule 2 (OpenS -> .)
    TRUE            reduce using rule 2 (OpenS -> .)
    FALSE           reduce using rule 2 (OpenS -> .)

    OpenS                          shift and go to state 257

state 218

    (155) Statement -> BreakStmt .

    SEMICOLON       reduce using rule 155 (Statement -> BreakStmt .)


state 219

    (85) Block -> LBRACE StatementList RBRACE .

    SEMICOLON       reduce using rule 85 (Block -> LBRACE StatementList RBRACE .)
    ELSE            reduce using rule 85 (Block -> LBRACE StatementList RBRACE .)


state 220

    (132) Slice -> LBRACK COLON RBRACK .

    DOT             reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    LBRACK          reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    LPAREN          reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    LOR             reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    LAND            reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    EQL             reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    NEQ             reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    LTN             reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    LEQ             reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    GTN             reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    GEQ             reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    ADD             reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    SUB             reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    OR              reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    XOR             reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    MUL             reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    DIV             reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    MOD             reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    SHL             reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    SHR             reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    AND             reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    AND_NOT         reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    COMMA           reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    SEMICOLON       reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    RPAREN          reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    RBRACK          reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    COLON           reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    ADD_ASSIGN      reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    SUB_ASSIGN      reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    MUL_ASSIGN      reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    DIV_ASSIGN      reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    MOD_ASSIGN      reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    AND_ASSIGN      reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    OR_ASSIGN       reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    XOR_ASSIGN      reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    SHL_ASSIGN      reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    SHR_ASSIGN      reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    ASSIGN          reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    LBRACE          reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    INC             reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)
    DEC             reduce using rule 132 (Slice -> LBRACK COLON RBRACK .)


state 221

    (130) Slice -> LBRACK COLON Expression . RBRACK
    (134) Slice -> LBRACK COLON Expression . COLON Expression RBRACK
    (90) Expression -> Expression . BinaryOp UnaryExpr
    (93) BinaryOp -> . LOR
    (94) BinaryOp -> . LAND
    (95) BinaryOp -> . RelOp
    (96) BinaryOp -> . AddOp
    (97) BinaryOp -> . MulOp
    (98) RelOp -> . EQL
    (99) RelOp -> . NEQ
    (100) RelOp -> . LTN
    (101) RelOp -> . LEQ
    (102) RelOp -> . GTN
    (103) RelOp -> . GEQ
    (104) AddOp -> . ADD
    (105) AddOp -> . SUB
    (106) AddOp -> . OR
    (107) AddOp -> . XOR
    (108) MulOp -> . MUL
    (109) MulOp -> . DIV
    (110) MulOp -> . MOD
    (111) MulOp -> . SHL
    (112) MulOp -> . SHR
    (113) MulOp -> . AND
    (114) MulOp -> . AND_NOT

    RBRACK          shift and go to state 259
    COLON           shift and go to state 258
    LOR             shift and go to state 132
    LAND            shift and go to state 137
    EQL             shift and go to state 146
    NEQ             shift and go to state 135
    LTN             shift and go to state 148
    LEQ             shift and go to state 151
    GTN             shift and go to state 144
    GEQ             shift and go to state 136
    ADD             shift and go to state 145
    SUB             shift and go to state 131
    OR              shift and go to state 152
    XOR             shift and go to state 142
    MUL             shift and go to state 133
    DIV             shift and go to state 134
    MOD             shift and go to state 153
    SHL             shift and go to state 147
    SHR             shift and go to state 141
    AND             shift and go to state 149
    AND_NOT         shift and go to state 138

    AddOp                          shift and go to state 140
    BinaryOp                       shift and go to state 139
    MulOp                          shift and go to state 143
    RelOp                          shift and go to state 150

state 222

    (129) Slice -> LBRACK Expression COLON . Expression RBRACK
    (131) Slice -> LBRACK Expression COLON . RBRACK
    (133) Slice -> LBRACK Expression COLON . Expression COLON Expression RBRACK
    (89) Expression -> . UnaryExpr
    (90) Expression -> . Expression BinaryOp UnaryExpr
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (138) Literal -> . BasicLit
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    RBRACK          shift and go to state 260
    ID              shift and go to state 91
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    RuneLit                        shift and go to state 89
    UnaryOp                        shift and go to state 73
    TrueLit                        shift and go to state 98
    BasicLit                       shift and go to state 79
    UnaryExpr                      shift and go to state 83
    FloatLit                       shift and go to state 84
    FalseLit                       shift and go to state 74
    IntLit                         shift and go to state 76
    Literal                        shift and go to state 75
    PrimaryExpr                    shift and go to state 85
    StringLit                      shift and go to state 96
    Expression                     shift and go to state 261

state 223

    (128) Index -> LBRACK Expression RBRACK .

    DOT             reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    LBRACK          reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    LPAREN          reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    LOR             reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    LAND            reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    EQL             reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    NEQ             reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    LTN             reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    LEQ             reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    GTN             reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    GEQ             reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    ADD             reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    SUB             reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    OR              reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    XOR             reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    MUL             reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    DIV             reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    MOD             reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    SHL             reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    SHR             reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    AND             reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    AND_NOT         reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    COMMA           reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    SEMICOLON       reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    COLON           reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    DIV_ASSIGN      reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    MOD_ASSIGN      reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    AND_ASSIGN      reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    OR_ASSIGN       reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    SHL_ASSIGN      reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    SHR_ASSIGN      reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    ASSIGN          reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    LBRACE          reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    INC             reduce using rule 128 (Index -> LBRACK Expression RBRACK .)
    DEC             reduce using rule 128 (Index -> LBRACK Expression RBRACK .)


state 224

    (136) Arguments -> LPAREN ExpressionList RPAREN .

    DOT             reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    LBRACK          reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    LPAREN          reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    LOR             reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    LAND            reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    EQL             reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    NEQ             reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    LTN             reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    LEQ             reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    GTN             reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    GEQ             reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    ADD             reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    SUB             reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    OR              reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    XOR             reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    MUL             reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    DIV             reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    MOD             reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHL             reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHR             reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    AND             reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    AND_NOT         reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    COMMA           reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    SEMICOLON       reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    RPAREN          reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    RBRACK          reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    COLON           reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    ADD_ASSIGN      reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    SUB_ASSIGN      reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    MUL_ASSIGN      reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    DIV_ASSIGN      reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    MOD_ASSIGN      reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    AND_ASSIGN      reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    OR_ASSIGN       reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    XOR_ASSIGN      reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHL_ASSIGN      reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHR_ASSIGN      reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    ASSIGN          reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    LBRACE          reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    INC             reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)
    DEC             reduce using rule 136 (Arguments -> LPAREN ExpressionList RPAREN .)


state 225

    (137) Arguments -> LPAREN ExpressionList COMMA . RPAREN
    (32) ExpressionList -> ExpressionList COMMA . Expression
    (89) Expression -> . UnaryExpr
    (90) Expression -> . Expression BinaryOp UnaryExpr
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (138) Literal -> . BasicLit
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    RPAREN          shift and go to state 262
    ID              shift and go to state 91
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    RuneLit                        shift and go to state 89
    UnaryOp                        shift and go to state 73
    TrueLit                        shift and go to state 98
    BasicLit                       shift and go to state 79
    UnaryExpr                      shift and go to state 83
    FloatLit                       shift and go to state 84
    FalseLit                       shift and go to state 74
    IntLit                         shift and go to state 76
    Literal                        shift and go to state 75
    PrimaryExpr                    shift and go to state 85
    StringLit                      shift and go to state 96
    Expression                     shift and go to state 180

state 226

    (57) FieldDecl_curl -> FieldDecl_curl FieldDecl . SEMICOLON

    SEMICOLON       shift and go to state 263


state 227

    (59) FieldDecl -> ID . COMMA IdentifierList Type
    (60) FieldDecl -> ID . COMMA IdentifierList ID
    (61) FieldDecl -> ID . Type
    (62) FieldDecl -> ID . ID
    (63) FieldDecl -> ID . STRUCT MUL ID
    (64) FieldDecl -> ID . COMMA IdentifierList STRUCT MUL ID
    (46) Type -> . LPAREN Type RPAREN
    (47) Type -> . LPAREN ID RPAREN
    (48) Type -> . TypeLit
    (49) TypeLit -> . ArrayType
    (50) TypeLit -> . PointerType
    (51) TypeLit -> . SliceType
    (52) ArrayType -> . LBRACK INT RBRACK Type
    (53) ArrayType -> . LBRACK INT RBRACK ID
    (65) PointerType -> . MUL Type
    (66) PointerType -> . MUL ID
    (54) SliceType -> . LBRACK RBRACK Type
    (55) SliceType -> . LBRACK RBRACK ID

    COMMA           shift and go to state 265
    ID              shift and go to state 267
    STRUCT          shift and go to state 264
    LPAREN          shift and go to state 51
    LBRACK          shift and go to state 48
    MUL             shift and go to state 53

    Type                           shift and go to state 266
    ArrayType                      shift and go to state 49
    PointerType                    shift and go to state 52
    TypeLit                        shift and go to state 47
    SliceType                      shift and go to state 56

state 228

    (56) StructType -> STRUCT OpenStructS LBRACE FieldDecl_curl RBRACE . CloseStructS
    (5) CloseStructS -> .

    SEMICOLON       reduce using rule 5 (CloseStructS -> .)

    CloseStructS                   shift and go to state 268

state 229

    (73) TypeList -> TypeList COMMA Type .

    RPAREN          reduce using rule 73 (TypeList -> TypeList COMMA Type .)
    COMMA           reduce using rule 73 (TypeList -> TypeList COMMA Type .)


state 230

    (72) TypeList -> TypeList COMMA ID .

    RPAREN          reduce using rule 72 (TypeList -> TypeList COMMA ID .)
    COMMA           reduce using rule 72 (TypeList -> TypeList COMMA ID .)


state 231

    (87) Statement_curl -> Statement_curl Statement SEMICOLON .

    ID              reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    RETURN          reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    BREAK           reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    CONTINUE        reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    GOTO            reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    FALLTHROUGH     reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    IF              reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    FOR             reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    CONST           reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    TYPE            reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    VAR             reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    SWITCH          reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    LPAREN          reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    ADD             reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    SUB             reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    NOT             reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    XOR             reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    MUL             reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    AND             reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    INT             reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    FLOAT           reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    RUNE            reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    STRING          reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    TRUE            reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    FALSE           reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    SEMICOLON       reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    LBRACE          reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    RBRACE          reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)
    CASE            reduce using rule 87 (Statement_curl -> Statement_curl Statement SEMICOLON .)


state 232

    (160) Statement -> OpenS Block . CloseS
    (3) CloseS -> .

    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 269

state 233

    (190) GotoStmt -> GOTO ID .

    SEMICOLON       reduce using rule 190 (GotoStmt -> GOTO ID .)


state 234

    (184) ReturnStmt -> RETURN ExpressionList .
    (32) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 184 (ReturnStmt -> RETURN ExpressionList .)
    COMMA           shift and go to state 129


state 235

    (192) ShortVarDecl -> IdentifierList DEFINE . ExpressionList
    (31) ExpressionList -> . Expression
    (32) ExpressionList -> . ExpressionList COMMA Expression
    (89) Expression -> . UnaryExpr
    (90) Expression -> . Expression BinaryOp UnaryExpr
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (138) Literal -> . BasicLit
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    ID              shift and go to state 91
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    RuneLit                        shift and go to state 89
    UnaryOp                        shift and go to state 73
    TrueLit                        shift and go to state 98
    BasicLit                       shift and go to state 79
    UnaryExpr                      shift and go to state 83
    FloatLit                       shift and go to state 84
    FalseLit                       shift and go to state 74
    IntLit                         shift and go to state 76
    Literal                        shift and go to state 75
    ExpressionList                 shift and go to state 270
    PrimaryExpr                    shift and go to state 85
    StringLit                      shift and go to state 96
    Expression                     shift and go to state 90

state 236

    (205) ForStmt -> FOR OpenS . OpenF Expression Block CloseF CloseS
    (206) ForStmt -> FOR OpenS . OpenF ForClause Block CloseF CloseS
    (207) ForStmt -> FOR OpenS . OpenF Block CloseF CloseS
    (208) OpenF -> .

    LBRACE          reduce using rule 208 (OpenF -> .)
    ID              reduce using rule 208 (OpenF -> .)
    LPAREN          reduce using rule 208 (OpenF -> .)
    ADD             reduce using rule 208 (OpenF -> .)
    SUB             reduce using rule 208 (OpenF -> .)
    NOT             reduce using rule 208 (OpenF -> .)
    XOR             reduce using rule 208 (OpenF -> .)
    MUL             reduce using rule 208 (OpenF -> .)
    AND             reduce using rule 208 (OpenF -> .)
    INT             reduce using rule 208 (OpenF -> .)
    FLOAT           reduce using rule 208 (OpenF -> .)
    RUNE            reduce using rule 208 (OpenF -> .)
    STRING          reduce using rule 208 (OpenF -> .)
    TRUE            reduce using rule 208 (OpenF -> .)
    FALSE           reduce using rule 208 (OpenF -> .)
    SEMICOLON       reduce using rule 208 (OpenF -> .)

    OpenF                          shift and go to state 271

state 237

    (188) ContinueStmt -> CONTINUE ID .

    SEMICOLON       reduce using rule 188 (ContinueStmt -> CONTINUE ID .)


state 238

    (183) LabelledStmt -> ID COLON . Statement
    (151) Statement -> . Declaration
    (152) Statement -> . LabelledStmt
    (153) Statement -> . SimpleStmt
    (154) Statement -> . ReturnStmt
    (155) Statement -> . BreakStmt
    (156) Statement -> . ContinueStmt
    (157) Statement -> . GotoStmt
    (158) Statement -> . FallthroughStmt
    (159) Statement -> . IfStmt
    (160) Statement -> . OpenS Block CloseS
    (161) Statement -> . SwitchStmt
    (162) Statement -> . ForStmt
    (21) Declaration -> . ConstDecl
    (22) Declaration -> . StructDecl
    (23) Declaration -> . VarDecl
    (183) LabelledStmt -> . ID COLON Statement
    (163) SimpleStmt -> . Expression
    (164) SimpleStmt -> . IncDecStmt
    (165) SimpleStmt -> . Assignment
    (166) SimpleStmt -> . ShortVarDecl
    (167) SimpleStmt -> .
    (184) ReturnStmt -> . RETURN ExpressionList
    (185) ReturnStmt -> . RETURN
    (186) BreakStmt -> . BREAK ID
    (187) BreakStmt -> . BREAK
    (188) ContinueStmt -> . CONTINUE ID
    (189) ContinueStmt -> . CONTINUE
    (190) GotoStmt -> . GOTO ID
    (191) FallthroughStmt -> . FALLTHROUGH
    (193) IfStmt -> . IF OpenS Expression Block CloseS
    (194) IfStmt -> . IF OpenS Expression Block CloseS ELSE IfStmt
    (195) IfStmt -> . IF OpenS Expression Block CloseS ELSE OpenS Block CloseS
    (2) OpenS -> .
    (196) SwitchStmt -> . ExprSwitchStmt
    (205) ForStmt -> . FOR OpenS OpenF Expression Block CloseF CloseS
    (206) ForStmt -> . FOR OpenS OpenF ForClause Block CloseF CloseS
    (207) ForStmt -> . FOR OpenS OpenF Block CloseF CloseS
    (24) ConstDecl -> . CONST ConstSpec
    (25) ConstDecl -> . CONST LPAREN ConstSpec_curl RPAREN
    (33) StructDecl -> . TYPE StructName StructType
    (35) VarDecl -> . VAR VarSpec
    (36) VarDecl -> . VAR LPAREN VarSpec_curl RPAREN
    (89) Expression -> . UnaryExpr
    (90) Expression -> . Expression BinaryOp UnaryExpr
    (168) IncDecStmt -> . Expression INC
    (169) IncDecStmt -> . Expression DEC
    (170) Assignment -> . ExpressionList AssignOp ExpressionList
    (192) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (197) ExprSwitchStmt -> . SWITCH ExpressionName LBRACE OpenW ExprCaseClause_curl CloseW RBRACE
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (31) ExpressionList -> . Expression
    (32) ExpressionList -> . ExpressionList COMMA Expression
    (29) IdentifierList -> . ID
    (30) IdentifierList -> . ID COMMA IdentifierList
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (138) Literal -> . BasicLit
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    ID              shift and go to state 206
    SEMICOLON       reduce using rule 167 (SimpleStmt -> .)
    RETURN          shift and go to state 197
    BREAK           shift and go to state 211
    CONTINUE        shift and go to state 204
    GOTO            shift and go to state 196
    FALLTHROUGH     shift and go to state 205
    IF              shift and go to state 217
    LBRACE          reduce using rule 2 (OpenS -> .)
    FOR             shift and go to state 201
    CONST           shift and go to state 10
    TYPE            shift and go to state 19
    VAR             shift and go to state 16
    SWITCH          shift and go to state 207
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    UnaryOp                        shift and go to state 73
    ContinueStmt                   shift and go to state 190
    SimpleStmt                     shift and go to state 214
    FalseLit                       shift and go to state 74
    Literal                        shift and go to state 75
    ForStmt                        shift and go to state 215
    ExprSwitchStmt                 shift and go to state 198
    Statement                      shift and go to state 272
    IdentifierList                 shift and go to state 199
    IntLit                         shift and go to state 76
    IfStmt                         shift and go to state 192
    RuneLit                        shift and go to state 89
    Assignment                     shift and go to state 193
    IncDecStmt                     shift and go to state 194
    Declaration                    shift and go to state 208
    OpenS                          shift and go to state 195
    GotoStmt                       shift and go to state 200
    UnaryExpr                      shift and go to state 83
    FloatLit                       shift and go to state 84
    StructDecl                     shift and go to state 11
    ExpressionList                 shift and go to state 209
    LabelledStmt                   shift and go to state 202
    Expression                     shift and go to state 210
    ShortVarDecl                   shift and go to state 216
    TrueLit                        shift and go to state 98
    BreakStmt                      shift and go to state 218
    SwitchStmt                     shift and go to state 203
    StringLit                      shift and go to state 96
    VarDecl                        shift and go to state 18
    BasicLit                       shift and go to state 79
    PrimaryExpr                    shift and go to state 85
    ReturnStmt                     shift and go to state 212
    ConstDecl                      shift and go to state 17
    FallthroughStmt                shift and go to state 213

state 239

    (197) ExprSwitchStmt -> SWITCH ExpressionName . LBRACE OpenW ExprCaseClause_curl CloseW RBRACE

    LBRACE          shift and go to state 273


state 240

    (198) ExpressionName -> Expression .
    (90) Expression -> Expression . BinaryOp UnaryExpr
    (93) BinaryOp -> . LOR
    (94) BinaryOp -> . LAND
    (95) BinaryOp -> . RelOp
    (96) BinaryOp -> . AddOp
    (97) BinaryOp -> . MulOp
    (98) RelOp -> . EQL
    (99) RelOp -> . NEQ
    (100) RelOp -> . LTN
    (101) RelOp -> . LEQ
    (102) RelOp -> . GTN
    (103) RelOp -> . GEQ
    (104) AddOp -> . ADD
    (105) AddOp -> . SUB
    (106) AddOp -> . OR
    (107) AddOp -> . XOR
    (108) MulOp -> . MUL
    (109) MulOp -> . DIV
    (110) MulOp -> . MOD
    (111) MulOp -> . SHL
    (112) MulOp -> . SHR
    (113) MulOp -> . AND
    (114) MulOp -> . AND_NOT

    LBRACE          reduce using rule 198 (ExpressionName -> Expression .)
    LOR             shift and go to state 132
    LAND            shift and go to state 137
    EQL             shift and go to state 146
    NEQ             shift and go to state 135
    LTN             shift and go to state 148
    LEQ             shift and go to state 151
    GTN             shift and go to state 144
    GEQ             shift and go to state 136
    ADD             shift and go to state 145
    SUB             shift and go to state 131
    OR              shift and go to state 152
    XOR             shift and go to state 142
    MUL             shift and go to state 133
    DIV             shift and go to state 134
    MOD             shift and go to state 153
    SHL             shift and go to state 147
    SHR             shift and go to state 141
    AND             shift and go to state 149
    AND_NOT         shift and go to state 138

    AddOp                          shift and go to state 140
    BinaryOp                       shift and go to state 139
    MulOp                          shift and go to state 143
    RelOp                          shift and go to state 150

state 241

    (172) AssignOp -> SUB_ASSIGN .

    ID              reduce using rule 172 (AssignOp -> SUB_ASSIGN .)
    LPAREN          reduce using rule 172 (AssignOp -> SUB_ASSIGN .)
    ADD             reduce using rule 172 (AssignOp -> SUB_ASSIGN .)
    SUB             reduce using rule 172 (AssignOp -> SUB_ASSIGN .)
    NOT             reduce using rule 172 (AssignOp -> SUB_ASSIGN .)
    XOR             reduce using rule 172 (AssignOp -> SUB_ASSIGN .)
    MUL             reduce using rule 172 (AssignOp -> SUB_ASSIGN .)
    AND             reduce using rule 172 (AssignOp -> SUB_ASSIGN .)
    INT             reduce using rule 172 (AssignOp -> SUB_ASSIGN .)
    FLOAT           reduce using rule 172 (AssignOp -> SUB_ASSIGN .)
    RUNE            reduce using rule 172 (AssignOp -> SUB_ASSIGN .)
    STRING          reduce using rule 172 (AssignOp -> SUB_ASSIGN .)
    TRUE            reduce using rule 172 (AssignOp -> SUB_ASSIGN .)
    FALSE           reduce using rule 172 (AssignOp -> SUB_ASSIGN .)


state 242

    (170) Assignment -> ExpressionList AssignOp . ExpressionList
    (31) ExpressionList -> . Expression
    (32) ExpressionList -> . ExpressionList COMMA Expression
    (89) Expression -> . UnaryExpr
    (90) Expression -> . Expression BinaryOp UnaryExpr
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (138) Literal -> . BasicLit
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    ID              shift and go to state 91
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    RuneLit                        shift and go to state 89
    UnaryOp                        shift and go to state 73
    TrueLit                        shift and go to state 98
    BasicLit                       shift and go to state 79
    UnaryExpr                      shift and go to state 83
    FloatLit                       shift and go to state 84
    FalseLit                       shift and go to state 74
    IntLit                         shift and go to state 76
    Literal                        shift and go to state 75
    ExpressionList                 shift and go to state 274
    PrimaryExpr                    shift and go to state 85
    StringLit                      shift and go to state 96
    Expression                     shift and go to state 90

state 243

    (173) AssignOp -> MUL_ASSIGN .

    ID              reduce using rule 173 (AssignOp -> MUL_ASSIGN .)
    LPAREN          reduce using rule 173 (AssignOp -> MUL_ASSIGN .)
    ADD             reduce using rule 173 (AssignOp -> MUL_ASSIGN .)
    SUB             reduce using rule 173 (AssignOp -> MUL_ASSIGN .)
    NOT             reduce using rule 173 (AssignOp -> MUL_ASSIGN .)
    XOR             reduce using rule 173 (AssignOp -> MUL_ASSIGN .)
    MUL             reduce using rule 173 (AssignOp -> MUL_ASSIGN .)
    AND             reduce using rule 173 (AssignOp -> MUL_ASSIGN .)
    INT             reduce using rule 173 (AssignOp -> MUL_ASSIGN .)
    FLOAT           reduce using rule 173 (AssignOp -> MUL_ASSIGN .)
    RUNE            reduce using rule 173 (AssignOp -> MUL_ASSIGN .)
    STRING          reduce using rule 173 (AssignOp -> MUL_ASSIGN .)
    TRUE            reduce using rule 173 (AssignOp -> MUL_ASSIGN .)
    FALSE           reduce using rule 173 (AssignOp -> MUL_ASSIGN .)


state 244

    (179) AssignOp -> XOR_ASSIGN .

    ID              reduce using rule 179 (AssignOp -> XOR_ASSIGN .)
    LPAREN          reduce using rule 179 (AssignOp -> XOR_ASSIGN .)
    ADD             reduce using rule 179 (AssignOp -> XOR_ASSIGN .)
    SUB             reduce using rule 179 (AssignOp -> XOR_ASSIGN .)
    NOT             reduce using rule 179 (AssignOp -> XOR_ASSIGN .)
    XOR             reduce using rule 179 (AssignOp -> XOR_ASSIGN .)
    MUL             reduce using rule 179 (AssignOp -> XOR_ASSIGN .)
    AND             reduce using rule 179 (AssignOp -> XOR_ASSIGN .)
    INT             reduce using rule 179 (AssignOp -> XOR_ASSIGN .)
    FLOAT           reduce using rule 179 (AssignOp -> XOR_ASSIGN .)
    RUNE            reduce using rule 179 (AssignOp -> XOR_ASSIGN .)
    STRING          reduce using rule 179 (AssignOp -> XOR_ASSIGN .)
    TRUE            reduce using rule 179 (AssignOp -> XOR_ASSIGN .)
    FALSE           reduce using rule 179 (AssignOp -> XOR_ASSIGN .)


state 245

    (182) AssignOp -> ASSIGN .

    ID              reduce using rule 182 (AssignOp -> ASSIGN .)
    LPAREN          reduce using rule 182 (AssignOp -> ASSIGN .)
    ADD             reduce using rule 182 (AssignOp -> ASSIGN .)
    SUB             reduce using rule 182 (AssignOp -> ASSIGN .)
    NOT             reduce using rule 182 (AssignOp -> ASSIGN .)
    XOR             reduce using rule 182 (AssignOp -> ASSIGN .)
    MUL             reduce using rule 182 (AssignOp -> ASSIGN .)
    AND             reduce using rule 182 (AssignOp -> ASSIGN .)
    INT             reduce using rule 182 (AssignOp -> ASSIGN .)
    FLOAT           reduce using rule 182 (AssignOp -> ASSIGN .)
    RUNE            reduce using rule 182 (AssignOp -> ASSIGN .)
    STRING          reduce using rule 182 (AssignOp -> ASSIGN .)
    TRUE            reduce using rule 182 (AssignOp -> ASSIGN .)
    FALSE           reduce using rule 182 (AssignOp -> ASSIGN .)


state 246

    (181) AssignOp -> SHR_ASSIGN .

    ID              reduce using rule 181 (AssignOp -> SHR_ASSIGN .)
    LPAREN          reduce using rule 181 (AssignOp -> SHR_ASSIGN .)
    ADD             reduce using rule 181 (AssignOp -> SHR_ASSIGN .)
    SUB             reduce using rule 181 (AssignOp -> SHR_ASSIGN .)
    NOT             reduce using rule 181 (AssignOp -> SHR_ASSIGN .)
    XOR             reduce using rule 181 (AssignOp -> SHR_ASSIGN .)
    MUL             reduce using rule 181 (AssignOp -> SHR_ASSIGN .)
    AND             reduce using rule 181 (AssignOp -> SHR_ASSIGN .)
    INT             reduce using rule 181 (AssignOp -> SHR_ASSIGN .)
    FLOAT           reduce using rule 181 (AssignOp -> SHR_ASSIGN .)
    RUNE            reduce using rule 181 (AssignOp -> SHR_ASSIGN .)
    STRING          reduce using rule 181 (AssignOp -> SHR_ASSIGN .)
    TRUE            reduce using rule 181 (AssignOp -> SHR_ASSIGN .)
    FALSE           reduce using rule 181 (AssignOp -> SHR_ASSIGN .)


state 247

    (178) AssignOp -> OR_ASSIGN .

    ID              reduce using rule 178 (AssignOp -> OR_ASSIGN .)
    LPAREN          reduce using rule 178 (AssignOp -> OR_ASSIGN .)
    ADD             reduce using rule 178 (AssignOp -> OR_ASSIGN .)
    SUB             reduce using rule 178 (AssignOp -> OR_ASSIGN .)
    NOT             reduce using rule 178 (AssignOp -> OR_ASSIGN .)
    XOR             reduce using rule 178 (AssignOp -> OR_ASSIGN .)
    MUL             reduce using rule 178 (AssignOp -> OR_ASSIGN .)
    AND             reduce using rule 178 (AssignOp -> OR_ASSIGN .)
    INT             reduce using rule 178 (AssignOp -> OR_ASSIGN .)
    FLOAT           reduce using rule 178 (AssignOp -> OR_ASSIGN .)
    RUNE            reduce using rule 178 (AssignOp -> OR_ASSIGN .)
    STRING          reduce using rule 178 (AssignOp -> OR_ASSIGN .)
    TRUE            reduce using rule 178 (AssignOp -> OR_ASSIGN .)
    FALSE           reduce using rule 178 (AssignOp -> OR_ASSIGN .)


state 248

    (175) AssignOp -> MOD_ASSIGN .

    ID              reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    LPAREN          reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    ADD             reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    SUB             reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    NOT             reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    XOR             reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    MUL             reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    AND             reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    INT             reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    FLOAT           reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    RUNE            reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    STRING          reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    TRUE            reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    FALSE           reduce using rule 175 (AssignOp -> MOD_ASSIGN .)


state 249

    (180) AssignOp -> SHL_ASSIGN .

    ID              reduce using rule 180 (AssignOp -> SHL_ASSIGN .)
    LPAREN          reduce using rule 180 (AssignOp -> SHL_ASSIGN .)
    ADD             reduce using rule 180 (AssignOp -> SHL_ASSIGN .)
    SUB             reduce using rule 180 (AssignOp -> SHL_ASSIGN .)
    NOT             reduce using rule 180 (AssignOp -> SHL_ASSIGN .)
    XOR             reduce using rule 180 (AssignOp -> SHL_ASSIGN .)
    MUL             reduce using rule 180 (AssignOp -> SHL_ASSIGN .)
    AND             reduce using rule 180 (AssignOp -> SHL_ASSIGN .)
    INT             reduce using rule 180 (AssignOp -> SHL_ASSIGN .)
    FLOAT           reduce using rule 180 (AssignOp -> SHL_ASSIGN .)
    RUNE            reduce using rule 180 (AssignOp -> SHL_ASSIGN .)
    STRING          reduce using rule 180 (AssignOp -> SHL_ASSIGN .)
    TRUE            reduce using rule 180 (AssignOp -> SHL_ASSIGN .)
    FALSE           reduce using rule 180 (AssignOp -> SHL_ASSIGN .)


state 250

    (176) AssignOp -> AND_ASSIGN .

    ID              reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    LPAREN          reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    ADD             reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    SUB             reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    NOT             reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    XOR             reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    MUL             reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    AND             reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    INT             reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    FLOAT           reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    RUNE            reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    STRING          reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    TRUE            reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    FALSE           reduce using rule 176 (AssignOp -> AND_ASSIGN .)


state 251

    (174) AssignOp -> DIV_ASSIGN .

    ID              reduce using rule 174 (AssignOp -> DIV_ASSIGN .)
    LPAREN          reduce using rule 174 (AssignOp -> DIV_ASSIGN .)
    ADD             reduce using rule 174 (AssignOp -> DIV_ASSIGN .)
    SUB             reduce using rule 174 (AssignOp -> DIV_ASSIGN .)
    NOT             reduce using rule 174 (AssignOp -> DIV_ASSIGN .)
    XOR             reduce using rule 174 (AssignOp -> DIV_ASSIGN .)
    MUL             reduce using rule 174 (AssignOp -> DIV_ASSIGN .)
    AND             reduce using rule 174 (AssignOp -> DIV_ASSIGN .)
    INT             reduce using rule 174 (AssignOp -> DIV_ASSIGN .)
    FLOAT           reduce using rule 174 (AssignOp -> DIV_ASSIGN .)
    RUNE            reduce using rule 174 (AssignOp -> DIV_ASSIGN .)
    STRING          reduce using rule 174 (AssignOp -> DIV_ASSIGN .)
    TRUE            reduce using rule 174 (AssignOp -> DIV_ASSIGN .)
    FALSE           reduce using rule 174 (AssignOp -> DIV_ASSIGN .)


state 252

    (171) AssignOp -> ADD_ASSIGN .

    ID              reduce using rule 171 (AssignOp -> ADD_ASSIGN .)
    LPAREN          reduce using rule 171 (AssignOp -> ADD_ASSIGN .)
    ADD             reduce using rule 171 (AssignOp -> ADD_ASSIGN .)
    SUB             reduce using rule 171 (AssignOp -> ADD_ASSIGN .)
    NOT             reduce using rule 171 (AssignOp -> ADD_ASSIGN .)
    XOR             reduce using rule 171 (AssignOp -> ADD_ASSIGN .)
    MUL             reduce using rule 171 (AssignOp -> ADD_ASSIGN .)
    AND             reduce using rule 171 (AssignOp -> ADD_ASSIGN .)
    INT             reduce using rule 171 (AssignOp -> ADD_ASSIGN .)
    FLOAT           reduce using rule 171 (AssignOp -> ADD_ASSIGN .)
    RUNE            reduce using rule 171 (AssignOp -> ADD_ASSIGN .)
    STRING          reduce using rule 171 (AssignOp -> ADD_ASSIGN .)
    TRUE            reduce using rule 171 (AssignOp -> ADD_ASSIGN .)
    FALSE           reduce using rule 171 (AssignOp -> ADD_ASSIGN .)


state 253

    (177) AssignOp -> AND_NOT_ASSIGN .

    ID              reduce using rule 177 (AssignOp -> AND_NOT_ASSIGN .)
    LPAREN          reduce using rule 177 (AssignOp -> AND_NOT_ASSIGN .)
    ADD             reduce using rule 177 (AssignOp -> AND_NOT_ASSIGN .)
    SUB             reduce using rule 177 (AssignOp -> AND_NOT_ASSIGN .)
    NOT             reduce using rule 177 (AssignOp -> AND_NOT_ASSIGN .)
    XOR             reduce using rule 177 (AssignOp -> AND_NOT_ASSIGN .)
    MUL             reduce using rule 177 (AssignOp -> AND_NOT_ASSIGN .)
    AND             reduce using rule 177 (AssignOp -> AND_NOT_ASSIGN .)
    INT             reduce using rule 177 (AssignOp -> AND_NOT_ASSIGN .)
    FLOAT           reduce using rule 177 (AssignOp -> AND_NOT_ASSIGN .)
    RUNE            reduce using rule 177 (AssignOp -> AND_NOT_ASSIGN .)
    STRING          reduce using rule 177 (AssignOp -> AND_NOT_ASSIGN .)
    TRUE            reduce using rule 177 (AssignOp -> AND_NOT_ASSIGN .)
    FALSE           reduce using rule 177 (AssignOp -> AND_NOT_ASSIGN .)


state 254

    (169) IncDecStmt -> Expression DEC .

    LBRACE          reduce using rule 169 (IncDecStmt -> Expression DEC .)
    SEMICOLON       reduce using rule 169 (IncDecStmt -> Expression DEC .)


state 255

    (168) IncDecStmt -> Expression INC .

    LBRACE          reduce using rule 168 (IncDecStmt -> Expression INC .)
    SEMICOLON       reduce using rule 168 (IncDecStmt -> Expression INC .)


state 256

    (186) BreakStmt -> BREAK ID .

    SEMICOLON       reduce using rule 186 (BreakStmt -> BREAK ID .)


state 257

    (193) IfStmt -> IF OpenS . Expression Block CloseS
    (194) IfStmt -> IF OpenS . Expression Block CloseS ELSE IfStmt
    (195) IfStmt -> IF OpenS . Expression Block CloseS ELSE OpenS Block CloseS
    (89) Expression -> . UnaryExpr
    (90) Expression -> . Expression BinaryOp UnaryExpr
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (138) Literal -> . BasicLit
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    ID              shift and go to state 91
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    TrueLit                        shift and go to state 98
    RuneLit                        shift and go to state 89
    UnaryOp                        shift and go to state 73
    BasicLit                       shift and go to state 79
    UnaryExpr                      shift and go to state 83
    FloatLit                       shift and go to state 84
    FalseLit                       shift and go to state 74
    IntLit                         shift and go to state 76
    Literal                        shift and go to state 75
    PrimaryExpr                    shift and go to state 85
    StringLit                      shift and go to state 96
    Expression                     shift and go to state 275

state 258

    (134) Slice -> LBRACK COLON Expression COLON . Expression RBRACK
    (89) Expression -> . UnaryExpr
    (90) Expression -> . Expression BinaryOp UnaryExpr
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (138) Literal -> . BasicLit
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    ID              shift and go to state 91
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    RuneLit                        shift and go to state 89
    UnaryOp                        shift and go to state 73
    TrueLit                        shift and go to state 98
    BasicLit                       shift and go to state 79
    UnaryExpr                      shift and go to state 83
    FloatLit                       shift and go to state 84
    FalseLit                       shift and go to state 74
    IntLit                         shift and go to state 76
    Literal                        shift and go to state 75
    PrimaryExpr                    shift and go to state 85
    StringLit                      shift and go to state 96
    Expression                     shift and go to state 276

state 259

    (130) Slice -> LBRACK COLON Expression RBRACK .

    DOT             reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    LBRACK          reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    LPAREN          reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    LOR             reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    LAND            reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    EQL             reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    NEQ             reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    LTN             reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    LEQ             reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    GTN             reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    GEQ             reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    ADD             reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    SUB             reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    OR              reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    XOR             reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    MUL             reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    DIV             reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    MOD             reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    SHL             reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    SHR             reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    AND             reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    AND_NOT         reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    COMMA           reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    SEMICOLON       reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    RPAREN          reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    RBRACK          reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    COLON           reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    DIV_ASSIGN      reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    MOD_ASSIGN      reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    AND_ASSIGN      reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    OR_ASSIGN       reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    SHL_ASSIGN      reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    SHR_ASSIGN      reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    ASSIGN          reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    LBRACE          reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    INC             reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)
    DEC             reduce using rule 130 (Slice -> LBRACK COLON Expression RBRACK .)


state 260

    (131) Slice -> LBRACK Expression COLON RBRACK .

    DOT             reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    LBRACK          reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    LPAREN          reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    LOR             reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    LAND            reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    EQL             reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    NEQ             reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    LTN             reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    LEQ             reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    GTN             reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    GEQ             reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    ADD             reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    SUB             reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    OR              reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    XOR             reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    MUL             reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    DIV             reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    MOD             reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    SHL             reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    SHR             reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    AND             reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    AND_NOT         reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    COMMA           reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    SEMICOLON       reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    RPAREN          reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    RBRACK          reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    COLON           reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    ADD_ASSIGN      reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    SUB_ASSIGN      reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    MUL_ASSIGN      reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    DIV_ASSIGN      reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    MOD_ASSIGN      reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    AND_ASSIGN      reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    OR_ASSIGN       reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    XOR_ASSIGN      reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    SHL_ASSIGN      reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    SHR_ASSIGN      reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    ASSIGN          reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    LBRACE          reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    INC             reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)
    DEC             reduce using rule 131 (Slice -> LBRACK Expression COLON RBRACK .)


state 261

    (129) Slice -> LBRACK Expression COLON Expression . RBRACK
    (133) Slice -> LBRACK Expression COLON Expression . COLON Expression RBRACK
    (90) Expression -> Expression . BinaryOp UnaryExpr
    (93) BinaryOp -> . LOR
    (94) BinaryOp -> . LAND
    (95) BinaryOp -> . RelOp
    (96) BinaryOp -> . AddOp
    (97) BinaryOp -> . MulOp
    (98) RelOp -> . EQL
    (99) RelOp -> . NEQ
    (100) RelOp -> . LTN
    (101) RelOp -> . LEQ
    (102) RelOp -> . GTN
    (103) RelOp -> . GEQ
    (104) AddOp -> . ADD
    (105) AddOp -> . SUB
    (106) AddOp -> . OR
    (107) AddOp -> . XOR
    (108) MulOp -> . MUL
    (109) MulOp -> . DIV
    (110) MulOp -> . MOD
    (111) MulOp -> . SHL
    (112) MulOp -> . SHR
    (113) MulOp -> . AND
    (114) MulOp -> . AND_NOT

    RBRACK          shift and go to state 278
    COLON           shift and go to state 277
    LOR             shift and go to state 132
    LAND            shift and go to state 137
    EQL             shift and go to state 146
    NEQ             shift and go to state 135
    LTN             shift and go to state 148
    LEQ             shift and go to state 151
    GTN             shift and go to state 144
    GEQ             shift and go to state 136
    ADD             shift and go to state 145
    SUB             shift and go to state 131
    OR              shift and go to state 152
    XOR             shift and go to state 142
    MUL             shift and go to state 133
    DIV             shift and go to state 134
    MOD             shift and go to state 153
    SHL             shift and go to state 147
    SHR             shift and go to state 141
    AND             shift and go to state 149
    AND_NOT         shift and go to state 138

    AddOp                          shift and go to state 140
    BinaryOp                       shift and go to state 139
    MulOp                          shift and go to state 143
    RelOp                          shift and go to state 150

state 262

    (137) Arguments -> LPAREN ExpressionList COMMA RPAREN .

    DOT             reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LBRACK          reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LPAREN          reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LOR             reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LAND            reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    EQL             reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    NEQ             reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LTN             reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LEQ             reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    GTN             reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    GEQ             reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    ADD             reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SUB             reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    OR              reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    XOR             reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    MUL             reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    DIV             reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    MOD             reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHL             reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHR             reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    AND             reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    AND_NOT         reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    COMMA           reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SEMICOLON       reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    RPAREN          reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    RBRACK          reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    COLON           reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    ADD_ASSIGN      reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SUB_ASSIGN      reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    MUL_ASSIGN      reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    DIV_ASSIGN      reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    MOD_ASSIGN      reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    AND_ASSIGN      reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    OR_ASSIGN       reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    XOR_ASSIGN      reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHL_ASSIGN      reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHR_ASSIGN      reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    ASSIGN          reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LBRACE          reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    INC             reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    DEC             reduce using rule 137 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)


state 263

    (57) FieldDecl_curl -> FieldDecl_curl FieldDecl SEMICOLON .

    RBRACE          reduce using rule 57 (FieldDecl_curl -> FieldDecl_curl FieldDecl SEMICOLON .)
    ID              reduce using rule 57 (FieldDecl_curl -> FieldDecl_curl FieldDecl SEMICOLON .)


state 264

    (63) FieldDecl -> ID STRUCT . MUL ID

    MUL             shift and go to state 279


state 265

    (59) FieldDecl -> ID COMMA . IdentifierList Type
    (60) FieldDecl -> ID COMMA . IdentifierList ID
    (64) FieldDecl -> ID COMMA . IdentifierList STRUCT MUL ID
    (29) IdentifierList -> . ID
    (30) IdentifierList -> . ID COMMA IdentifierList

    ID              shift and go to state 30

    IdentifierList                 shift and go to state 280

state 266

    (61) FieldDecl -> ID Type .

    SEMICOLON       reduce using rule 61 (FieldDecl -> ID Type .)


state 267

    (62) FieldDecl -> ID ID .

    SEMICOLON       reduce using rule 62 (FieldDecl -> ID ID .)


state 268

    (56) StructType -> STRUCT OpenStructS LBRACE FieldDecl_curl RBRACE CloseStructS .

    SEMICOLON       reduce using rule 56 (StructType -> STRUCT OpenStructS LBRACE FieldDecl_curl RBRACE CloseStructS .)


state 269

    (160) Statement -> OpenS Block CloseS .

    SEMICOLON       reduce using rule 160 (Statement -> OpenS Block CloseS .)


state 270

    (192) ShortVarDecl -> IdentifierList DEFINE ExpressionList .
    (32) ExpressionList -> ExpressionList . COMMA Expression

    LBRACE          reduce using rule 192 (ShortVarDecl -> IdentifierList DEFINE ExpressionList .)
    SEMICOLON       reduce using rule 192 (ShortVarDecl -> IdentifierList DEFINE ExpressionList .)
    COMMA           shift and go to state 129


state 271

    (205) ForStmt -> FOR OpenS OpenF . Expression Block CloseF CloseS
    (206) ForStmt -> FOR OpenS OpenF . ForClause Block CloseF CloseS
    (207) ForStmt -> FOR OpenS OpenF . Block CloseF CloseS
    (89) Expression -> . UnaryExpr
    (90) Expression -> . Expression BinaryOp UnaryExpr
    (212) ForClause -> . SimpleStmt SEMICOLON SEMICOLON SimpleStmt
    (213) ForClause -> . SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt
    (85) Block -> . LBRACE StatementList RBRACE
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (163) SimpleStmt -> . Expression
    (164) SimpleStmt -> . IncDecStmt
    (165) SimpleStmt -> . Assignment
    (166) SimpleStmt -> . ShortVarDecl
    (167) SimpleStmt -> .
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (168) IncDecStmt -> . Expression INC
    (169) IncDecStmt -> . Expression DEC
    (170) Assignment -> . ExpressionList AssignOp ExpressionList
    (192) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (138) Literal -> . BasicLit
    (31) ExpressionList -> . Expression
    (32) ExpressionList -> . ExpressionList COMMA Expression
    (29) IdentifierList -> . ID
    (30) IdentifierList -> . ID COMMA IdentifierList
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    LBRACE          shift and go to state 116
    SEMICOLON       reduce using rule 167 (SimpleStmt -> .)
    ID              shift and go to state 284
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    UnaryOp                        shift and go to state 73
    SimpleStmt                     shift and go to state 281
    FalseLit                       shift and go to state 74
    Literal                        shift and go to state 75
    IdentifierList                 shift and go to state 199
    IntLit                         shift and go to state 76
    RuneLit                        shift and go to state 89
    Assignment                     shift and go to state 193
    IncDecStmt                     shift and go to state 194
    UnaryExpr                      shift and go to state 83
    FloatLit                       shift and go to state 84
    ExpressionList                 shift and go to state 209
    ForClause                      shift and go to state 282
    Expression                     shift and go to state 283
    ShortVarDecl                   shift and go to state 216
    Block                          shift and go to state 285
    StringLit                      shift and go to state 96
    BasicLit                       shift and go to state 79
    PrimaryExpr                    shift and go to state 85
    TrueLit                        shift and go to state 98

state 272

    (183) LabelledStmt -> ID COLON Statement .

    SEMICOLON       reduce using rule 183 (LabelledStmt -> ID COLON Statement .)


state 273

    (197) ExprSwitchStmt -> SWITCH ExpressionName LBRACE . OpenW ExprCaseClause_curl CloseW RBRACE
    (210) OpenW -> .

    RBRACE          reduce using rule 210 (OpenW -> .)
    CASE            reduce using rule 210 (OpenW -> .)
    DEFAULT         reduce using rule 210 (OpenW -> .)

    OpenW                          shift and go to state 286

state 274

    (170) Assignment -> ExpressionList AssignOp ExpressionList .
    (32) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 170 (Assignment -> ExpressionList AssignOp ExpressionList .)
    LBRACE          reduce using rule 170 (Assignment -> ExpressionList AssignOp ExpressionList .)
    COMMA           shift and go to state 129


state 275

    (193) IfStmt -> IF OpenS Expression . Block CloseS
    (194) IfStmt -> IF OpenS Expression . Block CloseS ELSE IfStmt
    (195) IfStmt -> IF OpenS Expression . Block CloseS ELSE OpenS Block CloseS
    (90) Expression -> Expression . BinaryOp UnaryExpr
    (85) Block -> . LBRACE StatementList RBRACE
    (93) BinaryOp -> . LOR
    (94) BinaryOp -> . LAND
    (95) BinaryOp -> . RelOp
    (96) BinaryOp -> . AddOp
    (97) BinaryOp -> . MulOp
    (98) RelOp -> . EQL
    (99) RelOp -> . NEQ
    (100) RelOp -> . LTN
    (101) RelOp -> . LEQ
    (102) RelOp -> . GTN
    (103) RelOp -> . GEQ
    (104) AddOp -> . ADD
    (105) AddOp -> . SUB
    (106) AddOp -> . OR
    (107) AddOp -> . XOR
    (108) MulOp -> . MUL
    (109) MulOp -> . DIV
    (110) MulOp -> . MOD
    (111) MulOp -> . SHL
    (112) MulOp -> . SHR
    (113) MulOp -> . AND
    (114) MulOp -> . AND_NOT

    LBRACE          shift and go to state 116
    LOR             shift and go to state 132
    LAND            shift and go to state 137
    EQL             shift and go to state 146
    NEQ             shift and go to state 135
    LTN             shift and go to state 148
    LEQ             shift and go to state 151
    GTN             shift and go to state 144
    GEQ             shift and go to state 136
    ADD             shift and go to state 145
    SUB             shift and go to state 131
    OR              shift and go to state 152
    XOR             shift and go to state 142
    MUL             shift and go to state 133
    DIV             shift and go to state 134
    MOD             shift and go to state 153
    SHL             shift and go to state 147
    SHR             shift and go to state 141
    AND             shift and go to state 149
    AND_NOT         shift and go to state 138

    RelOp                          shift and go to state 150
    AddOp                          shift and go to state 140
    BinaryOp                       shift and go to state 139
    MulOp                          shift and go to state 143
    Block                          shift and go to state 287

state 276

    (134) Slice -> LBRACK COLON Expression COLON Expression . RBRACK
    (90) Expression -> Expression . BinaryOp UnaryExpr
    (93) BinaryOp -> . LOR
    (94) BinaryOp -> . LAND
    (95) BinaryOp -> . RelOp
    (96) BinaryOp -> . AddOp
    (97) BinaryOp -> . MulOp
    (98) RelOp -> . EQL
    (99) RelOp -> . NEQ
    (100) RelOp -> . LTN
    (101) RelOp -> . LEQ
    (102) RelOp -> . GTN
    (103) RelOp -> . GEQ
    (104) AddOp -> . ADD
    (105) AddOp -> . SUB
    (106) AddOp -> . OR
    (107) AddOp -> . XOR
    (108) MulOp -> . MUL
    (109) MulOp -> . DIV
    (110) MulOp -> . MOD
    (111) MulOp -> . SHL
    (112) MulOp -> . SHR
    (113) MulOp -> . AND
    (114) MulOp -> . AND_NOT

    RBRACK          shift and go to state 288
    LOR             shift and go to state 132
    LAND            shift and go to state 137
    EQL             shift and go to state 146
    NEQ             shift and go to state 135
    LTN             shift and go to state 148
    LEQ             shift and go to state 151
    GTN             shift and go to state 144
    GEQ             shift and go to state 136
    ADD             shift and go to state 145
    SUB             shift and go to state 131
    OR              shift and go to state 152
    XOR             shift and go to state 142
    MUL             shift and go to state 133
    DIV             shift and go to state 134
    MOD             shift and go to state 153
    SHL             shift and go to state 147
    SHR             shift and go to state 141
    AND             shift and go to state 149
    AND_NOT         shift and go to state 138

    AddOp                          shift and go to state 140
    BinaryOp                       shift and go to state 139
    MulOp                          shift and go to state 143
    RelOp                          shift and go to state 150

state 277

    (133) Slice -> LBRACK Expression COLON Expression COLON . Expression RBRACK
    (89) Expression -> . UnaryExpr
    (90) Expression -> . Expression BinaryOp UnaryExpr
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (138) Literal -> . BasicLit
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    ID              shift and go to state 91
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    RuneLit                        shift and go to state 89
    UnaryOp                        shift and go to state 73
    TrueLit                        shift and go to state 98
    BasicLit                       shift and go to state 79
    UnaryExpr                      shift and go to state 83
    FloatLit                       shift and go to state 84
    FalseLit                       shift and go to state 74
    IntLit                         shift and go to state 76
    Literal                        shift and go to state 75
    PrimaryExpr                    shift and go to state 85
    StringLit                      shift and go to state 96
    Expression                     shift and go to state 289

state 278

    (129) Slice -> LBRACK Expression COLON Expression RBRACK .

    DOT             reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    LBRACK          reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    LPAREN          reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    LOR             reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    LAND            reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    EQL             reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    NEQ             reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    LTN             reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    LEQ             reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    GTN             reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    GEQ             reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    ADD             reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    SUB             reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    OR              reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    XOR             reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    MUL             reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    DIV             reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    MOD             reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    SHL             reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    SHR             reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    AND             reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    AND_NOT         reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    COMMA           reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    SEMICOLON       reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    RPAREN          reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    RBRACK          reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    COLON           reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    DIV_ASSIGN      reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    MOD_ASSIGN      reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    AND_ASSIGN      reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    OR_ASSIGN       reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    SHL_ASSIGN      reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    SHR_ASSIGN      reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    ASSIGN          reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    LBRACE          reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    INC             reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)
    DEC             reduce using rule 129 (Slice -> LBRACK Expression COLON Expression RBRACK .)


state 279

    (63) FieldDecl -> ID STRUCT MUL . ID

    ID              shift and go to state 290


state 280

    (59) FieldDecl -> ID COMMA IdentifierList . Type
    (60) FieldDecl -> ID COMMA IdentifierList . ID
    (64) FieldDecl -> ID COMMA IdentifierList . STRUCT MUL ID
    (46) Type -> . LPAREN Type RPAREN
    (47) Type -> . LPAREN ID RPAREN
    (48) Type -> . TypeLit
    (49) TypeLit -> . ArrayType
    (50) TypeLit -> . PointerType
    (51) TypeLit -> . SliceType
    (52) ArrayType -> . LBRACK INT RBRACK Type
    (53) ArrayType -> . LBRACK INT RBRACK ID
    (65) PointerType -> . MUL Type
    (66) PointerType -> . MUL ID
    (54) SliceType -> . LBRACK RBRACK Type
    (55) SliceType -> . LBRACK RBRACK ID

    ID              shift and go to state 293
    STRUCT          shift and go to state 291
    LPAREN          shift and go to state 51
    LBRACK          shift and go to state 48
    MUL             shift and go to state 53

    Type                           shift and go to state 292
    ArrayType                      shift and go to state 49
    PointerType                    shift and go to state 52
    TypeLit                        shift and go to state 47
    SliceType                      shift and go to state 56

state 281

    (212) ForClause -> SimpleStmt . SEMICOLON SEMICOLON SimpleStmt
    (213) ForClause -> SimpleStmt . SEMICOLON Expression SEMICOLON SimpleStmt

    SEMICOLON       shift and go to state 294


state 282

    (206) ForStmt -> FOR OpenS OpenF ForClause . Block CloseF CloseS
    (85) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 116

    Block                          shift and go to state 295

state 283

    (205) ForStmt -> FOR OpenS OpenF Expression . Block CloseF CloseS
    (90) Expression -> Expression . BinaryOp UnaryExpr
    (163) SimpleStmt -> Expression .
    (168) IncDecStmt -> Expression . INC
    (169) IncDecStmt -> Expression . DEC
    (31) ExpressionList -> Expression .
    (85) Block -> . LBRACE StatementList RBRACE
    (93) BinaryOp -> . LOR
    (94) BinaryOp -> . LAND
    (95) BinaryOp -> . RelOp
    (96) BinaryOp -> . AddOp
    (97) BinaryOp -> . MulOp
    (98) RelOp -> . EQL
    (99) RelOp -> . NEQ
    (100) RelOp -> . LTN
    (101) RelOp -> . LEQ
    (102) RelOp -> . GTN
    (103) RelOp -> . GEQ
    (104) AddOp -> . ADD
    (105) AddOp -> . SUB
    (106) AddOp -> . OR
    (107) AddOp -> . XOR
    (108) MulOp -> . MUL
    (109) MulOp -> . DIV
    (110) MulOp -> . MOD
    (111) MulOp -> . SHL
    (112) MulOp -> . SHR
    (113) MulOp -> . AND
    (114) MulOp -> . AND_NOT

    SEMICOLON       reduce using rule 163 (SimpleStmt -> Expression .)
    INC             shift and go to state 255
    DEC             shift and go to state 254
    COMMA           reduce using rule 31 (ExpressionList -> Expression .)
    ADD_ASSIGN      reduce using rule 31 (ExpressionList -> Expression .)
    SUB_ASSIGN      reduce using rule 31 (ExpressionList -> Expression .)
    MUL_ASSIGN      reduce using rule 31 (ExpressionList -> Expression .)
    DIV_ASSIGN      reduce using rule 31 (ExpressionList -> Expression .)
    MOD_ASSIGN      reduce using rule 31 (ExpressionList -> Expression .)
    AND_ASSIGN      reduce using rule 31 (ExpressionList -> Expression .)
    AND_NOT_ASSIGN  reduce using rule 31 (ExpressionList -> Expression .)
    OR_ASSIGN       reduce using rule 31 (ExpressionList -> Expression .)
    XOR_ASSIGN      reduce using rule 31 (ExpressionList -> Expression .)
    SHL_ASSIGN      reduce using rule 31 (ExpressionList -> Expression .)
    SHR_ASSIGN      reduce using rule 31 (ExpressionList -> Expression .)
    ASSIGN          reduce using rule 31 (ExpressionList -> Expression .)
    LBRACE          shift and go to state 116
    LOR             shift and go to state 132
    LAND            shift and go to state 137
    EQL             shift and go to state 146
    NEQ             shift and go to state 135
    LTN             shift and go to state 148
    LEQ             shift and go to state 151
    GTN             shift and go to state 144
    GEQ             shift and go to state 136
    ADD             shift and go to state 145
    SUB             shift and go to state 131
    OR              shift and go to state 152
    XOR             shift and go to state 142
    MUL             shift and go to state 133
    DIV             shift and go to state 134
    MOD             shift and go to state 153
    SHL             shift and go to state 147
    SHR             shift and go to state 141
    AND             shift and go to state 149
    AND_NOT         shift and go to state 138

    RelOp                          shift and go to state 150
    AddOp                          shift and go to state 140
    BinaryOp                       shift and go to state 139
    MulOp                          shift and go to state 143
    Block                          shift and go to state 296

state 284

    (122) PrimaryExpr -> ID .
    (29) IdentifierList -> ID .
    (30) IdentifierList -> ID . COMMA IdentifierList

    DOT             reduce using rule 122 (PrimaryExpr -> ID .)
    LBRACK          reduce using rule 122 (PrimaryExpr -> ID .)
    LPAREN          reduce using rule 122 (PrimaryExpr -> ID .)
    INC             reduce using rule 122 (PrimaryExpr -> ID .)
    DEC             reduce using rule 122 (PrimaryExpr -> ID .)
    LBRACE          reduce using rule 122 (PrimaryExpr -> ID .)
    LOR             reduce using rule 122 (PrimaryExpr -> ID .)
    LAND            reduce using rule 122 (PrimaryExpr -> ID .)
    EQL             reduce using rule 122 (PrimaryExpr -> ID .)
    NEQ             reduce using rule 122 (PrimaryExpr -> ID .)
    LTN             reduce using rule 122 (PrimaryExpr -> ID .)
    LEQ             reduce using rule 122 (PrimaryExpr -> ID .)
    GTN             reduce using rule 122 (PrimaryExpr -> ID .)
    GEQ             reduce using rule 122 (PrimaryExpr -> ID .)
    ADD             reduce using rule 122 (PrimaryExpr -> ID .)
    SUB             reduce using rule 122 (PrimaryExpr -> ID .)
    OR              reduce using rule 122 (PrimaryExpr -> ID .)
    XOR             reduce using rule 122 (PrimaryExpr -> ID .)
    MUL             reduce using rule 122 (PrimaryExpr -> ID .)
    DIV             reduce using rule 122 (PrimaryExpr -> ID .)
    MOD             reduce using rule 122 (PrimaryExpr -> ID .)
    SHL             reduce using rule 122 (PrimaryExpr -> ID .)
    SHR             reduce using rule 122 (PrimaryExpr -> ID .)
    AND             reduce using rule 122 (PrimaryExpr -> ID .)
    AND_NOT         reduce using rule 122 (PrimaryExpr -> ID .)
    SEMICOLON       reduce using rule 122 (PrimaryExpr -> ID .)
    ADD_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    SUB_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    MUL_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    DIV_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    MOD_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    AND_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    AND_NOT_ASSIGN  reduce using rule 122 (PrimaryExpr -> ID .)
    OR_ASSIGN       reduce using rule 122 (PrimaryExpr -> ID .)
    XOR_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    SHL_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    SHR_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    ASSIGN          reduce using rule 122 (PrimaryExpr -> ID .)
    DEFINE          reduce using rule 29 (IdentifierList -> ID .)
    COMMA           shift and go to state 44

  ! COMMA           [ reduce using rule 122 (PrimaryExpr -> ID .) ]


state 285

    (207) ForStmt -> FOR OpenS OpenF Block . CloseF CloseS
    (209) CloseF -> .

    SEMICOLON       reduce using rule 209 (CloseF -> .)

    CloseF                         shift and go to state 297

state 286

    (197) ExprSwitchStmt -> SWITCH ExpressionName LBRACE OpenW . ExprCaseClause_curl CloseW RBRACE
    (199) ExprCaseClause_curl -> . ExprCaseClause_curl ExprCaseClause
    (200) ExprCaseClause_curl -> . DefCaseClause
    (201) ExprCaseClause_curl -> .
    (204) DefCaseClause -> . OpenS DEFAULT COLON StatementList CloseS
    (2) OpenS -> .

    RBRACE          reduce using rule 201 (ExprCaseClause_curl -> .)
    CASE            reduce using rule 201 (ExprCaseClause_curl -> .)
    DEFAULT         reduce using rule 2 (OpenS -> .)

    DefCaseClause                  shift and go to state 298
    ExprCaseClause_curl            shift and go to state 299
    OpenS                          shift and go to state 300

state 287

    (193) IfStmt -> IF OpenS Expression Block . CloseS
    (194) IfStmt -> IF OpenS Expression Block . CloseS ELSE IfStmt
    (195) IfStmt -> IF OpenS Expression Block . CloseS ELSE OpenS Block CloseS
    (3) CloseS -> .

    ELSE            reduce using rule 3 (CloseS -> .)
    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 301

state 288

    (134) Slice -> LBRACK COLON Expression COLON Expression RBRACK .

    DOT             reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    LBRACK          reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    LPAREN          reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    LOR             reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    LAND            reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    EQL             reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    NEQ             reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    LTN             reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    LEQ             reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    GTN             reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    GEQ             reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    ADD             reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    SUB             reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    OR              reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    XOR             reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    MUL             reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    DIV             reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    MOD             reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    SHL             reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    SHR             reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    AND             reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    AND_NOT         reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    COMMA           reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    SEMICOLON       reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    RPAREN          reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    RBRACK          reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    COLON           reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    DIV_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    MOD_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    AND_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    OR_ASSIGN       reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    SHL_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    SHR_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    ASSIGN          reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    LBRACE          reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    INC             reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)
    DEC             reduce using rule 134 (Slice -> LBRACK COLON Expression COLON Expression RBRACK .)


state 289

    (133) Slice -> LBRACK Expression COLON Expression COLON Expression . RBRACK
    (90) Expression -> Expression . BinaryOp UnaryExpr
    (93) BinaryOp -> . LOR
    (94) BinaryOp -> . LAND
    (95) BinaryOp -> . RelOp
    (96) BinaryOp -> . AddOp
    (97) BinaryOp -> . MulOp
    (98) RelOp -> . EQL
    (99) RelOp -> . NEQ
    (100) RelOp -> . LTN
    (101) RelOp -> . LEQ
    (102) RelOp -> . GTN
    (103) RelOp -> . GEQ
    (104) AddOp -> . ADD
    (105) AddOp -> . SUB
    (106) AddOp -> . OR
    (107) AddOp -> . XOR
    (108) MulOp -> . MUL
    (109) MulOp -> . DIV
    (110) MulOp -> . MOD
    (111) MulOp -> . SHL
    (112) MulOp -> . SHR
    (113) MulOp -> . AND
    (114) MulOp -> . AND_NOT

    RBRACK          shift and go to state 302
    LOR             shift and go to state 132
    LAND            shift and go to state 137
    EQL             shift and go to state 146
    NEQ             shift and go to state 135
    LTN             shift and go to state 148
    LEQ             shift and go to state 151
    GTN             shift and go to state 144
    GEQ             shift and go to state 136
    ADD             shift and go to state 145
    SUB             shift and go to state 131
    OR              shift and go to state 152
    XOR             shift and go to state 142
    MUL             shift and go to state 133
    DIV             shift and go to state 134
    MOD             shift and go to state 153
    SHL             shift and go to state 147
    SHR             shift and go to state 141
    AND             shift and go to state 149
    AND_NOT         shift and go to state 138

    AddOp                          shift and go to state 140
    BinaryOp                       shift and go to state 139
    MulOp                          shift and go to state 143
    RelOp                          shift and go to state 150

state 290

    (63) FieldDecl -> ID STRUCT MUL ID .

    SEMICOLON       reduce using rule 63 (FieldDecl -> ID STRUCT MUL ID .)


state 291

    (64) FieldDecl -> ID COMMA IdentifierList STRUCT . MUL ID

    MUL             shift and go to state 303


state 292

    (59) FieldDecl -> ID COMMA IdentifierList Type .

    SEMICOLON       reduce using rule 59 (FieldDecl -> ID COMMA IdentifierList Type .)


state 293

    (60) FieldDecl -> ID COMMA IdentifierList ID .

    SEMICOLON       reduce using rule 60 (FieldDecl -> ID COMMA IdentifierList ID .)


state 294

    (212) ForClause -> SimpleStmt SEMICOLON . SEMICOLON SimpleStmt
    (213) ForClause -> SimpleStmt SEMICOLON . Expression SEMICOLON SimpleStmt
    (89) Expression -> . UnaryExpr
    (90) Expression -> . Expression BinaryOp UnaryExpr
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (138) Literal -> . BasicLit
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    SEMICOLON       shift and go to state 304
    ID              shift and go to state 91
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    RuneLit                        shift and go to state 89
    UnaryOp                        shift and go to state 73
    TrueLit                        shift and go to state 98
    BasicLit                       shift and go to state 79
    UnaryExpr                      shift and go to state 83
    FloatLit                       shift and go to state 84
    FalseLit                       shift and go to state 74
    IntLit                         shift and go to state 76
    Literal                        shift and go to state 75
    PrimaryExpr                    shift and go to state 85
    StringLit                      shift and go to state 96
    Expression                     shift and go to state 305

state 295

    (206) ForStmt -> FOR OpenS OpenF ForClause Block . CloseF CloseS
    (209) CloseF -> .

    SEMICOLON       reduce using rule 209 (CloseF -> .)

    CloseF                         shift and go to state 306

state 296

    (205) ForStmt -> FOR OpenS OpenF Expression Block . CloseF CloseS
    (209) CloseF -> .

    SEMICOLON       reduce using rule 209 (CloseF -> .)

    CloseF                         shift and go to state 307

state 297

    (207) ForStmt -> FOR OpenS OpenF Block CloseF . CloseS
    (3) CloseS -> .

    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 308

state 298

    (200) ExprCaseClause_curl -> DefCaseClause .

    RBRACE          reduce using rule 200 (ExprCaseClause_curl -> DefCaseClause .)
    CASE            reduce using rule 200 (ExprCaseClause_curl -> DefCaseClause .)


state 299

    (197) ExprSwitchStmt -> SWITCH ExpressionName LBRACE OpenW ExprCaseClause_curl . CloseW RBRACE
    (199) ExprCaseClause_curl -> ExprCaseClause_curl . ExprCaseClause
    (211) CloseW -> .
    (202) ExprCaseClause -> . OpenS ExprSwitchCase COLON StatementList CloseS
    (2) OpenS -> .

    RBRACE          reduce using rule 211 (CloseW -> .)
    CASE            reduce using rule 2 (OpenS -> .)

    CloseW                         shift and go to state 309
    ExprCaseClause                 shift and go to state 310
    OpenS                          shift and go to state 311

state 300

    (204) DefCaseClause -> OpenS . DEFAULT COLON StatementList CloseS

    DEFAULT         shift and go to state 312


state 301

    (193) IfStmt -> IF OpenS Expression Block CloseS .
    (194) IfStmt -> IF OpenS Expression Block CloseS . ELSE IfStmt
    (195) IfStmt -> IF OpenS Expression Block CloseS . ELSE OpenS Block CloseS

    SEMICOLON       reduce using rule 193 (IfStmt -> IF OpenS Expression Block CloseS .)
    ELSE            shift and go to state 313


state 302

    (133) Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .

    DOT             reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    LBRACK          reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    LPAREN          reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    LOR             reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    LAND            reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    EQL             reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    NEQ             reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    LTN             reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    LEQ             reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    GTN             reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    GEQ             reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    ADD             reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    SUB             reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    OR              reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    XOR             reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    MUL             reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    DIV             reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    MOD             reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    SHL             reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    SHR             reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    AND             reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    AND_NOT         reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    COMMA           reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    SEMICOLON       reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    RPAREN          reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    RBRACK          reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    COLON           reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    DIV_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    MOD_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    AND_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    OR_ASSIGN       reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    SHL_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    SHR_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    ASSIGN          reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    LBRACE          reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    INC             reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)
    DEC             reduce using rule 133 (Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK .)


state 303

    (64) FieldDecl -> ID COMMA IdentifierList STRUCT MUL . ID

    ID              shift and go to state 314


state 304

    (212) ForClause -> SimpleStmt SEMICOLON SEMICOLON . SimpleStmt
    (163) SimpleStmt -> . Expression
    (164) SimpleStmt -> . IncDecStmt
    (165) SimpleStmt -> . Assignment
    (166) SimpleStmt -> . ShortVarDecl
    (167) SimpleStmt -> .
    (89) Expression -> . UnaryExpr
    (90) Expression -> . Expression BinaryOp UnaryExpr
    (168) IncDecStmt -> . Expression INC
    (169) IncDecStmt -> . Expression DEC
    (170) Assignment -> . ExpressionList AssignOp ExpressionList
    (192) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (31) ExpressionList -> . Expression
    (32) ExpressionList -> . ExpressionList COMMA Expression
    (29) IdentifierList -> . ID
    (30) IdentifierList -> . ID COMMA IdentifierList
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (138) Literal -> . BasicLit
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    LBRACE          reduce using rule 167 (SimpleStmt -> .)
    ID              shift and go to state 316
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    UnaryOp                        shift and go to state 73
    SimpleStmt                     shift and go to state 315
    FalseLit                       shift and go to state 74
    Literal                        shift and go to state 75
    IdentifierList                 shift and go to state 199
    IntLit                         shift and go to state 76
    RuneLit                        shift and go to state 89
    Assignment                     shift and go to state 193
    IncDecStmt                     shift and go to state 194
    UnaryExpr                      shift and go to state 83
    FloatLit                       shift and go to state 84
    ExpressionList                 shift and go to state 209
    Expression                     shift and go to state 210
    ShortVarDecl                   shift and go to state 216
    StringLit                      shift and go to state 96
    BasicLit                       shift and go to state 79
    PrimaryExpr                    shift and go to state 85
    TrueLit                        shift and go to state 98

state 305

    (213) ForClause -> SimpleStmt SEMICOLON Expression . SEMICOLON SimpleStmt
    (90) Expression -> Expression . BinaryOp UnaryExpr
    (93) BinaryOp -> . LOR
    (94) BinaryOp -> . LAND
    (95) BinaryOp -> . RelOp
    (96) BinaryOp -> . AddOp
    (97) BinaryOp -> . MulOp
    (98) RelOp -> . EQL
    (99) RelOp -> . NEQ
    (100) RelOp -> . LTN
    (101) RelOp -> . LEQ
    (102) RelOp -> . GTN
    (103) RelOp -> . GEQ
    (104) AddOp -> . ADD
    (105) AddOp -> . SUB
    (106) AddOp -> . OR
    (107) AddOp -> . XOR
    (108) MulOp -> . MUL
    (109) MulOp -> . DIV
    (110) MulOp -> . MOD
    (111) MulOp -> . SHL
    (112) MulOp -> . SHR
    (113) MulOp -> . AND
    (114) MulOp -> . AND_NOT

    SEMICOLON       shift and go to state 317
    LOR             shift and go to state 132
    LAND            shift and go to state 137
    EQL             shift and go to state 146
    NEQ             shift and go to state 135
    LTN             shift and go to state 148
    LEQ             shift and go to state 151
    GTN             shift and go to state 144
    GEQ             shift and go to state 136
    ADD             shift and go to state 145
    SUB             shift and go to state 131
    OR              shift and go to state 152
    XOR             shift and go to state 142
    MUL             shift and go to state 133
    DIV             shift and go to state 134
    MOD             shift and go to state 153
    SHL             shift and go to state 147
    SHR             shift and go to state 141
    AND             shift and go to state 149
    AND_NOT         shift and go to state 138

    AddOp                          shift and go to state 140
    RelOp                          shift and go to state 150
    BinaryOp                       shift and go to state 139
    MulOp                          shift and go to state 143

state 306

    (206) ForStmt -> FOR OpenS OpenF ForClause Block CloseF . CloseS
    (3) CloseS -> .

    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 318

state 307

    (205) ForStmt -> FOR OpenS OpenF Expression Block CloseF . CloseS
    (3) CloseS -> .

    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 319

state 308

    (207) ForStmt -> FOR OpenS OpenF Block CloseF CloseS .

    SEMICOLON       reduce using rule 207 (ForStmt -> FOR OpenS OpenF Block CloseF CloseS .)


state 309

    (197) ExprSwitchStmt -> SWITCH ExpressionName LBRACE OpenW ExprCaseClause_curl CloseW . RBRACE

    RBRACE          shift and go to state 320


state 310

    (199) ExprCaseClause_curl -> ExprCaseClause_curl ExprCaseClause .

    RBRACE          reduce using rule 199 (ExprCaseClause_curl -> ExprCaseClause_curl ExprCaseClause .)
    CASE            reduce using rule 199 (ExprCaseClause_curl -> ExprCaseClause_curl ExprCaseClause .)


state 311

    (202) ExprCaseClause -> OpenS . ExprSwitchCase COLON StatementList CloseS
    (203) ExprSwitchCase -> . CASE Expression

    CASE            shift and go to state 321

    ExprSwitchCase                 shift and go to state 322

state 312

    (204) DefCaseClause -> OpenS DEFAULT . COLON StatementList CloseS

    COLON           shift and go to state 323


state 313

    (194) IfStmt -> IF OpenS Expression Block CloseS ELSE . IfStmt
    (195) IfStmt -> IF OpenS Expression Block CloseS ELSE . OpenS Block CloseS
    (193) IfStmt -> . IF OpenS Expression Block CloseS
    (194) IfStmt -> . IF OpenS Expression Block CloseS ELSE IfStmt
    (195) IfStmt -> . IF OpenS Expression Block CloseS ELSE OpenS Block CloseS
    (2) OpenS -> .

    IF              shift and go to state 217
    LBRACE          reduce using rule 2 (OpenS -> .)

    OpenS                          shift and go to state 324
    IfStmt                         shift and go to state 325

state 314

    (64) FieldDecl -> ID COMMA IdentifierList STRUCT MUL ID .

    SEMICOLON       reduce using rule 64 (FieldDecl -> ID COMMA IdentifierList STRUCT MUL ID .)


state 315

    (212) ForClause -> SimpleStmt SEMICOLON SEMICOLON SimpleStmt .

    LBRACE          reduce using rule 212 (ForClause -> SimpleStmt SEMICOLON SEMICOLON SimpleStmt .)


state 316

    (29) IdentifierList -> ID .
    (30) IdentifierList -> ID . COMMA IdentifierList
    (122) PrimaryExpr -> ID .

    DEFINE          reduce using rule 29 (IdentifierList -> ID .)
    COMMA           shift and go to state 44
    DOT             reduce using rule 122 (PrimaryExpr -> ID .)
    LBRACK          reduce using rule 122 (PrimaryExpr -> ID .)
    LPAREN          reduce using rule 122 (PrimaryExpr -> ID .)
    INC             reduce using rule 122 (PrimaryExpr -> ID .)
    DEC             reduce using rule 122 (PrimaryExpr -> ID .)
    LOR             reduce using rule 122 (PrimaryExpr -> ID .)
    LAND            reduce using rule 122 (PrimaryExpr -> ID .)
    EQL             reduce using rule 122 (PrimaryExpr -> ID .)
    NEQ             reduce using rule 122 (PrimaryExpr -> ID .)
    LTN             reduce using rule 122 (PrimaryExpr -> ID .)
    LEQ             reduce using rule 122 (PrimaryExpr -> ID .)
    GTN             reduce using rule 122 (PrimaryExpr -> ID .)
    GEQ             reduce using rule 122 (PrimaryExpr -> ID .)
    ADD             reduce using rule 122 (PrimaryExpr -> ID .)
    SUB             reduce using rule 122 (PrimaryExpr -> ID .)
    OR              reduce using rule 122 (PrimaryExpr -> ID .)
    XOR             reduce using rule 122 (PrimaryExpr -> ID .)
    MUL             reduce using rule 122 (PrimaryExpr -> ID .)
    DIV             reduce using rule 122 (PrimaryExpr -> ID .)
    MOD             reduce using rule 122 (PrimaryExpr -> ID .)
    SHL             reduce using rule 122 (PrimaryExpr -> ID .)
    SHR             reduce using rule 122 (PrimaryExpr -> ID .)
    AND             reduce using rule 122 (PrimaryExpr -> ID .)
    AND_NOT         reduce using rule 122 (PrimaryExpr -> ID .)
    LBRACE          reduce using rule 122 (PrimaryExpr -> ID .)
    ADD_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    SUB_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    MUL_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    DIV_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    MOD_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    AND_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    AND_NOT_ASSIGN  reduce using rule 122 (PrimaryExpr -> ID .)
    OR_ASSIGN       reduce using rule 122 (PrimaryExpr -> ID .)
    XOR_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    SHL_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    SHR_ASSIGN      reduce using rule 122 (PrimaryExpr -> ID .)
    ASSIGN          reduce using rule 122 (PrimaryExpr -> ID .)

  ! COMMA           [ reduce using rule 122 (PrimaryExpr -> ID .) ]


state 317

    (213) ForClause -> SimpleStmt SEMICOLON Expression SEMICOLON . SimpleStmt
    (163) SimpleStmt -> . Expression
    (164) SimpleStmt -> . IncDecStmt
    (165) SimpleStmt -> . Assignment
    (166) SimpleStmt -> . ShortVarDecl
    (167) SimpleStmt -> .
    (89) Expression -> . UnaryExpr
    (90) Expression -> . Expression BinaryOp UnaryExpr
    (168) IncDecStmt -> . Expression INC
    (169) IncDecStmt -> . Expression DEC
    (170) Assignment -> . ExpressionList AssignOp ExpressionList
    (192) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (31) ExpressionList -> . Expression
    (32) ExpressionList -> . ExpressionList COMMA Expression
    (29) IdentifierList -> . ID
    (30) IdentifierList -> . ID COMMA IdentifierList
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (138) Literal -> . BasicLit
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    LBRACE          reduce using rule 167 (SimpleStmt -> .)
    ID              shift and go to state 316
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    UnaryOp                        shift and go to state 73
    SimpleStmt                     shift and go to state 326
    FalseLit                       shift and go to state 74
    Literal                        shift and go to state 75
    IdentifierList                 shift and go to state 199
    IntLit                         shift and go to state 76
    RuneLit                        shift and go to state 89
    Assignment                     shift and go to state 193
    IncDecStmt                     shift and go to state 194
    UnaryExpr                      shift and go to state 83
    FloatLit                       shift and go to state 84
    ExpressionList                 shift and go to state 209
    Expression                     shift and go to state 210
    ShortVarDecl                   shift and go to state 216
    StringLit                      shift and go to state 96
    BasicLit                       shift and go to state 79
    PrimaryExpr                    shift and go to state 85
    TrueLit                        shift and go to state 98

state 318

    (206) ForStmt -> FOR OpenS OpenF ForClause Block CloseF CloseS .

    SEMICOLON       reduce using rule 206 (ForStmt -> FOR OpenS OpenF ForClause Block CloseF CloseS .)


state 319

    (205) ForStmt -> FOR OpenS OpenF Expression Block CloseF CloseS .

    SEMICOLON       reduce using rule 205 (ForStmt -> FOR OpenS OpenF Expression Block CloseF CloseS .)


state 320

    (197) ExprSwitchStmt -> SWITCH ExpressionName LBRACE OpenW ExprCaseClause_curl CloseW RBRACE .

    SEMICOLON       reduce using rule 197 (ExprSwitchStmt -> SWITCH ExpressionName LBRACE OpenW ExprCaseClause_curl CloseW RBRACE .)


state 321

    (203) ExprSwitchCase -> CASE . Expression
    (89) Expression -> . UnaryExpr
    (90) Expression -> . Expression BinaryOp UnaryExpr
    (91) UnaryExpr -> . PrimaryExpr
    (92) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Literal
    (122) PrimaryExpr -> . ID
    (123) PrimaryExpr -> . PrimaryExpr DOT ID
    (124) PrimaryExpr -> . LPAREN Expression RPAREN
    (125) PrimaryExpr -> . PrimaryExpr Index
    (126) PrimaryExpr -> . PrimaryExpr Slice
    (127) PrimaryExpr -> . PrimaryExpr Arguments
    (115) UnaryOp -> . ADD
    (116) UnaryOp -> . SUB
    (117) UnaryOp -> . NOT
    (118) UnaryOp -> . XOR
    (119) UnaryOp -> . MUL
    (120) UnaryOp -> . AND
    (138) Literal -> . BasicLit
    (139) BasicLit -> . IntLit
    (140) BasicLit -> . FloatLit
    (141) BasicLit -> . RuneLit
    (142) BasicLit -> . StringLit
    (143) BasicLit -> . TrueLit
    (144) BasicLit -> . FalseLit
    (147) IntLit -> . INT
    (148) FloatLit -> . FLOAT
    (149) RuneLit -> . RUNE
    (150) StringLit -> . STRING
    (145) TrueLit -> . TRUE
    (146) FalseLit -> . FALSE

    ID              shift and go to state 91
    LPAREN          shift and go to state 88
    ADD             shift and go to state 86
    SUB             shift and go to state 72
    NOT             shift and go to state 97
    XOR             shift and go to state 81
    MUL             shift and go to state 77
    AND             shift and go to state 92
    INT             shift and go to state 94
    FLOAT           shift and go to state 95
    RUNE            shift and go to state 80
    STRING          shift and go to state 82
    TRUE            shift and go to state 78
    FALSE           shift and go to state 93

    RuneLit                        shift and go to state 89
    UnaryOp                        shift and go to state 73
    TrueLit                        shift and go to state 98
    BasicLit                       shift and go to state 79
    UnaryExpr                      shift and go to state 83
    FloatLit                       shift and go to state 84
    FalseLit                       shift and go to state 74
    IntLit                         shift and go to state 76
    Literal                        shift and go to state 75
    PrimaryExpr                    shift and go to state 85
    StringLit                      shift and go to state 96
    Expression                     shift and go to state 327

state 322

    (202) ExprCaseClause -> OpenS ExprSwitchCase . COLON StatementList CloseS

    COLON           shift and go to state 328


state 323

    (204) DefCaseClause -> OpenS DEFAULT COLON . StatementList CloseS
    (86) StatementList -> . Statement_curl
    (87) Statement_curl -> . Statement_curl Statement SEMICOLON
    (88) Statement_curl -> .

    ID              reduce using rule 88 (Statement_curl -> .)
    RETURN          reduce using rule 88 (Statement_curl -> .)
    BREAK           reduce using rule 88 (Statement_curl -> .)
    CONTINUE        reduce using rule 88 (Statement_curl -> .)
    GOTO            reduce using rule 88 (Statement_curl -> .)
    FALLTHROUGH     reduce using rule 88 (Statement_curl -> .)
    IF              reduce using rule 88 (Statement_curl -> .)
    FOR             reduce using rule 88 (Statement_curl -> .)
    CONST           reduce using rule 88 (Statement_curl -> .)
    TYPE            reduce using rule 88 (Statement_curl -> .)
    VAR             reduce using rule 88 (Statement_curl -> .)
    SWITCH          reduce using rule 88 (Statement_curl -> .)
    LPAREN          reduce using rule 88 (Statement_curl -> .)
    ADD             reduce using rule 88 (Statement_curl -> .)
    SUB             reduce using rule 88 (Statement_curl -> .)
    NOT             reduce using rule 88 (Statement_curl -> .)
    XOR             reduce using rule 88 (Statement_curl -> .)
    MUL             reduce using rule 88 (Statement_curl -> .)
    AND             reduce using rule 88 (Statement_curl -> .)
    INT             reduce using rule 88 (Statement_curl -> .)
    FLOAT           reduce using rule 88 (Statement_curl -> .)
    RUNE            reduce using rule 88 (Statement_curl -> .)
    STRING          reduce using rule 88 (Statement_curl -> .)
    TRUE            reduce using rule 88 (Statement_curl -> .)
    FALSE           reduce using rule 88 (Statement_curl -> .)
    SEMICOLON       reduce using rule 88 (Statement_curl -> .)
    LBRACE          reduce using rule 88 (Statement_curl -> .)
    RBRACE          reduce using rule 88 (Statement_curl -> .)
    CASE            reduce using rule 88 (Statement_curl -> .)

    Statement_curl                 shift and go to state 170
    StatementList                  shift and go to state 329

state 324

    (195) IfStmt -> IF OpenS Expression Block CloseS ELSE OpenS . Block CloseS
    (85) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 116

    Block                          shift and go to state 330

state 325

    (194) IfStmt -> IF OpenS Expression Block CloseS ELSE IfStmt .

    SEMICOLON       reduce using rule 194 (IfStmt -> IF OpenS Expression Block CloseS ELSE IfStmt .)


state 326

    (213) ForClause -> SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt .

    LBRACE          reduce using rule 213 (ForClause -> SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt .)


state 327

    (203) ExprSwitchCase -> CASE Expression .
    (90) Expression -> Expression . BinaryOp UnaryExpr
    (93) BinaryOp -> . LOR
    (94) BinaryOp -> . LAND
    (95) BinaryOp -> . RelOp
    (96) BinaryOp -> . AddOp
    (97) BinaryOp -> . MulOp
    (98) RelOp -> . EQL
    (99) RelOp -> . NEQ
    (100) RelOp -> . LTN
    (101) RelOp -> . LEQ
    (102) RelOp -> . GTN
    (103) RelOp -> . GEQ
    (104) AddOp -> . ADD
    (105) AddOp -> . SUB
    (106) AddOp -> . OR
    (107) AddOp -> . XOR
    (108) MulOp -> . MUL
    (109) MulOp -> . DIV
    (110) MulOp -> . MOD
    (111) MulOp -> . SHL
    (112) MulOp -> . SHR
    (113) MulOp -> . AND
    (114) MulOp -> . AND_NOT

    COLON           reduce using rule 203 (ExprSwitchCase -> CASE Expression .)
    LOR             shift and go to state 132
    LAND            shift and go to state 137
    EQL             shift and go to state 146
    NEQ             shift and go to state 135
    LTN             shift and go to state 148
    LEQ             shift and go to state 151
    GTN             shift and go to state 144
    GEQ             shift and go to state 136
    ADD             shift and go to state 145
    SUB             shift and go to state 131
    OR              shift and go to state 152
    XOR             shift and go to state 142
    MUL             shift and go to state 133
    DIV             shift and go to state 134
    MOD             shift and go to state 153
    SHL             shift and go to state 147
    SHR             shift and go to state 141
    AND             shift and go to state 149
    AND_NOT         shift and go to state 138

    AddOp                          shift and go to state 140
    BinaryOp                       shift and go to state 139
    MulOp                          shift and go to state 143
    RelOp                          shift and go to state 150

state 328

    (202) ExprCaseClause -> OpenS ExprSwitchCase COLON . StatementList CloseS
    (86) StatementList -> . Statement_curl
    (87) Statement_curl -> . Statement_curl Statement SEMICOLON
    (88) Statement_curl -> .

    ID              reduce using rule 88 (Statement_curl -> .)
    RETURN          reduce using rule 88 (Statement_curl -> .)
    BREAK           reduce using rule 88 (Statement_curl -> .)
    CONTINUE        reduce using rule 88 (Statement_curl -> .)
    GOTO            reduce using rule 88 (Statement_curl -> .)
    FALLTHROUGH     reduce using rule 88 (Statement_curl -> .)
    IF              reduce using rule 88 (Statement_curl -> .)
    FOR             reduce using rule 88 (Statement_curl -> .)
    CONST           reduce using rule 88 (Statement_curl -> .)
    TYPE            reduce using rule 88 (Statement_curl -> .)
    VAR             reduce using rule 88 (Statement_curl -> .)
    SWITCH          reduce using rule 88 (Statement_curl -> .)
    LPAREN          reduce using rule 88 (Statement_curl -> .)
    ADD             reduce using rule 88 (Statement_curl -> .)
    SUB             reduce using rule 88 (Statement_curl -> .)
    NOT             reduce using rule 88 (Statement_curl -> .)
    XOR             reduce using rule 88 (Statement_curl -> .)
    MUL             reduce using rule 88 (Statement_curl -> .)
    AND             reduce using rule 88 (Statement_curl -> .)
    INT             reduce using rule 88 (Statement_curl -> .)
    FLOAT           reduce using rule 88 (Statement_curl -> .)
    RUNE            reduce using rule 88 (Statement_curl -> .)
    STRING          reduce using rule 88 (Statement_curl -> .)
    TRUE            reduce using rule 88 (Statement_curl -> .)
    FALSE           reduce using rule 88 (Statement_curl -> .)
    SEMICOLON       reduce using rule 88 (Statement_curl -> .)
    LBRACE          reduce using rule 88 (Statement_curl -> .)
    RBRACE          reduce using rule 88 (Statement_curl -> .)
    CASE            reduce using rule 88 (Statement_curl -> .)

    Statement_curl                 shift and go to state 170
    StatementList                  shift and go to state 331

state 329

    (204) DefCaseClause -> OpenS DEFAULT COLON StatementList . CloseS
    (3) CloseS -> .

    RBRACE          reduce using rule 3 (CloseS -> .)
    CASE            reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 332

state 330

    (195) IfStmt -> IF OpenS Expression Block CloseS ELSE OpenS Block . CloseS
    (3) CloseS -> .

    SEMICOLON       reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 333

state 331

    (202) ExprCaseClause -> OpenS ExprSwitchCase COLON StatementList . CloseS
    (3) CloseS -> .

    RBRACE          reduce using rule 3 (CloseS -> .)
    CASE            reduce using rule 3 (CloseS -> .)

    CloseS                         shift and go to state 334

state 332

    (204) DefCaseClause -> OpenS DEFAULT COLON StatementList CloseS .

    RBRACE          reduce using rule 204 (DefCaseClause -> OpenS DEFAULT COLON StatementList CloseS .)
    CASE            reduce using rule 204 (DefCaseClause -> OpenS DEFAULT COLON StatementList CloseS .)


state 333

    (195) IfStmt -> IF OpenS Expression Block CloseS ELSE OpenS Block CloseS .

    SEMICOLON       reduce using rule 195 (IfStmt -> IF OpenS Expression Block CloseS ELSE OpenS Block CloseS .)


state 334

    (202) ExprCaseClause -> OpenS ExprSwitchCase COLON StatementList CloseS .

    RBRACE          reduce using rule 202 (ExprCaseClause -> OpenS ExprSwitchCase COLON StatementList CloseS .)
    CASE            reduce using rule 202 (ExprCaseClause -> OpenS ExprSwitchCase COLON StatementList CloseS .)

