
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '15C8758520E7E832DF128F840960FC56'
    
_lr_action_items = {'FUNC':([4,6,7,25,30,],[-9,-7,15,-8,-6,]),'RETURN':([151,174,224,278,288,297,],[-86,189,-85,-2,-86,-86,]),'CONST':([4,6,7,25,30,151,174,224,278,288,297,],[-9,-7,10,-8,-6,-86,10,-85,-2,-86,-86,]),'SUB':([48,60,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,97,98,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,151,155,156,158,159,160,161,174,177,178,179,189,197,198,201,204,206,214,224,225,227,229,230,231,232,233,234,235,236,237,238,239,240,243,251,253,261,262,271,278,280,281,282,288,289,291,297,],[66,66,-114,66,-135,-119,-130,-117,-136,-129,-140,-116,-141,-87,-131,-89,-113,66,-132,116,-120,-118,-137,-138,-139,-133,-115,-134,66,66,-90,-123,66,-124,66,66,116,-103,-91,-106,-107,-97,-101,-92,-112,66,-94,-110,-105,-95,-100,-102,-96,-109,-98,-111,-93,-99,-104,-108,-86,116,-126,-121,116,-122,-88,66,-125,-127,66,66,-120,66,-2,116,-2,-128,-85,66,116,-189,-160,66,-161,-165,-168,-167,-164,-163,-166,-162,-159,66,66,116,116,-120,66,-2,66,66,116,-86,116,66,-86,]),'DEFAULT':([174,224,249,258,269,297,301,303,],[-84,-85,-191,268,268,-86,-3,-184,]),'SHL_ASSIGN':([68,69,70,72,73,74,76,77,78,79,83,85,87,88,89,90,92,108,109,111,156,158,159,160,161,177,178,197,203,204,214,261,262,],[-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,-120,-137,-138,-139,-133,-134,-90,-123,-124,-126,-121,-31,-122,-88,-125,-127,-120,238,-30,-128,-30,-120,]),'LOR':([68,69,70,72,73,74,76,77,78,79,83,84,85,87,88,89,90,92,108,109,111,115,155,156,158,159,160,161,177,178,197,204,214,227,253,261,262,282,289,],[-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,117,-120,-137,-138,-139,-133,-134,-90,-123,-124,117,117,-126,-121,117,-122,-88,-125,-127,-120,117,-128,117,117,117,-120,117,117,]),'COLON':([68,69,70,72,73,74,76,77,78,79,83,85,87,88,89,90,92,108,109,111,156,158,160,161,177,178,214,268,289,],[-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,-120,-137,-138,-139,-133,-134,-90,-123,-124,-126,-121,-122,-88,-125,-127,-128,278,297,]),'DIV_ASSIGN':([68,69,70,72,73,74,76,77,78,79,83,85,87,88,89,90,92,108,109,111,156,158,159,160,161,177,178,197,203,204,214,261,262,],[-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,-120,-137,-138,-139,-133,-134,-90,-123,-124,-126,-121,-31,-122,-88,-125,-127,-120,239,-30,-128,-30,-120,]),'MUL':([29,34,48,49,51,60,61,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,97,98,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,146,148,149,151,155,156,158,159,160,161,174,177,178,179,181,185,186,188,189,197,198,201,204,206,214,216,224,225,227,229,230,231,232,233,234,235,236,237,238,239,240,243,247,251,253,255,261,262,271,278,280,281,282,288,289,291,297,],[-28,51,71,51,51,71,-29,-114,71,-135,-119,-130,-117,-136,-129,-140,-116,-141,-87,-131,-89,-113,71,-132,118,-120,-118,-137,-138,-139,-133,-115,-134,71,71,51,-90,-123,71,-124,71,71,118,-103,-91,-106,-107,-97,-101,-92,-112,71,-94,-110,-105,-95,-100,-102,-96,-109,-98,-111,-93,-99,-104,-108,51,51,51,-86,118,-126,-121,118,-122,-88,71,-125,-127,71,51,-82,-81,51,71,-120,71,-2,118,-2,-128,246,-85,71,118,-189,-160,71,-161,-165,-168,-167,-164,-163,-166,-162,-159,71,51,71,118,265,118,-120,71,-2,71,71,118,-86,118,71,-86,]),'DIV':([68,69,70,72,73,74,76,77,78,79,83,84,85,87,88,89,90,92,108,109,111,115,155,156,158,159,160,161,177,178,197,204,214,227,253,261,262,282,289,],[-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,119,-120,-137,-138,-139,-133,-134,-90,-123,-124,119,119,-126,-121,119,-122,-88,-125,-127,-120,119,-128,119,119,119,-120,119,119,]),'RUNE':([48,60,66,67,71,75,80,82,86,91,97,98,110,112,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,151,174,179,189,198,201,206,224,225,229,230,231,232,233,234,235,236,237,238,239,240,243,251,271,278,280,281,288,291,297,],[74,74,-114,74,-117,-116,-113,74,-118,-115,74,74,74,74,74,-103,-91,-106,-107,-97,-101,-92,-112,74,-94,-110,-105,-95,-100,-102,-96,-109,-98,-111,-93,-99,-104,-108,-86,74,74,74,74,-2,-2,-85,74,-189,-160,74,-161,-165,-168,-167,-164,-163,-166,-162,-159,74,74,74,-2,74,74,-86,74,-86,]),'TRUE':([48,60,66,67,71,75,80,82,86,91,97,98,110,112,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,151,174,179,189,198,201,206,224,225,229,230,231,232,233,234,235,236,237,238,239,240,243,251,271,278,280,281,288,291,297,],[72,72,-114,72,-117,-116,-113,72,-118,-115,72,72,72,72,72,-103,-91,-106,-107,-97,-101,-92,-112,72,-94,-110,-105,-95,-100,-102,-96,-109,-98,-111,-93,-99,-104,-108,-86,72,72,72,72,-2,-2,-85,72,-189,-160,72,-161,-165,-168,-167,-164,-163,-166,-162,-159,72,72,72,-2,72,72,-86,72,-86,]),'DOT':([68,69,70,72,73,74,76,78,79,83,85,87,88,89,90,92,109,111,156,158,160,177,178,197,214,262,],[-135,-119,-130,-136,-129,-140,-141,-131,113,-132,-120,-137,-138,-139,-133,-134,-123,-124,-126,-121,-122,-125,-127,-120,-128,-120,]),'NEQ':([68,69,70,72,73,74,76,77,78,79,83,84,85,87,88,89,90,92,108,109,111,115,155,156,158,159,160,161,177,178,197,204,214,227,253,261,262,282,289,],[-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,120,-120,-137,-138,-139,-133,-134,-90,-123,-124,120,120,-126,-121,120,-122,-88,-125,-127,-120,120,-128,120,120,120,-120,120,120,]),'CASE':([174,224,249,258,269,270,297,301,303,],[-84,-85,-191,-2,-2,280,-86,-3,-184,]),'BREAK':([151,174,224,278,288,297,],[-86,209,-85,-2,-86,-86,]),'GEQ':([68,69,70,72,73,74,76,77,78,79,83,84,85,87,88,89,90,92,108,109,111,115,155,156,158,159,160,161,177,178,197,204,214,227,253,261,262,282,289,],[-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,121,-120,-137,-138,-139,-133,-134,-90,-123,-124,121,121,-126,-121,121,-122,-88,-125,-127,-120,121,-128,121,121,121,-120,121,121,]),'DEC':([68,69,70,72,73,74,76,77,78,79,83,85,87,88,89,90,92,108,109,111,156,158,160,161,177,178,197,204,214,261,262,],[-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,-120,-137,-138,-139,-133,-134,-90,-123,-124,-126,-121,-122,-88,-125,-127,-120,241,-128,241,-120,]),'RPAREN':([23,27,33,37,39,44,45,47,50,68,69,70,72,73,74,76,77,78,79,83,84,85,87,88,89,90,92,93,94,95,96,100,101,103,106,108,109,111,112,115,139,140,145,147,153,154,156,157,158,159,160,161,163,166,167,168,170,171,172,173,177,178,179,184,214,221,222,],[-14,-26,-37,56,58,63,-49,-50,-51,-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,-30,-120,-137,-138,-139,-133,-134,139,140,-63,-64,-13,-25,144,-36,-90,-123,-124,156,160,-47,-48,164,-75,-52,-53,-126,178,-121,-31,-122,-88,183,-77,-79,-78,-80,187,-69,-68,-125,-127,214,-76,-128,-71,-70,]),'SEMICOLON':([1,5,9,11,12,13,14,18,19,20,21,22,26,32,38,45,47,50,52,53,54,56,57,58,59,63,64,68,69,70,72,73,74,76,77,78,79,81,83,84,85,87,88,89,90,92,95,96,102,108,109,111,139,140,141,142,151,152,153,154,156,158,159,160,161,174,176,177,178,180,182,189,190,191,192,193,195,196,197,199,201,202,204,205,207,208,209,210,211,212,213,214,218,219,220,223,224,228,229,241,242,244,245,248,250,251,252,254,256,257,259,261,262,263,264,271,272,273,274,275,276,278,282,283,284,285,287,288,292,293,295,297,299,302,],[4,-10,25,-21,-19,30,-18,-22,-20,-17,-11,-16,-23,-34,-15,-49,-50,-51,-42,-41,-32,-12,100,-24,101,-35,106,-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-40,-132,-30,-120,-137,-138,-139,-133,-134,-63,-64,-27,-90,-123,-124,-47,-48,-38,-39,-86,-45,-52,-53,-126,-121,-31,-122,-88,-155,-3,-125,-127,215,-5,-170,224,-146,-143,-150,-147,-153,-120,-152,-2,-142,-151,-154,-145,-149,-172,-174,-144,-83,-43,-128,-59,-60,-54,-169,-85,-3,-189,-157,-156,-171,-173,-175,-148,-155,-158,-61,-57,-58,271,-151,-120,-190,-3,281,-190,-190,-3,-176,-62,-2,291,-3,-3,-188,-179,-86,-187,-186,-177,-86,-3,-178,]),'SHR_ASSIGN':([68,69,70,72,73,74,76,77,78,79,83,85,87,88,89,90,92,108,109,111,156,158,159,160,161,177,178,197,203,204,214,261,262,],[-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,-120,-137,-138,-139,-133,-134,-90,-123,-124,-126,-121,-31,-122,-88,-125,-127,-120,235,-30,-128,-30,-120,]),'MOD':([68,69,70,72,73,74,76,77,78,79,83,84,85,87,88,89,90,92,108,109,111,115,155,156,158,159,160,161,177,178,197,204,214,227,253,261,262,282,289,],[-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,138,-120,-137,-138,-139,-133,-134,-90,-123,-124,138,138,-126,-121,138,-122,-88,-125,-127,-120,138,-128,138,138,138,-120,138,138,]),'SWITCH':([151,174,224,278,288,297,],[-86,198,-85,-2,-86,-86,]),'LTN':([68,69,70,72,73,74,76,77,78,79,83,84,85,87,88,89,90,92,108,109,111,115,155,156,158,159,160,161,177,178,197,204,214,227,253,261,262,282,289,],[-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,133,-120,-137,-138,-139,-133,-134,-90,-123,-124,133,133,-126,-121,133,-122,-88,-125,-127,-120,133,-128,133,133,133,-120,133,133,]),'AND_NOT':([68,69,70,72,73,74,76,77,78,79,83,84,85,87,88,89,90,92,108,109,111,115,155,156,158,159,160,161,177,178,197,204,214,227,253,261,262,282,289,],[-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,123,-120,-137,-138,-139,-133,-134,-90,-123,-124,123,123,-126,-121,123,-122,-88,-125,-127,-120,123,-128,123,123,123,-120,123,123,]),'COMMA':([29,45,47,50,68,69,70,72,73,74,76,77,78,79,81,83,84,85,87,88,89,90,92,95,96,102,108,109,111,139,140,141,142,145,146,147,148,153,154,156,157,158,159,160,161,166,167,168,170,171,172,173,177,178,181,184,185,186,197,203,204,214,221,222,223,248,252,261,262,],[41,-49,-50,-51,-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,114,-132,-30,-120,-137,-138,-139,-133,-134,-63,-64,114,-90,-123,-124,-47,-48,114,114,163,165,-75,169,-52,-53,-126,179,-121,-31,-122,-88,-77,-79,-78,-80,188,-69,-68,-125,-127,217,-76,-82,-81,-120,114,-30,-128,-71,-70,114,114,114,-30,41,]),'IMPORT':([4,6,25,],[-9,8,-8,]),'ASSIGN':([29,34,40,45,47,50,52,53,61,68,69,70,72,73,74,76,77,78,79,83,85,87,88,89,90,92,95,96,108,109,111,139,140,153,154,156,158,159,160,161,177,178,197,203,204,214,261,262,],[-28,48,60,-49,-50,-51,97,98,-29,-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,-120,-137,-138,-139,-133,-134,-63,-64,-90,-123,-124,-47,-48,-52,-53,-126,-121,-31,-122,-88,-125,-127,-120,234,-30,-128,-30,-120,]),'DEFINE':([29,61,194,197,262,],[-28,-29,225,-28,-28,]),'SUB_ASSIGN':([68,69,70,72,73,74,76,77,78,79,83,85,87,88,89,90,92,108,109,111,156,158,159,160,161,177,178,197,203,204,214,261,262,],[-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,-120,-137,-138,-139,-133,-134,-90,-123,-124,-126,-121,-31,-122,-88,-125,-127,-120,230,-30,-128,-30,-120,]),'SHR':([68,69,70,72,73,74,76,77,78,79,83,84,85,87,88,89,90,92,108,109,111,115,155,156,158,159,160,161,177,178,197,204,214,227,253,261,262,282,289,],[-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,126,-120,-137,-138,-139,-133,-134,-90,-123,-124,126,126,-126,-121,126,-122,-88,-125,-127,-120,126,-128,126,126,126,-120,126,126,]),'XOR':([48,60,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,97,98,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,151,155,156,158,159,160,161,174,177,178,179,189,197,198,201,204,206,214,224,225,227,229,230,231,232,233,234,235,236,237,238,239,240,243,251,253,261,262,271,278,280,281,282,288,289,291,297,],[75,75,-114,75,-135,-119,-130,-117,-136,-129,-140,-116,-141,-87,-131,-89,-113,75,-132,127,-120,-118,-137,-138,-139,-133,-115,-134,75,75,-90,-123,75,-124,75,75,127,-103,-91,-106,-107,-97,-101,-92,-112,75,-94,-110,-105,-95,-100,-102,-96,-109,-98,-111,-93,-99,-104,-108,-86,127,-126,-121,127,-122,-88,75,-125,-127,75,75,-120,75,-2,127,-2,-128,-85,75,127,-189,-160,75,-161,-165,-168,-167,-164,-163,-166,-162,-159,75,75,127,127,-120,75,-2,75,75,127,-86,127,75,-86,]),'STRING':([8,23,24,37,48,60,66,67,71,75,80,82,86,91,97,98,100,110,112,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,151,174,179,189,198,201,206,224,225,229,230,231,232,233,234,235,236,237,238,239,240,243,251,271,278,280,281,288,291,297,],[20,-14,20,20,76,76,-114,76,-117,-116,-113,76,-118,-115,76,76,-13,76,76,76,-103,-91,-106,-107,-97,-101,-92,-112,76,-94,-110,-105,-95,-100,-102,-96,-109,-98,-111,-93,-99,-104,-108,-86,76,76,76,76,-2,-2,-85,76,-189,-160,76,-161,-165,-168,-167,-164,-163,-166,-162,-159,76,76,76,-2,76,76,-86,76,-86,]),'FOR':([151,174,224,278,288,297,],[-86,201,-85,-2,-86,-86,]),'PACKAGE':([0,],[3,]),'RBRACK':([65,68,69,70,72,73,74,76,77,78,79,83,85,87,88,89,90,92,108,109,111,155,156,158,160,161,177,178,214,],[107,-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,-120,-137,-138,-139,-133,-134,-90,-123,-124,177,-126,-121,-122,-88,-125,-127,-128,]),'GTN':([68,69,70,72,73,74,76,77,78,79,83,84,85,87,88,89,90,92,108,109,111,115,155,156,158,159,160,161,177,178,197,204,214,227,253,261,262,282,289,],[-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,129,-120,-137,-138,-139,-133,-134,-90,-123,-124,129,129,-126,-121,129,-122,-88,-125,-127,-120,129,-128,129,129,129,-120,129,129,]),'ELSE':([212,264,275,],[-83,-3,286,]),'ADD':([48,60,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,97,98,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,151,155,156,158,159,160,161,174,177,178,179,189,197,198,201,204,206,214,224,225,227,229,230,231,232,233,234,235,236,237,238,239,240,243,251,253,261,262,271,278,280,281,282,288,289,291,297,],[80,80,-114,80,-135,-119,-130,-117,-136,-129,-140,-116,-141,-87,-131,-89,-113,80,-132,130,-120,-118,-137,-138,-139,-133,-115,-134,80,80,-90,-123,80,-124,80,80,130,-103,-91,-106,-107,-97,-101,-92,-112,80,-94,-110,-105,-95,-100,-102,-96,-109,-98,-111,-93,-99,-104,-108,-86,130,-126,-121,130,-122,-88,80,-125,-127,80,80,-120,80,-2,130,-2,-128,-85,80,130,-189,-160,80,-161,-165,-168,-167,-164,-163,-166,-162,-159,80,80,130,130,-120,80,-2,80,80,130,-86,130,80,-86,]),'LAND':([68,69,70,72,73,74,76,77,78,79,83,84,85,87,88,89,90,92,108,109,111,115,155,156,158,159,160,161,177,178,197,204,214,227,253,261,262,282,289,],[-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,122,-120,-137,-138,-139,-133,-134,-90,-123,-124,122,122,-126,-121,122,-122,-88,-125,-127,-120,122,-128,122,122,122,-120,122,122,]),'EQL':([68,69,70,72,73,74,76,77,78,79,83,84,85,87,88,89,90,92,108,109,111,115,155,156,158,159,160,161,177,178,197,204,214,227,253,261,262,282,289,],[-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,131,-120,-137,-138,-139,-133,-134,-90,-123,-124,131,131,-126,-121,131,-122,-88,-125,-127,-120,131,-128,131,131,131,-120,131,131,]),'LPAREN':([8,10,16,29,34,42,43,48,49,51,60,61,62,66,67,68,69,70,71,72,73,74,75,76,78,79,80,82,83,85,86,87,88,89,90,91,92,97,98,104,107,109,110,111,112,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,144,146,148,149,151,156,158,160,164,174,177,178,179,181,183,185,186,188,189,197,198,201,206,214,224,225,229,230,231,232,233,234,235,236,237,238,239,240,243,247,251,262,271,278,280,281,288,291,297,],[23,27,33,-28,49,-2,-46,82,49,49,82,-29,103,-114,82,-135,-119,-130,-117,-136,-129,-140,-116,-141,-131,112,-113,82,-132,-120,-118,-137,-138,-139,-133,-115,-134,82,82,149,49,-123,82,-124,82,82,-103,-91,-106,-107,-97,-101,-92,-112,82,-94,-110,-105,-95,-100,-102,-96,-109,-98,-111,-93,-99,-104,-108,-72,49,49,49,-86,-126,-121,-122,-73,82,-125,-127,82,49,-74,-82,-81,49,82,-120,82,-2,-2,-128,-85,82,-189,-160,82,-161,-165,-168,-167,-164,-163,-166,-162,-159,82,49,82,-120,82,-2,82,82,-86,82,-86,]),'VAR':([4,6,7,25,30,151,174,224,278,288,297,],[-9,-7,16,-8,-6,-86,16,-85,-2,-86,-86,]),'SHL':([68,69,70,72,73,74,76,77,78,79,83,84,85,87,88,89,90,92,108,109,111,115,155,156,158,159,160,161,177,178,197,204,214,227,253,261,262,282,289,],[-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,132,-120,-137,-138,-139,-133,-134,-90,-123,-124,132,132,-126,-121,132,-122,-88,-125,-127,-120,132,-128,132,132,132,-120,132,132,]),'ID':([3,8,10,15,16,17,23,27,28,29,31,33,34,37,39,41,44,48,49,51,60,61,66,67,71,75,80,82,86,91,97,98,100,101,103,106,107,110,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,146,148,149,151,162,163,165,169,174,179,181,185,186,188,189,198,201,206,209,210,215,217,224,225,229,230,231,232,233,234,235,236,237,238,239,240,243,246,247,251,265,271,278,280,281,288,291,297,],[5,24,29,-44,29,36,-14,-26,40,-28,43,-37,53,24,29,29,29,85,94,96,85,-29,-114,85,-117,-116,-113,85,-118,-115,85,85,-13,-25,148,-36,154,85,85,158,85,-103,-91,-106,-107,-97,-101,-92,-112,85,-94,-110,-105,-95,-100,-102,-96,-109,-98,-111,-93,-99,-104,-108,-56,167,170,173,-86,181,148,185,186,197,85,219,-82,-81,222,85,85,-2,-2,244,245,-55,29,-85,85,-189,-160,85,-161,-165,-168,-167,-164,-163,-166,-162,-159,85,254,257,262,276,85,-2,85,197,-86,197,-86,]),'IF':([151,174,224,278,286,288,297,],[-86,206,-85,-2,206,-86,-86,]),'AND':([48,60,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,97,98,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,151,155,156,158,159,160,161,174,177,178,179,189,197,198,201,204,206,214,224,225,227,229,230,231,232,233,234,235,236,237,238,239,240,243,251,253,261,262,271,278,280,281,282,288,289,291,297,],[86,86,-114,86,-135,-119,-130,-117,-136,-129,-140,-116,-141,-87,-131,-89,-113,86,-132,134,-120,-118,-137,-138,-139,-133,-115,-134,86,86,-90,-123,86,-124,86,86,134,-103,-91,-106,-107,-97,-101,-92,-112,86,-94,-110,-105,-95,-100,-102,-96,-109,-98,-111,-93,-99,-104,-108,-86,134,-126,-121,134,-122,-88,86,-125,-127,86,86,-120,86,-2,134,-2,-128,-85,86,134,-189,-160,86,-161,-165,-168,-167,-164,-163,-166,-162,-159,86,86,134,134,-120,86,-2,86,86,134,-86,134,86,-86,]),'MOD_ASSIGN':([68,69,70,72,73,74,76,77,78,79,83,85,87,88,89,90,92,108,109,111,156,158,159,160,161,177,178,197,203,204,214,261,262,],[-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,-120,-137,-138,-139,-133,-134,-90,-123,-124,-126,-121,-31,-122,-88,-125,-127,-120,237,-30,-128,-30,-120,]),'LBRACE':([55,68,69,70,72,73,74,76,77,78,79,83,84,85,87,88,89,90,92,99,104,105,108,109,111,144,150,151,156,158,159,160,161,164,174,177,178,183,187,196,197,199,200,201,204,205,214,224,226,227,229,241,242,248,251,252,253,260,261,262,278,281,286,288,290,291,294,297,298,],[-4,-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,-30,-120,-137,-138,-139,-133,-134,143,-67,151,-90,-123,-124,-72,-65,-86,-126,-121,-31,-122,-88,-73,-2,-125,-127,-74,-66,-153,-120,-152,151,-2,-151,-154,-128,-85,249,-180,-189,-157,-156,-175,151,-158,151,151,151,-120,-2,-155,-2,-86,-193,-155,151,-86,-194,]),'FALSE':([48,60,66,67,71,75,80,82,86,91,97,98,110,112,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,151,174,179,189,198,201,206,224,225,229,230,231,232,233,234,235,236,237,238,239,240,243,251,271,278,280,281,288,291,297,],[87,87,-114,87,-117,-116,-113,87,-118,-115,87,87,87,87,87,-103,-91,-106,-107,-97,-101,-92,-112,87,-94,-110,-105,-95,-100,-102,-96,-109,-98,-111,-93,-99,-104,-108,-86,87,87,87,87,-2,-2,-85,87,-189,-160,87,-161,-165,-168,-167,-164,-163,-166,-162,-159,87,87,87,-2,87,87,-86,87,-86,]),'STRUCT':([29,35,36,61,181,247,],[-28,55,-33,-29,216,255,]),'XOR_ASSIGN':([68,69,70,72,73,74,76,77,78,79,83,85,87,88,89,90,92,108,109,111,156,158,159,160,161,177,178,197,203,204,214,261,262,],[-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,-120,-137,-138,-139,-133,-134,-90,-123,-124,-126,-121,-31,-122,-88,-125,-127,-120,233,-30,-128,-30,-120,]),'INT':([46,48,60,66,67,71,75,80,82,86,91,97,98,110,112,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,151,174,179,189,198,201,206,224,225,229,230,231,232,233,234,235,236,237,238,239,240,243,251,271,278,280,281,288,291,297,],[65,88,88,-114,88,-117,-116,-113,88,-118,-115,88,88,88,88,88,-103,-91,-106,-107,-97,-101,-92,-112,88,-94,-110,-105,-95,-100,-102,-96,-109,-98,-111,-93,-99,-104,-108,-86,88,88,88,88,-2,-2,-85,88,-189,-160,88,-161,-165,-168,-167,-164,-163,-166,-162,-159,88,88,88,-2,88,88,-86,88,-86,]),'FLOAT':([48,60,66,67,71,75,80,82,86,91,97,98,110,112,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,151,174,179,189,198,201,206,224,225,229,230,231,232,233,234,235,236,237,238,239,240,243,251,271,278,280,281,288,291,297,],[89,89,-114,89,-117,-116,-113,89,-118,-115,89,89,89,89,89,-103,-91,-106,-107,-97,-101,-92,-112,89,-94,-110,-105,-95,-100,-102,-96,-109,-98,-111,-93,-99,-104,-108,-86,89,89,89,89,-2,-2,-85,89,-189,-160,89,-161,-165,-168,-167,-164,-163,-166,-162,-159,89,89,89,-2,89,89,-86,89,-86,]),'OR_ASSIGN':([68,69,70,72,73,74,76,77,78,79,83,85,87,88,89,90,92,108,109,111,156,158,159,160,161,177,178,197,203,204,214,261,262,],[-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,-120,-137,-138,-139,-133,-134,-90,-123,-124,-126,-121,-31,-122,-88,-125,-127,-120,236,-30,-128,-30,-120,]),'LBRACK':([29,34,49,51,61,68,69,70,72,73,74,76,78,79,83,85,87,88,89,90,92,107,109,111,146,148,149,156,158,160,177,178,181,185,186,188,197,214,247,262,],[-28,46,46,46,-29,-135,-119,-130,-136,-129,-140,-141,-131,110,-132,-120,-137,-138,-139,-133,-134,46,-123,-124,46,46,46,-126,-121,-122,-125,-127,46,-82,-81,46,-120,-128,46,-120,]),'ADD_ASSIGN':([68,69,70,72,73,74,76,77,78,79,83,85,87,88,89,90,92,108,109,111,156,158,159,160,161,177,178,197,203,204,214,261,262,],[-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,-120,-137,-138,-139,-133,-134,-90,-123,-124,-126,-121,-31,-122,-88,-125,-127,-120,240,-30,-128,-30,-120,]),'RBRACE':([143,151,162,174,175,215,224,266,267,269,277,278,279,288,296,297,300,301,303,],[-56,-86,182,-84,212,-55,-85,-182,-192,-183,287,-2,-181,-86,-3,-86,-185,-3,-184,]),'LEQ':([68,69,70,72,73,74,76,77,78,79,83,84,85,87,88,89,90,92,108,109,111,115,155,156,158,159,160,161,177,178,197,204,214,227,253,261,262,282,289,],[-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,136,-120,-137,-138,-139,-133,-134,-90,-123,-124,136,136,-126,-121,136,-122,-88,-125,-127,-120,136,-128,136,136,136,-120,136,136,]),'CONTINUE':([151,174,224,278,288,297,],[-86,210,-85,-2,-86,-86,]),'MUL_ASSIGN':([68,69,70,72,73,74,76,77,78,79,83,85,87,88,89,90,92,108,109,111,156,158,159,160,161,177,178,197,203,204,214,261,262,],[-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,-120,-137,-138,-139,-133,-134,-90,-123,-124,-126,-121,-31,-122,-88,-125,-127,-120,232,-30,-128,-30,-120,]),'NOT':([48,60,66,67,71,75,80,82,86,91,97,98,110,112,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,151,174,179,189,198,201,206,224,225,229,230,231,232,233,234,235,236,237,238,239,240,243,251,271,278,280,281,288,291,297,],[91,91,-114,91,-117,-116,-113,91,-118,-115,91,91,91,91,91,-103,-91,-106,-107,-97,-101,-92,-112,91,-94,-110,-105,-95,-100,-102,-96,-109,-98,-111,-93,-99,-104,-108,-86,91,91,91,91,-2,-2,-85,91,-189,-160,91,-161,-165,-168,-167,-164,-163,-166,-162,-159,91,91,91,-2,91,91,-86,91,-86,]),'$end':([2,4,6,7,25,30,],[0,-9,-7,-1,-8,-6,]),'TYPE':([4,6,7,25,30,151,174,224,278,288,297,],[-9,-7,17,-8,-6,-86,17,-85,-2,-86,-86,]),'OR':([68,69,70,72,73,74,76,77,78,79,83,84,85,87,88,89,90,92,108,109,111,115,155,156,158,159,160,161,177,178,197,204,214,227,253,261,262,282,289,],[-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,137,-120,-137,-138,-139,-133,-134,-90,-123,-124,137,137,-126,-121,137,-122,-88,-125,-127,-120,137,-128,137,137,137,-120,137,137,]),'INC':([68,69,70,72,73,74,76,77,78,79,83,85,87,88,89,90,92,108,109,111,156,158,160,161,177,178,197,204,214,261,262,],[-135,-119,-130,-136,-129,-140,-141,-87,-131,-89,-132,-120,-137,-138,-139,-133,-134,-90,-123,-124,-126,-121,-122,-88,-125,-127,-120,242,-128,242,-120,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Index':([79,],[109,]),'CloseBase':([152,],[176,]),'OpenF':([229,],[251,]),'Statement':([174,],[190,]),'Parameters':([62,],[104,]),'TopLevelDecl_curl':([6,],[7,]),'StructDecl':([7,174,],[11,11,]),'BinaryOp':([84,115,155,159,204,227,253,261,282,289,],[124,124,124,124,124,124,124,124,124,124,]),'SourceFile':([0,],[2,]),'ParameterList':([103,],[145,]),'ExpressionName':([198,],[226,]),'ArrayType':([34,49,51,107,146,148,149,181,188,247,],[47,47,47,47,47,47,47,47,47,47,]),'ImportDecl_curl':([4,],[6,]),'ImportPath':([8,24,37,],[22,38,22,]),'TopLevelDecl':([7,],[13,]),'Literal':([48,60,67,82,97,98,110,112,114,124,174,179,189,198,225,231,243,251,271,280,281,291,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'ForStmt':([174,],[193,]),'Arguments':([79,],[111,]),'Statement_curl':([151,288,297,],[174,174,174,]),'IdentifierList':([10,16,39,41,44,174,217,251,281,291,],[28,34,28,61,34,194,247,194,194,194,]),'IntLit':([48,60,67,82,97,98,110,112,114,124,174,179,189,198,225,231,243,251,271,280,281,291,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'VarSpec_curl':([33,],[44,]),'TypeLit':([34,49,51,107,146,148,149,181,188,247,],[45,45,45,45,45,45,45,45,45,45,]),'ImportDecl':([6,],[9,]),'ExprCaseClause':([258,269,],[269,269,]),'CloseS':([176,228,264,274,283,284,296,299,301,],[213,250,275,285,292,293,300,302,303,]),'PackageClause':([0,],[1,]),'FieldDecl':([162,],[180,]),'RuneLit':([48,60,67,82,97,98,110,112,114,124,174,179,189,198,225,231,243,251,271,280,281,291,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'CloseW':([267,],[277,]),'ImportSpec':([8,37,],[21,57,]),'Type':([34,49,51,107,146,148,149,181,188,247,],[52,93,95,153,166,168,172,218,221,256,]),'AddOp':([84,115,155,159,204,227,253,261,282,289,],[125,125,125,125,125,125,125,125,125,125,]),'UnaryOp':([48,60,67,82,97,98,110,112,114,124,174,179,189,198,225,231,243,251,271,280,281,291,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'SwitchStmt':([174,],[208,]),'MulOp':([84,115,155,159,204,227,253,261,282,289,],[128,128,128,128,128,128,128,128,128,128,]),'TypeList':([149,],[171,]),'FuncName':([31,],[42,]),'OpenW':([249,],[258,]),'ContinueStmt':([174,],[191,]),'IncDecStmt':([174,251,281,291,],[199,199,199,199,]),'FalseLit':([48,60,67,82,97,98,110,112,114,124,174,179,189,198,225,231,243,251,271,280,281,291,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'Declaration':([7,174,],[14,202,]),'ConstDecl':([7,174,],[19,19,]),'AssignOp':([203,],[231,]),'ParameterDecl':([103,163,],[147,184,]),'OpenS':([42,174,201,206,258,269,278,286,],[62,200,229,243,270,270,288,294,]),'StructType':([35,],[54,]),'ConstSpec':([10,39,],[26,59,]),'CloseF':([263,272,273,],[274,283,284,]),'OpenStructS':([55,],[99,]),'CloseStructS':([182,],[220,]),'ExprCaseClause_curl':([258,269,],[267,279,]),'IfStmt':([174,286,],[195,295,]),'UnaryExpr':([48,60,67,82,97,98,110,112,114,124,174,179,189,198,225,231,243,251,271,280,281,291,],[77,77,108,77,77,77,77,77,77,161,77,77,77,77,77,77,77,77,77,77,77,77,]),'StatementList':([151,288,297,],[175,296,301,]),'FloatLit':([48,60,67,82,97,98,110,112,114,124,174,179,189,198,225,231,243,251,271,280,281,291,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'SetBase':([15,],[31,]),'PrimaryExpr':([48,60,67,82,97,98,110,112,114,124,174,179,189,198,225,231,243,251,271,280,281,291,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'ConstSpec_curl':([27,],[39,]),'ExpressionList':([48,60,97,98,112,174,189,225,231,251,281,291,],[81,102,141,142,157,203,223,248,252,203,203,203,]),'SimpleStmt':([174,251,281,291,],[192,259,290,298,]),'Signature':([62,],[105,]),'ForClause':([251,],[260,]),'Expression':([48,60,82,97,98,110,112,114,174,179,189,198,225,231,243,251,271,280,281,291,],[84,84,115,84,84,155,84,159,204,159,84,227,84,84,253,261,282,289,204,204,]),'ShortVarDecl':([174,251,281,291,],[205,205,205,205,]),'Block':([105,200,251,253,260,261,294,],[152,228,263,264,272,273,299,]),'FieldDecl_curl':([143,],[162,]),'FunctionDecl':([7,],[12,]),'TrueLit':([48,60,67,82,97,98,110,112,114,124,174,179,189,198,225,231,243,251,271,280,281,291,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'RelOp':([84,115,155,159,204,227,253,261,282,289,],[135,135,135,135,135,135,135,135,135,135,]),'DefCaseClause':([258,269,],[266,266,]),'StructName':([17,],[35,]),'BreakStmt':([174,],[207,]),'VarDecl':([7,174,],[18,18,]),'StringLit':([48,60,67,82,97,98,110,112,114,124,174,179,189,198,225,231,243,251,271,280,281,291,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'VarSpec':([16,44,],[32,64,]),'Assignment':([174,251,281,291,],[196,196,196,196,]),'Result':([104,],[150,]),'BasicLit':([48,60,67,82,97,98,110,112,114,124,174,179,189,198,225,231,243,251,271,280,281,291,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'PointerType':([34,49,51,107,146,148,149,181,188,247,],[50,50,50,50,50,50,50,50,50,50,]),'ReturnStmt':([174,],[211,]),'ParaIdList':([103,163,],[146,146,]),'ImportSpec_curl':([23,],[37,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> SourceFile","S'",1,None,None,None),
  ('SourceFile -> PackageClause SEMICOLON ImportDecl_curl TopLevelDecl_curl','SourceFile',4,'p_SourceFile','parser.py',180),
  ('OpenS -> <empty>','OpenS',0,'p_OpenS','parser.py',210),
  ('CloseS -> <empty>','CloseS',0,'p_CloseS','parser.py',214),
  ('OpenStructS -> <empty>','OpenStructS',0,'p_OpenStructS','parser.py',218),
  ('CloseStructS -> <empty>','CloseStructS',0,'p_CloseStructS','parser.py',222),
  ('TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON','TopLevelDecl_curl',3,'p_TopLevelDecl_curl','parser.py',226),
  ('TopLevelDecl_curl -> <empty>','TopLevelDecl_curl',0,'p_TopLevelDecl_curl','parser.py',227),
  ('ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON','ImportDecl_curl',3,'p_ImportDecl_curl','parser.py',236),
  ('ImportDecl_curl -> <empty>','ImportDecl_curl',0,'p_ImportDecl_curl','parser.py',237),
  ('PackageClause -> PACKAGE ID','PackageClause',2,'p_PackageClause','parser.py',246),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_ImportDecl','parser.py',252),
  ('ImportDecl -> IMPORT LPAREN ImportSpec_curl RPAREN','ImportDecl',4,'p_ImportDecl','parser.py',253),
  ('ImportSpec_curl -> ImportSpec_curl ImportSpec SEMICOLON','ImportSpec_curl',3,'p_ImportSpec_curl','parser.py',259),
  ('ImportSpec_curl -> <empty>','ImportSpec_curl',0,'p_ImportSpec_curl','parser.py',260),
  ('ImportSpec -> ID ImportPath','ImportSpec',2,'p_ImportSpec','parser.py',266),
  ('ImportSpec -> ImportPath','ImportSpec',1,'p_ImportSpec','parser.py',267),
  ('ImportPath -> STRING','ImportPath',1,'p_ImportPath','parser.py',274),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_TopLevelDecl','parser.py',280),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_TopLevelDecl','parser.py',281),
  ('Declaration -> ConstDecl','Declaration',1,'p_Declaration','parser.py',287),
  ('Declaration -> StructDecl','Declaration',1,'p_Declaration','parser.py',288),
  ('Declaration -> VarDecl','Declaration',1,'p_Declaration','parser.py',289),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_ConstDecl','parser.py',295),
  ('ConstDecl -> CONST LPAREN ConstSpec_curl RPAREN','ConstDecl',4,'p_ConstDecl','parser.py',296),
  ('ConstSpec_curl -> ConstSpec_curl ConstSpec SEMICOLON','ConstSpec_curl',3,'p_ConstSpec_curl','parser.py',305),
  ('ConstSpec_curl -> <empty>','ConstSpec_curl',0,'p_ConstSpec_curl','parser.py',306),
  ('ConstSpec -> IdentifierList ID ASSIGN ExpressionList','ConstSpec',4,'p_ConstSpec','parser.py',314),
  ('IdentifierList -> ID','IdentifierList',1,'p_IdentifierList','parser.py',352),
  ('IdentifierList -> ID COMMA IdentifierList','IdentifierList',3,'p_IdentifierList','parser.py',353),
  ('ExpressionList -> Expression','ExpressionList',1,'p_ExpressionList','parser.py',364),
  ('ExpressionList -> ExpressionList COMMA Expression','ExpressionList',3,'p_ExpressionList','parser.py',365),
  ('StructDecl -> TYPE StructName StructType','StructDecl',3,'p_StructDecl','parser.py',401),
  ('StructName -> ID','StructName',1,'p_StructName','parser.py',409),
  ('VarDecl -> VAR VarSpec','VarDecl',2,'p_VarDecl','parser.py',423),
  ('VarDecl -> VAR LPAREN VarSpec_curl RPAREN','VarDecl',4,'p_VarDecl','parser.py',424),
  ('VarSpec_curl -> VarSpec_curl VarSpec SEMICOLON','VarSpec_curl',3,'p_VarSpec_curl','parser.py',433),
  ('VarSpec_curl -> <empty>','VarSpec_curl',0,'p_VarSpec_curl','parser.py',434),
  ('VarSpec -> IdentifierList Type ASSIGN ExpressionList','VarSpec',4,'p_VarSpec','parser.py',442),
  ('VarSpec -> IdentifierList ID ASSIGN ExpressionList','VarSpec',4,'p_VarSpec','parser.py',443),
  ('VarSpec -> IdentifierList ASSIGN ExpressionList','VarSpec',3,'p_VarSpec','parser.py',444),
  ('VarSpec -> IdentifierList ID','VarSpec',2,'p_VarSpec','parser.py',445),
  ('VarSpec -> IdentifierList Type','VarSpec',2,'p_VarSpec','parser.py',446),
  ('FunctionDecl -> FUNC SetBase FuncName OpenS Signature Block CloseBase CloseS','FunctionDecl',8,'p_FunctionDecl','parser.py',519),
  ('SetBase -> <empty>','SetBase',0,'p_SetBase','parser.py',527),
  ('CloseBase -> <empty>','CloseBase',0,'p_CloseBase','parser.py',533),
  ('FuncName -> ID','FuncName',1,'p_FuncName','parser.py',538),
  ('Type -> LPAREN Type RPAREN','Type',3,'p_Type','parser.py',550),
  ('Type -> LPAREN ID RPAREN','Type',3,'p_Type','parser.py',551),
  ('Type -> TypeLit','Type',1,'p_Type','parser.py',552),
  ('TypeLit -> ArrayType','TypeLit',1,'p_TypeLit','parser.py',569),
  ('TypeLit -> PointerType','TypeLit',1,'p_TypeLit','parser.py',570),
  ('ArrayType -> LBRACK INT RBRACK Type','ArrayType',4,'p_ArrayType','parser.py',576),
  ('ArrayType -> LBRACK INT RBRACK ID','ArrayType',4,'p_ArrayType','parser.py',577),
  ('StructType -> STRUCT OpenStructS LBRACE FieldDecl_curl RBRACE CloseStructS','StructType',6,'p_StructType','parser.py',595),
  ('FieldDecl_curl -> FieldDecl_curl FieldDecl SEMICOLON','FieldDecl_curl',3,'p_FieldDecl_curl','parser.py',601),
  ('FieldDecl_curl -> <empty>','FieldDecl_curl',0,'p_FieldDecl_curl','parser.py',602),
  ('FieldDecl -> ID COMMA IdentifierList Type','FieldDecl',4,'p_FieldDecl','parser.py',608),
  ('FieldDecl -> ID COMMA IdentifierList ID','FieldDecl',4,'p_FieldDecl','parser.py',609),
  ('FieldDecl -> ID Type','FieldDecl',2,'p_FieldDecl','parser.py',610),
  ('FieldDecl -> ID ID','FieldDecl',2,'p_FieldDecl','parser.py',611),
  ('FieldDecl -> ID STRUCT MUL ID','FieldDecl',4,'p_FieldDecl','parser.py',612),
  ('FieldDecl -> ID COMMA IdentifierList STRUCT MUL ID','FieldDecl',6,'p_FieldDecl','parser.py',613),
  ('PointerType -> MUL Type','PointerType',2,'p_PointerType','parser.py',683),
  ('PointerType -> MUL ID','PointerType',2,'p_PointerType','parser.py',684),
  ('Signature -> Parameters Result','Signature',2,'p_Signature','parser.py',701),
  ('Result -> LPAREN TypeList RPAREN','Result',3,'p_Result','parser.py',707),
  ('Result -> <empty>','Result',0,'p_Result','parser.py',708),
  ('TypeList -> ID','TypeList',1,'p_TypeList','parser.py',727),
  ('TypeList -> Type','TypeList',1,'p_TypeList','parser.py',728),
  ('TypeList -> TypeList COMMA ID','TypeList',3,'p_TypeList','parser.py',729),
  ('TypeList -> TypeList COMMA Type','TypeList',3,'p_TypeList','parser.py',730),
  ('Parameters -> LPAREN RPAREN','Parameters',2,'p_Parameters','parser.py',758),
  ('Parameters -> LPAREN ParameterList RPAREN','Parameters',3,'p_Parameters','parser.py',759),
  ('Parameters -> LPAREN ParameterList COMMA RPAREN','Parameters',4,'p_Parameters','parser.py',760),
  ('ParameterList -> ParameterDecl','ParameterList',1,'p_ParameterList','parser.py',779),
  ('ParameterList -> ParameterList COMMA ParameterDecl','ParameterList',3,'p_ParameterList','parser.py',780),
  ('ParameterDecl -> ParaIdList Type','ParameterDecl',2,'p_ParameterDecl','parser.py',795),
  ('ParameterDecl -> ID Type','ParameterDecl',2,'p_ParameterDecl','parser.py',796),
  ('ParameterDecl -> ParaIdList ID','ParameterDecl',2,'p_ParameterDecl','parser.py',797),
  ('ParameterDecl -> ID ID','ParameterDecl',2,'p_ParameterDecl','parser.py',798),
  ('ParaIdList -> ID COMMA ID','ParaIdList',3,'p_ParaIdList','parser.py',847),
  ('ParaIdList -> ParaIdList COMMA ID','ParaIdList',3,'p_ParaIdList','parser.py',848),
  ('Block -> LBRACE StatementList RBRACE','Block',3,'p_Block','parser.py',860),
  ('StatementList -> Statement_curl','StatementList',1,'p_StatementList','parser.py',866),
  ('Statement_curl -> Statement_curl Statement SEMICOLON','Statement_curl',3,'p_Statement_curl','parser.py',872),
  ('Statement_curl -> <empty>','Statement_curl',0,'p_Statement_curl','parser.py',873),
  ('Expression -> UnaryExpr','Expression',1,'p_Expression','parser.py',881),
  ('Expression -> Expression BinaryOp UnaryExpr','Expression',3,'p_Expression','parser.py',882),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_UnaryExpr','parser.py',912),
  ('UnaryExpr -> UnaryOp UnaryExpr','UnaryExpr',2,'p_UnaryExpr','parser.py',913),
  ('BinaryOp -> LOR','BinaryOp',1,'p_BinaryOp','parser.py',955),
  ('BinaryOp -> LAND','BinaryOp',1,'p_BinaryOp','parser.py',956),
  ('BinaryOp -> RelOp','BinaryOp',1,'p_BinaryOp','parser.py',957),
  ('BinaryOp -> AddOp','BinaryOp',1,'p_BinaryOp','parser.py',958),
  ('BinaryOp -> MulOp','BinaryOp',1,'p_BinaryOp','parser.py',959),
  ('RelOp -> EQL','RelOp',1,'p_RelOp','parser.py',969),
  ('RelOp -> NEQ','RelOp',1,'p_RelOp','parser.py',970),
  ('RelOp -> LTN','RelOp',1,'p_RelOp','parser.py',971),
  ('RelOp -> LEQ','RelOp',1,'p_RelOp','parser.py',972),
  ('RelOp -> GTN','RelOp',1,'p_RelOp','parser.py',973),
  ('RelOp -> GEQ','RelOp',1,'p_RelOp','parser.py',974),
  ('AddOp -> ADD','AddOp',1,'p_AddOp','parser.py',982),
  ('AddOp -> SUB','AddOp',1,'p_AddOp','parser.py',983),
  ('AddOp -> OR','AddOp',1,'p_AddOp','parser.py',984),
  ('AddOp -> XOR','AddOp',1,'p_AddOp','parser.py',985),
  ('MulOp -> MUL','MulOp',1,'p_MulOp','parser.py',992),
  ('MulOp -> DIV','MulOp',1,'p_MulOp','parser.py',993),
  ('MulOp -> MOD','MulOp',1,'p_MulOp','parser.py',994),
  ('MulOp -> SHL','MulOp',1,'p_MulOp','parser.py',995),
  ('MulOp -> SHR','MulOp',1,'p_MulOp','parser.py',996),
  ('MulOp -> AND','MulOp',1,'p_MulOp','parser.py',997),
  ('MulOp -> AND_NOT','MulOp',1,'p_MulOp','parser.py',998),
  ('UnaryOp -> ADD','UnaryOp',1,'p_UnaryOp','parser.py',1005),
  ('UnaryOp -> SUB','UnaryOp',1,'p_UnaryOp','parser.py',1006),
  ('UnaryOp -> NOT','UnaryOp',1,'p_UnaryOp','parser.py',1007),
  ('UnaryOp -> XOR','UnaryOp',1,'p_UnaryOp','parser.py',1008),
  ('UnaryOp -> MUL','UnaryOp',1,'p_UnaryOp','parser.py',1009),
  ('UnaryOp -> AND','UnaryOp',1,'p_UnaryOp','parser.py',1010),
  ('PrimaryExpr -> Literal','PrimaryExpr',1,'p_PrimaryExpr','parser.py',1018),
  ('PrimaryExpr -> ID','PrimaryExpr',1,'p_PrimaryExpr','parser.py',1019),
  ('PrimaryExpr -> PrimaryExpr DOT ID','PrimaryExpr',3,'p_PrimaryExpr','parser.py',1020),
  ('PrimaryExpr -> LPAREN Expression RPAREN','PrimaryExpr',3,'p_PrimaryExpr','parser.py',1021),
  ('PrimaryExpr -> PrimaryExpr Index','PrimaryExpr',2,'p_PrimaryExpr','parser.py',1022),
  ('PrimaryExpr -> PrimaryExpr Arguments','PrimaryExpr',2,'p_PrimaryExpr','parser.py',1023),
  ('Index -> LBRACK Expression RBRACK','Index',3,'p_Index','parser.py',1123),
  ('Arguments -> LPAREN RPAREN','Arguments',2,'p_Arguments','parser.py',1132),
  ('Arguments -> LPAREN ExpressionList RPAREN','Arguments',3,'p_Arguments','parser.py',1133),
  ('Arguments -> LPAREN ExpressionList COMMA RPAREN','Arguments',4,'p_Arguments','parser.py',1134),
  ('Literal -> BasicLit','Literal',1,'p_Literal','parser.py',1147),
  ('BasicLit -> IntLit','BasicLit',1,'p_BasicLit','parser.py',1153),
  ('BasicLit -> FloatLit','BasicLit',1,'p_BasicLit','parser.py',1154),
  ('BasicLit -> RuneLit','BasicLit',1,'p_BasicLit','parser.py',1155),
  ('BasicLit -> StringLit','BasicLit',1,'p_BasicLit','parser.py',1156),
  ('BasicLit -> TrueLit','BasicLit',1,'p_BasicLit','parser.py',1157),
  ('BasicLit -> FalseLit','BasicLit',1,'p_BasicLit','parser.py',1158),
  ('TrueLit -> TRUE','TrueLit',1,'p_TrueLit','parser.py',1164),
  ('FalseLit -> FALSE','FalseLit',1,'p_FalseLit','parser.py',1172),
  ('IntLit -> INT','IntLit',1,'p_IntLit','parser.py',1180),
  ('FloatLit -> FLOAT','FloatLit',1,'p_FloatLit','parser.py',1188),
  ('RuneLit -> RUNE','RuneLit',1,'p_RuneLit','parser.py',1196),
  ('StringLit -> STRING','StringLit',1,'p_StringLit','parser.py',1204),
  ('Statement -> Declaration','Statement',1,'p_Statement','parser.py',1212),
  ('Statement -> SimpleStmt','Statement',1,'p_Statement','parser.py',1213),
  ('Statement -> ReturnStmt','Statement',1,'p_Statement','parser.py',1214),
  ('Statement -> BreakStmt','Statement',1,'p_Statement','parser.py',1215),
  ('Statement -> ContinueStmt','Statement',1,'p_Statement','parser.py',1216),
  ('Statement -> IfStmt','Statement',1,'p_Statement','parser.py',1217),
  ('Statement -> OpenS Block CloseS','Statement',3,'p_Statement','parser.py',1218),
  ('Statement -> SwitchStmt','Statement',1,'p_Statement','parser.py',1219),
  ('Statement -> ForStmt','Statement',1,'p_Statement','parser.py',1220),
  ('SimpleStmt -> Expression','SimpleStmt',1,'p_SimpleStmt','parser.py',1229),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_SimpleStmt','parser.py',1230),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_SimpleStmt','parser.py',1231),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_SimpleStmt','parser.py',1232),
  ('SimpleStmt -> <empty>','SimpleStmt',0,'p_SimpleStmt','parser.py',1233),
  ('IncDecStmt -> Expression INC','IncDecStmt',2,'p_IncDecStmt','parser.py',1248),
  ('IncDecStmt -> Expression DEC','IncDecStmt',2,'p_IncDecStmt','parser.py',1249),
  ('Assignment -> ExpressionList AssignOp ExpressionList','Assignment',3,'p_Assignment','parser.py',1276),
  ('AssignOp -> ADD_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',1321),
  ('AssignOp -> SUB_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',1322),
  ('AssignOp -> MUL_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',1323),
  ('AssignOp -> DIV_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',1324),
  ('AssignOp -> MOD_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',1325),
  ('AssignOp -> OR_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',1326),
  ('AssignOp -> XOR_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',1327),
  ('AssignOp -> SHL_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',1328),
  ('AssignOp -> SHR_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',1329),
  ('AssignOp -> ASSIGN','AssignOp',1,'p_AssignOp','parser.py',1330),
  ('ReturnStmt -> RETURN ExpressionList','ReturnStmt',2,'p_ReturnStmt','parser.py',1338),
  ('ReturnStmt -> RETURN','ReturnStmt',1,'p_ReturnStmt','parser.py',1339),
  ('BreakStmt -> BREAK ID','BreakStmt',2,'p_BreakStmt','parser.py',1361),
  ('BreakStmt -> BREAK','BreakStmt',1,'p_BreakStmt','parser.py',1362),
  ('ContinueStmt -> CONTINUE ID','ContinueStmt',2,'p_ContinueStmt','parser.py',1371),
  ('ContinueStmt -> CONTINUE','ContinueStmt',1,'p_ContinueStmt','parser.py',1372),
  ('ShortVarDecl -> IdentifierList DEFINE ExpressionList','ShortVarDecl',3,'p_ShortVarDecl','parser.py',1381),
  ('IfStmt -> IF OpenS Expression Block CloseS','IfStmt',5,'p_IfStmt','parser.py',1411),
  ('IfStmt -> IF OpenS Expression Block CloseS ELSE IfStmt','IfStmt',7,'p_IfStmt','parser.py',1412),
  ('IfStmt -> IF OpenS Expression Block CloseS ELSE OpenS Block CloseS','IfStmt',9,'p_IfStmt','parser.py',1413),
  ('SwitchStmt -> SWITCH ExpressionName LBRACE OpenW ExprCaseClause_curl CloseW RBRACE','SwitchStmt',7,'p_SwitchStmt','parser.py',1445),
  ('ExpressionName -> Expression','ExpressionName',1,'p_ExpressionName','parser.py',1456),
  ('ExprCaseClause_curl -> ExprCaseClause ExprCaseClause_curl','ExprCaseClause_curl',2,'p_ExprCaseClause_curl','parser.py',1472),
  ('ExprCaseClause_curl -> DefCaseClause','ExprCaseClause_curl',1,'p_ExprCaseClause_curl','parser.py',1473),
  ('ExprCaseClause_curl -> ExprCaseClause','ExprCaseClause_curl',1,'p_ExprCaseClause_curl','parser.py',1474),
  ('ExprCaseClause -> OpenS CASE Expression COLON StatementList CloseS','ExprCaseClause',6,'p_ExprCaseClause','parser.py',1485),
  ('DefCaseClause -> DEFAULT COLON OpenS StatementList CloseS','DefCaseClause',5,'p_DefCaseClause','parser.py',1508),
  ('ForStmt -> FOR OpenS OpenF Expression Block CloseF CloseS','ForStmt',7,'p_ForStmt','parser.py',1515),
  ('ForStmt -> FOR OpenS OpenF ForClause Block CloseF CloseS','ForStmt',7,'p_ForStmt','parser.py',1516),
  ('ForStmt -> FOR OpenS OpenF Block CloseF CloseS','ForStmt',6,'p_ForStmt','parser.py',1517),
  ('OpenF -> <empty>','OpenF',0,'p_OpenF','parser.py',1549),
  ('CloseF -> <empty>','CloseF',0,'p_CloseF','parser.py',1558),
  ('OpenW -> <empty>','OpenW',0,'p_OpenW','parser.py',1565),
  ('CloseW -> <empty>','CloseW',0,'p_CloseW','parser.py',1572),
  ('ForClause -> SimpleStmt SEMICOLON SEMICOLON SimpleStmt','ForClause',4,'p_ForClause','parser.py',1579),
  ('ForClause -> SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt','ForClause',5,'p_ForClause','parser.py',1580),
]
