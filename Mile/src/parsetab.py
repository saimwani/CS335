
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLPARENleftLBRACEleftIDleftDEFINEleftCOMMAleftLBRACKleftRBRACKleftELLIPSISleftDOTleftSEMICOLONleftCOLONleftINTleftFLOATleftSTRINGleftBREAKleftCONTINUEleftRETURNleftLORleftLANDleftEQLNEQLTNLEQGTNGEQleftADDSUBORXORleftMULDIVMODANDAND_NOTSHLSHRADD ADD_ASSIGN AND AND_ASSIGN AND_NOT AND_NOT_ASSIGN ARROW ASSIGN BREAK CASE CHAN COLON COMMA CONST CONTINUE DEC DEFAULT DEFER DEFINE DIV DIV_ASSIGN DOT ELLIPSIS ELSE EQL FALLTHROUGH FLOAT FOR FUNC GEQ GO GOTO GTN ID IF IMAG IMPORT INC INT LAND LBRACE LBRACK LEQ LOR LPAREN LTN MAP MOD MOD_ASSIGN MUL MUL_ASSIGN NEQ NOT OR OR_ASSIGN PACKAGE RANGE RBRACE RBRACK RETURN RPAREN RUNE SEMICOLON SHL SHL_ASSIGN SHR SHR_ASSIGN STRING STRUCT SUB SUB_ASSIGN SWITCH TYPE TYPEASSERT TYPECAST VAR XOR XOR_ASSIGN\n    SourceFile : PackageClause SEMICOLON ImportDecl_curl TopLevelDecl_curl\n    \n    TopLevelDecl_curl : TopLevelDecl_curl TopLevelDecl SEMICOLON\n                      |\n    \n    ImportDecl_curl : ImportDecl_curl ImportDecl SEMICOLON\n                    |\n    \n    PackageClause : PACKAGE ID\n    \n    ImportDecl : IMPORT ImportSpec\n               | IMPORT LPAREN ImportSpec_curl RPAREN\n    \n    ImportSpec_curl : ImportSpec_curl ImportSpec SEMICOLON\n                    |\n    \n    ImportSpec : DOT ImportPath\n               | ID ImportPath\n               | ImportPath\n    \n    ImportPath : STRING\n    \n    TopLevelDecl : Declaration\n                 | FunctionDecl\n    \n    Declaration : ConstDecl\n                | TypeDecl\n                | VarDecl\n    \n    ConstDecl : CONST ConstSpec\n              | CONST LPAREN ConstSpec_curl RPAREN\n    \n    ConstSpec_curl : ConstSpec_curl ConstSpec SEMICOLON\n                   |\n    \n    ConstSpec : IdentifierList ID ASSIGN ExpressionList\n              | IdentifierList ID DOT ID ASSIGN ExpressionList\n              | IdentifierList Type ASSIGN ExpressionList\n              | IdentifierList ASSIGN ExpressionList\n              | IdentifierList\n    \n    IdentifierList : ID\n                   | ID COMMA IdentifierList\n    \n    ExpressionList : Expression\n                   | ExpressionList COMMA Expression\n    \n    TypeDecl : TYPE TypeSpec\n             | TYPE LPAREN TypeSpec_curl RPAREN\n    \n    TypeSpec_curl : TypeSpec_curl TypeSpec SEMICOLON\n                  |\n    \n    TypeSpec : AliasDecl\n             | TypeDef\n    \n    AliasDecl : ID ASSIGN Type\n              | ID ASSIGN ID\n              | ID ASSIGN ID DOT ID\n    \n    TypeDef : ID Type\n            | ID ID\n            | ID ID DOT ID\n    \n    VarDecl : VAR VarSpec\n            | VAR LPAREN VarSpec_curl RPAREN\n    \n    VarSpec_curl : VarSpec_curl VarSpec SEMICOLON\n                 |\n    \n    VarSpec : IdentifierList Type ASSIGN ExpressionList\n            | IdentifierList ID ASSIGN ExpressionList\n            | IdentifierList ID DOT ID ASSIGN ExpressionList\n            | IdentifierList ASSIGN ExpressionList\n            | IdentifierList ID\n            | IdentifierList ID DOT ID\n            | IdentifierList Type\n    \n    FunctionDecl : FUNC ID Signature Block\n                 | FUNC ID Signature\n    \n    Type : LPAREN Type RPAREN\n         | LPAREN ID RPAREN\n         | LPAREN ID DOT ID RPAREN\n         | TypeLit\n    \n    TypeLit : ArrayType\n            | StructType\n            | PointerType\n            | FunctionType\n            | SliceType\n            | MapType\n    \n    ArrayType : LBRACK Expression RBRACK Type\n              | LBRACK Expression RBRACK ID\n              | LBRACK Expression RBRACK ID DOT ID\n    \n    SliceType : LBRACK RBRACK Type\n              | LBRACK RBRACK ID\n              | LBRACK RBRACK ID DOT ID\n    \n    StructType : STRUCT LBRACE FieldDecl_curl RBRACE\n    \n    FieldDecl_curl : FieldDecl_curl FieldDecl SEMICOLON\n                   |\n    \n    FieldDecl : ID COMMA IdentifierList Type\n              | ID COMMA IdentifierList ID\n              | ID COMMA IdentifierList ID DOT ID\n              | ID Type\n              | ID ID\n              | ID ID DOT ID\n              | EmbeddedField\n              | ID COMMA IdentifierList Type Tag\n              | ID Type Tag\n              | ID COMMA IdentifierList ID Tag\n              | ID ID Tag\n              | ID COMMA IdentifierList ID DOT ID Tag\n              | ID ID DOT ID Tag\n              | EmbeddedField Tag\n    \n    EmbeddedField : MUL ID\n                  | MUL ID DOT ID\n                  | ID\n                  | ID DOT ID\n    \n    Tag : STRING\n    \n    PointerType : MUL Type\n                | MUL ID\n                | MUL ID DOT ID\n    \n    FunctionType : FUNC Signature\n    \n    Signature : Parameters Result\n    \n    Result : Parameters\n           | Type\n           | ID\n           | ID DOT ID\n           | CHAN\n    \n    Parameters : LPAREN RPAREN\n               | LPAREN ParameterList RPAREN\n               | LPAREN ParameterList COMMA RPAREN\n    \n    ParameterList : ParameterDecl\n                  | CHAN ID\n                  | CHAN ID DOT ID\n                  | CHAN Type\n                  | ParameterList COMMA CHAN ID\n                  | ParameterList COMMA CHAN ID DOT ID\n                  | ParameterList COMMA CHAN Type\n                  | ParameterList COMMA ParameterDecl\n    \n    ParaIdList : ID COMMA ID\n               | ParaIdList COMMA ID\n    \n    ParameterDecl : ParaIdList ELLIPSIS Type\n                  | ParaIdList Type\n                  | ID ELLIPSIS Type\n                  | ID Type\n                  | ELLIPSIS Type\n                  | ParaIdList ELLIPSIS ID\n                  | ParaIdList ID\n                  | ID ELLIPSIS ID\n                  | ID ID\n                  | ELLIPSIS ID\n                  | ParaIdList ELLIPSIS ID DOT ID\n                  | ParaIdList ID DOT ID\n                  | ID ELLIPSIS ID DOT ID\n                  | ID ID DOT ID\n                  | ELLIPSIS ID DOT ID\n\n    \n    MapType : MAP LBRACK Type RBRACK Type\n            | MAP LBRACK Type RBRACK ID\n            | MAP LBRACK Type RBRACK ID DOT ID\n            | MAP LBRACK ID RBRACK Type\n            | MAP LBRACK ID RBRACK ID\n            | MAP LBRACK ID RBRACK ID DOT ID\n            | MAP LBRACK ID DOT ID RBRACK Type\n            | MAP LBRACK ID DOT ID RBRACK ID\n            | MAP LBRACK ID DOT ID RBRACK ID DOT ID\n    \n    Block : LBRACE StatementList RBRACE\n    \n    StatementList : Statement_curl\n    \n    Statement_curl : Statement_curl Statement SEMICOLON\n                   |\n    \n    Expression : UnaryExpr\n               | Expression BinaryOp UnaryExpr\n    \n    UnaryExpr : PrimaryExpr\n              | UnaryOp UnaryExpr\n    \n    BinaryOp : LOR\n             | LAND\n             | RelOp\n             | AddOp\n             | MulOp\n    \n    RelOp : EQL\n         | NEQ\n         | LTN\n         | LEQ\n         | GTN\n         | GEQ\n    \n    AddOp : ADD\n          | SUB\n          | OR\n          | XOR\n    \n    MulOp : MUL\n          | DIV\n          | MOD\n          | SHL\n          | SHR\n          | AND\n          | AND_NOT\n    \n    UnaryOp : ADD\n            | SUB\n            | NOT\n            | XOR\n            | MUL\n            | AND\n            | ARROW\n    \n    PrimaryExpr : Literal\n                | ID\n                | ID DOT ID\n                | LPAREN Expression RPAREN\n                | Conversion\n                | PrimaryExpr Selector\n                | PrimaryExpr Index\n                | PrimaryExpr Slice\n                | PrimaryExpr TypeAssertion\n                | PrimaryExpr Arguments\n    \n    Selector : DOT ID\n    \n    Index : LBRACK Expression RBRACK\n    \n    Slice : LBRACK Expression COLON Expression RBRACK\n          | LBRACK COLON Expression RBRACK\n          | LBRACK Expression COLON RBRACK\n          | LBRACK COLON RBRACK\n          | LBRACK Expression COLON Expression COLON Expression RBRACK\n          | LBRACK COLON Expression COLON Expression RBRACK\n    \n    TypeAssertion : TYPEASSERT LPAREN Type RPAREN\n                  | TYPEASSERT LPAREN ID RPAREN\n                  | TYPEASSERT LPAREN ID DOT ID RPAREN\n    \n    Arguments : LPAREN RPAREN\n              | LPAREN ExpressionList RPAREN\n              | LPAREN ExpressionList COMMA RPAREN\n              | LPAREN ExpressionList ELLIPSIS RPAREN\n              | LPAREN ExpressionList ELLIPSIS COMMA RPAREN\n              | LPAREN Type RPAREN\n              | LPAREN Type COMMA RPAREN\n              | LPAREN Type ELLIPSIS RPAREN\n              | LPAREN Type ELLIPSIS COMMA RPAREN\n              | LPAREN Type COMMA ExpressionList RPAREN\n              | LPAREN Type COMMA ExpressionList COMMA RPAREN\n              | LPAREN Type COMMA ExpressionList ELLIPSIS RPAREN\n              | LPAREN Type COMMA ExpressionList ELLIPSIS COMMA RPAREN\n              | LPAREN ID RPAREN\n              | LPAREN ID COMMA RPAREN\n              | LPAREN ID ELLIPSIS RPAREN\n              | LPAREN ID ELLIPSIS COMMA RPAREN\n              | LPAREN ID COMMA ExpressionList RPAREN\n              | LPAREN ID COMMA ExpressionList COMMA RPAREN\n              | LPAREN ID COMMA ExpressionList ELLIPSIS RPAREN\n              | LPAREN ID COMMA ExpressionList ELLIPSIS COMMA RPAREN\n              | LPAREN ID DOT ID RPAREN\n              | LPAREN ID DOT ID COMMA RPAREN\n              | LPAREN ID DOT ID ELLIPSIS RPAREN\n              | LPAREN ID DOT ID ELLIPSIS COMMA RPAREN\n              | LPAREN ID DOT ID COMMA ExpressionList RPAREN\n              | LPAREN ID DOT ID COMMA ExpressionList COMMA RPAREN\n              | LPAREN ID DOT ID COMMA ExpressionList ELLIPSIS RPAREN\n              | LPAREN ID DOT ID COMMA ExpressionList ELLIPSIS COMMA RPAREN\n    \n    Conversion : TYPECAST Type LPAREN Expression COMMA RPAREN\n               | TYPECAST Type LPAREN Expression RPAREN\n               | TYPECAST ID LPAREN Expression COMMA RPAREN\n               | TYPECAST ID LPAREN Expression RPAREN\n    \n    Literal : BasicLit\n            | CompositeLit\n            | FunctionLit\n    \n    BasicLit : INT\n             | FLOAT\n             | IMAG\n             | RUNE\n             | STRING\n    \n    CompositeLit : StructType LiteralValue\n                 | ArrayType LiteralValue\n                 | LBRACK ELLIPSIS RBRACK Type LiteralValue\n                 | LBRACK ELLIPSIS RBRACK ID LiteralValue\n                 | LBRACK ELLIPSIS RBRACK ID DOT ID LiteralValue\n                 | SliceType  LiteralValue\n                 | MapType LiteralValue\n    \n    LiteralValue : LBRACE ElementList COMMA RBRACE\n                 | LBRACE ElementList RBRACE\n                 | LBRACE RBRACE\n    \n    ElementList : KeyedElement\n                | ElementList COMMA KeyedElement\n    \n    KeyedElement : ID COLON Element\n                 | Expression COLON Element\n                 | LiteralValue COLON Element\n                 | Element\n    \n    Element : Expression\n            | LiteralValue\n    \n    FunctionLit : FUNC Signature Block\n    \n    Statement : Declaration\n              | LabelledStmt\n              | SimpleStmt\n              | GoStmt\n              | ReturnStmt\n              | BreakStmt\n              | ContinueStmt\n              | GotoStmt\n              | FallthroughStmt\n              | IfStmt\n              | Block\n              | SwitchStmt\n              | ForStmt\n              | DeferStmt\n    \n    SimpleStmt : Expression\n               | IncDecStmt\n               | Assignment\n               | ShortVarDecl\n               |\n    \n    IncDecStmt : Expression INC\n               | Expression DEC\n    \n    Assignment : ExpressionList AssignOp ExpressionList\n    \n    AssignOp : ADD_ASSIGN\n             | SUB_ASSIGN\n             | MUL_ASSIGN\n             | DIV_ASSIGN\n             | MOD_ASSIGN\n             | AND_ASSIGN\n             | AND_NOT_ASSIGN\n             | OR_ASSIGN\n             | XOR_ASSIGN\n             | SHL_ASSIGN\n             | SHR_ASSIGN\n             | ASSIGN\n    \n    LabelledStmt : ID COLON Statement\n    \n    GoStmt : GO Expression\n    \n    ReturnStmt : RETURN ExpressionList\n               | RETURN\n    \n    BreakStmt : BREAK ID\n              | BREAK\n    \n    ContinueStmt : CONTINUE ID\n                 | CONTINUE\n    \n    GotoStmt : GOTO ID\n    \n    FallthroughStmt : FALLTHROUGH\n    \n    DeferStmt : DEFER Expression\n    \n    ShortVarDecl : IdentifierList DEFINE ExpressionList\n    \n    IfStmt : IF Expression Block\n           | IF SimpleStmt SEMICOLON Expression Block\n           | IF Expression Block ELSE IfStmt\n           | IF Expression Block ELSE Block\n           | IF SimpleStmt SEMICOLON Expression Block ELSE Block\n           | IF SimpleStmt SEMICOLON Expression Block ELSE IfStmt\n    \n    SwitchStmt : ExprSwitchStmt\n    \n        ExprSwitchStmt : SWITCH LBRACE ExprCaseClause_curl RBRACE\n                       | SWITCH SimpleStmt SEMICOLON LBRACE ExprCaseClause_curl RBRACE\n                       | SWITCH Expression LBRACE ExprCaseClause_curl RBRACE\n                       | SWITCH SimpleStmt SEMICOLON Expression LBRACE ExprCaseClause_curl RBRACE\n    \n    ExprCaseClause_curl : ExprCaseClause_curl ExprCaseClause\n                        |\n    \n    ExprCaseClause : ExprSwitchCase COLON StatementList\n    \n    ExprSwitchCase : CASE ExpressionList\n                   | DEFAULT\n    \n    ForStmt : FOR Expression Block\n            | FOR ForClause Block\n            | FOR RangeClause Block\n            | FOR Block\n    \n    ForClause : SimpleStmt SEMICOLON SEMICOLON SimpleStmt\n              | SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt\n    \n    RangeClause : IdentifierList DEFINE RANGE Expression\n                | ExpressionList ASSIGN RANGE Expression\n                | RANGE Expression\n    '
    
_lr_action_items = {'RETURN':([134,223,380,394,551,],[-146,298,-145,298,-146,]),'CONST':([4,6,7,26,31,134,223,380,394,551,],[-5,-3,10,-4,-2,-146,10,-145,10,-146,]),'FUNC':([4,6,7,26,29,30,31,35,40,47,50,54,58,63,67,71,80,83,84,85,88,89,94,98,101,104,105,108,114,116,118,120,121,122,124,125,127,131,134,138,140,153,156,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,189,193,206,209,215,219,221,223,245,246,247,248,249,253,260,262,265,266,267,272,278,280,282,286,292,295,298,304,311,322,325,327,329,330,331,340,345,347,352,380,383,388,394,398,399,400,401,402,403,404,405,406,407,408,409,410,436,455,459,467,468,471,475,479,486,491,497,499,510,512,513,517,544,551,560,],[-5,-3,15,-4,45,-29,-2,45,45,45,81,45,81,45,81,45,81,-174,81,-179,-177,-175,-176,-173,81,-178,45,81,81,45,45,-30,-106,45,45,45,45,45,-146,81,81,81,81,-163,-151,-166,-167,-157,-161,-152,-172,81,-154,-170,-165,-155,-160,-162,-156,-169,-158,-171,-153,-159,-164,-168,81,251,45,-107,45,45,45,81,81,81,45,45,81,-177,251,81,81,45,45,45,-108,45,-118,-117,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-145,81,81,81,-284,81,-285,-291,-294,-293,-290,-287,-292,-288,-286,-283,-289,81,45,45,81,81,-294,81,81,81,81,81,81,81,81,81,81,81,-146,81,]),'DEFAULT':([223,380,397,476,477,515,516,521,547,548,551,565,567,],[-144,-145,-319,-319,520,-319,520,-318,-319,520,-146,520,-320,]),'TYPEASSERT':([82,87,90,91,93,95,96,103,106,107,109,110,154,155,157,186,187,190,191,192,195,233,235,239,242,244,254,261,263,310,324,328,338,341,343,346,349,350,386,416,419,426,428,430,431,433,434,437,438,441,442,444,446,449,450,452,481,482,487,488,489,492,493,494,495,498,524,525,526,528,530,531,533,534,536,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-181,-237,-238,188,-235,-243,-247,-248,-186,-187,-185,-188,-189,-242,-260,-251,-181,-183,-182,-201,-181,-190,-181,-143,-250,-195,-191,-206,-202,-181,-214,-181,-181,-249,-231,-233,-244,-245,-198,-199,-193,-194,-208,-207,-203,-204,-216,-215,-182,-230,-232,-192,-209,-210,-205,-182,-217,-218,-222,-246,-200,-197,-212,-211,-220,-219,-223,-224,-196,-213,-221,-226,-225,-228,-227,-229,]),'ARROW':([50,58,67,80,83,84,85,88,89,94,98,101,104,108,114,134,138,140,153,156,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,189,193,223,245,246,249,253,260,262,265,292,295,298,304,311,322,325,327,329,330,331,340,345,347,352,380,383,388,394,398,399,400,401,402,403,404,405,406,407,408,409,410,436,467,468,471,475,479,486,491,497,499,510,512,513,517,544,551,560,],[85,85,85,85,-174,85,-179,-177,-175,-176,-173,85,-178,85,85,-146,85,85,85,85,-163,-151,-166,-167,-157,-161,-152,-172,85,-154,-170,-165,-155,-160,-162,-156,-169,-158,-171,-153,-159,-164,-168,85,85,85,85,85,85,-177,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-145,85,85,85,-284,85,-285,-291,-294,-293,-290,-287,-292,-288,-286,-283,-289,85,85,85,-294,85,85,85,85,85,85,85,85,85,85,85,-146,85,]),'GOTO':([134,223,380,394,551,],[-146,320,-145,320,-146,]),'SHL_ASSIGN':([82,87,90,91,93,95,96,97,103,106,107,109,110,152,154,155,157,186,187,190,191,192,195,233,235,241,242,243,244,254,263,310,313,314,324,328,338,341,343,346,350,386,389,391,396,416,417,419,426,428,430,431,433,434,437,438,441,442,444,446,449,450,481,482,487,488,489,492,494,495,498,524,525,526,528,530,531,533,534,536,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,-181,-237,-238,-149,-235,-150,-243,-247,-248,-186,-187,-185,-188,-189,-242,-260,-251,-32,-183,-148,-182,-201,-190,-181,406,-31,-143,-250,-195,-191,-206,-202,-214,-181,406,-31,-31,-181,-31,-249,-231,-233,-244,-245,-198,-199,-193,-194,-208,-207,-203,-204,-216,-215,-230,-232,-192,-209,-210,-205,-217,-218,-222,-246,-200,-197,-212,-211,-220,-219,-223,-224,-196,-213,-221,-226,-225,-228,-227,-229,]),'LOR':([82,87,90,91,93,95,96,97,102,103,106,107,109,110,119,152,154,155,157,158,186,187,190,191,192,195,233,235,238,239,241,242,243,244,250,254,261,263,310,314,324,328,332,333,338,339,341,343,346,349,350,379,381,386,391,396,416,417,419,423,426,428,430,431,433,434,437,438,439,441,442,444,446,449,450,452,470,481,482,485,487,488,489,492,493,494,495,498,511,514,522,524,525,526,527,528,530,531,533,534,536,545,546,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,160,-181,-237,-238,-149,-235,160,-150,-243,-247,-248,160,-186,-187,-185,-188,-189,-242,-260,-251,160,-181,160,-183,-148,-182,160,-201,-181,-190,-181,160,-143,-250,160,160,-195,160,-191,-206,-202,-181,-214,160,160,-181,160,160,-181,160,-249,160,-231,-233,-244,-245,-198,-199,-193,-194,160,-208,-207,-203,-204,-216,-215,-182,160,-230,-232,160,-192,-209,-210,-205,-182,-217,-218,-222,160,160,160,-246,-200,-197,160,-212,-211,-220,-219,-223,-224,160,160,-196,-213,-221,-226,-225,-228,-227,-229,]),'GO':([134,223,380,394,551,],[-146,292,-145,292,-146,]),'COLON':([82,87,90,91,93,95,96,97,102,103,106,107,109,110,152,154,155,157,186,187,189,190,191,192,195,233,235,237,238,239,241,242,243,244,250,254,263,310,324,328,338,339,341,343,346,350,419,426,428,430,431,433,434,437,438,439,441,442,444,446,449,450,481,482,487,488,489,492,494,495,498,519,520,524,525,526,528,530,531,533,534,536,550,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,-31,-181,-237,-238,-149,-235,-150,-243,-247,-248,-186,-187,249,-185,-188,-189,-242,-260,-251,329,330,331,-32,-183,-148,-182,340,-201,-190,394,-143,-250,-195,436,-191,-206,-202,-214,-249,-231,-233,-244,-245,-198,-199,-193,-194,486,-208,-207,-203,-204,-216,-215,-230,-232,-192,-209,-210,-205,-217,-218,-222,551,-322,-246,-200,-197,-212,-211,-220,-219,-223,-224,-321,-196,-213,-221,-226,-225,-228,-227,-229,]),'DIV_ASSIGN':([82,87,90,91,93,95,96,97,103,106,107,109,110,152,154,155,157,186,187,190,191,192,195,233,235,241,242,243,244,254,263,310,313,314,324,328,338,341,343,346,350,386,389,391,396,416,417,419,426,428,430,431,433,434,437,438,441,442,444,446,449,450,481,482,487,488,489,492,494,495,498,524,525,526,528,530,531,533,534,536,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,-181,-237,-238,-149,-235,-150,-243,-247,-248,-186,-187,-185,-188,-189,-242,-260,-251,-32,-183,-148,-182,-201,-190,-181,408,-31,-143,-250,-195,-191,-206,-202,-214,-181,408,-31,-31,-181,-31,-249,-231,-233,-244,-245,-198,-199,-193,-194,-208,-207,-203,-204,-216,-215,-230,-232,-192,-209,-210,-205,-217,-218,-222,-246,-200,-197,-212,-211,-220,-219,-223,-224,-196,-213,-221,-226,-225,-228,-227,-229,]),'IF':([134,223,380,394,523,551,568,],[-146,322,-145,322,322,-146,322,]),'MUL':([29,30,35,40,47,50,54,58,63,67,71,80,82,83,84,85,87,88,89,90,91,93,94,95,96,97,98,101,102,103,104,105,106,107,108,109,110,114,116,117,118,119,120,121,122,124,125,127,131,134,138,140,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,186,187,189,190,191,192,193,195,203,206,209,215,219,221,223,233,235,238,239,241,242,243,244,245,246,247,248,249,250,253,254,260,261,262,263,265,266,267,272,278,280,282,286,292,295,298,304,310,311,314,322,324,325,327,328,329,330,331,332,333,338,339,340,341,343,345,346,347,349,350,352,361,379,380,381,383,386,388,391,394,396,398,399,400,401,402,403,404,405,406,407,408,409,410,416,417,419,423,426,428,430,431,433,434,436,437,438,439,441,442,444,446,449,450,452,455,459,467,468,470,471,475,479,481,482,485,486,487,488,489,491,492,493,494,495,497,498,499,510,511,512,513,514,517,522,524,525,526,527,528,530,531,533,534,536,544,545,546,551,555,556,557,558,560,561,569,571,576,],[47,-29,47,47,47,88,47,88,47,88,47,88,-184,-174,88,-179,-180,-177,-175,-234,-240,-236,-176,-241,-239,-147,-173,88,161,-181,-178,47,-237,-238,88,-149,-235,88,47,-76,47,161,-30,-106,47,47,47,47,47,-146,88,88,-150,88,-243,-247,88,-248,161,-163,-151,-166,-167,-157,-161,-152,-172,88,-154,-170,-165,-155,-160,-162,-156,-169,-158,-171,-153,-159,-164,-168,-186,-187,88,-185,-188,-189,253,-242,271,47,-107,47,47,47,88,-260,-251,161,-181,161,-183,-148,-182,88,88,47,47,88,161,-177,-201,253,-181,88,-190,88,47,47,47,-108,47,-118,-117,88,88,88,88,-181,88,161,88,-143,88,88,-250,88,88,88,161,161,-195,161,88,-191,-206,88,-202,88,-181,-214,88,-75,161,-145,161,88,-181,88,161,88,161,-284,88,-285,-291,-294,-293,-290,-287,-292,-288,-286,-283,-289,-181,161,-249,161,-231,-233,-244,-245,-198,-199,88,-193,-194,161,-208,-207,-203,-204,-216,-215,-182,47,47,88,88,161,-294,88,88,-230,-232,161,88,-192,-209,-210,88,-205,-182,-217,-218,88,-222,88,88,161,88,88,161,88,161,-246,-200,-197,161,-212,-211,-220,-219,-223,-224,88,161,161,-146,-196,-213,-221,-226,88,-225,-228,-227,-229,]),'DIV':([82,87,90,91,93,95,96,97,102,103,106,107,109,110,119,152,154,155,157,158,186,187,190,191,192,195,233,235,238,239,241,242,243,244,250,254,261,263,310,314,324,328,332,333,338,339,341,343,346,349,350,379,381,386,391,396,416,417,419,423,426,428,430,431,433,434,437,438,439,441,442,444,446,449,450,452,470,481,482,485,487,488,489,492,493,494,495,498,511,514,522,524,525,526,527,528,530,531,533,534,536,545,546,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,162,-181,-237,-238,-149,-235,162,-150,-243,-247,-248,162,-186,-187,-185,-188,-189,-242,-260,-251,162,-181,162,-183,-148,-182,162,-201,-181,-190,-181,162,-143,-250,162,162,-195,162,-191,-206,-202,-181,-214,162,162,-181,162,162,-181,162,-249,162,-231,-233,-244,-245,-198,-199,-193,-194,162,-208,-207,-203,-204,-216,-215,-182,162,-230,-232,162,-192,-209,-210,-205,-182,-217,-218,-222,162,162,162,-246,-200,-197,162,-212,-211,-220,-219,-223,-224,162,162,-196,-213,-221,-226,-225,-228,-227,-229,]),'RUNE':([50,58,67,80,83,84,85,88,89,94,98,101,104,108,114,134,138,140,153,156,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,189,193,223,245,246,249,253,260,262,265,292,295,298,304,311,322,325,327,329,330,331,340,345,347,352,380,383,388,394,398,399,400,401,402,403,404,405,406,407,408,409,410,436,467,468,471,475,479,486,491,497,499,510,512,513,517,544,551,560,],[91,91,91,91,-174,91,-179,-177,-175,-176,-173,91,-178,91,91,-146,91,91,91,91,-163,-151,-166,-167,-157,-161,-152,-172,91,-154,-170,-165,-155,-160,-162,-156,-169,-158,-171,-153,-159,-164,-168,91,91,91,91,91,91,-177,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-145,91,91,91,-284,91,-285,-291,-294,-293,-290,-287,-292,-288,-286,-283,-289,91,91,91,-294,91,91,91,91,91,91,91,91,91,91,91,-146,91,]),'DOT':([8,23,41,55,68,72,79,82,87,90,91,93,95,96,103,106,107,109,110,113,132,145,147,154,155,157,186,187,190,191,192,195,202,205,208,212,216,220,221,233,235,239,242,244,254,261,263,272,276,284,288,310,324,328,335,337,338,341,343,346,349,350,357,359,364,368,373,386,416,419,426,428,430,431,433,434,437,438,441,442,444,446,449,450,452,481,482,487,488,489,492,493,494,495,498,504,507,524,525,526,528,530,531,533,534,536,555,556,557,558,561,569,571,576,],[25,-10,25,115,141,146,149,-184,-180,-234,-240,-236,-241,-239,182,-237,-238,194,-235,197,222,230,-9,-243,-247,-248,-186,-187,-185,-188,-189,-242,268,274,277,281,285,289,197,-260,-251,182,-183,-182,-201,353,-190,365,370,375,377,182,-143,-250,432,435,-195,-191,-206,-202,447,-214,453,454,456,461,463,182,182,-249,-231,-233,-244,-245,-198,-199,-193,-194,-208,-207,-203,-204,-216,-215,-182,-230,-232,-192,-209,-210,-205,-182,-217,-218,-222,538,541,-246,-200,-197,-212,-211,-220,-219,-223,-224,-196,-213,-221,-226,-225,-228,-227,-229,]),'SUB':([50,58,67,80,82,83,84,85,87,88,89,90,91,93,94,95,96,97,98,101,102,103,104,106,107,108,109,110,114,119,134,138,140,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,186,187,189,190,191,192,193,195,223,233,235,238,239,241,242,243,244,245,246,249,250,253,254,260,261,262,263,265,292,295,298,304,310,311,314,322,324,325,327,328,329,330,331,332,333,338,339,340,341,343,345,346,347,349,350,352,379,380,381,383,386,388,391,394,396,398,399,400,401,402,403,404,405,406,407,408,409,410,416,417,419,423,426,428,430,431,433,434,436,437,438,439,441,442,444,446,449,450,452,467,468,470,471,475,479,481,482,485,486,487,488,489,491,492,493,494,495,497,498,499,510,511,512,513,514,517,522,524,525,526,527,528,530,531,533,534,536,544,545,546,551,555,556,557,558,560,561,569,571,576,],[83,83,83,83,-184,-174,83,-179,-180,-177,-175,-234,-240,-236,-176,-241,-239,-147,-173,83,159,-181,-178,-237,-238,83,-149,-235,83,159,-146,83,83,-150,83,-243,-247,83,-248,159,-163,-151,-166,-167,-157,-161,-152,-172,83,-154,-170,-165,-155,-160,-162,-156,-169,-158,-171,-153,-159,-164,-168,-186,-187,83,-185,-188,-189,83,-242,83,-260,-251,159,-181,159,-183,-148,-182,83,83,83,159,-177,-201,83,-181,83,-190,83,83,83,83,83,-181,83,159,83,-143,83,83,-250,83,83,83,159,159,-195,159,83,-191,-206,83,-202,83,-181,-214,83,159,-145,159,83,-181,83,159,83,159,-284,83,-285,-291,-294,-293,-290,-287,-292,-288,-286,-283,-289,-181,159,-249,159,-231,-233,-244,-245,-198,-199,83,-193,-194,159,-208,-207,-203,-204,-216,-215,-182,83,83,159,-294,83,83,-230,-232,159,83,-192,-209,-210,83,-205,-182,-217,-218,83,-222,83,83,159,83,83,159,83,159,-246,-200,-197,159,-212,-211,-220,-219,-223,-224,83,159,159,-146,-196,-213,-221,-226,83,-225,-228,-227,-229,]),'CASE':([223,380,397,476,477,515,516,521,547,548,551,565,567,],[-144,-145,-319,-319,517,-319,517,-318,-319,517,-146,517,-320,]),'DEFER':([134,223,380,394,551,],[-146,295,-145,295,-146,]),'GEQ':([82,87,90,91,93,95,96,97,102,103,106,107,109,110,119,152,154,155,157,158,186,187,190,191,192,195,233,235,238,239,241,242,243,244,250,254,261,263,310,314,324,328,332,333,338,339,341,343,346,349,350,379,381,386,391,396,416,417,419,423,426,428,430,431,433,434,437,438,439,441,442,444,446,449,450,452,470,481,482,485,487,488,489,492,493,494,495,498,511,514,522,524,525,526,527,528,530,531,533,534,536,545,546,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,164,-181,-237,-238,-149,-235,164,-150,-243,-247,-248,164,-186,-187,-185,-188,-189,-242,-260,-251,164,-181,164,-183,-148,-182,164,-201,-181,-190,-181,164,-143,-250,164,164,-195,164,-191,-206,-202,-181,-214,164,164,-181,164,164,-181,164,-249,164,-231,-233,-244,-245,-198,-199,-193,-194,164,-208,-207,-203,-204,-216,-215,-182,164,-230,-232,164,-192,-209,-210,-205,-182,-217,-218,-222,164,164,164,-246,-200,-197,164,-212,-211,-220,-219,-223,-224,164,164,-196,-213,-221,-226,-225,-228,-227,-229,]),'DEC':([82,87,90,91,93,95,96,97,103,106,107,109,110,152,154,155,157,186,187,190,191,192,195,233,235,242,243,244,254,263,310,314,324,328,338,341,343,346,350,386,391,396,416,417,419,426,428,430,431,433,434,437,438,441,442,444,446,449,450,481,482,487,488,489,492,494,495,498,524,525,526,528,530,531,533,534,536,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,-181,-237,-238,-149,-235,-150,-243,-247,-248,-186,-187,-185,-188,-189,-242,-260,-251,-183,-148,-182,-201,-190,-181,411,-143,-250,-195,-191,-206,-202,-214,-181,411,411,-181,411,-249,-231,-233,-244,-245,-198,-199,-193,-194,-208,-207,-203,-204,-216,-215,-230,-232,-192,-209,-210,-205,-217,-218,-222,-246,-200,-197,-212,-211,-220,-219,-223,-224,-196,-213,-221,-226,-225,-228,-227,-229,]),'RPAREN':([23,28,34,38,41,44,46,48,51,52,53,59,60,62,65,69,77,78,79,82,87,90,91,93,95,96,97,102,103,106,107,109,110,112,113,121,123,126,128,129,130,131,132,133,147,148,152,154,155,157,158,186,187,190,191,192,193,195,196,198,204,205,207,208,209,210,211,212,213,216,217,220,221,225,229,232,233,235,241,242,243,244,252,254,255,256,257,258,259,261,263,264,273,275,276,278,279,283,284,287,288,290,324,328,332,333,336,337,338,341,342,343,344,345,346,347,348,349,350,351,352,354,356,357,358,359,369,371,372,373,374,376,378,419,426,427,428,429,430,431,433,434,437,438,440,441,442,443,444,445,446,448,449,450,451,452,462,464,465,481,482,484,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,509,524,525,526,528,529,530,531,532,533,534,535,536,537,555,556,557,558,559,560,561,562,569,570,571,576,],[-10,-23,-48,-36,73,75,-62,-61,-66,-63,-67,-64,-65,121,136,142,-99,-96,-97,-184,-180,-234,-240,-236,-241,-239,-147,-31,-181,-237,-238,-149,-235,196,198,-106,209,-109,-101,-105,-102,121,-103,-100,-9,-22,-150,-243,-247,-248,242,-186,-187,-185,-188,-189,254,-242,-58,-59,-71,-72,-112,-110,-107,278,-123,-128,-120,-125,-122,-127,198,-47,-35,-98,-260,-251,-32,-183,-148,-182,-62,-201,343,-66,-63,346,-67,-181,-190,354,-74,-68,-69,-108,-116,-119,-124,-121,-126,-104,-143,-250,426,428,433,434,-195,-191,-99,-206,441,442,-202,444,446,-181,-214,449,450,-60,-134,-135,-137,-138,-73,-111,-115,-113,-133,-130,-132,-249,-231,481,-233,482,-244,-245,-198,-199,-193,-194,488,-208,-207,489,-203,492,-204,494,-216,-215,495,-182,-70,-129,-131,-230,-232,525,-192,-209,-210,528,530,-205,-182,-217,-218,531,533,-222,534,536,-136,-139,-140,-141,-114,-246,-200,-197,-212,556,-211,-220,557,-219,-223,558,-224,561,-196,-213,-221,-226,569,571,-225,-142,-228,576,-227,-229,]),'SEMICOLON':([1,5,9,11,12,13,14,17,18,20,21,22,27,29,30,33,36,37,39,42,43,46,48,51,52,53,59,60,64,66,68,70,72,73,74,75,76,77,78,79,82,87,90,91,93,95,96,97,99,102,103,106,107,109,110,120,121,128,129,130,132,133,134,135,136,137,139,142,143,144,145,150,152,154,155,157,186,187,190,191,192,195,196,198,199,204,205,209,223,226,227,228,231,232,233,235,241,242,243,244,254,263,269,270,272,273,275,276,278,290,291,293,294,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,321,322,323,324,326,328,338,341,343,346,350,354,355,356,357,358,359,362,363,364,366,368,369,379,380,381,382,384,386,391,392,393,394,395,396,411,412,413,414,415,416,417,418,419,426,428,430,431,433,434,437,438,441,442,444,446,449,450,457,458,460,462,466,467,469,472,473,474,478,480,481,482,487,488,489,492,494,495,498,501,502,503,504,505,506,507,508,511,518,524,525,526,528,530,531,533,534,536,539,540,542,549,551,552,553,554,555,556,557,558,561,562,563,566,569,571,572,573,574,575,576,],[4,-6,26,-16,31,-15,-18,-17,-19,-14,-7,-13,-20,-28,-29,-45,-38,-37,-33,-12,-11,-62,-61,-66,-63,-67,-64,-65,-57,-55,-53,-42,-43,-8,147,-21,148,-99,-96,-97,-184,-180,-234,-240,-236,-241,-239,-147,-27,-31,-181,-237,-238,-149,-235,-30,-106,-101,-105,-102,-103,-100,-146,-56,-46,225,-52,-34,229,-39,-40,-26,-150,-243,-247,-248,-186,-187,-185,-188,-189,-242,-58,-59,-24,-71,-72,-107,-279,-49,-50,-54,-44,-98,-260,-251,-32,-183,-148,-182,-201,-190,361,-83,-93,-74,-68,-69,-108,-104,-267,380,-270,-277,-276,-298,-313,-264,-274,-268,-279,-262,-271,-272,-302,-304,-181,-279,-261,-275,-300,-265,-269,-263,-273,-278,-279,-266,-143,-41,-250,-195,-191,-206,-202,-214,-60,-25,-134,-135,-137,-138,-90,-95,-91,-80,-81,-73,-296,-145,-305,-297,467,-181,-275,-326,-301,-279,475,-275,-281,-280,-299,-303,479,-181,-275,-51,-249,-231,-233,-244,-245,-198,-199,-193,-194,-208,-207,-203,-204,-216,-215,-94,-85,-87,-70,-306,510,-325,-324,-323,-295,-282,-307,-230,-232,-192,-209,-210,-205,-217,-218,-222,-136,-139,-140,-141,-92,-77,-78,-82,544,-314,-246,-200,-197,-212,-211,-220,-219,-223,-224,-84,-86,-89,-316,-146,-308,-309,-310,-196,-213,-221,-226,-225,-142,-79,-315,-228,-227,-88,-317,-312,-311,-229,]),'RANGE':([304,468,471,],[388,512,513,]),'FALLTHROUGH':([134,223,380,394,551,],[-146,309,-145,309,-146,]),'SHR_ASSIGN':([82,87,90,91,93,95,96,97,103,106,107,109,110,152,154,155,157,186,187,190,191,192,195,233,235,241,242,243,244,254,263,310,313,314,324,328,338,341,343,346,350,386,389,391,396,416,417,419,426,428,430,431,433,434,437,438,441,442,444,446,449,450,481,482,487,488,489,492,494,495,498,524,525,526,528,530,531,533,534,536,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,-181,-237,-238,-149,-235,-150,-243,-247,-248,-186,-187,-185,-188,-189,-242,-260,-251,-32,-183,-148,-182,-201,-190,-181,403,-31,-143,-250,-195,-191,-206,-202,-214,-181,403,-31,-31,-181,-31,-249,-231,-233,-244,-245,-198,-199,-193,-194,-208,-207,-203,-204,-216,-215,-230,-232,-192,-209,-210,-205,-217,-218,-222,-246,-200,-197,-212,-211,-220,-219,-223,-224,-196,-213,-221,-226,-225,-228,-227,-229,]),'MOD':([82,87,90,91,93,95,96,97,102,103,106,107,109,110,119,152,154,155,157,158,186,187,190,191,192,195,233,235,238,239,241,242,243,244,250,254,261,263,310,314,324,328,332,333,338,339,341,343,346,349,350,379,381,386,391,396,416,417,419,423,426,428,430,431,433,434,437,438,439,441,442,444,446,449,450,452,470,481,482,485,487,488,489,492,493,494,495,498,511,514,522,524,525,526,527,528,530,531,533,534,536,545,546,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,181,-181,-237,-238,-149,-235,181,-150,-243,-247,-248,181,-186,-187,-185,-188,-189,-242,-260,-251,181,-181,181,-183,-148,-182,181,-201,-181,-190,-181,181,-143,-250,181,181,-195,181,-191,-206,-202,-181,-214,181,181,-181,181,181,-181,181,-249,181,-231,-233,-244,-245,-198,-199,-193,-194,181,-208,-207,-203,-204,-216,-215,-182,181,-230,-232,181,-192,-209,-210,-205,-182,-217,-218,-222,181,181,181,-246,-200,-197,181,-212,-211,-220,-219,-223,-224,181,181,-196,-213,-221,-226,-225,-228,-227,-229,]),'SWITCH':([134,223,380,394,551,],[-146,311,-145,311,-146,]),'LTN':([82,87,90,91,93,95,96,97,102,103,106,107,109,110,119,152,154,155,157,158,186,187,190,191,192,195,233,235,238,239,241,242,243,244,250,254,261,263,310,314,324,328,332,333,338,339,341,343,346,349,350,379,381,386,391,396,416,417,419,423,426,428,430,431,433,434,437,438,439,441,442,444,446,449,450,452,470,481,482,485,487,488,489,492,493,494,495,498,511,514,522,524,525,526,527,528,530,531,533,534,536,545,546,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,176,-181,-237,-238,-149,-235,176,-150,-243,-247,-248,176,-186,-187,-185,-188,-189,-242,-260,-251,176,-181,176,-183,-148,-182,176,-201,-181,-190,-181,176,-143,-250,176,176,-195,176,-191,-206,-202,-181,-214,176,176,-181,176,176,-181,176,-249,176,-231,-233,-244,-245,-198,-199,-193,-194,176,-208,-207,-203,-204,-216,-215,-182,176,-230,-232,176,-192,-209,-210,-205,-182,-217,-218,-222,176,176,176,-246,-200,-197,176,-212,-211,-220,-219,-223,-224,176,176,-196,-213,-221,-226,-225,-228,-227,-229,]),'AND_NOT':([82,87,90,91,93,95,96,97,102,103,106,107,109,110,119,152,154,155,157,158,186,187,190,191,192,195,233,235,238,239,241,242,243,244,250,254,261,263,310,314,324,328,332,333,338,339,341,343,346,349,350,379,381,386,391,396,416,417,419,423,426,428,430,431,433,434,437,438,439,441,442,444,446,449,450,452,470,481,482,485,487,488,489,492,493,494,495,498,511,514,522,524,525,526,527,528,530,531,533,534,536,545,546,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,166,-181,-237,-238,-149,-235,166,-150,-243,-247,-248,166,-186,-187,-185,-188,-189,-242,-260,-251,166,-181,166,-183,-148,-182,166,-201,-181,-190,-181,166,-143,-250,166,166,-195,166,-191,-206,-202,-181,-214,166,166,-181,166,166,-181,166,-249,166,-231,-233,-244,-245,-198,-199,-193,-194,166,-208,-207,-203,-204,-216,-215,-182,166,-230,-232,166,-192,-209,-210,-205,-182,-217,-218,-222,166,166,166,-246,-200,-197,166,-212,-211,-220,-219,-223,-224,166,166,-196,-213,-221,-226,-225,-228,-227,-229,]),'AND_ASSIGN':([82,87,90,91,93,95,96,97,103,106,107,109,110,152,154,155,157,186,187,190,191,192,195,233,235,241,242,243,244,254,263,310,313,314,324,328,338,341,343,346,350,386,389,391,396,416,417,419,426,428,430,431,433,434,437,438,441,442,444,446,449,450,481,482,487,488,489,492,494,495,498,524,525,526,528,530,531,533,534,536,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,-181,-237,-238,-149,-235,-150,-243,-247,-248,-186,-187,-185,-188,-189,-242,-260,-251,-32,-183,-148,-182,-201,-190,-181,407,-31,-143,-250,-195,-191,-206,-202,-214,-181,407,-31,-31,-181,-31,-249,-231,-233,-244,-245,-198,-199,-193,-194,-208,-207,-203,-204,-216,-215,-230,-232,-192,-209,-210,-205,-217,-218,-222,-246,-200,-197,-212,-211,-220,-219,-223,-224,-196,-213,-221,-226,-225,-228,-227,-229,]),'COMMA':([30,46,48,51,52,53,59,60,77,78,79,82,87,90,91,93,95,96,97,99,102,103,106,107,109,110,121,123,125,126,127,128,129,130,132,133,139,150,152,154,155,157,186,187,190,191,192,195,196,198,199,204,205,207,208,209,211,212,213,216,217,220,221,226,227,232,233,234,235,236,237,238,239,240,241,242,243,244,252,254,255,256,257,258,259,261,263,272,273,275,276,278,279,282,283,284,286,287,288,290,310,313,314,324,328,332,333,338,341,342,343,344,346,348,350,351,354,355,356,357,358,359,369,371,372,373,374,376,378,382,386,389,391,396,416,417,418,419,420,421,422,423,424,425,426,428,430,431,433,434,437,438,441,442,443,444,446,449,450,451,452,462,464,465,466,478,481,482,487,488,489,490,492,494,495,496,498,500,501,502,503,504,509,524,525,526,528,530,531,533,534,535,536,550,555,556,557,558,559,561,562,569,571,576,],[61,-62,-61,-66,-63,-67,-64,-65,-99,-96,-97,-184,-180,-234,-240,-236,-241,-239,-147,156,-31,-181,-237,-238,-149,-235,-106,210,214,-109,218,-101,-105,-102,-103,-100,156,156,-150,-243,-247,-248,-186,-187,-185,-188,-189,-242,-58,-59,156,-71,-72,-112,-110,-107,-123,-128,-120,-125,-122,-127,218,156,156,-98,-260,327,-251,-257,-259,-258,-181,-252,-32,-183,-148,-182,-62,-201,345,-66,-63,347,-67,352,-190,367,-74,-68,-69,-108,-116,-118,-119,-124,-117,-121,-126,-104,61,156,-31,-143,-250,427,429,-195,-191,-99,-206,440,-202,445,-214,448,-60,156,-134,-135,-137,-138,-73,-111,-115,-113,-133,-130,-132,156,61,156,-31,-31,61,-31,156,-249,-253,-256,-259,-258,-255,-254,-231,-233,-244,-245,-198,-199,-193,-194,-208,-207,491,-203,-204,-216,-215,497,499,-70,-129,-131,156,156,-230,-232,-192,-209,-210,529,-205,-217,-218,532,-222,537,-136,-139,-140,-141,-114,-246,-200,-197,-212,-211,-220,-219,-223,560,-224,156,-196,-213,-221,-226,570,-225,-142,-228,-227,-229,]),'AND_NOT_ASSIGN':([82,87,90,91,93,95,96,97,103,106,107,109,110,152,154,155,157,186,187,190,191,192,195,233,235,241,242,243,244,254,263,310,313,314,324,328,338,341,343,346,350,386,389,391,396,416,417,419,426,428,430,431,433,434,437,438,441,442,444,446,449,450,481,482,487,488,489,492,494,495,498,524,525,526,528,530,531,533,534,536,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,-181,-237,-238,-149,-235,-150,-243,-247,-248,-186,-187,-185,-188,-189,-242,-260,-251,-32,-183,-148,-182,-201,-190,-181,410,-31,-143,-250,-195,-191,-206,-202,-214,-181,410,-31,-31,-181,-31,-249,-231,-233,-244,-245,-198,-199,-193,-194,-208,-207,-203,-204,-216,-215,-230,-232,-192,-209,-210,-205,-217,-218,-222,-246,-200,-197,-212,-211,-220,-219,-223,-224,-196,-213,-221,-226,-225,-228,-227,-229,]),'INC':([82,87,90,91,93,95,96,97,103,106,107,109,110,152,154,155,157,186,187,190,191,192,195,233,235,242,243,244,254,263,310,314,324,328,338,341,343,346,350,386,391,396,416,417,419,426,428,430,431,433,434,437,438,441,442,444,446,449,450,481,482,487,488,489,492,494,495,498,524,525,526,528,530,531,533,534,536,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,-181,-237,-238,-149,-235,-150,-243,-247,-248,-186,-187,-185,-188,-189,-242,-260,-251,-183,-148,-182,-201,-190,-181,412,-143,-250,-195,-191,-206,-202,-214,-181,412,412,-181,412,-249,-231,-233,-244,-245,-198,-199,-193,-194,-208,-207,-203,-204,-216,-215,-230,-232,-192,-209,-210,-205,-217,-218,-222,-246,-200,-197,-212,-211,-220,-219,-223,-224,-196,-213,-221,-226,-225,-228,-227,-229,]),'IMPORT':([4,6,26,],[-5,8,-4,]),'NEQ':([82,87,90,91,93,95,96,97,102,103,106,107,109,110,119,152,154,155,157,158,186,187,190,191,192,195,233,235,238,239,241,242,243,244,250,254,261,263,310,314,324,328,332,333,338,339,341,343,346,349,350,379,381,386,391,396,416,417,419,423,426,428,430,431,433,434,437,438,439,441,442,444,446,449,450,452,470,481,482,485,487,488,489,492,493,494,495,498,511,514,522,524,525,526,527,528,530,531,533,534,536,545,546,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,163,-181,-237,-238,-149,-235,163,-150,-243,-247,-248,163,-186,-187,-185,-188,-189,-242,-260,-251,163,-181,163,-183,-148,-182,163,-201,-181,-190,-181,163,-143,-250,163,163,-195,163,-191,-206,-202,-181,-214,163,163,-181,163,163,-181,163,-249,163,-231,-233,-244,-245,-198,-199,-193,-194,163,-208,-207,-203,-204,-216,-215,-182,163,-230,-232,163,-192,-209,-210,-205,-182,-217,-218,-222,163,163,163,-246,-200,-197,163,-212,-211,-220,-219,-223,-224,163,163,-196,-213,-221,-226,-225,-228,-227,-229,]),'ASSIGN':([29,30,35,40,46,48,49,51,52,53,55,59,60,66,68,77,78,79,82,87,90,91,93,95,96,97,103,106,107,109,110,120,121,128,129,130,132,133,152,154,155,157,186,187,190,191,192,195,196,198,200,204,205,209,228,232,233,235,241,242,243,244,254,263,273,275,276,278,290,310,313,314,324,328,338,341,343,346,350,354,356,357,358,359,369,386,389,391,396,416,417,419,426,428,430,431,433,434,437,438,441,442,444,446,449,450,462,481,482,487,488,489,492,494,495,498,501,502,503,504,524,525,526,528,530,531,533,534,536,555,556,557,558,561,562,569,571,576,],[50,-29,67,71,-62,-61,80,-66,-63,-67,114,-64,-65,138,140,-99,-96,-97,-184,-180,-234,-240,-236,-241,-239,-147,-181,-237,-238,-149,-235,-30,-106,-101,-105,-102,-103,-100,-150,-243,-247,-248,-186,-187,-185,-188,-189,-242,-58,-59,265,-71,-72,-107,325,-98,-260,-251,-32,-183,-148,-182,-201,-190,-74,-68,-69,-108,-104,-181,402,-31,-143,-250,-195,-191,-206,-202,-214,-60,-134,-135,-137,-138,-73,-181,471,-31,-31,-181,-31,-249,-231,-233,-244,-245,-198,-199,-193,-194,-208,-207,-203,-204,-216,-215,-70,-230,-232,-192,-209,-210,-205,-217,-218,-222,-136,-139,-140,-141,-246,-200,-197,-212,-211,-220,-219,-223,-224,-196,-213,-221,-226,-225,-142,-228,-227,-229,]),'DEFINE':([30,120,300,310,385,386,416,],[-29,-30,383,-29,468,-29,-29,]),'SUB_ASSIGN':([82,87,90,91,93,95,96,97,103,106,107,109,110,152,154,155,157,186,187,190,191,192,195,233,235,241,242,243,244,254,263,310,313,314,324,328,338,341,343,346,350,386,389,391,396,416,417,419,426,428,430,431,433,434,437,438,441,442,444,446,449,450,481,482,487,488,489,492,494,495,498,524,525,526,528,530,531,533,534,536,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,-181,-237,-238,-149,-235,-150,-243,-247,-248,-186,-187,-185,-188,-189,-242,-260,-251,-32,-183,-148,-182,-201,-190,-181,398,-31,-143,-250,-195,-191,-206,-202,-214,-181,398,-31,-31,-181,-31,-249,-231,-233,-244,-245,-198,-199,-193,-194,-208,-207,-203,-204,-216,-215,-230,-232,-192,-209,-210,-205,-217,-218,-222,-246,-200,-197,-212,-211,-220,-219,-223,-224,-196,-213,-221,-226,-225,-228,-227,-229,]),'SHR':([82,87,90,91,93,95,96,97,102,103,106,107,109,110,119,152,154,155,157,158,186,187,190,191,192,195,233,235,238,239,241,242,243,244,250,254,261,263,310,314,324,328,332,333,338,339,341,343,346,349,350,379,381,386,391,396,416,417,419,423,426,428,430,431,433,434,437,438,439,441,442,444,446,449,450,452,470,481,482,485,487,488,489,492,493,494,495,498,511,514,522,524,525,526,527,528,530,531,533,534,536,545,546,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,169,-181,-237,-238,-149,-235,169,-150,-243,-247,-248,169,-186,-187,-185,-188,-189,-242,-260,-251,169,-181,169,-183,-148,-182,169,-201,-181,-190,-181,169,-143,-250,169,169,-195,169,-191,-206,-202,-181,-214,169,169,-181,169,169,-181,169,-249,169,-231,-233,-244,-245,-198,-199,-193,-194,169,-208,-207,-203,-204,-216,-215,-182,169,-230,-232,169,-192,-209,-210,-205,-182,-217,-218,-222,169,169,169,-246,-200,-197,169,-212,-211,-220,-219,-223,-224,169,169,-196,-213,-221,-226,-225,-228,-227,-229,]),'XOR':([50,58,67,80,82,83,84,85,87,88,89,90,91,93,94,95,96,97,98,101,102,103,104,106,107,108,109,110,114,119,134,138,140,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,186,187,189,190,191,192,193,195,223,233,235,238,239,241,242,243,244,245,246,249,250,253,254,260,261,262,263,265,292,295,298,304,310,311,314,322,324,325,327,328,329,330,331,332,333,338,339,340,341,343,345,346,347,349,350,352,379,380,381,383,386,388,391,394,396,398,399,400,401,402,403,404,405,406,407,408,409,410,416,417,419,423,426,428,430,431,433,434,436,437,438,439,441,442,444,446,449,450,452,467,468,470,471,475,479,481,482,485,486,487,488,489,491,492,493,494,495,497,498,499,510,511,512,513,514,517,522,524,525,526,527,528,530,531,533,534,536,544,545,546,551,555,556,557,558,560,561,569,571,576,],[94,94,94,94,-184,-174,94,-179,-180,-177,-175,-234,-240,-236,-176,-241,-239,-147,-173,94,170,-181,-178,-237,-238,94,-149,-235,94,170,-146,94,94,-150,94,-243,-247,94,-248,170,-163,-151,-166,-167,-157,-161,-152,-172,94,-154,-170,-165,-155,-160,-162,-156,-169,-158,-171,-153,-159,-164,-168,-186,-187,94,-185,-188,-189,94,-242,94,-260,-251,170,-181,170,-183,-148,-182,94,94,94,170,-177,-201,94,-181,94,-190,94,94,94,94,94,-181,94,170,94,-143,94,94,-250,94,94,94,170,170,-195,170,94,-191,-206,94,-202,94,-181,-214,94,170,-145,170,94,-181,94,170,94,170,-284,94,-285,-291,-294,-293,-290,-287,-292,-288,-286,-283,-289,-181,170,-249,170,-231,-233,-244,-245,-198,-199,94,-193,-194,170,-208,-207,-203,-204,-216,-215,-182,94,94,170,-294,94,94,-230,-232,170,94,-192,-209,-210,94,-205,-182,-217,-218,94,-222,94,94,170,94,94,170,94,170,-246,-200,-197,170,-212,-211,-220,-219,-223,-224,94,170,170,-146,-196,-213,-221,-226,94,-225,-228,-227,-229,]),'STRING':([8,23,24,25,41,46,48,50,51,52,53,58,59,60,67,77,78,79,80,83,84,85,88,89,94,98,101,104,108,114,121,128,129,130,132,133,134,138,140,147,153,156,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,189,193,196,198,204,205,209,223,232,245,246,249,253,260,262,265,270,272,273,275,276,278,290,292,295,298,304,311,322,325,327,329,330,331,340,345,347,352,354,356,357,358,359,364,366,368,369,380,383,388,394,398,399,400,401,402,403,404,405,406,407,408,409,410,436,457,462,467,468,471,475,479,486,491,497,499,501,502,503,504,505,506,507,508,510,512,513,517,544,551,560,562,563,],[20,-10,20,20,20,-62,-61,95,-66,-63,-67,95,-64,-65,95,-99,-96,-97,95,-174,95,-179,-177,-175,-176,-173,95,-178,95,95,-106,-101,-105,-102,-103,-100,-146,95,95,-9,95,95,-163,-151,-166,-167,-157,-161,-152,-172,95,-154,-170,-165,-155,-160,-162,-156,-169,-158,-171,-153,-159,-164,-168,95,95,-58,-59,-71,-72,-107,95,-98,95,95,95,-177,95,95,95,363,-93,-74,-68,-69,-108,-104,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-60,-134,-135,-137,-138,-91,363,363,-73,-145,95,95,95,-284,95,-285,-291,-294,-293,-290,-287,-292,-288,-286,-283,-289,95,-94,-70,95,95,-294,95,95,95,95,95,95,-136,-139,-140,-141,-92,363,363,363,95,95,95,95,95,-146,95,-142,363,]),'FOR':([134,223,380,394,551,],[-146,304,-145,304,-146,]),'PACKAGE':([0,],[3,]),'CHAN':([62,63,121,131,209,210,278,],[122,129,-106,122,-107,280,-108,]),'IMAG':([50,58,67,80,83,84,85,88,89,94,98,101,104,108,114,134,138,140,153,156,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,189,193,223,245,246,249,253,260,262,265,292,295,298,304,311,322,325,327,329,330,331,340,345,347,352,380,383,388,394,398,399,400,401,402,403,404,405,406,407,408,409,410,436,467,468,471,475,479,486,491,497,499,510,512,513,517,544,551,560,],[96,96,96,96,-174,96,-179,-177,-175,-176,-173,96,-178,96,96,-146,96,96,96,96,-163,-151,-166,-167,-157,-161,-152,-172,96,-154,-170,-165,-155,-160,-162,-156,-169,-158,-171,-153,-159,-164,-168,96,96,96,96,96,96,-177,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-145,96,96,96,-284,96,-285,-291,-294,-293,-290,-287,-292,-288,-286,-283,-289,96,96,96,-294,96,96,96,96,96,96,96,96,96,96,96,-146,96,]),'RBRACK':([46,48,51,52,53,58,59,60,77,78,79,82,87,90,91,93,95,96,97,103,106,107,108,109,110,119,121,128,129,130,132,133,152,154,155,157,185,186,187,190,191,192,195,196,198,201,202,204,205,209,232,233,235,242,243,244,249,250,254,262,263,273,275,276,278,290,324,328,338,339,340,341,343,346,350,354,356,357,358,359,360,369,419,426,428,430,431,433,434,437,438,439,441,442,444,446,449,450,462,481,482,485,487,488,489,492,494,495,498,501,502,503,504,524,525,526,527,528,530,531,533,534,536,555,556,557,558,561,562,569,571,576,],[-62,-61,-66,-63,-67,118,-64,-65,-99,-96,-97,-184,-180,-234,-240,-236,-241,-239,-147,-181,-237,-238,118,-149,-235,206,-106,-101,-105,-102,-103,-100,-150,-243,-247,-248,247,-186,-187,-185,-188,-189,-242,-58,-59,266,267,-71,-72,-107,-98,-260,-251,-183,-148,-182,338,341,-201,118,-190,-74,-68,-69,-108,-104,-143,-250,-195,437,438,-191,-206,-202,-214,-60,-134,-135,-137,-138,455,-73,-249,-231,-233,-244,-245,-198,-199,-193,-194,487,-208,-207,-203,-204,-216,-215,-70,-230,-232,526,-192,-209,-210,-205,-217,-218,-222,-136,-139,-140,-141,-246,-200,-197,555,-212,-211,-220,-219,-223,-224,-196,-213,-221,-226,-225,-142,-228,-227,-229,]),'RBRACE':([82,87,90,91,93,95,96,97,103,106,107,109,110,117,134,152,153,154,155,157,186,187,190,191,192,195,203,223,224,233,234,235,236,237,238,239,240,242,243,244,254,263,324,327,328,338,341,343,346,350,361,380,397,419,420,421,422,423,424,425,426,428,430,431,433,434,437,438,441,442,444,446,449,450,476,477,481,482,487,488,489,492,494,495,498,515,516,521,524,525,526,528,530,531,533,534,536,547,548,551,555,556,557,558,561,565,567,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,-181,-237,-238,-149,-235,-76,-146,-150,235,-243,-247,-248,-186,-187,-185,-188,-189,-242,273,-144,324,-260,328,-251,-257,-259,-258,-181,-252,-183,-148,-182,-201,-190,-143,419,-250,-195,-191,-206,-202,-214,-75,-145,-319,-249,-253,-256,-259,-258,-255,-254,-231,-233,-244,-245,-198,-199,-193,-194,-208,-207,-203,-204,-216,-215,-319,518,-230,-232,-192,-209,-210,-205,-217,-218,-222,-319,549,-318,-246,-200,-197,-212,-211,-220,-219,-223,-224,-319,566,-146,-196,-213,-221,-226,-225,573,-320,-228,-227,-229,]),'ELSE':([324,480,552,],[-143,523,568,]),'ADD':([50,58,67,80,82,83,84,85,87,88,89,90,91,93,94,95,96,97,98,101,102,103,104,106,107,108,109,110,114,119,134,138,140,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,186,187,189,190,191,192,193,195,223,233,235,238,239,241,242,243,244,245,246,249,250,253,254,260,261,262,263,265,292,295,298,304,310,311,314,322,324,325,327,328,329,330,331,332,333,338,339,340,341,343,345,346,347,349,350,352,379,380,381,383,386,388,391,394,396,398,399,400,401,402,403,404,405,406,407,408,409,410,416,417,419,423,426,428,430,431,433,434,436,437,438,439,441,442,444,446,449,450,452,467,468,470,471,475,479,481,482,485,486,487,488,489,491,492,493,494,495,497,498,499,510,511,512,513,514,517,522,524,525,526,527,528,530,531,533,534,536,544,545,546,551,555,556,557,558,560,561,569,571,576,],[98,98,98,98,-184,-174,98,-179,-180,-177,-175,-234,-240,-236,-176,-241,-239,-147,-173,98,173,-181,-178,-237,-238,98,-149,-235,98,173,-146,98,98,-150,98,-243,-247,98,-248,173,-163,-151,-166,-167,-157,-161,-152,-172,98,-154,-170,-165,-155,-160,-162,-156,-169,-158,-171,-153,-159,-164,-168,-186,-187,98,-185,-188,-189,98,-242,98,-260,-251,173,-181,173,-183,-148,-182,98,98,98,173,-177,-201,98,-181,98,-190,98,98,98,98,98,-181,98,173,98,-143,98,98,-250,98,98,98,173,173,-195,173,98,-191,-206,98,-202,98,-181,-214,98,173,-145,173,98,-181,98,173,98,173,-284,98,-285,-291,-294,-293,-290,-287,-292,-288,-286,-283,-289,-181,173,-249,173,-231,-233,-244,-245,-198,-199,98,-193,-194,173,-208,-207,-203,-204,-216,-215,-182,98,98,173,-294,98,98,-230,-232,173,98,-192,-209,-210,98,-205,-182,-217,-218,98,-222,98,98,173,98,98,173,98,173,-246,-200,-197,173,-212,-211,-220,-219,-223,-224,98,173,173,-146,-196,-213,-221,-226,98,-225,-228,-227,-229,]),'LAND':([82,87,90,91,93,95,96,97,102,103,106,107,109,110,119,152,154,155,157,158,186,187,190,191,192,195,233,235,238,239,241,242,243,244,250,254,261,263,310,314,324,328,332,333,338,339,341,343,346,349,350,379,381,386,391,396,416,417,419,423,426,428,430,431,433,434,437,438,439,441,442,444,446,449,450,452,470,481,482,485,487,488,489,492,493,494,495,498,511,514,522,524,525,526,527,528,530,531,533,534,536,545,546,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,165,-181,-237,-238,-149,-235,165,-150,-243,-247,-248,165,-186,-187,-185,-188,-189,-242,-260,-251,165,-181,165,-183,-148,-182,165,-201,-181,-190,-181,165,-143,-250,165,165,-195,165,-191,-206,-202,-181,-214,165,165,-181,165,165,-181,165,-249,165,-231,-233,-244,-245,-198,-199,-193,-194,165,-208,-207,-203,-204,-216,-215,-182,165,-230,-232,165,-192,-209,-210,-205,-182,-217,-218,-222,165,165,165,-246,-200,-197,165,-212,-211,-220,-219,-223,-224,165,165,-196,-213,-221,-226,-225,-228,-227,-229,]),'GTN':([82,87,90,91,93,95,96,97,102,103,106,107,109,110,119,152,154,155,157,158,186,187,190,191,192,195,233,235,238,239,241,242,243,244,250,254,261,263,310,314,324,328,332,333,338,339,341,343,346,349,350,379,381,386,391,396,416,417,419,423,426,428,430,431,433,434,437,438,439,441,442,444,446,449,450,452,470,481,482,485,487,488,489,492,493,494,495,498,511,514,522,524,525,526,527,528,530,531,533,534,536,545,546,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,172,-181,-237,-238,-149,-235,172,-150,-243,-247,-248,172,-186,-187,-185,-188,-189,-242,-260,-251,172,-181,172,-183,-148,-182,172,-201,-181,-190,-181,172,-143,-250,172,172,-195,172,-191,-206,-202,-181,-214,172,172,-181,172,172,-181,172,-249,172,-231,-233,-244,-245,-198,-199,-193,-194,172,-208,-207,-203,-204,-216,-215,-182,172,-230,-232,172,-192,-209,-210,-205,-182,-217,-218,-222,172,172,172,-246,-200,-197,172,-212,-211,-220,-219,-223,-224,172,172,-196,-213,-221,-226,-225,-228,-227,-229,]),'LPAREN':([8,10,16,19,29,30,32,35,40,45,46,47,48,50,51,52,53,54,58,59,60,63,67,71,77,78,79,80,81,82,83,84,85,87,88,89,90,91,93,94,95,96,98,101,103,104,105,106,107,108,109,110,114,116,118,120,121,122,124,125,127,128,129,130,131,132,133,134,138,140,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,186,187,188,189,190,191,192,193,195,196,198,204,205,206,209,215,219,221,223,232,233,235,239,242,244,245,246,247,248,249,251,253,254,260,261,262,263,265,266,267,272,273,275,276,278,280,282,286,290,292,295,298,304,310,311,322,324,325,327,328,329,330,331,338,340,341,343,345,346,347,349,350,352,354,356,357,358,359,369,380,383,386,388,394,398,399,400,401,402,403,404,405,406,407,408,409,410,416,419,426,428,430,431,433,434,436,437,438,441,442,444,446,449,450,452,455,459,462,467,468,471,475,479,481,482,486,487,488,489,491,492,493,494,495,497,498,499,501,502,503,504,510,512,513,517,524,525,526,528,530,531,533,534,536,544,551,555,556,557,558,560,561,562,569,571,576,],[23,28,34,38,54,-29,62,54,54,62,-62,54,-61,101,-66,-63,-67,54,101,-64,-65,131,101,54,-99,-96,-97,101,62,-184,-174,101,-179,-180,-177,-175,-234,-240,-236,-176,-241,-239,-173,101,-181,-178,54,-237,-238,101,193,-235,101,54,54,-30,-106,54,54,54,54,-101,-105,-102,54,-103,-100,-146,101,101,101,-243,-247,101,-248,-163,-151,-166,-167,-157,-161,-152,-172,101,-154,-170,-165,-155,-160,-162,-156,-169,-158,-171,-153,-159,-164,-168,245,246,-186,-187,248,101,-185,-188,-189,260,-242,-58,-59,-71,-72,54,-107,54,54,54,101,-98,-260,-251,-181,-183,-182,101,101,54,54,101,62,-177,-201,260,-181,101,-190,101,54,54,54,-74,-68,-69,-108,54,-118,-117,-104,101,101,101,101,-181,101,101,-143,101,101,-250,101,101,101,-195,101,-191,-206,101,-202,101,-181,-214,101,-60,-134,-135,-137,-138,-73,-145,101,-181,101,101,-284,101,-285,-291,-294,-293,-290,-287,-292,-288,-286,-283,-289,-181,-249,-231,-233,-244,-245,-198,-199,101,-193,-194,-208,-207,-203,-204,-216,-215,-182,54,54,-70,101,101,-294,101,101,-230,-232,101,-192,-209,-210,101,-205,-182,-217,-218,101,-222,101,-136,-139,-140,-141,101,101,101,101,-246,-200,-197,-212,-211,-220,-219,-223,-224,101,-146,-196,-213,-221,-226,101,-225,-142,-228,-227,-229,]),'ELLIPSIS':([46,48,51,52,53,59,60,62,77,78,79,82,87,90,91,93,95,96,97,102,103,106,107,108,109,110,121,125,127,128,129,130,131,132,133,152,154,155,157,186,187,190,191,192,195,196,198,204,205,209,210,221,232,233,235,241,242,243,244,252,254,255,256,257,258,259,261,262,263,273,275,276,278,282,286,290,324,328,338,341,342,343,346,350,354,356,357,358,359,369,419,426,428,430,431,433,434,437,438,441,442,443,444,446,449,450,451,452,462,481,482,487,488,489,492,494,495,498,501,502,503,504,524,525,526,528,530,531,533,534,535,536,555,556,557,558,561,562,569,571,576,],[-62,-61,-66,-63,-67,-64,-65,124,-99,-96,-97,-184,-180,-234,-240,-236,-241,-239,-147,-31,-181,-237,-238,185,-149,-235,-106,215,219,-101,-105,-102,124,-103,-100,-150,-243,-247,-248,-186,-187,-185,-188,-189,-242,-58,-59,-71,-72,-107,124,219,-98,-260,-251,-32,-183,-148,-182,-62,-201,344,-66,-63,348,-67,351,185,-190,-74,-68,-69,-108,-118,-117,-104,-143,-250,-195,-191,-99,-206,-202,-214,-60,-134,-135,-137,-138,-73,-249,-231,-233,-244,-245,-198,-199,-193,-194,-208,-207,490,-203,-204,-216,-215,496,500,-70,-230,-232,-192,-209,-210,-205,-217,-218,-222,-136,-139,-140,-141,-246,-200,-197,-212,-211,-220,-219,-223,559,-224,-196,-213,-221,-226,-225,-142,-228,-227,-229,]),'VAR':([4,6,7,26,31,134,223,380,394,551,],[-5,-3,16,-4,-2,-146,16,-145,16,-146,]),'SHL':([82,87,90,91,93,95,96,97,102,103,106,107,109,110,119,152,154,155,157,158,186,187,190,191,192,195,233,235,238,239,241,242,243,244,250,254,261,263,310,314,324,328,332,333,338,339,341,343,346,349,350,379,381,386,391,396,416,417,419,423,426,428,430,431,433,434,437,438,439,441,442,444,446,449,450,452,470,481,482,485,487,488,489,492,493,494,495,498,511,514,522,524,525,526,527,528,530,531,533,534,536,545,546,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,175,-181,-237,-238,-149,-235,175,-150,-243,-247,-248,175,-186,-187,-185,-188,-189,-242,-260,-251,175,-181,175,-183,-148,-182,175,-201,-181,-190,-181,175,-143,-250,175,175,-195,175,-191,-206,-202,-181,-214,175,175,-181,175,175,-181,175,-249,175,-231,-233,-244,-245,-198,-199,-193,-194,175,-208,-207,-203,-204,-216,-215,-182,175,-230,-232,175,-192,-209,-210,-205,-182,-217,-218,-222,175,175,175,-246,-200,-197,175,-212,-211,-220,-219,-223,-224,175,175,-196,-213,-221,-226,-225,-228,-227,-229,]),'ID':([3,8,10,15,16,19,23,28,29,30,34,35,38,40,41,44,47,50,54,58,61,62,63,65,67,69,71,80,83,84,85,88,89,94,98,101,104,105,108,114,115,116,117,118,120,121,122,124,125,127,131,134,138,140,141,146,147,148,149,153,156,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,189,193,194,197,203,206,209,210,214,215,218,219,221,222,223,225,229,230,245,246,247,248,249,253,260,262,265,266,267,268,271,272,274,277,278,280,281,282,285,286,289,292,295,298,304,308,311,315,320,322,325,327,329,330,331,340,345,347,352,353,361,365,367,370,375,377,380,383,388,394,398,399,400,401,402,403,404,405,406,407,408,409,410,432,435,436,447,453,454,455,456,459,461,463,467,468,471,475,479,486,491,497,499,510,512,513,517,538,541,544,551,560,],[5,24,30,32,30,40,-10,-23,55,-29,-48,68,-36,72,24,30,79,103,113,103,30,127,132,30,103,40,145,103,-174,103,-179,-177,-175,-176,-173,103,-178,184,103,103,200,202,-76,205,-30,-106,208,212,216,220,221,-146,103,103,228,231,-9,-22,232,239,103,-163,-151,-166,-167,-157,-161,-152,-172,103,-154,-170,-165,-155,-160,-162,-156,-169,-158,-171,-153,-159,-164,-168,244,103,261,263,264,272,276,-107,127,282,284,286,288,220,290,310,-47,-35,326,103,103,335,337,103,-177,349,103,103,357,359,360,364,368,369,371,-108,373,374,-118,376,-117,378,103,103,103,386,393,386,413,414,416,103,239,103,103,103,103,103,103,103,452,-75,457,30,462,464,465,-145,103,103,310,-284,103,-285,-291,-294,-293,-290,-287,-292,-288,-286,-283,-289,483,484,103,493,501,502,504,505,507,508,509,103,103,-294,103,103,103,103,103,103,386,103,103,103,562,563,386,-146,103,]),'TYPECAST':([50,58,67,80,83,84,85,88,89,94,98,101,104,108,114,134,138,140,153,156,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,189,193,223,245,246,249,253,260,262,265,292,295,298,304,311,322,325,327,329,330,331,340,345,347,352,380,383,388,394,398,399,400,401,402,403,404,405,406,407,408,409,410,436,467,468,471,475,479,486,491,497,499,510,512,513,517,544,551,560,],[105,105,105,105,-174,105,-179,-177,-175,-176,-173,105,-178,105,105,-146,105,105,105,105,-163,-151,-166,-167,-157,-161,-152,-172,105,-154,-170,-165,-155,-160,-162,-156,-169,-158,-171,-153,-159,-164,-168,105,105,105,105,105,105,-177,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-145,105,105,105,-284,105,-285,-291,-294,-293,-290,-287,-292,-288,-286,-283,-289,105,105,105,-294,105,105,105,105,105,105,105,105,105,105,105,-146,105,]),'AND':([50,58,67,80,82,83,84,85,87,88,89,90,91,93,94,95,96,97,98,101,102,103,104,106,107,108,109,110,114,119,134,138,140,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,186,187,189,190,191,192,193,195,223,233,235,238,239,241,242,243,244,245,246,249,250,253,254,260,261,262,263,265,292,295,298,304,310,311,314,322,324,325,327,328,329,330,331,332,333,338,339,340,341,343,345,346,347,349,350,352,379,380,381,383,386,388,391,394,396,398,399,400,401,402,403,404,405,406,407,408,409,410,416,417,419,423,426,428,430,431,433,434,436,437,438,439,441,442,444,446,449,450,452,467,468,470,471,475,479,481,482,485,486,487,488,489,491,492,493,494,495,497,498,499,510,511,512,513,514,517,522,524,525,526,527,528,530,531,533,534,536,544,545,546,551,555,556,557,558,560,561,569,571,576,],[104,104,104,104,-184,-174,104,-179,-180,-177,-175,-234,-240,-236,-176,-241,-239,-147,-173,104,177,-181,-178,-237,-238,104,-149,-235,104,177,-146,104,104,-150,104,-243,-247,104,-248,177,-163,-151,-166,-167,-157,-161,-152,-172,104,-154,-170,-165,-155,-160,-162,-156,-169,-158,-171,-153,-159,-164,-168,-186,-187,104,-185,-188,-189,104,-242,104,-260,-251,177,-181,177,-183,-148,-182,104,104,104,177,-177,-201,104,-181,104,-190,104,104,104,104,104,-181,104,177,104,-143,104,104,-250,104,104,104,177,177,-195,177,104,-191,-206,104,-202,104,-181,-214,104,177,-145,177,104,-181,104,177,104,177,-284,104,-285,-291,-294,-293,-290,-287,-292,-288,-286,-283,-289,-181,177,-249,177,-231,-233,-244,-245,-198,-199,104,-193,-194,177,-208,-207,-203,-204,-216,-215,-182,104,104,177,-294,104,104,-230,-232,177,104,-192,-209,-210,104,-205,-182,-217,-218,104,-222,104,104,177,104,104,177,104,177,-246,-200,-197,177,-212,-211,-220,-219,-223,-224,104,177,177,-146,-196,-213,-221,-226,104,-225,-228,-227,-229,]),'MAP':([29,30,35,40,47,50,54,58,63,67,71,80,83,84,85,88,89,94,98,101,104,105,108,114,116,118,120,121,122,124,125,127,131,134,138,140,153,156,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,189,193,206,209,215,219,221,223,245,246,247,248,249,253,260,262,265,266,267,272,278,280,282,286,292,295,298,304,311,322,325,327,329,330,331,340,345,347,352,380,383,388,394,398,399,400,401,402,403,404,405,406,407,408,409,410,436,455,459,467,468,471,475,479,486,491,497,499,510,512,513,517,544,551,560,],[56,-29,56,56,56,56,56,56,56,56,56,56,-174,56,-179,-177,-175,-176,-173,56,-178,56,56,56,56,56,-30,-106,56,56,56,56,56,-146,56,56,56,56,-163,-151,-166,-167,-157,-161,-152,-172,56,-154,-170,-165,-155,-160,-162,-156,-169,-158,-171,-153,-159,-164,-168,56,56,56,-107,56,56,56,56,56,56,56,56,56,-177,56,56,56,56,56,56,-108,56,-118,-117,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-145,56,56,56,-284,56,-285,-291,-294,-293,-290,-287,-292,-288,-286,-283,-289,56,56,56,56,56,-294,56,56,56,56,56,56,56,56,56,56,56,-146,56,]),'MOD_ASSIGN':([82,87,90,91,93,95,96,97,103,106,107,109,110,152,154,155,157,186,187,190,191,192,195,233,235,241,242,243,244,254,263,310,313,314,324,328,338,341,343,346,350,386,389,391,396,416,417,419,426,428,430,431,433,434,437,438,441,442,444,446,449,450,481,482,487,488,489,492,494,495,498,524,525,526,528,530,531,533,534,536,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,-181,-237,-238,-149,-235,-150,-243,-247,-248,-186,-187,-185,-188,-189,-242,-260,-251,-32,-183,-148,-182,-201,-190,-181,405,-31,-143,-250,-195,-191,-206,-202,-214,-181,405,-31,-31,-181,-31,-249,-231,-233,-244,-245,-198,-199,-193,-194,-208,-207,-203,-204,-216,-215,-230,-232,-192,-209,-210,-205,-217,-218,-222,-246,-200,-197,-212,-211,-220,-219,-223,-224,-196,-213,-221,-226,-225,-228,-227,-229,]),'LBRACE':([46,48,51,52,53,57,59,60,64,77,78,79,82,86,87,90,91,92,93,95,96,97,100,102,103,106,107,109,110,111,121,128,129,130,132,133,134,151,152,153,154,155,157,186,187,190,191,192,195,196,198,204,205,209,223,232,233,235,241,242,243,244,252,254,256,257,259,263,273,275,276,278,290,296,297,304,311,314,321,324,327,328,329,330,331,334,335,338,341,342,343,346,350,354,356,357,358,359,369,380,386,387,390,391,394,396,411,412,416,417,419,426,428,430,431,433,434,437,438,441,442,444,446,449,450,462,466,470,475,478,481,482,483,487,488,489,492,494,495,498,501,502,503,504,510,514,522,523,524,525,526,528,530,531,533,534,536,543,544,545,546,551,555,556,557,558,561,562,564,568,569,571,576,],[-62,-61,-66,-63,-67,117,-64,-65,134,-99,-96,-97,-184,153,-180,-234,-240,153,-236,-241,-239,-147,153,-31,-181,-237,-238,-149,-235,153,-106,-101,-105,-102,-103,-100,-146,134,-150,153,-243,-247,-248,-186,-187,-185,-188,-189,-242,-58,-59,-71,-72,-107,134,-98,-260,-251,-32,-183,-148,-182,153,-201,153,153,153,-190,-74,-68,-69,-108,-104,-277,-276,134,397,-275,-278,-143,153,-250,153,153,153,153,153,-195,-191,134,-206,-202,-214,-60,-134,-135,-137,-138,-73,-145,-181,134,134,134,134,476,-281,-280,-181,134,-249,-231,-233,-244,-245,-198,-199,-193,-194,-208,-207,-203,-204,-216,-215,-70,-306,-331,515,-282,-230,-232,153,-192,-209,-210,-205,-217,-218,-222,-136,-139,-140,-141,-279,547,134,134,-246,-200,-197,-212,-211,-220,-219,-223,-224,-327,-279,-329,-330,-146,-196,-213,-221,-226,-225,-142,-328,134,-228,-227,-229,]),'STRUCT':([29,30,35,40,47,50,54,58,63,67,71,80,83,84,85,88,89,94,98,101,104,105,108,114,116,118,120,121,122,124,125,127,131,134,138,140,153,156,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,189,193,206,209,215,219,221,223,245,246,247,248,249,253,260,262,265,266,267,272,278,280,282,286,292,295,298,304,311,322,325,327,329,330,331,340,345,347,352,380,383,388,394,398,399,400,401,402,403,404,405,406,407,408,409,410,436,455,459,467,468,471,475,479,486,491,497,499,510,512,513,517,544,551,560,],[57,-29,57,57,57,57,57,57,57,57,57,57,-174,57,-179,-177,-175,-176,-173,57,-178,57,57,57,57,57,-30,-106,57,57,57,57,57,-146,57,57,57,57,-163,-151,-166,-167,-157,-161,-152,-172,57,-154,-170,-165,-155,-160,-162,-156,-169,-158,-171,-153,-159,-164,-168,57,57,57,-107,57,57,57,57,57,57,57,57,57,-177,57,57,57,57,57,57,-108,57,-118,-117,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-145,57,57,57,-284,57,-285,-291,-294,-293,-290,-287,-292,-288,-286,-283,-289,57,57,57,57,57,-294,57,57,57,57,57,57,57,57,57,57,57,-146,57,]),'XOR_ASSIGN':([82,87,90,91,93,95,96,97,103,106,107,109,110,152,154,155,157,186,187,190,191,192,195,233,235,241,242,243,244,254,263,310,313,314,324,328,338,341,343,346,350,386,389,391,396,416,417,419,426,428,430,431,433,434,437,438,441,442,444,446,449,450,481,482,487,488,489,492,494,495,498,524,525,526,528,530,531,533,534,536,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,-181,-237,-238,-149,-235,-150,-243,-247,-248,-186,-187,-185,-188,-189,-242,-260,-251,-32,-183,-148,-182,-201,-190,-181,401,-31,-143,-250,-195,-191,-206,-202,-214,-181,401,-31,-31,-181,-31,-249,-231,-233,-244,-245,-198,-199,-193,-194,-208,-207,-203,-204,-216,-215,-230,-232,-192,-209,-210,-205,-217,-218,-222,-246,-200,-197,-212,-211,-220,-219,-223,-224,-196,-213,-221,-226,-225,-228,-227,-229,]),'INT':([50,58,67,80,83,84,85,88,89,94,98,101,104,108,114,134,138,140,153,156,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,189,193,223,245,246,249,253,260,262,265,292,295,298,304,311,322,325,327,329,330,331,340,345,347,352,380,383,388,394,398,399,400,401,402,403,404,405,406,407,408,409,410,436,467,468,471,475,479,486,491,497,499,510,512,513,517,544,551,560,],[106,106,106,106,-174,106,-179,-177,-175,-176,-173,106,-178,106,106,-146,106,106,106,106,-163,-151,-166,-167,-157,-161,-152,-172,106,-154,-170,-165,-155,-160,-162,-156,-169,-158,-171,-153,-159,-164,-168,106,106,106,106,106,106,-177,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-145,106,106,106,-284,106,-285,-291,-294,-293,-290,-287,-292,-288,-286,-283,-289,106,106,106,-294,106,106,106,106,106,106,106,106,106,106,106,-146,106,]),'FLOAT':([50,58,67,80,83,84,85,88,89,94,98,101,104,108,114,134,138,140,153,156,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,189,193,223,245,246,249,253,260,262,265,292,295,298,304,311,322,325,327,329,330,331,340,345,347,352,380,383,388,394,398,399,400,401,402,403,404,405,406,407,408,409,410,436,467,468,471,475,479,486,491,497,499,510,512,513,517,544,551,560,],[107,107,107,107,-174,107,-179,-177,-175,-176,-173,107,-178,107,107,-146,107,107,107,107,-163,-151,-166,-167,-157,-161,-152,-172,107,-154,-170,-165,-155,-160,-162,-156,-169,-158,-171,-153,-159,-164,-168,107,107,107,107,107,107,-177,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-145,107,107,107,-284,107,-285,-291,-294,-293,-290,-287,-292,-288,-286,-283,-289,107,107,107,-294,107,107,107,107,107,107,107,107,107,107,107,-146,107,]),'OR_ASSIGN':([82,87,90,91,93,95,96,97,103,106,107,109,110,152,154,155,157,186,187,190,191,192,195,233,235,241,242,243,244,254,263,310,313,314,324,328,338,341,343,346,350,386,389,391,396,416,417,419,426,428,430,431,433,434,437,438,441,442,444,446,449,450,481,482,487,488,489,492,494,495,498,524,525,526,528,530,531,533,534,536,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,-181,-237,-238,-149,-235,-150,-243,-247,-248,-186,-187,-185,-188,-189,-242,-260,-251,-32,-183,-148,-182,-201,-190,-181,404,-31,-143,-250,-195,-191,-206,-202,-214,-181,404,-31,-31,-181,-31,-249,-231,-233,-244,-245,-198,-199,-193,-194,-208,-207,-203,-204,-216,-215,-230,-232,-192,-209,-210,-205,-217,-218,-222,-246,-200,-197,-212,-211,-220,-219,-223,-224,-196,-213,-221,-226,-225,-228,-227,-229,]),'LBRACK':([29,30,35,40,47,50,54,56,58,63,67,71,80,82,83,84,85,87,88,89,90,91,93,94,95,96,98,101,103,104,105,106,107,108,109,110,114,116,118,120,121,122,124,125,127,131,134,138,140,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,186,187,189,190,191,192,193,195,206,209,215,219,221,223,233,235,239,242,244,245,246,247,248,249,253,254,260,261,262,263,265,266,267,272,278,280,282,286,292,295,298,304,310,311,322,324,325,327,328,329,330,331,338,340,341,343,345,346,347,349,350,352,380,383,386,388,394,398,399,400,401,402,403,404,405,406,407,408,409,410,416,419,426,428,430,431,433,434,436,437,438,441,442,444,446,449,450,452,455,459,467,468,471,475,479,481,482,486,487,488,489,491,492,493,494,495,497,498,499,510,512,513,517,524,525,526,528,530,531,533,534,536,544,551,555,556,557,558,560,561,569,571,576,],[58,-29,58,58,58,108,58,116,108,58,108,58,108,-184,-174,108,-179,-180,-177,-175,-234,-240,-236,-176,-241,-239,-173,108,-181,-178,58,-237,-238,108,189,-235,108,58,58,-30,-106,58,58,58,58,58,-146,108,108,108,-243,-247,108,-248,-163,-151,-166,-167,-157,-161,-152,-172,108,-154,-170,-165,-155,-160,-162,-156,-169,-158,-171,-153,-159,-164,-168,-186,-187,108,-185,-188,-189,262,-242,58,-107,58,58,58,108,-260,-251,-181,-183,-182,108,108,58,58,108,-177,-201,262,-181,108,-190,108,58,58,58,-108,58,-118,-117,108,108,108,108,-181,108,108,-143,108,108,-250,108,108,108,-195,108,-191,-206,108,-202,108,-181,-214,108,-145,108,-181,108,108,-284,108,-285,-291,-294,-293,-290,-287,-292,-288,-286,-283,-289,-181,-249,-231,-233,-244,-245,-198,-199,108,-193,-194,-208,-207,-203,-204,-216,-215,-182,58,58,108,108,-294,108,108,-230,-232,108,-192,-209,-210,108,-205,-182,-217,-218,108,-222,108,108,108,108,108,-246,-200,-197,-212,-211,-220,-219,-223,-224,108,-146,-196,-213,-221,-226,108,-225,-228,-227,-229,]),'ADD_ASSIGN':([82,87,90,91,93,95,96,97,103,106,107,109,110,152,154,155,157,186,187,190,191,192,195,233,235,241,242,243,244,254,263,310,313,314,324,328,338,341,343,346,350,386,389,391,396,416,417,419,426,428,430,431,433,434,437,438,441,442,444,446,449,450,481,482,487,488,489,492,494,495,498,524,525,526,528,530,531,533,534,536,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,-181,-237,-238,-149,-235,-150,-243,-247,-248,-186,-187,-185,-188,-189,-242,-260,-251,-32,-183,-148,-182,-201,-190,-181,409,-31,-143,-250,-195,-191,-206,-202,-214,-181,409,-31,-31,-181,-31,-249,-231,-233,-244,-245,-198,-199,-193,-194,-208,-207,-203,-204,-216,-215,-230,-232,-192,-209,-210,-205,-217,-218,-222,-246,-200,-197,-212,-211,-220,-219,-223,-224,-196,-213,-221,-226,-225,-228,-227,-229,]),'BREAK':([134,223,380,394,551,],[-146,315,-145,315,-146,]),'LEQ':([82,87,90,91,93,95,96,97,102,103,106,107,109,110,119,152,154,155,157,158,186,187,190,191,192,195,233,235,238,239,241,242,243,244,250,254,261,263,310,314,324,328,332,333,338,339,341,343,346,349,350,379,381,386,391,396,416,417,419,423,426,428,430,431,433,434,437,438,439,441,442,444,446,449,450,452,470,481,482,485,487,488,489,492,493,494,495,498,511,514,522,524,525,526,527,528,530,531,533,534,536,545,546,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,179,-181,-237,-238,-149,-235,179,-150,-243,-247,-248,179,-186,-187,-185,-188,-189,-242,-260,-251,179,-181,179,-183,-148,-182,179,-201,-181,-190,-181,179,-143,-250,179,179,-195,179,-191,-206,-202,-181,-214,179,179,-181,179,179,-181,179,-249,179,-231,-233,-244,-245,-198,-199,-193,-194,179,-208,-207,-203,-204,-216,-215,-182,179,-230,-232,179,-192,-209,-210,-205,-182,-217,-218,-222,179,179,179,-246,-200,-197,179,-212,-211,-220,-219,-223,-224,179,179,-196,-213,-221,-226,-225,-228,-227,-229,]),'CONTINUE':([134,223,380,394,551,],[-146,308,-145,308,-146,]),'MUL_ASSIGN':([82,87,90,91,93,95,96,97,103,106,107,109,110,152,154,155,157,186,187,190,191,192,195,233,235,241,242,243,244,254,263,310,313,314,324,328,338,341,343,346,350,386,389,391,396,416,417,419,426,428,430,431,433,434,437,438,441,442,444,446,449,450,481,482,487,488,489,492,494,495,498,524,525,526,528,530,531,533,534,536,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,-181,-237,-238,-149,-235,-150,-243,-247,-248,-186,-187,-185,-188,-189,-242,-260,-251,-32,-183,-148,-182,-201,-190,-181,400,-31,-143,-250,-195,-191,-206,-202,-214,-181,400,-31,-31,-181,-31,-249,-231,-233,-244,-245,-198,-199,-193,-194,-208,-207,-203,-204,-216,-215,-230,-232,-192,-209,-210,-205,-217,-218,-222,-246,-200,-197,-212,-211,-220,-219,-223,-224,-196,-213,-221,-226,-225,-228,-227,-229,]),'NOT':([50,58,67,80,83,84,85,88,89,94,98,101,104,108,114,134,138,140,153,156,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,189,193,223,245,246,249,253,260,262,265,292,295,298,304,311,322,325,327,329,330,331,340,345,347,352,380,383,388,394,398,399,400,401,402,403,404,405,406,407,408,409,410,436,467,468,471,475,479,486,491,497,499,510,512,513,517,544,551,560,],[89,89,89,89,-174,89,-179,-177,-175,-176,-173,89,-178,89,89,-146,89,89,89,89,-163,-151,-166,-167,-157,-161,-152,-172,89,-154,-170,-165,-155,-160,-162,-156,-169,-158,-171,-153,-159,-164,-168,89,89,89,89,89,89,-177,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-145,89,89,89,-284,89,-285,-291,-294,-293,-290,-287,-292,-288,-286,-283,-289,89,89,89,-294,89,89,89,89,89,89,89,89,89,89,89,-146,89,]),'$end':([2,4,6,7,26,31,],[0,-5,-3,-1,-4,-2,]),'TYPE':([4,6,7,26,31,134,223,380,394,551,],[-5,-3,19,-4,-2,-146,19,-145,19,-146,]),'OR':([82,87,90,91,93,95,96,97,102,103,106,107,109,110,119,152,154,155,157,158,186,187,190,191,192,195,233,235,238,239,241,242,243,244,250,254,261,263,310,314,324,328,332,333,338,339,341,343,346,349,350,379,381,386,391,396,416,417,419,423,426,428,430,431,433,434,437,438,439,441,442,444,446,449,450,452,470,481,482,485,487,488,489,492,493,494,495,498,511,514,522,524,525,526,527,528,530,531,533,534,536,545,546,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,180,-181,-237,-238,-149,-235,180,-150,-243,-247,-248,180,-186,-187,-185,-188,-189,-242,-260,-251,180,-181,180,-183,-148,-182,180,-201,-181,-190,-181,180,-143,-250,180,180,-195,180,-191,-206,-202,-181,-214,180,180,-181,180,180,-181,180,-249,180,-231,-233,-244,-245,-198,-199,-193,-194,180,-208,-207,-203,-204,-216,-215,-182,180,-230,-232,180,-192,-209,-210,-205,-182,-217,-218,-222,180,180,180,-246,-200,-197,180,-212,-211,-220,-219,-223,-224,180,180,-196,-213,-221,-226,-225,-228,-227,-229,]),'EQL':([82,87,90,91,93,95,96,97,102,103,106,107,109,110,119,152,154,155,157,158,186,187,190,191,192,195,233,235,238,239,241,242,243,244,250,254,261,263,310,314,324,328,332,333,338,339,341,343,346,349,350,379,381,386,391,396,416,417,419,423,426,428,430,431,433,434,437,438,439,441,442,444,446,449,450,452,470,481,482,485,487,488,489,492,493,494,495,498,511,514,522,524,525,526,527,528,530,531,533,534,536,545,546,555,556,557,558,561,569,571,576,],[-184,-180,-234,-240,-236,-241,-239,-147,174,-181,-237,-238,-149,-235,174,-150,-243,-247,-248,174,-186,-187,-185,-188,-189,-242,-260,-251,174,-181,174,-183,-148,-182,174,-201,-181,-190,-181,174,-143,-250,174,174,-195,174,-191,-206,-202,-181,-214,174,174,-181,174,174,-181,174,-249,174,-231,-233,-244,-245,-198,-199,-193,-194,174,-208,-207,-203,-204,-216,-215,-182,174,-230,-232,174,-192,-209,-210,-205,-182,-217,-218,-222,174,174,174,-246,-200,-197,174,-212,-211,-220,-219,-223,-224,174,174,-196,-213,-221,-226,-225,-228,-227,-229,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Conversion':([50,58,67,80,84,101,108,114,138,140,153,156,167,189,193,223,245,246,249,260,262,265,292,295,298,304,311,322,325,327,329,330,331,340,345,347,352,383,388,394,399,436,467,468,475,479,486,491,497,499,510,512,513,517,544,560,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'ContinueStmt':([223,394,],[291,291,]),'Statement':([223,394,],[293,474,]),'IfStmt':([223,394,523,568,],[294,294,553,574,]),'AliasDecl':([19,69,],[37,37,]),'BinaryOp':([102,119,158,238,241,250,314,332,333,339,379,381,391,396,417,423,439,470,485,511,514,522,527,545,546,],[167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,]),'ExprCaseClause':([477,516,548,565,],[521,521,521,521,]),'ParameterDecl':([62,131,210,],[126,126,279,]),'StatementList':([134,551,],[224,567,]),'TypeAssertion':([109,],[191,]),'TypeSpec_curl':([38,],[69,]),'RelOp':([102,119,158,238,241,250,314,332,333,339,379,381,391,396,417,423,439,470,485,511,514,522,527,545,546,],[178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,]),'VarDecl':([7,223,394,],[18,18,18,]),'Tag':([270,366,368,506,507,508,563,],[362,458,460,539,540,542,572,]),'PrimaryExpr':([50,58,67,80,84,101,108,114,138,140,153,156,167,189,193,223,245,246,249,260,262,265,292,295,298,304,311,322,325,327,329,330,331,340,345,347,352,383,388,394,399,436,467,468,475,479,486,491,497,499,510,512,513,517,544,560,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'TypeSpec':([19,69,],[39,143,]),'Index':([109,],[186,]),'Parameters':([32,45,63,81,251,],[63,63,128,63,63,]),'UnaryOp':([50,58,67,80,84,101,108,114,138,140,153,156,167,189,193,223,245,246,249,260,262,265,292,295,298,304,311,322,325,327,329,330,331,340,345,347,352,383,388,394,399,436,467,468,475,479,486,491,497,499,510,512,513,517,544,560,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'SourceFile':([0,],[2,]),'ImportPath':([8,24,25,41,],[22,42,43,22,]),'TopLevelDecl':([7,],[12,]),'ExprSwitchStmt':([223,394,],[299,299,]),'IdentifierList':([10,16,44,61,65,223,304,311,322,367,394,510,544,],[29,35,29,120,35,300,385,300,300,459,300,300,300,]),'TypeLit':([29,35,40,47,54,63,71,105,116,118,122,124,125,127,131,193,206,215,219,221,247,248,253,260,266,267,272,280,455,459,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'GoStmt':([223,394,],[301,301,]),'DeferStmt':([223,394,],[302,302,]),'PackageClause':([0,],[1,]),'ExprCaseClause_curl':([397,476,515,547,],[477,516,548,565,]),'Selector':([109,],[190,]),'RangeClause':([304,],[387,]),'IncDecStmt':([223,304,311,322,394,510,544,],[297,297,297,297,297,297,297,]),'GotoStmt':([223,394,],[303,303,]),'AddOp':([102,119,158,238,241,250,314,332,333,339,379,381,391,396,417,423,439,470,485,511,514,522,527,545,546,],[168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,]),'PointerType':([29,35,40,47,54,63,71,105,116,118,122,124,125,127,131,193,206,215,219,221,247,248,253,260,266,267,272,280,455,459,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'ConstSpec_curl':([28,],[44,]),'CompositeLit':([50,58,67,80,84,101,108,114,138,140,153,156,167,189,193,223,245,246,249,260,262,265,292,295,298,304,311,322,325,327,329,330,331,340,345,347,352,383,388,394,399,436,467,468,475,479,486,491,497,499,510,512,513,517,544,560,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'LabelledStmt':([223,394,],[305,305,]),'Block':([64,151,223,304,342,387,390,391,394,417,522,523,568,],[135,233,306,392,233,469,472,473,306,480,552,554,575,]),'ConstDecl':([7,223,394,],[17,17,17,]),'SwitchStmt':([223,394,],[307,307,]),'VarSpec':([16,65,],[33,137,]),'Result':([63,],[133,]),'Assignment':([223,304,311,322,394,510,544,],[296,296,296,296,296,296,296,]),'ImportSpec_curl':([23,],[41,]),'TopLevelDecl_curl':([6,],[7,]),'Signature':([32,45,81,251,],[64,77,151,342,]),'Literal':([50,58,67,80,84,101,108,114,138,140,153,156,167,189,193,223,245,246,249,260,262,265,292,295,298,304,311,322,325,327,329,330,331,340,345,347,352,383,388,394,399,436,467,468,475,479,486,491,497,499,510,512,513,517,544,560,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'Statement_curl':([134,551,],[223,223,]),'ImportDecl':([6,],[9,]),'AssignOp':([313,389,],[399,399,]),'Declaration':([7,223,394,],[13,312,312,]),'StructType':([29,35,40,47,50,54,58,63,67,71,80,84,101,105,108,114,116,118,122,124,125,127,131,138,140,153,156,167,189,193,206,215,219,221,223,245,246,247,248,249,253,260,262,265,266,267,272,280,292,295,298,304,311,322,325,327,329,330,331,340,345,347,352,383,388,394,399,436,455,459,467,468,475,479,486,491,497,499,510,512,513,517,544,560,],[52,52,52,52,111,52,111,52,111,52,111,111,111,52,111,111,52,52,52,52,52,52,52,111,111,111,111,111,111,257,52,52,52,52,111,111,111,52,52,111,52,257,111,111,52,52,52,52,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,52,52,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'MulOp':([102,119,158,238,241,250,314,332,333,339,379,381,391,396,417,423,439,470,485,511,514,522,527,545,546,],[171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,]),'EmbeddedField':([203,],[270,]),'LiteralValue':([86,92,100,111,153,252,256,257,259,327,329,330,331,334,335,483,],[154,155,157,195,237,154,155,195,157,237,422,422,422,430,431,524,]),'ExpressionList':([50,67,80,114,138,140,193,223,265,298,304,311,322,325,345,352,383,394,399,468,499,510,517,544,],[99,139,150,199,226,227,258,313,355,382,389,313,313,418,443,451,466,313,478,466,535,313,550,313,]),'SimpleStmt':([223,304,311,322,394,510,544,],[318,384,395,415,318,543,564,]),'Expression':([50,58,67,80,101,108,114,138,140,153,156,189,193,223,245,246,249,260,262,265,292,295,298,304,311,322,325,327,329,330,331,340,345,347,352,383,388,394,399,436,467,468,475,479,486,491,497,499,510,512,513,517,544,560,],[102,119,102,102,158,119,102,102,102,238,241,250,102,314,332,333,339,158,119,102,379,381,102,391,396,417,102,238,423,423,423,439,102,241,102,102,470,314,102,485,511,102,514,522,527,241,241,102,314,545,546,102,314,241,]),'FieldDecl_curl':([117,],[203,]),'FunctionDecl':([7,],[11,]),'ExprSwitchCase':([477,516,548,565,],[519,519,519,519,]),'ReturnStmt':([223,394,],[316,316,]),'ParaIdList':([62,131,210,],[125,125,125,]),'FunctionType':([29,35,40,47,54,63,71,105,116,118,122,124,125,127,131,193,206,215,219,221,247,248,253,260,266,267,272,280,455,459,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'FallthroughStmt':([223,394,],[317,317,]),'Slice':([109,],[187,]),'ArrayType':([29,35,40,47,50,54,58,63,67,71,80,84,101,105,108,114,116,118,122,124,125,127,131,138,140,153,156,167,189,193,206,215,219,221,223,245,246,247,248,249,253,260,262,265,266,267,272,280,292,295,298,304,311,322,325,327,329,330,331,340,345,347,352,383,388,394,399,436,455,459,467,468,475,479,486,491,497,499,510,512,513,517,544,560,],[46,46,46,46,86,46,86,46,86,46,86,86,86,46,86,86,46,46,46,46,46,46,46,86,86,86,86,86,86,252,46,46,46,46,86,86,86,46,46,86,46,252,86,86,46,46,46,46,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,46,46,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'ImportDecl_curl':([4,],[6,]),'ParameterList':([62,131,],[123,123,]),'ForStmt':([223,394,],[319,319,]),'Arguments':([109,],[192,]),'VarSpec_curl':([34,],[65,]),'ConstSpec':([10,44,],[27,76,]),'ElementList':([153,],[234,]),'ImportSpec':([8,41,],[21,74,]),'Type':([29,35,40,47,54,63,71,105,116,118,122,124,125,127,131,193,206,215,219,221,247,248,253,260,266,267,272,280,455,459,],[49,66,70,78,112,130,144,183,201,204,207,211,213,217,112,255,275,283,287,217,334,336,78,112,356,358,366,372,503,506,]),'SliceType':([29,35,40,47,50,54,58,63,67,71,80,84,101,105,108,114,116,118,122,124,125,127,131,138,140,153,156,167,189,193,206,215,219,221,223,245,246,247,248,249,253,260,262,265,266,267,272,280,292,295,298,304,311,322,325,327,329,330,331,340,345,347,352,383,388,394,399,436,455,459,467,468,475,479,486,491,497,499,510,512,513,517,544,560,],[51,51,51,51,92,51,92,51,92,51,92,92,92,51,92,92,51,51,51,51,51,51,51,92,92,92,92,92,92,256,51,51,51,51,92,92,92,51,51,92,51,256,92,92,51,51,51,51,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,51,51,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'TypeDecl':([7,223,394,],[14,14,14,]),'UnaryExpr':([50,58,67,80,84,101,108,114,138,140,153,156,167,189,193,223,245,246,249,260,262,265,292,295,298,304,311,322,325,327,329,330,331,340,345,347,352,383,388,394,399,436,467,468,475,479,486,491,497,499,510,512,513,517,544,560,],[97,97,97,97,152,97,97,97,97,97,97,97,243,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'Element':([153,327,329,330,331,],[236,236,421,424,425,]),'MapType':([29,35,40,47,50,54,58,63,67,71,80,84,101,105,108,114,116,118,122,124,125,127,131,138,140,153,156,167,189,193,206,215,219,221,223,245,246,247,248,249,253,260,262,265,266,267,272,280,292,295,298,304,311,322,325,327,329,330,331,340,345,347,352,383,388,394,399,436,455,459,467,468,475,479,486,491,497,499,510,512,513,517,544,560,],[53,53,53,53,100,53,100,53,100,53,100,100,100,53,100,100,53,53,53,53,53,53,53,100,100,100,100,100,100,259,53,53,53,53,100,100,100,53,53,100,53,259,100,100,53,53,53,53,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,53,53,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'ForClause':([304,],[390,]),'ShortVarDecl':([223,304,311,322,394,510,544,],[321,321,321,321,321,321,321,]),'FunctionLit':([50,58,67,80,84,101,108,114,138,140,153,156,167,189,193,223,245,246,249,260,262,265,292,295,298,304,311,322,325,327,329,330,331,340,345,347,352,383,388,394,399,436,467,468,475,479,486,491,497,499,510,512,513,517,544,560,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'TypeDef':([19,69,],[36,36,]),'FieldDecl':([203,],[269,]),'BreakStmt':([223,394,],[323,323,]),'KeyedElement':([153,327,],[240,420,]),'BasicLit':([50,58,67,80,84,101,108,114,138,140,153,156,167,189,193,223,245,246,249,260,262,265,292,295,298,304,311,322,325,327,329,330,331,340,345,347,352,383,388,394,399,436,467,468,475,479,486,491,497,499,510,512,513,517,544,560,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> SourceFile","S'",1,None,None,None),
  ('SourceFile -> PackageClause SEMICOLON ImportDecl_curl TopLevelDecl_curl','SourceFile',4,'p_SourceFile','parsertree.py',34),
  ('TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON','TopLevelDecl_curl',3,'p_TopLevelDecl_curl','parsertree.py',45),
  ('TopLevelDecl_curl -> <empty>','TopLevelDecl_curl',0,'p_TopLevelDecl_curl','parsertree.py',46),
  ('ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON','ImportDecl_curl',3,'p_ImportDecl_curl','parsertree.py',57),
  ('ImportDecl_curl -> <empty>','ImportDecl_curl',0,'p_ImportDecl_curl','parsertree.py',58),
  ('PackageClause -> PACKAGE ID','PackageClause',2,'p_PackageClause','parsertree.py',69),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_ImportDecl','parsertree.py',80),
  ('ImportDecl -> IMPORT LPAREN ImportSpec_curl RPAREN','ImportDecl',4,'p_ImportDecl','parsertree.py',81),
  ('ImportSpec_curl -> ImportSpec_curl ImportSpec SEMICOLON','ImportSpec_curl',3,'p_ImportSpec_curl','parsertree.py',92),
  ('ImportSpec_curl -> <empty>','ImportSpec_curl',0,'p_ImportSpec_curl','parsertree.py',93),
  ('ImportSpec -> DOT ImportPath','ImportSpec',2,'p_ImportSpec','parsertree.py',104),
  ('ImportSpec -> ID ImportPath','ImportSpec',2,'p_ImportSpec','parsertree.py',105),
  ('ImportSpec -> ImportPath','ImportSpec',1,'p_ImportSpec','parsertree.py',106),
  ('ImportPath -> STRING','ImportPath',1,'p_ImportPath','parsertree.py',117),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_TopLevelDecl','parsertree.py',128),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_TopLevelDecl','parsertree.py',129),
  ('Declaration -> ConstDecl','Declaration',1,'p_Declaration','parsertree.py',140),
  ('Declaration -> TypeDecl','Declaration',1,'p_Declaration','parsertree.py',141),
  ('Declaration -> VarDecl','Declaration',1,'p_Declaration','parsertree.py',142),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_ConstDecl','parsertree.py',153),
  ('ConstDecl -> CONST LPAREN ConstSpec_curl RPAREN','ConstDecl',4,'p_ConstDecl','parsertree.py',154),
  ('ConstSpec_curl -> ConstSpec_curl ConstSpec SEMICOLON','ConstSpec_curl',3,'p_ConstSpec_curl','parsertree.py',165),
  ('ConstSpec_curl -> <empty>','ConstSpec_curl',0,'p_ConstSpec_curl','parsertree.py',166),
  ('ConstSpec -> IdentifierList ID ASSIGN ExpressionList','ConstSpec',4,'p_ConstSpec','parsertree.py',177),
  ('ConstSpec -> IdentifierList ID DOT ID ASSIGN ExpressionList','ConstSpec',6,'p_ConstSpec','parsertree.py',178),
  ('ConstSpec -> IdentifierList Type ASSIGN ExpressionList','ConstSpec',4,'p_ConstSpec','parsertree.py',179),
  ('ConstSpec -> IdentifierList ASSIGN ExpressionList','ConstSpec',3,'p_ConstSpec','parsertree.py',180),
  ('ConstSpec -> IdentifierList','ConstSpec',1,'p_ConstSpec','parsertree.py',181),
  ('IdentifierList -> ID','IdentifierList',1,'p_IdentifierList','parsertree.py',192),
  ('IdentifierList -> ID COMMA IdentifierList','IdentifierList',3,'p_IdentifierList','parsertree.py',193),
  ('ExpressionList -> Expression','ExpressionList',1,'p_ExpressionList','parsertree.py',204),
  ('ExpressionList -> ExpressionList COMMA Expression','ExpressionList',3,'p_ExpressionList','parsertree.py',205),
  ('TypeDecl -> TYPE TypeSpec','TypeDecl',2,'p_TypeDecl','parsertree.py',216),
  ('TypeDecl -> TYPE LPAREN TypeSpec_curl RPAREN','TypeDecl',4,'p_TypeDecl','parsertree.py',217),
  ('TypeSpec_curl -> TypeSpec_curl TypeSpec SEMICOLON','TypeSpec_curl',3,'p_TypeSpec_curl','parsertree.py',228),
  ('TypeSpec_curl -> <empty>','TypeSpec_curl',0,'p_TypeSpec_curl','parsertree.py',229),
  ('TypeSpec -> AliasDecl','TypeSpec',1,'p_TypeSpec','parsertree.py',240),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_TypeSpec','parsertree.py',241),
  ('AliasDecl -> ID ASSIGN Type','AliasDecl',3,'p_AliasDecl','parsertree.py',252),
  ('AliasDecl -> ID ASSIGN ID','AliasDecl',3,'p_AliasDecl','parsertree.py',253),
  ('AliasDecl -> ID ASSIGN ID DOT ID','AliasDecl',5,'p_AliasDecl','parsertree.py',254),
  ('TypeDef -> ID Type','TypeDef',2,'p_TypeDef','parsertree.py',265),
  ('TypeDef -> ID ID','TypeDef',2,'p_TypeDef','parsertree.py',266),
  ('TypeDef -> ID ID DOT ID','TypeDef',4,'p_TypeDef','parsertree.py',267),
  ('VarDecl -> VAR VarSpec','VarDecl',2,'p_VarDecl','parsertree.py',278),
  ('VarDecl -> VAR LPAREN VarSpec_curl RPAREN','VarDecl',4,'p_VarDecl','parsertree.py',279),
  ('VarSpec_curl -> VarSpec_curl VarSpec SEMICOLON','VarSpec_curl',3,'p_VarSpec_curl','parsertree.py',290),
  ('VarSpec_curl -> <empty>','VarSpec_curl',0,'p_VarSpec_curl','parsertree.py',291),
  ('VarSpec -> IdentifierList Type ASSIGN ExpressionList','VarSpec',4,'p_VarSpec','parsertree.py',302),
  ('VarSpec -> IdentifierList ID ASSIGN ExpressionList','VarSpec',4,'p_VarSpec','parsertree.py',303),
  ('VarSpec -> IdentifierList ID DOT ID ASSIGN ExpressionList','VarSpec',6,'p_VarSpec','parsertree.py',304),
  ('VarSpec -> IdentifierList ASSIGN ExpressionList','VarSpec',3,'p_VarSpec','parsertree.py',305),
  ('VarSpec -> IdentifierList ID','VarSpec',2,'p_VarSpec','parsertree.py',306),
  ('VarSpec -> IdentifierList ID DOT ID','VarSpec',4,'p_VarSpec','parsertree.py',307),
  ('VarSpec -> IdentifierList Type','VarSpec',2,'p_VarSpec','parsertree.py',308),
  ('FunctionDecl -> FUNC ID Signature Block','FunctionDecl',4,'p_FunctionDecl','parsertree.py',319),
  ('FunctionDecl -> FUNC ID Signature','FunctionDecl',3,'p_FunctionDecl','parsertree.py',320),
  ('Type -> LPAREN Type RPAREN','Type',3,'p_Type','parsertree.py',331),
  ('Type -> LPAREN ID RPAREN','Type',3,'p_Type','parsertree.py',332),
  ('Type -> LPAREN ID DOT ID RPAREN','Type',5,'p_Type','parsertree.py',333),
  ('Type -> TypeLit','Type',1,'p_Type','parsertree.py',334),
  ('TypeLit -> ArrayType','TypeLit',1,'p_TypeLit','parsertree.py',345),
  ('TypeLit -> StructType','TypeLit',1,'p_TypeLit','parsertree.py',346),
  ('TypeLit -> PointerType','TypeLit',1,'p_TypeLit','parsertree.py',347),
  ('TypeLit -> FunctionType','TypeLit',1,'p_TypeLit','parsertree.py',348),
  ('TypeLit -> SliceType','TypeLit',1,'p_TypeLit','parsertree.py',349),
  ('TypeLit -> MapType','TypeLit',1,'p_TypeLit','parsertree.py',350),
  ('ArrayType -> LBRACK Expression RBRACK Type','ArrayType',4,'p_ArrayType','parsertree.py',361),
  ('ArrayType -> LBRACK Expression RBRACK ID','ArrayType',4,'p_ArrayType','parsertree.py',362),
  ('ArrayType -> LBRACK Expression RBRACK ID DOT ID','ArrayType',6,'p_ArrayType','parsertree.py',363),
  ('SliceType -> LBRACK RBRACK Type','SliceType',3,'p_SliceType','parsertree.py',374),
  ('SliceType -> LBRACK RBRACK ID','SliceType',3,'p_SliceType','parsertree.py',375),
  ('SliceType -> LBRACK RBRACK ID DOT ID','SliceType',5,'p_SliceType','parsertree.py',376),
  ('StructType -> STRUCT LBRACE FieldDecl_curl RBRACE','StructType',4,'p_StructType','parsertree.py',387),
  ('FieldDecl_curl -> FieldDecl_curl FieldDecl SEMICOLON','FieldDecl_curl',3,'p_FieldDecl_curl','parsertree.py',398),
  ('FieldDecl_curl -> <empty>','FieldDecl_curl',0,'p_FieldDecl_curl','parsertree.py',399),
  ('FieldDecl -> ID COMMA IdentifierList Type','FieldDecl',4,'p_FieldDecl','parsertree.py',410),
  ('FieldDecl -> ID COMMA IdentifierList ID','FieldDecl',4,'p_FieldDecl','parsertree.py',411),
  ('FieldDecl -> ID COMMA IdentifierList ID DOT ID','FieldDecl',6,'p_FieldDecl','parsertree.py',412),
  ('FieldDecl -> ID Type','FieldDecl',2,'p_FieldDecl','parsertree.py',413),
  ('FieldDecl -> ID ID','FieldDecl',2,'p_FieldDecl','parsertree.py',414),
  ('FieldDecl -> ID ID DOT ID','FieldDecl',4,'p_FieldDecl','parsertree.py',415),
  ('FieldDecl -> EmbeddedField','FieldDecl',1,'p_FieldDecl','parsertree.py',416),
  ('FieldDecl -> ID COMMA IdentifierList Type Tag','FieldDecl',5,'p_FieldDecl','parsertree.py',417),
  ('FieldDecl -> ID Type Tag','FieldDecl',3,'p_FieldDecl','parsertree.py',418),
  ('FieldDecl -> ID COMMA IdentifierList ID Tag','FieldDecl',5,'p_FieldDecl','parsertree.py',419),
  ('FieldDecl -> ID ID Tag','FieldDecl',3,'p_FieldDecl','parsertree.py',420),
  ('FieldDecl -> ID COMMA IdentifierList ID DOT ID Tag','FieldDecl',7,'p_FieldDecl','parsertree.py',421),
  ('FieldDecl -> ID ID DOT ID Tag','FieldDecl',5,'p_FieldDecl','parsertree.py',422),
  ('FieldDecl -> EmbeddedField Tag','FieldDecl',2,'p_FieldDecl','parsertree.py',423),
  ('EmbeddedField -> MUL ID','EmbeddedField',2,'p_EmbeddedField','parsertree.py',434),
  ('EmbeddedField -> MUL ID DOT ID','EmbeddedField',4,'p_EmbeddedField','parsertree.py',435),
  ('EmbeddedField -> ID','EmbeddedField',1,'p_EmbeddedField','parsertree.py',436),
  ('EmbeddedField -> ID DOT ID','EmbeddedField',3,'p_EmbeddedField','parsertree.py',437),
  ('Tag -> STRING','Tag',1,'p_Tag','parsertree.py',448),
  ('PointerType -> MUL Type','PointerType',2,'p_PointerType','parsertree.py',459),
  ('PointerType -> MUL ID','PointerType',2,'p_PointerType','parsertree.py',460),
  ('PointerType -> MUL ID DOT ID','PointerType',4,'p_PointerType','parsertree.py',461),
  ('FunctionType -> FUNC Signature','FunctionType',2,'p_FunctionType','parsertree.py',472),
  ('Signature -> Parameters Result','Signature',2,'p_Signature','parsertree.py',483),
  ('Result -> Parameters','Result',1,'p_Result','parsertree.py',495),
  ('Result -> Type','Result',1,'p_Result','parsertree.py',496),
  ('Result -> ID','Result',1,'p_Result','parsertree.py',497),
  ('Result -> ID DOT ID','Result',3,'p_Result','parsertree.py',498),
  ('Result -> CHAN','Result',1,'p_Result','parsertree.py',499),
  ('Parameters -> LPAREN RPAREN','Parameters',2,'p_Parameters','parsertree.py',510),
  ('Parameters -> LPAREN ParameterList RPAREN','Parameters',3,'p_Parameters','parsertree.py',511),
  ('Parameters -> LPAREN ParameterList COMMA RPAREN','Parameters',4,'p_Parameters','parsertree.py',512),
  ('ParameterList -> ParameterDecl','ParameterList',1,'p_ParameterList','parsertree.py',525),
  ('ParameterList -> CHAN ID','ParameterList',2,'p_ParameterList','parsertree.py',526),
  ('ParameterList -> CHAN ID DOT ID','ParameterList',4,'p_ParameterList','parsertree.py',527),
  ('ParameterList -> CHAN Type','ParameterList',2,'p_ParameterList','parsertree.py',528),
  ('ParameterList -> ParameterList COMMA CHAN ID','ParameterList',4,'p_ParameterList','parsertree.py',529),
  ('ParameterList -> ParameterList COMMA CHAN ID DOT ID','ParameterList',6,'p_ParameterList','parsertree.py',530),
  ('ParameterList -> ParameterList COMMA CHAN Type','ParameterList',4,'p_ParameterList','parsertree.py',531),
  ('ParameterList -> ParameterList COMMA ParameterDecl','ParameterList',3,'p_ParameterList','parsertree.py',532),
  ('ParaIdList -> ID COMMA ID','ParaIdList',3,'p_ParaIdList','parsertree.py',543),
  ('ParaIdList -> ParaIdList COMMA ID','ParaIdList',3,'p_ParaIdList','parsertree.py',544),
  ('ParameterDecl -> ParaIdList ELLIPSIS Type','ParameterDecl',3,'p_ParameterDecl','parsertree.py',555),
  ('ParameterDecl -> ParaIdList Type','ParameterDecl',2,'p_ParameterDecl','parsertree.py',556),
  ('ParameterDecl -> ID ELLIPSIS Type','ParameterDecl',3,'p_ParameterDecl','parsertree.py',557),
  ('ParameterDecl -> ID Type','ParameterDecl',2,'p_ParameterDecl','parsertree.py',558),
  ('ParameterDecl -> ELLIPSIS Type','ParameterDecl',2,'p_ParameterDecl','parsertree.py',559),
  ('ParameterDecl -> ParaIdList ELLIPSIS ID','ParameterDecl',3,'p_ParameterDecl','parsertree.py',560),
  ('ParameterDecl -> ParaIdList ID','ParameterDecl',2,'p_ParameterDecl','parsertree.py',561),
  ('ParameterDecl -> ID ELLIPSIS ID','ParameterDecl',3,'p_ParameterDecl','parsertree.py',562),
  ('ParameterDecl -> ID ID','ParameterDecl',2,'p_ParameterDecl','parsertree.py',563),
  ('ParameterDecl -> ELLIPSIS ID','ParameterDecl',2,'p_ParameterDecl','parsertree.py',564),
  ('ParameterDecl -> ParaIdList ELLIPSIS ID DOT ID','ParameterDecl',5,'p_ParameterDecl','parsertree.py',565),
  ('ParameterDecl -> ParaIdList ID DOT ID','ParameterDecl',4,'p_ParameterDecl','parsertree.py',566),
  ('ParameterDecl -> ID ELLIPSIS ID DOT ID','ParameterDecl',5,'p_ParameterDecl','parsertree.py',567),
  ('ParameterDecl -> ID ID DOT ID','ParameterDecl',4,'p_ParameterDecl','parsertree.py',568),
  ('ParameterDecl -> ELLIPSIS ID DOT ID','ParameterDecl',4,'p_ParameterDecl','parsertree.py',569),
  ('MapType -> MAP LBRACK Type RBRACK Type','MapType',5,'p_MapType','parsertree.py',581),
  ('MapType -> MAP LBRACK Type RBRACK ID','MapType',5,'p_MapType','parsertree.py',582),
  ('MapType -> MAP LBRACK Type RBRACK ID DOT ID','MapType',7,'p_MapType','parsertree.py',583),
  ('MapType -> MAP LBRACK ID RBRACK Type','MapType',5,'p_MapType','parsertree.py',584),
  ('MapType -> MAP LBRACK ID RBRACK ID','MapType',5,'p_MapType','parsertree.py',585),
  ('MapType -> MAP LBRACK ID RBRACK ID DOT ID','MapType',7,'p_MapType','parsertree.py',586),
  ('MapType -> MAP LBRACK ID DOT ID RBRACK Type','MapType',7,'p_MapType','parsertree.py',587),
  ('MapType -> MAP LBRACK ID DOT ID RBRACK ID','MapType',7,'p_MapType','parsertree.py',588),
  ('MapType -> MAP LBRACK ID DOT ID RBRACK ID DOT ID','MapType',9,'p_MapType','parsertree.py',589),
  ('Block -> LBRACE StatementList RBRACE','Block',3,'p_Block','parsertree.py',600),
  ('StatementList -> Statement_curl','StatementList',1,'p_StatementList','parsertree.py',611),
  ('Statement_curl -> Statement_curl Statement SEMICOLON','Statement_curl',3,'p_Statement_curl','parsertree.py',622),
  ('Statement_curl -> <empty>','Statement_curl',0,'p_Statement_curl','parsertree.py',623),
  ('Expression -> UnaryExpr','Expression',1,'p_Expression','parsertree.py',635),
  ('Expression -> Expression BinaryOp UnaryExpr','Expression',3,'p_Expression','parsertree.py',636),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_UnaryExpr','parsertree.py',647),
  ('UnaryExpr -> UnaryOp UnaryExpr','UnaryExpr',2,'p_UnaryExpr','parsertree.py',648),
  ('BinaryOp -> LOR','BinaryOp',1,'p_BinaryOp','parsertree.py',659),
  ('BinaryOp -> LAND','BinaryOp',1,'p_BinaryOp','parsertree.py',660),
  ('BinaryOp -> RelOp','BinaryOp',1,'p_BinaryOp','parsertree.py',661),
  ('BinaryOp -> AddOp','BinaryOp',1,'p_BinaryOp','parsertree.py',662),
  ('BinaryOp -> MulOp','BinaryOp',1,'p_BinaryOp','parsertree.py',663),
  ('RelOp -> EQL','RelOp',1,'p_RelOp','parsertree.py',674),
  ('RelOp -> NEQ','RelOp',1,'p_RelOp','parsertree.py',675),
  ('RelOp -> LTN','RelOp',1,'p_RelOp','parsertree.py',676),
  ('RelOp -> LEQ','RelOp',1,'p_RelOp','parsertree.py',677),
  ('RelOp -> GTN','RelOp',1,'p_RelOp','parsertree.py',678),
  ('RelOp -> GEQ','RelOp',1,'p_RelOp','parsertree.py',679),
  ('AddOp -> ADD','AddOp',1,'p_AddOp','parsertree.py',690),
  ('AddOp -> SUB','AddOp',1,'p_AddOp','parsertree.py',691),
  ('AddOp -> OR','AddOp',1,'p_AddOp','parsertree.py',692),
  ('AddOp -> XOR','AddOp',1,'p_AddOp','parsertree.py',693),
  ('MulOp -> MUL','MulOp',1,'p_MulOp','parsertree.py',704),
  ('MulOp -> DIV','MulOp',1,'p_MulOp','parsertree.py',705),
  ('MulOp -> MOD','MulOp',1,'p_MulOp','parsertree.py',706),
  ('MulOp -> SHL','MulOp',1,'p_MulOp','parsertree.py',707),
  ('MulOp -> SHR','MulOp',1,'p_MulOp','parsertree.py',708),
  ('MulOp -> AND','MulOp',1,'p_MulOp','parsertree.py',709),
  ('MulOp -> AND_NOT','MulOp',1,'p_MulOp','parsertree.py',710),
  ('UnaryOp -> ADD','UnaryOp',1,'p_UnaryOp','parsertree.py',721),
  ('UnaryOp -> SUB','UnaryOp',1,'p_UnaryOp','parsertree.py',722),
  ('UnaryOp -> NOT','UnaryOp',1,'p_UnaryOp','parsertree.py',723),
  ('UnaryOp -> XOR','UnaryOp',1,'p_UnaryOp','parsertree.py',724),
  ('UnaryOp -> MUL','UnaryOp',1,'p_UnaryOp','parsertree.py',725),
  ('UnaryOp -> AND','UnaryOp',1,'p_UnaryOp','parsertree.py',726),
  ('UnaryOp -> ARROW','UnaryOp',1,'p_UnaryOp','parsertree.py',727),
  ('PrimaryExpr -> Literal','PrimaryExpr',1,'p_PrimaryExpr','parsertree.py',738),
  ('PrimaryExpr -> ID','PrimaryExpr',1,'p_PrimaryExpr','parsertree.py',739),
  ('PrimaryExpr -> ID DOT ID','PrimaryExpr',3,'p_PrimaryExpr','parsertree.py',740),
  ('PrimaryExpr -> LPAREN Expression RPAREN','PrimaryExpr',3,'p_PrimaryExpr','parsertree.py',741),
  ('PrimaryExpr -> Conversion','PrimaryExpr',1,'p_PrimaryExpr','parsertree.py',742),
  ('PrimaryExpr -> PrimaryExpr Selector','PrimaryExpr',2,'p_PrimaryExpr','parsertree.py',743),
  ('PrimaryExpr -> PrimaryExpr Index','PrimaryExpr',2,'p_PrimaryExpr','parsertree.py',744),
  ('PrimaryExpr -> PrimaryExpr Slice','PrimaryExpr',2,'p_PrimaryExpr','parsertree.py',745),
  ('PrimaryExpr -> PrimaryExpr TypeAssertion','PrimaryExpr',2,'p_PrimaryExpr','parsertree.py',746),
  ('PrimaryExpr -> PrimaryExpr Arguments','PrimaryExpr',2,'p_PrimaryExpr','parsertree.py',747),
  ('Selector -> DOT ID','Selector',2,'p_Selector','parsertree.py',759),
  ('Index -> LBRACK Expression RBRACK','Index',3,'p_Index','parsertree.py',770),
  ('Slice -> LBRACK Expression COLON Expression RBRACK','Slice',5,'p_Slice','parsertree.py',781),
  ('Slice -> LBRACK COLON Expression RBRACK','Slice',4,'p_Slice','parsertree.py',782),
  ('Slice -> LBRACK Expression COLON RBRACK','Slice',4,'p_Slice','parsertree.py',783),
  ('Slice -> LBRACK COLON RBRACK','Slice',3,'p_Slice','parsertree.py',784),
  ('Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK','Slice',7,'p_Slice','parsertree.py',785),
  ('Slice -> LBRACK COLON Expression COLON Expression RBRACK','Slice',6,'p_Slice','parsertree.py',786),
  ('TypeAssertion -> TYPEASSERT LPAREN Type RPAREN','TypeAssertion',4,'p_TypeAssertion','parsertree.py',797),
  ('TypeAssertion -> TYPEASSERT LPAREN ID RPAREN','TypeAssertion',4,'p_TypeAssertion','parsertree.py',798),
  ('TypeAssertion -> TYPEASSERT LPAREN ID DOT ID RPAREN','TypeAssertion',6,'p_TypeAssertion','parsertree.py',799),
  ('Arguments -> LPAREN RPAREN','Arguments',2,'p_Arguments','parsertree.py',810),
  ('Arguments -> LPAREN ExpressionList RPAREN','Arguments',3,'p_Arguments','parsertree.py',811),
  ('Arguments -> LPAREN ExpressionList COMMA RPAREN','Arguments',4,'p_Arguments','parsertree.py',812),
  ('Arguments -> LPAREN ExpressionList ELLIPSIS RPAREN','Arguments',4,'p_Arguments','parsertree.py',813),
  ('Arguments -> LPAREN ExpressionList ELLIPSIS COMMA RPAREN','Arguments',5,'p_Arguments','parsertree.py',814),
  ('Arguments -> LPAREN Type RPAREN','Arguments',3,'p_Arguments','parsertree.py',815),
  ('Arguments -> LPAREN Type COMMA RPAREN','Arguments',4,'p_Arguments','parsertree.py',816),
  ('Arguments -> LPAREN Type ELLIPSIS RPAREN','Arguments',4,'p_Arguments','parsertree.py',817),
  ('Arguments -> LPAREN Type ELLIPSIS COMMA RPAREN','Arguments',5,'p_Arguments','parsertree.py',818),
  ('Arguments -> LPAREN Type COMMA ExpressionList RPAREN','Arguments',5,'p_Arguments','parsertree.py',819),
  ('Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN','Arguments',6,'p_Arguments','parsertree.py',820),
  ('Arguments -> LPAREN Type COMMA ExpressionList ELLIPSIS RPAREN','Arguments',6,'p_Arguments','parsertree.py',821),
  ('Arguments -> LPAREN Type COMMA ExpressionList ELLIPSIS COMMA RPAREN','Arguments',7,'p_Arguments','parsertree.py',822),
  ('Arguments -> LPAREN ID RPAREN','Arguments',3,'p_Arguments','parsertree.py',823),
  ('Arguments -> LPAREN ID COMMA RPAREN','Arguments',4,'p_Arguments','parsertree.py',824),
  ('Arguments -> LPAREN ID ELLIPSIS RPAREN','Arguments',4,'p_Arguments','parsertree.py',825),
  ('Arguments -> LPAREN ID ELLIPSIS COMMA RPAREN','Arguments',5,'p_Arguments','parsertree.py',826),
  ('Arguments -> LPAREN ID COMMA ExpressionList RPAREN','Arguments',5,'p_Arguments','parsertree.py',827),
  ('Arguments -> LPAREN ID COMMA ExpressionList COMMA RPAREN','Arguments',6,'p_Arguments','parsertree.py',828),
  ('Arguments -> LPAREN ID COMMA ExpressionList ELLIPSIS RPAREN','Arguments',6,'p_Arguments','parsertree.py',829),
  ('Arguments -> LPAREN ID COMMA ExpressionList ELLIPSIS COMMA RPAREN','Arguments',7,'p_Arguments','parsertree.py',830),
  ('Arguments -> LPAREN ID DOT ID RPAREN','Arguments',5,'p_Arguments','parsertree.py',831),
  ('Arguments -> LPAREN ID DOT ID COMMA RPAREN','Arguments',6,'p_Arguments','parsertree.py',832),
  ('Arguments -> LPAREN ID DOT ID ELLIPSIS RPAREN','Arguments',6,'p_Arguments','parsertree.py',833),
  ('Arguments -> LPAREN ID DOT ID ELLIPSIS COMMA RPAREN','Arguments',7,'p_Arguments','parsertree.py',834),
  ('Arguments -> LPAREN ID DOT ID COMMA ExpressionList RPAREN','Arguments',7,'p_Arguments','parsertree.py',835),
  ('Arguments -> LPAREN ID DOT ID COMMA ExpressionList COMMA RPAREN','Arguments',8,'p_Arguments','parsertree.py',836),
  ('Arguments -> LPAREN ID DOT ID COMMA ExpressionList ELLIPSIS RPAREN','Arguments',8,'p_Arguments','parsertree.py',837),
  ('Arguments -> LPAREN ID DOT ID COMMA ExpressionList ELLIPSIS COMMA RPAREN','Arguments',9,'p_Arguments','parsertree.py',838),
  ('Conversion -> TYPECAST Type LPAREN Expression COMMA RPAREN','Conversion',6,'p_Conversion','parsertree.py',850),
  ('Conversion -> TYPECAST Type LPAREN Expression RPAREN','Conversion',5,'p_Conversion','parsertree.py',851),
  ('Conversion -> TYPECAST ID LPAREN Expression COMMA RPAREN','Conversion',6,'p_Conversion','parsertree.py',852),
  ('Conversion -> TYPECAST ID LPAREN Expression RPAREN','Conversion',5,'p_Conversion','parsertree.py',853),
  ('Literal -> BasicLit','Literal',1,'p_Literal','parsertree.py',864),
  ('Literal -> CompositeLit','Literal',1,'p_Literal','parsertree.py',865),
  ('Literal -> FunctionLit','Literal',1,'p_Literal','parsertree.py',866),
  ('BasicLit -> INT','BasicLit',1,'p_BasicLit','parsertree.py',877),
  ('BasicLit -> FLOAT','BasicLit',1,'p_BasicLit','parsertree.py',878),
  ('BasicLit -> IMAG','BasicLit',1,'p_BasicLit','parsertree.py',879),
  ('BasicLit -> RUNE','BasicLit',1,'p_BasicLit','parsertree.py',880),
  ('BasicLit -> STRING','BasicLit',1,'p_BasicLit','parsertree.py',881),
  ('CompositeLit -> StructType LiteralValue','CompositeLit',2,'p_CompositeLit','parsertree.py',906),
  ('CompositeLit -> ArrayType LiteralValue','CompositeLit',2,'p_CompositeLit','parsertree.py',907),
  ('CompositeLit -> LBRACK ELLIPSIS RBRACK Type LiteralValue','CompositeLit',5,'p_CompositeLit','parsertree.py',908),
  ('CompositeLit -> LBRACK ELLIPSIS RBRACK ID LiteralValue','CompositeLit',5,'p_CompositeLit','parsertree.py',909),
  ('CompositeLit -> LBRACK ELLIPSIS RBRACK ID DOT ID LiteralValue','CompositeLit',7,'p_CompositeLit','parsertree.py',910),
  ('CompositeLit -> SliceType LiteralValue','CompositeLit',2,'p_CompositeLit','parsertree.py',911),
  ('CompositeLit -> MapType LiteralValue','CompositeLit',2,'p_CompositeLit','parsertree.py',912),
  ('LiteralValue -> LBRACE ElementList COMMA RBRACE','LiteralValue',4,'p_LiteralValue','parsertree.py',923),
  ('LiteralValue -> LBRACE ElementList RBRACE','LiteralValue',3,'p_LiteralValue','parsertree.py',924),
  ('LiteralValue -> LBRACE RBRACE','LiteralValue',2,'p_LiteralValue','parsertree.py',925),
  ('ElementList -> KeyedElement','ElementList',1,'p_ElementList','parsertree.py',937),
  ('ElementList -> ElementList COMMA KeyedElement','ElementList',3,'p_ElementList','parsertree.py',938),
  ('KeyedElement -> ID COLON Element','KeyedElement',3,'p_KeyedElement','parsertree.py',949),
  ('KeyedElement -> Expression COLON Element','KeyedElement',3,'p_KeyedElement','parsertree.py',950),
  ('KeyedElement -> LiteralValue COLON Element','KeyedElement',3,'p_KeyedElement','parsertree.py',951),
  ('KeyedElement -> Element','KeyedElement',1,'p_KeyedElement','parsertree.py',952),
  ('Element -> Expression','Element',1,'p_Element','parsertree.py',963),
  ('Element -> LiteralValue','Element',1,'p_Element','parsertree.py',964),
  ('FunctionLit -> FUNC Signature Block','FunctionLit',3,'p_FunctionLit','parsertree.py',975),
  ('Statement -> Declaration','Statement',1,'p_Statement','parsertree.py',986),
  ('Statement -> LabelledStmt','Statement',1,'p_Statement','parsertree.py',987),
  ('Statement -> SimpleStmt','Statement',1,'p_Statement','parsertree.py',988),
  ('Statement -> GoStmt','Statement',1,'p_Statement','parsertree.py',989),
  ('Statement -> ReturnStmt','Statement',1,'p_Statement','parsertree.py',990),
  ('Statement -> BreakStmt','Statement',1,'p_Statement','parsertree.py',991),
  ('Statement -> ContinueStmt','Statement',1,'p_Statement','parsertree.py',992),
  ('Statement -> GotoStmt','Statement',1,'p_Statement','parsertree.py',993),
  ('Statement -> FallthroughStmt','Statement',1,'p_Statement','parsertree.py',994),
  ('Statement -> IfStmt','Statement',1,'p_Statement','parsertree.py',995),
  ('Statement -> Block','Statement',1,'p_Statement','parsertree.py',996),
  ('Statement -> SwitchStmt','Statement',1,'p_Statement','parsertree.py',997),
  ('Statement -> ForStmt','Statement',1,'p_Statement','parsertree.py',998),
  ('Statement -> DeferStmt','Statement',1,'p_Statement','parsertree.py',999),
  ('SimpleStmt -> Expression','SimpleStmt',1,'p_SimpleStmt','parsertree.py',1010),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_SimpleStmt','parsertree.py',1011),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_SimpleStmt','parsertree.py',1012),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_SimpleStmt','parsertree.py',1013),
  ('SimpleStmt -> <empty>','SimpleStmt',0,'p_SimpleStmt','parsertree.py',1014),
  ('IncDecStmt -> Expression INC','IncDecStmt',2,'p_IncDecStmt','parsertree.py',1025),
  ('IncDecStmt -> Expression DEC','IncDecStmt',2,'p_IncDecStmt','parsertree.py',1026),
  ('Assignment -> ExpressionList AssignOp ExpressionList','Assignment',3,'p_Assignment','parsertree.py',1037),
  ('AssignOp -> ADD_ASSIGN','AssignOp',1,'p_AssignOp','parsertree.py',1048),
  ('AssignOp -> SUB_ASSIGN','AssignOp',1,'p_AssignOp','parsertree.py',1049),
  ('AssignOp -> MUL_ASSIGN','AssignOp',1,'p_AssignOp','parsertree.py',1050),
  ('AssignOp -> DIV_ASSIGN','AssignOp',1,'p_AssignOp','parsertree.py',1051),
  ('AssignOp -> MOD_ASSIGN','AssignOp',1,'p_AssignOp','parsertree.py',1052),
  ('AssignOp -> AND_ASSIGN','AssignOp',1,'p_AssignOp','parsertree.py',1053),
  ('AssignOp -> AND_NOT_ASSIGN','AssignOp',1,'p_AssignOp','parsertree.py',1054),
  ('AssignOp -> OR_ASSIGN','AssignOp',1,'p_AssignOp','parsertree.py',1055),
  ('AssignOp -> XOR_ASSIGN','AssignOp',1,'p_AssignOp','parsertree.py',1056),
  ('AssignOp -> SHL_ASSIGN','AssignOp',1,'p_AssignOp','parsertree.py',1057),
  ('AssignOp -> SHR_ASSIGN','AssignOp',1,'p_AssignOp','parsertree.py',1058),
  ('AssignOp -> ASSIGN','AssignOp',1,'p_AssignOp','parsertree.py',1059),
  ('LabelledStmt -> ID COLON Statement','LabelledStmt',3,'p_LabelledStmt','parsertree.py',1070),
  ('GoStmt -> GO Expression','GoStmt',2,'p_GoStmt','parsertree.py',1081),
  ('ReturnStmt -> RETURN ExpressionList','ReturnStmt',2,'p_ReturnStmt','parsertree.py',1092),
  ('ReturnStmt -> RETURN','ReturnStmt',1,'p_ReturnStmt','parsertree.py',1093),
  ('BreakStmt -> BREAK ID','BreakStmt',2,'p_BreakStmt','parsertree.py',1104),
  ('BreakStmt -> BREAK','BreakStmt',1,'p_BreakStmt','parsertree.py',1105),
  ('ContinueStmt -> CONTINUE ID','ContinueStmt',2,'p_ContinueStmt','parsertree.py',1116),
  ('ContinueStmt -> CONTINUE','ContinueStmt',1,'p_ContinueStmt','parsertree.py',1117),
  ('GotoStmt -> GOTO ID','GotoStmt',2,'p_GotoStmt','parsertree.py',1128),
  ('FallthroughStmt -> FALLTHROUGH','FallthroughStmt',1,'p_FallthroughStmt','parsertree.py',1139),
  ('DeferStmt -> DEFER Expression','DeferStmt',2,'p_DeferStmt','parsertree.py',1150),
  ('ShortVarDecl -> IdentifierList DEFINE ExpressionList','ShortVarDecl',3,'p_ShortVarDecl','parsertree.py',1161),
  ('IfStmt -> IF Expression Block','IfStmt',3,'p_IfStmt','parsertree.py',1172),
  ('IfStmt -> IF SimpleStmt SEMICOLON Expression Block','IfStmt',5,'p_IfStmt','parsertree.py',1173),
  ('IfStmt -> IF Expression Block ELSE IfStmt','IfStmt',5,'p_IfStmt','parsertree.py',1174),
  ('IfStmt -> IF Expression Block ELSE Block','IfStmt',5,'p_IfStmt','parsertree.py',1175),
  ('IfStmt -> IF SimpleStmt SEMICOLON Expression Block ELSE Block','IfStmt',7,'p_IfStmt','parsertree.py',1176),
  ('IfStmt -> IF SimpleStmt SEMICOLON Expression Block ELSE IfStmt','IfStmt',7,'p_IfStmt','parsertree.py',1177),
  ('SwitchStmt -> ExprSwitchStmt','SwitchStmt',1,'p_SwitchStmt','parsertree.py',1188),
  ('ExprSwitchStmt -> SWITCH LBRACE ExprCaseClause_curl RBRACE','ExprSwitchStmt',4,'p_ExprSwitchStmt','parsertree.py',1199),
  ('ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON LBRACE ExprCaseClause_curl RBRACE','ExprSwitchStmt',6,'p_ExprSwitchStmt','parsertree.py',1200),
  ('ExprSwitchStmt -> SWITCH Expression LBRACE ExprCaseClause_curl RBRACE','ExprSwitchStmt',5,'p_ExprSwitchStmt','parsertree.py',1201),
  ('ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON Expression LBRACE ExprCaseClause_curl RBRACE','ExprSwitchStmt',7,'p_ExprSwitchStmt','parsertree.py',1202),
  ('ExprCaseClause_curl -> ExprCaseClause_curl ExprCaseClause','ExprCaseClause_curl',2,'p_ExprCaseClause_curl','parsertree.py',1213),
  ('ExprCaseClause_curl -> <empty>','ExprCaseClause_curl',0,'p_ExprCaseClause_curl','parsertree.py',1214),
  ('ExprCaseClause -> ExprSwitchCase COLON StatementList','ExprCaseClause',3,'p_ExprCaseClause','parsertree.py',1225),
  ('ExprSwitchCase -> CASE ExpressionList','ExprSwitchCase',2,'p_ExprSwitchCase','parsertree.py',1236),
  ('ExprSwitchCase -> DEFAULT','ExprSwitchCase',1,'p_ExprSwitchCase','parsertree.py',1237),
  ('ForStmt -> FOR Expression Block','ForStmt',3,'p_ForStmt','parsertree.py',1248),
  ('ForStmt -> FOR ForClause Block','ForStmt',3,'p_ForStmt','parsertree.py',1249),
  ('ForStmt -> FOR RangeClause Block','ForStmt',3,'p_ForStmt','parsertree.py',1250),
  ('ForStmt -> FOR Block','ForStmt',2,'p_ForStmt','parsertree.py',1251),
  ('ForClause -> SimpleStmt SEMICOLON SEMICOLON SimpleStmt','ForClause',4,'p_ForClause','parsertree.py',1262),
  ('ForClause -> SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt','ForClause',5,'p_ForClause','parsertree.py',1263),
  ('RangeClause -> IdentifierList DEFINE RANGE Expression','RangeClause',4,'p_RangeClause','parsertree.py',1274),
  ('RangeClause -> ExpressionList ASSIGN RANGE Expression','RangeClause',4,'p_RangeClause','parsertree.py',1275),
  ('RangeClause -> RANGE Expression','RangeClause',2,'p_RangeClause','parsertree.py',1276),
]
