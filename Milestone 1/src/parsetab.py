
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIDleftDEFINEleftCOMMAleftLBRACKleftRBRACKleftLBRACEleftRBRACEleftELLIPSISleftDOTleftSEMICOLONleftCOLONleftINTleftFLOATleftSTRINGleftBREAKleftCONTINUEleftRETURNleftLPARENleftRPARENleftLORleftLANDleftEQLNEQLTNLEQGTNGEQleftADDSUBORXORleftMULDIVMODANDAND_NOTSHLSHRADD ADD_ASSIGN AND AND_ASSIGN AND_NOT AND_NOT_ASSIGN ARROW ASSIGN BREAK CASE CHAN COLON COMMA CONST CONTINUE DEC DEFAULT DEFER DEFINE DIV DIV_ASSIGN DOT ELLIPSIS ELSE EQL FALLTHROUGH FLOAT FOR FUNC GEQ GO GOTO GTN ID IF IMAG IMPORT INC INT INTERFACE LAND LBRACE LBRACK LEQ LOR LPAREN LTN MAP MOD MOD_ASSIGN MUL MUL_ASSIGN NEQ NOT OR OR_ASSIGN PACKAGE RANGE RBRACE RBRACK RETURN RPAREN RUNE SELECT SEMICOLON SHL SHL_ASSIGN SHR SHR_ASSIGN STRING STRUCT SUB SUB_ASSIGN SWITCH TYPE VAR XOR XOR_ASSIGN\n    SourceFile : PackageClause SEMICOLON ImportDecl_curl TopLevelDecl_curl\n    \n    TopLevelDecl_curl : TopLevelDecl_curl TopLevelDecl SEMICOLON\n                      |\n    \n    ImportDecl_curl : ImportDecl_curl ImportDecl SEMICOLON\n                    |\n    \n    PackageClause : PACKAGE ID\n    \n    ImportDecl : IMPORT ImportSpec\n               | IMPORT LPAREN ImportSpec_curl RPAREN\n    \n    ImportSpec_curl : ImportSpec_curl ImportSpec SEMICOLON\n                    |\n    \n    ImportSpec : DOT ImportPath\n               | ID ImportPath\n               | ImportPath\n    \n    ImportPath : STRING\n    \n    TopLevelDecl : Declaration\n                 | FunctionDecl\n                 | MethodDecl\n    \n    Declaration : ConstDecl\n                | TypeDecl\n                | VarDecl\n    \n    ConstDecl : CONST ConstSpec\n              | CONST LPAREN ConstSpec_curl RPAREN\n    \n    ConstSpec_curl : ConstSpec_curl ConstSpec SEMICOLON\n                   |\n    \n    ConstSpec : IdentifierList ID ASSIGN ExpressionList\n              | IdentifierList ID DOT ID ASSIGN ExpressionList\n              | IdentifierList Type ASSIGN ExpressionList\n              | IdentifierList ASSIGN ExpressionList\n              | IdentifierList\n    \n    IdentifierList : ID\n                   | ID COMMA IdentifierList\n    \n    ExpressionList : Expression\n                   | ExpressionList COMMA Expression\n    \n    TypeDecl : TYPE TypeSpec\n             | TYPE LPAREN TypeSpec_curl RPAREN\n    \n    TypeSpec_curl : TypeSpec_curl TypeSpec SEMICOLON\n                  |\n    \n    TypeSpec : AliasDecl\n             | TypeDef\n    \n    AliasDecl : ID ASSIGN Type\n              | ID ASSIGN ID\n              | ID ASSIGN ID DOT ID\n    \n    TypeDef : ID Type\n            | ID ID\n            | ID ID DOT ID\n    \n    VarDecl : VAR VarSpec\n            | VAR LPAREN VarSpec_curl RPAREN\n    \n    VarSpec_curl : VarSpec_curl VarSpec SEMICOLON\n                 |\n    \n    VarSpec : IdentifierList Type ASSIGN ExpressionList\n            | IdentifierList ID ASSIGN ExpressionList\n            | IdentifierList ID DOT ID ASSIGN ExpressionList\n            | IdentifierList ASSIGN ExpressionList\n            | IdentifierList ID\n            | IdentifierList ID DOT ID\n            | IdentifierList Type\n    \n    FunctionDecl : FUNC ID Signature Block\n                 | FUNC ID Signature\n    \n    MethodDecl : FUNC Receiver ID Signature Block\n               | FUNC Receiver ID Signature\n    \n    Receiver : Parameters\n    \n    Type : LPAREN Type RPAREN\n         | LPAREN ID RPAREN\n         | LPAREN ID DOT ID RPAREN\n         | TypeLit\n    \n    TypeLit : ArrayType\n            | StructType\n            | PointerType\n            | FunctionType\n            | InterfaceType\n            | SliceType\n            | MapType\n    \n    ArrayType : LBRACK Expression RBRACK Type\n              | LBRACK Expression RBRACK ID\n              | LBRACK Expression RBRACK ID DOT ID\n    \n    SliceType : LBRACK RBRACK Type\n    \n    StructType : STRUCT LBRACE FieldDecl_curl RBRACE\n    \n    FieldDecl_curl : FieldDecl_curl FieldDecl SEMICOLON\n                   |\n    \n    FieldDecl : ID COMMA IdentifierList Type\n              | ID COMMA IdentifierList ID\n              | ID COMMA IdentifierList ID DOT ID\n              | ID Type\n              | ID ID\n              | ID ID DOT ID\n              | EmbeddedField\n              | ID COMMA IdentifierList Type Tag\n              | ID Type Tag\n              | ID COMMA IdentifierList ID Tag\n              | ID ID Tag\n              | ID COMMA IdentifierList ID DOT ID Tag\n              | ID ID DOT ID Tag\n              | EmbeddedField Tag\n    \n    EmbeddedField : MUL ID\n                  | MUL ID DOT ID\n                  | ID\n                  | ID DOT ID\n    \n    Tag : STRING\n    \n    PointerType : MUL Type\n                | MUL ID\n                | MUL ID DOT ID\n    \n    FunctionType : FUNC Signature\n    \n    Signature : Parameters Result\n    \n    Result : Parameters\n           | Type\n           | ID\n           | ID DOT ID\n           | CHAN\n    \n    Parameters : LPAREN RPAREN\n               | LPAREN ParameterList RPAREN\n               | LPAREN ParameterList COMMA RPAREN\n    \n    ParameterList : ParameterDecl\n                  | ID\n                  | ID DOT ID\n                  | CHAN Type\n                  | ParameterList COMMA ID\n                  | ParameterList COMMA ID DOT ID\n                  | ParameterList COMMA CHAN Type\n                  | ParameterList COMMA ParameterDecl\n    \n    ParaIdList : ID COMMA ID\n               | ParaIdList COMMA ID\n    \n    ParameterDecl : ParaIdList ELLIPSIS Type\n                  | ParaIdList Type\n                  | ID ELLIPSIS Type\n                  | ID Type\n                  | ELLIPSIS Type\n                  | ParaIdList ELLIPSIS ID\n                  | ParaIdList ID\n                  | ID ELLIPSIS ID\n                  | ID ID\n                  | ELLIPSIS ID\n                  | ParaIdList ELLIPSIS ID DOT ID\n                  | ParaIdList ID DOT ID\n                  | ID ELLIPSIS ID DOT ID\n                  | ID ID DOT ID\n                  | ELLIPSIS ID DOT ID\n\n    \n    InterfaceType : INTERFACE LBRACE MethodSpec_curl RBRACE\n    \n    MethodSpec_curl : MethodSpec_curl MethodSpec SEMICOLON\n                    |\n    \n    MethodSpec : ID Signature\n               | ID\n               | ID DOT ID\n    \n    MapType : MAP LBRACK Type RBRACK Type\n            | MAP LBRACK Type RBRACK ID\n            | MAP LBRACK Type RBRACK ID DOT ID\n            | MAP LBRACK ID RBRACK Type\n            | MAP LBRACK ID RBRACK ID\n            | MAP LBRACK ID RBRACK ID DOT ID\n            | MAP LBRACK ID DOT ID RBRACK Type\n            | MAP LBRACK ID DOT ID RBRACK ID\n            | MAP LBRACK ID DOT ID RBRACK ID DOT ID\n    \n    Block : LBRACE StatementList RBRACE\n    \n    StatementList : Statement_curl\n    \n    Statement_curl : Statement_curl Statement SEMICOLON\n                   |\n    \n    Expression : UnaryExpr\n               | Expression BinaryOp UnaryExpr\n    \n    UnaryExpr : PrimaryExpr\n              | UnaryOp PrimaryExpr\n    \n    BinaryOp : LOR\n             | LAND\n             | RelOp\n             | AddOp\n             | MulOp\n    \n    RelOp : EQL\n          | NEQ\n          | LTN\n          | LEQ\n          | GTN\n          | GEQ\n    \n    AddOp : ADD\n          | SUB\n          | OR\n          | XOR\n    \n    MulOp : MUL\n          | DIV\n          | MOD\n          | SHL\n          | SHR\n          | AND\n          | AND_NOT\n    \n    UnaryOp : ADD\n            | SUB\n            | NOT\n            | XOR\n            | MUL\n            | AND\n            | ARROW\n    \n    PrimaryExpr : Literal\n                | ID\n                | ID DOT ID\n                | LPAREN Expression RPAREN\n                | Conversion\n                | MethodExpr\n                | PrimaryExpr Selector\n                | PrimaryExpr Index\n                | PrimaryExpr Slice\n                | PrimaryExpr TypeAssertion\n                | PrimaryExpr Arguments\n    \n    Selector : DOT ID\n    \n    Index : LBRACK Expression RBRACK\n    \n    Slice : LBRACK Expression COLON Expression RBRACK\n          | LBRACK COLON Expression RBRACK\n          | LBRACK Expression COLON RBRACK\n          | LBRACK COLON RBRACK\n          | LBRACK Expression COLON Expression COLON Expression RBRACK\n          | LBRACK COLON Expression COLON Expression RBRACK\n    \n    TypeAssertion : DOT LPAREN Type RPAREN\n                  | DOT LPAREN ID RPAREN\n                  | DOT LPAREN ID DOT ID RPAREN\n    \n    Arguments : LPAREN RPAREN\n              | LPAREN ExpressionList RPAREN\n              | LPAREN ExpressionList COMMA RPAREN\n              | LPAREN ExpressionList ELLIPSIS RPAREN\n              | LPAREN ExpressionList ELLIPSIS COMMA RPAREN\n              | LPAREN Type RPAREN\n              | LPAREN Type COMMA RPAREN\n              | LPAREN Type ELLIPSIS RPAREN\n              | LPAREN Type ELLIPSIS COMMA RPAREN\n              | LPAREN Type COMMA ExpressionList RPAREN\n              | LPAREN Type COMMA ExpressionList COMMA RPAREN\n              | LPAREN Type COMMA ExpressionList ELLIPSIS RPAREN\n              | LPAREN Type COMMA ExpressionList ELLIPSIS COMMA RPAREN\n              | LPAREN ID RPAREN\n              | LPAREN ID COMMA RPAREN\n              | LPAREN ID ELLIPSIS RPAREN\n              | LPAREN ID ELLIPSIS COMMA RPAREN\n              | LPAREN ID COMMA ExpressionList RPAREN\n              | LPAREN ID COMMA ExpressionList COMMA RPAREN\n              | LPAREN ID COMMA ExpressionList ELLIPSIS RPAREN\n              | LPAREN ID COMMA ExpressionList ELLIPSIS COMMA RPAREN\n              | LPAREN ID DOT ID RPAREN\n              | LPAREN ID DOT ID COMMA RPAREN\n              | LPAREN ID DOT ID ELLIPSIS RPAREN\n              | LPAREN ID DOT ID ELLIPSIS COMMA RPAREN\n              | LPAREN ID DOT ID COMMA ExpressionList RPAREN\n              | LPAREN ID DOT ID COMMA ExpressionList COMMA RPAREN\n              | LPAREN ID DOT ID COMMA ExpressionList ELLIPSIS RPAREN\n              | LPAREN ID DOT ID COMMA ExpressionList ELLIPSIS COMMA RPAREN\n    \n    MethodExpr : CHAN Type DOT ID\n               | CHAN ID DOT ID\n               | CHAN ID DOT ID DOT ID\n    \n    Conversion : Type LPAREN Expression COMMA RPAREN\n               | Type LPAREN Expression RPAREN\n               | ID LPAREN Expression COMMA RPAREN\n               | ID LPAREN Expression RPAREN\n    \n    Literal : BasicLit\n            | CompositeLit\n            | FunctionLit\n    \n    BasicLit : INT\n             | FLOAT\n             | IMAG\n             | RUNE\n             | STRING\n    \n    CompositeLit : StructType LiteralValue\n                 | ArrayType LiteralValue\n                 | LBRACK ELLIPSIS RBRACK Type LiteralValue\n                 | LBRACK ELLIPSIS RBRACK ID LiteralValue\n                 | LBRACK ELLIPSIS RBRACK ID DOT ID LiteralValue\n                 | SliceType  LiteralValue\n                 | MapType LiteralValue\n                 | ID LiteralValue\n                 | ID DOT ID LiteralValue\n    \n    LiteralValue : LBRACE ElementList COMMA RBRACE\n                 | LBRACE ElementList RBRACE\n                 | LBRACE RBRACE\n    \n    ElementList : KeyedElement\n                | ElementList COMMA KeyedElement\n    \n    KeyedElement : ID COLON Element\n                 | Expression COLON Element\n                 | LiteralValue COLON Element\n                 | Element\n    \n    Element : Expression\n            | LiteralValue\n    \n    FunctionLit : FUNC Signature Block\n    \n    Statement : Declaration\n              | LabelledStmt\n              | SimpleStmt\n              | GoStmt\n              | ReturnStmt\n              | BreakStmt\n              | ContinueStmt\n              | GotoStmt\n              | FallthroughStmt\n              | IfStmt\n              | Block\n              | SwitchStmt\n              | SelectStmt\n              | ForStmt\n              | DeferStmt\n    \n    SimpleStmt : ExpressionStmt\n               | SendStmt\n               | IncDecStmt\n               | Assignment\n               | ShortVarDecl\n               |\n    \n    ExpressionStmt : Expression\n    \n    SendStmt : Expression ARROW Expression\n    \n    IncDecStmt : Expression INC\n               | Expression DEC\n    \n    Assignment : ExpressionList AssignOp ExpressionList\n    \n    AssignOp : ADD_ASSIGN\n             | SUB_ASSIGN\n             | MUL_ASSIGN\n             | DIV_ASSIGN\n             | MOD_ASSIGN\n             | AND_ASSIGN\n             | AND_NOT_ASSIGN\n             | OR_ASSIGN\n             | XOR_ASSIGN\n             | SHL_ASSIGN\n             | SHR_ASSIGN\n             | ASSIGN\n    \n    LabelledStmt : ID COLON Statement\n    \n    GoStmt : GO Expression\n    \n    ReturnStmt : RETURN ExpressionList\n               | RETURN\n    \n    BreakStmt : BREAK ID\n              | BREAK\n    \n    ContinueStmt : CONTINUE ID\n                 | CONTINUE\n    \n    GotoStmt : GOTO ID\n    \n    FallthroughStmt : FALLTHROUGH\n    \n    DeferStmt : DEFER Expression\n    \n    ShortVarDecl : IdentifierList DEFINE ExpressionList\n    \n    IfStmt : IF Expression Block\n           | IF SimpleStmt SEMICOLON Expression Block\n           | IF Expression Block ELSE IfStmt\n           | IF Expression Block ELSE Block\n           | IF SimpleStmt SEMICOLON Expression Block ELSE Block\n           | IF SimpleStmt SEMICOLON Expression Block ELSE IfStmt\n    \n    SwitchStmt : ExprSwitchStmt\n               | TypeSwitchStmt\n    \n    ExprSwitchStmt : SWITCH LBRACE ExprCaseClause_curl RBRACE\n                   | SWITCH SimpleStmt SEMICOLON LBRACE ExprCaseClause_curl RBRACE\n                   | SWITCH SimpleStmt SEMICOLON Expression LBRACE ExprCaseClause_curl RBRACE\n    \n    ExprCaseClause_curl : ExprCaseClause_curl ExprCaseClause\n                        |\n    \n    ExprCaseClause : ExprSwitchCase COLON StatementList\n    \n    ExprSwitchCase : CASE ExpressionList\n                   | DEFAULT\n    \n    TypeSwitchStmt : SWITCH SimpleStmt SEMICOLON TypeSwitchGuard LBRACE TypeCaseClause_curl RBRACE\n                   | SWITCH TypeSwitchGuard LBRACE TypeCaseClause_curl RBRACE\n    \n    TypeCaseClause_curl : TypeCaseClause_curl TypeCaseClause\n                        |\n    \n    TypeCaseClause : TypeSwitchCase COLON StatementList\n    \n    TypeSwitchGuard : ID DEFINE PrimaryExpr DOT LPAREN TYPE RPAREN\n                    | PrimaryExpr DOT LPAREN TYPE RPAREN\n    \n    TypeSwitchCase : CASE TypeList\n                   | DEFAULT\n    \n    TypeList : Type C_Type_curl\n             | ID C_Type_curl\n             | ID DOT ID C_Type_curl\n    \n    C_Type_curl : C_Type_curl COMMA Type\n                | C_Type_curl COMMA ID\n                | C_Type_curl COMMA ID DOT ID\n                |\n    \n    ForStmt : FOR Expression Block\n            | FOR ForClause Block\n            | FOR RangeClause Block\n            | FOR Block\n    \n    ForClause : SimpleStmt SEMICOLON SEMICOLON SimpleStmt\n              | SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt\n    \n    RangeClause : IdentifierList DEFINE RANGE Expression\n                | ExpressionList ASSIGN RANGE Expression\n                | RANGE Expression\n    \n    SelectStmt : SELECT LBRACE CommClause_curl RBRACE\n    \n    CommClause_curl : CommClause_curl CommClause\n                    |\n    \n    CommClause : CommCase COLON StatementList\n    \n    CommCase : CASE SendStmt\n             | CASE RecvStmt\n             | DEFAULT\n    \n    RecvStmt : IdentifierList DEFINE Expression\n             | ExpressionList ASSIGN Expression\n             | Expression\n    '
    
_lr_action_items = {'RETURN':([158,259,417,449,605,612,632,],[-155,331,-154,331,-155,-155,-155,]),'CONST':([4,6,7,27,32,158,259,417,449,605,612,632,],[-5,-3,10,-4,-2,-155,10,-154,10,-155,-155,-155,]),'FUNC':([4,6,7,27,30,31,32,39,44,51,55,60,64,68,69,71,72,74,76,80,84,93,96,97,101,103,108,110,113,116,119,120,123,130,132,134,136,138,144,149,155,158,162,164,177,179,183,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,224,228,241,242,244,245,247,252,257,259,282,288,289,295,301,302,303,308,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,417,420,425,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,473,495,499,504,505,508,511,513,520,525,530,535,537,548,550,551,559,564,565,592,598,605,612,621,632,633,636,637,656,],[-5,-3,15,-4,49,-30,-2,49,49,49,94,49,94,-109,49,49,49,49,49,94,49,94,-183,94,-186,-184,-185,49,-182,185,-187,-188,94,94,49,49,-31,-110,49,49,49,-155,94,94,94,94,94,185,94,-172,-160,-175,-176,-166,-170,-161,-181,94,-163,-179,-174,-164,-169,-171,-165,-178,-167,-180,-162,-168,-173,-177,94,94,185,49,-111,49,49,-121,-120,49,94,-186,49,94,49,94,49,49,49,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-154,94,94,-303,94,-304,-310,-313,-312,-309,-306,-311,-307,-305,-302,-308,94,94,94,49,49,94,94,-313,94,94,94,94,94,94,94,94,94,94,94,49,94,94,49,-155,-155,94,-155,49,94,94,49,]),'DEFAULT':([259,417,434,455,512,514,519,555,557,563,568,595,596,597,601,605,612,626,627,632,634,638,649,],[-153,-154,-338,-369,-345,562,567,-338,602,-337,-368,-345,-338,562,-344,-155,-155,602,562,-155,-339,-370,-346,]),'CHAN':([33,55,64,68,76,80,93,96,97,101,103,108,113,116,119,120,123,130,138,139,155,158,162,164,177,179,183,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,224,228,242,259,282,289,301,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,417,420,425,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,473,504,505,508,511,513,520,525,530,535,537,548,550,551,559,565,592,605,612,621,632,636,637,],[69,110,110,-109,153,110,110,-183,110,-186,-184,-185,-182,110,-187,-188,110,110,-110,244,69,-155,110,110,110,110,110,110,110,-172,-160,-175,-176,-166,-170,-161,-181,110,-163,-179,-174,-164,-169,-171,-165,-178,-167,-180,-162,-168,-173,-177,110,110,110,-111,110,-186,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-154,110,110,-303,110,-304,-310,-313,-312,-309,-306,-311,-307,-305,-302,-308,110,110,110,110,110,-313,110,110,110,110,110,110,110,110,110,110,110,110,110,-155,-155,110,-155,110,110,]),'GOTO':([158,259,417,449,605,612,632,],[-155,354,-154,354,-155,-155,-155,]),'SHL_ASSIGN':([95,98,100,104,105,107,109,111,112,118,121,122,124,125,176,178,180,184,218,222,223,225,226,227,230,269,271,280,283,285,287,291,296,345,346,347,359,363,367,369,370,372,374,377,380,381,384,387,423,426,428,433,435,457,458,460,467,469,470,471,474,475,478,479,481,483,485,486,489,490,522,526,527,528,531,532,533,536,572,573,575,577,578,580,581,583,585,616,617,618,619,622,640,642,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,-190,-250,-251,-158,-248,-159,-256,-260,-261,-262,-196,-197,-195,-198,-199,-255,-275,-266,-33,-192,-157,-191,-211,-200,444,-190,-32,-152,-265,-244,-240,-241,-246,-263,-205,-201,-216,-212,-224,-190,444,-32,-190,-158,-190,-32,-264,-243,-245,-257,-258,-203,-204,-218,-217,-213,-214,-226,-225,-208,-209,-242,-202,-219,-220,-215,-227,-228,-232,-259,-207,-222,-221,-230,-229,-233,-234,-210,-206,-223,-231,-236,-235,-238,-237,-239,]),'LOR':([95,98,100,104,105,107,109,111,112,117,118,121,122,124,125,135,176,178,180,184,192,193,218,222,223,225,226,227,230,269,271,274,275,277,280,283,285,286,287,290,291,294,296,346,347,359,363,367,369,370,371,372,374,377,378,380,381,384,387,416,418,423,428,433,435,457,458,460,464,467,469,470,471,474,475,476,478,479,481,483,485,486,488,489,490,507,518,522,524,526,527,528,531,532,533,536,549,553,554,556,570,572,573,574,575,577,578,580,581,583,585,593,594,611,616,617,618,619,622,640,642,651,652,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,196,-190,-250,-251,-158,-248,196,-159,-256,-260,-261,196,-190,-262,-196,-197,-195,-198,-199,-255,-275,-266,196,-190,196,196,-192,-157,196,-191,196,-211,-190,-200,-190,196,-152,-265,-244,-240,-241,-191,-246,-263,-205,196,-201,-216,-212,-224,196,196,-190,196,-190,-158,-190,196,-264,196,-243,-245,-257,-258,-203,-204,196,-218,-217,-213,-214,-226,-225,-191,-208,-209,196,196,-242,196,-202,-219,-220,-215,-227,-228,-232,196,196,-190,-158,196,-259,-207,196,-222,-221,-230,-229,-233,-234,-210,196,196,196,-206,-223,-231,-236,-235,-238,-237,196,196,-239,]),'GO':([158,259,417,449,605,612,632,],[-155,323,-154,323,-155,-155,-155,]),'COLON':([50,52,54,56,57,59,65,66,68,90,91,92,95,98,100,104,105,107,109,111,112,117,118,121,122,124,125,138,152,153,154,156,157,176,178,180,184,218,222,223,224,225,226,227,230,232,234,240,242,268,269,271,273,274,275,280,283,285,287,290,291,296,297,309,310,311,320,346,359,363,367,369,370,372,374,377,378,380,381,384,387,396,398,399,400,401,423,460,467,469,470,471,474,475,476,478,479,481,483,485,486,489,490,502,518,522,526,527,528,531,532,533,536,540,541,542,543,561,562,567,569,572,573,575,577,578,580,581,583,585,600,602,604,607,610,611,616,617,618,619,622,623,629,630,631,640,642,646,647,651,652,655,657,659,660,661,663,],[-66,-65,-70,-71,-67,-72,-68,-69,-109,-102,-99,-100,-193,-194,-189,-247,-253,-249,-254,-252,-156,-32,-190,-250,-251,-158,-248,-110,-104,-108,-105,-106,-103,-159,-256,-260,-261,-262,-196,-197,289,-195,-198,-199,-255,-62,-63,-76,-111,-101,-275,-266,364,365,366,-33,-192,-157,-191,379,-211,-200,-137,-77,-73,-74,-107,449,-152,-265,-244,-240,-241,-246,-263,-205,473,-201,-216,-212,-224,-64,-143,-144,-146,-147,-190,-264,-243,-245,-257,-258,-203,-204,525,-218,-217,-213,-214,-226,-225,-208,-209,-75,-298,-242,-202,-219,-220,-215,-227,-228,-232,-145,-148,-149,-150,605,-341,-373,612,-259,-207,-222,-221,-230,-229,-233,-234,-210,632,-350,-340,-371,-372,-376,-206,-223,-231,-236,-235,-151,-349,-357,-357,-238,-237,-351,-352,-374,-375,-239,-357,-354,-355,-353,-356,]),'DIV_ASSIGN':([95,98,100,104,105,107,109,111,112,118,121,122,124,125,176,178,180,184,218,222,223,225,226,227,230,269,271,280,283,285,287,291,296,345,346,347,359,363,367,369,370,372,374,377,380,381,384,387,423,426,428,433,435,457,458,460,467,469,470,471,474,475,478,479,481,483,485,486,489,490,522,526,527,528,531,532,533,536,572,573,575,577,578,580,581,583,585,616,617,618,619,622,640,642,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,-190,-250,-251,-158,-248,-159,-256,-260,-261,-262,-196,-197,-195,-198,-199,-255,-275,-266,-33,-192,-157,-191,-211,-200,446,-190,-32,-152,-265,-244,-240,-241,-246,-263,-205,-201,-216,-212,-224,-190,446,-32,-190,-158,-190,-32,-264,-243,-245,-257,-258,-203,-204,-218,-217,-213,-214,-226,-225,-208,-209,-242,-202,-219,-220,-215,-227,-228,-232,-259,-207,-222,-221,-230,-229,-233,-234,-210,-206,-223,-231,-236,-235,-238,-237,-239,]),'MUL':([30,31,39,44,51,55,60,64,68,69,71,72,74,76,80,84,93,95,96,97,98,100,101,103,104,105,107,108,109,110,111,112,113,116,117,118,119,120,121,122,123,124,125,130,132,133,134,135,136,138,144,149,155,158,162,164,176,177,178,179,180,183,184,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,222,223,224,225,226,227,228,230,239,241,242,244,245,247,252,257,259,269,271,274,275,277,280,282,283,285,286,287,288,289,290,291,294,295,296,301,302,303,308,323,327,331,337,343,346,347,357,359,360,362,363,364,365,366,367,369,370,371,372,374,377,378,379,380,381,383,384,385,387,389,403,416,417,418,420,423,425,428,433,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,457,458,460,464,467,469,470,471,473,474,475,476,478,479,481,483,485,486,488,489,490,495,499,504,505,507,508,511,513,518,520,522,524,525,526,527,528,530,531,532,533,535,536,537,548,549,550,551,553,554,556,559,564,565,570,572,573,574,575,577,578,580,581,583,585,592,593,594,598,605,611,612,616,617,618,619,621,622,632,633,636,637,640,642,651,652,655,656,],[51,-30,51,51,51,101,51,101,-109,51,51,51,51,51,101,51,101,-193,-183,51,-194,-189,-186,-184,-247,-253,-249,-185,-254,51,-252,-156,-182,101,197,-190,-187,-188,-250,-251,101,-158,-248,101,51,-79,51,197,-31,-110,51,51,51,-155,101,101,-159,101,-256,101,-260,101,-261,282,197,-190,101,-172,-160,-175,-176,-166,-170,-161,-181,101,-163,-179,-174,-164,-169,-171,-165,-178,-167,-180,-162,-168,-173,-177,-262,101,-196,-197,101,-195,-198,-199,282,-255,307,51,-111,51,51,-121,-120,51,101,-275,-266,197,-190,197,197,-186,-192,-157,197,-191,51,101,197,-211,-190,51,-200,101,51,51,51,101,101,101,101,101,-190,197,101,-152,101,101,-265,101,101,101,-244,-240,-241,-191,-246,-263,-205,197,101,-201,-216,101,-212,101,-224,101,-78,197,-154,197,101,-190,101,197,-190,-158,-303,101,-304,-310,-313,-312,-309,-306,-311,-307,-305,-302,-308,101,101,-190,197,-264,197,-243,-245,-257,-258,101,-203,-204,197,-218,-217,-213,-214,-226,-225,-191,-208,-209,51,51,101,101,197,-313,101,51,197,101,-242,197,101,-202,-219,-220,101,-215,-227,-228,101,-232,101,101,197,101,101,197,-190,-158,101,51,101,197,-259,-207,197,-222,-221,-230,-229,-233,-234,-210,101,197,197,51,-155,197,-155,-206,-223,-231,-236,101,-235,-155,51,101,101,-238,-237,197,197,-239,51,]),'DIV':([95,98,100,104,105,107,109,111,112,117,118,121,122,124,125,135,176,178,180,184,192,193,218,222,223,225,226,227,230,269,271,274,275,277,280,283,285,286,287,290,291,294,296,346,347,359,363,367,369,370,371,372,374,377,378,380,381,384,387,416,418,423,428,433,435,457,458,460,464,467,469,470,471,474,475,476,478,479,481,483,485,486,488,489,490,507,518,522,524,526,527,528,531,532,533,536,549,553,554,556,570,572,573,574,575,577,578,580,581,583,585,593,594,611,616,617,618,619,622,640,642,651,652,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,198,-190,-250,-251,-158,-248,198,-159,-256,-260,-261,198,-190,-262,-196,-197,-195,-198,-199,-255,-275,-266,198,-190,198,198,-192,-157,198,-191,198,-211,-190,-200,-190,198,-152,-265,-244,-240,-241,-191,-246,-263,-205,198,-201,-216,-212,-224,198,198,-190,198,-190,-158,-190,198,-264,198,-243,-245,-257,-258,-203,-204,198,-218,-217,-213,-214,-226,-225,-191,-208,-209,198,198,-242,198,-202,-219,-220,-215,-227,-228,-232,198,198,-190,-158,198,-259,-207,198,-222,-221,-230,-229,-233,-234,-210,198,198,198,-206,-223,-231,-236,-235,-238,-237,198,198,-239,]),'RUNE':([55,64,80,93,96,97,101,103,108,113,116,119,120,123,130,158,162,164,177,179,183,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,224,228,259,282,289,301,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,417,420,425,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,473,504,505,508,511,513,520,525,530,535,537,548,550,551,559,565,592,605,612,621,632,636,637,],[105,105,105,105,-183,105,-186,-184,-185,-182,105,-187,-188,105,105,-155,105,105,105,105,105,105,105,-172,-160,-175,-176,-166,-170,-161,-181,105,-163,-179,-174,-164,-169,-171,-165,-178,-167,-180,-162,-168,-173,-177,105,105,105,105,-186,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-154,105,105,-303,105,-304,-310,-313,-312,-309,-306,-311,-307,-305,-302,-308,105,105,105,105,105,-313,105,105,105,105,105,105,105,105,105,105,105,105,105,-155,-155,105,-155,105,105,]),'DOT':([8,24,45,50,52,54,56,57,59,61,65,66,68,74,81,85,90,91,92,95,98,100,104,105,107,109,111,118,121,122,124,125,129,138,141,145,150,152,153,154,156,157,169,171,176,178,180,181,182,184,193,218,222,223,225,226,227,230,232,234,238,240,242,245,249,254,257,268,269,271,275,283,287,291,294,296,297,299,308,309,310,311,320,346,359,363,367,369,370,371,372,374,376,377,380,381,384,387,392,396,398,399,400,401,406,410,423,433,435,457,460,467,469,470,471,474,475,478,479,481,483,485,486,488,489,490,502,522,526,527,528,531,532,533,536,540,541,542,543,546,554,556,558,572,573,575,577,578,580,581,583,585,616,617,618,619,622,623,631,640,642,655,660,],[26,-10,26,-66,-65,-70,-71,-67,-72,131,-68,-69,-109,146,165,170,-102,-99,173,-193,-194,-189,-247,-253,-249,-254,-252,220,-250,-251,229,-248,233,-110,246,250,255,-104,-108,-105,258,-103,266,-9,229,-256,-260,278,279,-261,284,-262,-196,-197,-195,-198,-199,-255,-62,-63,304,-76,-111,313,315,317,319,-101,-275,-266,220,-192,-191,-211,390,-200,-137,395,407,-77,-73,411,-107,220,-152,-265,-244,-240,468,-191,-246,-263,472,-205,-201,-216,-212,-224,491,-64,-143,493,-146,494,496,501,220,220,515,220,-264,-243,-245,-257,-258,-203,-204,-218,-217,-213,-214,-226,-225,-191,-208,-209,-75,-242,-202,-219,-220,-215,-227,-228,-232,-145,-148,-149,586,589,220,515,603,-259,-207,-222,-221,-230,-229,-233,-234,-210,-206,-223,-231,-236,-235,-151,648,-238,-237,-239,662,]),'SUB':([55,64,80,93,95,98,100,104,105,107,109,111,112,116,117,118,121,122,123,124,125,130,135,158,162,164,176,177,178,179,180,183,184,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,222,223,224,225,226,227,228,230,259,269,271,274,275,277,280,283,285,286,287,289,290,291,294,296,301,323,327,331,337,343,346,347,357,359,360,362,363,364,365,366,367,369,370,371,372,374,377,378,379,380,381,383,384,385,387,389,416,417,418,420,423,425,428,433,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,457,458,460,464,467,469,470,471,473,474,475,476,478,479,481,483,485,486,488,489,490,504,505,507,508,511,518,520,522,524,525,526,527,528,530,531,532,533,535,536,537,548,549,550,551,553,554,556,559,565,570,572,573,574,575,577,578,580,581,583,585,592,593,594,605,611,612,616,617,618,619,621,622,632,636,637,640,642,651,652,655,],[96,96,96,96,-193,-194,-189,-247,-253,-249,-254,-252,-156,96,195,-190,-250,-251,96,-158,-248,96,195,-155,96,96,-159,96,-256,96,-260,96,-261,96,195,-190,96,-172,-160,-175,-176,-166,-170,-161,-181,96,-163,-179,-174,-164,-169,-171,-165,-178,-167,-180,-162,-168,-173,-177,-262,96,-196,-197,96,-195,-198,-199,96,-255,96,-275,-266,195,-190,195,195,-192,-157,195,-191,96,195,-211,-190,-200,96,96,96,96,96,96,-190,195,96,-152,96,96,-265,96,96,96,-244,-240,-241,-191,-246,-263,-205,195,96,-201,-216,96,-212,96,-224,96,195,-154,195,96,-190,96,195,-190,-158,-303,96,-304,-310,-313,-312,-309,-306,-311,-307,-305,-302,-308,96,96,-190,195,-264,195,-243,-245,-257,-258,96,-203,-204,195,-218,-217,-213,-214,-226,-225,-191,-208,-209,96,96,195,-313,96,195,96,-242,195,96,-202,-219,-220,96,-215,-227,-228,96,-232,96,96,195,96,96,195,-190,-158,96,96,195,-259,-207,195,-222,-221,-230,-229,-233,-234,-210,96,195,195,-155,195,-155,-206,-223,-231,-236,96,-235,-155,96,96,-238,-237,195,195,-239,]),'CASE':([259,417,434,455,512,514,519,555,557,563,568,595,596,597,601,605,612,626,627,632,634,638,649,],[-153,-154,-338,-369,-345,559,565,-338,598,-337,-368,-345,-338,559,-344,-155,-155,598,559,-155,-339,-370,-346,]),'DEFER':([158,259,417,449,605,612,632,],[-155,327,-154,327,-155,-155,-155,]),'GEQ':([95,98,100,104,105,107,109,111,112,117,118,121,122,124,125,135,176,178,180,184,192,193,218,222,223,225,226,227,230,269,271,274,275,277,280,283,285,286,287,290,291,294,296,346,347,359,363,367,369,370,371,372,374,377,378,380,381,384,387,416,418,423,428,433,435,457,458,460,464,467,469,470,471,474,475,476,478,479,481,483,485,486,488,489,490,507,518,522,524,526,527,528,531,532,533,536,549,553,554,556,570,572,573,574,575,577,578,580,581,583,585,593,594,611,616,617,618,619,622,640,642,651,652,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,200,-190,-250,-251,-158,-248,200,-159,-256,-260,-261,200,-190,-262,-196,-197,-195,-198,-199,-255,-275,-266,200,-190,200,200,-192,-157,200,-191,200,-211,-190,-200,-190,200,-152,-265,-244,-240,-241,-191,-246,-263,-205,200,-201,-216,-212,-224,200,200,-190,200,-190,-158,-190,200,-264,200,-243,-245,-257,-258,-203,-204,200,-218,-217,-213,-214,-226,-225,-191,-208,-209,200,200,-242,200,-202,-219,-220,-215,-227,-228,-232,200,200,-190,-158,200,-259,-207,200,-222,-221,-230,-229,-233,-234,-210,200,200,200,-206,-223,-231,-236,-235,-238,-237,200,200,-239,]),'DEC':([95,98,100,104,105,107,109,111,112,118,121,122,124,125,176,178,180,184,218,222,223,225,226,227,230,269,271,283,285,287,291,296,346,347,359,363,367,369,370,372,374,377,380,381,384,387,423,428,433,435,457,458,460,467,469,470,471,474,475,478,479,481,483,485,486,489,490,522,526,527,528,531,532,533,536,572,573,575,577,578,580,581,583,585,616,617,618,619,622,640,642,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,-190,-250,-251,-158,-248,-159,-256,-260,-261,-262,-196,-197,-195,-198,-199,-255,-275,-266,-192,-157,-191,-211,-200,-190,450,-152,-265,-244,-240,-241,-246,-263,-205,-201,-216,-212,-224,-190,450,-190,-158,-190,450,-264,-243,-245,-257,-258,-203,-204,-218,-217,-213,-214,-226,-225,-208,-209,-242,-202,-219,-220,-215,-227,-228,-232,-259,-207,-222,-221,-230,-229,-233,-234,-210,-206,-223,-231,-236,-235,-238,-237,-239,]),'RPAREN':([24,29,33,38,42,45,48,50,52,54,56,57,59,65,66,68,70,73,74,78,82,90,91,92,95,98,100,104,105,107,109,111,112,117,118,121,122,124,125,128,129,137,138,139,140,141,142,145,147,150,152,153,154,155,156,157,171,172,176,178,180,184,186,187,188,189,190,192,193,218,222,223,225,226,227,228,230,232,234,240,242,243,245,248,249,251,253,254,257,261,265,268,269,271,277,280,281,283,285,286,287,291,292,293,294,296,297,300,309,310,311,312,314,316,318,320,359,363,367,368,369,370,371,372,373,374,377,380,381,382,383,384,385,386,387,388,389,391,392,396,398,399,400,401,412,413,414,415,460,467,469,470,471,474,475,477,478,479,480,481,482,483,484,485,486,487,488,489,490,502,522,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,572,573,575,576,577,578,579,580,581,582,583,584,585,606,616,617,618,619,620,621,622,623,640,641,642,650,655,],[-10,-24,68,-49,-37,86,88,-66,-65,-70,-71,-67,-72,-68,-69,-109,138,-112,-113,160,166,-102,-99,-100,-193,-194,-189,-247,-253,-249,-254,-252,-156,-32,-190,-250,-251,-158,-248,232,234,-115,-110,242,-126,-131,-123,-128,-125,-130,-104,-108,-105,68,-106,-103,-9,-23,-159,-256,-260,-261,-66,232,-71,-67,-72,283,234,-262,-196,-197,-195,-198,-199,291,-255,-62,-63,-76,-111,-119,-116,-122,-127,-114,-124,-129,234,-48,-36,-101,-275,-266,367,-33,-102,-192,-157,372,-191,-211,381,384,387,-200,-137,396,-77,-73,-74,-118,-136,-133,-135,-107,-152,-265,-244,467,-240,-241,396,-246,469,-263,-205,-201,-216,478,479,-212,481,483,-224,485,486,489,490,-64,-143,-144,-146,-147,-117,-132,-134,396,-264,-243,-245,-257,-258,-203,-204,527,-218,-217,528,-213,531,-214,532,-226,-225,533,536,-208,-209,-75,-242,-202,-219,-220,575,577,-215,-227,-228,578,580,-232,581,583,585,-145,-148,-149,-150,-259,-207,-222,617,-221,-230,618,-229,-233,619,-234,622,-210,635,-206,-223,-231,-236,640,642,-235,-151,-238,655,-237,658,-239,]),'SEMICOLON':([1,5,9,11,12,13,14,17,18,19,21,22,23,28,30,31,37,40,41,43,46,47,50,52,54,56,57,59,65,66,68,77,79,81,83,85,86,87,88,89,90,91,92,95,98,100,104,105,107,109,111,112,114,117,118,121,122,124,125,136,138,151,152,153,154,156,157,158,159,160,161,163,166,167,168,169,174,176,178,180,184,218,222,223,225,226,227,230,232,234,235,240,242,256,259,262,263,264,267,268,269,271,280,283,285,287,291,296,297,298,299,305,306,308,309,310,311,320,321,322,324,325,326,328,329,330,331,332,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,350,351,352,353,356,357,358,359,361,363,367,369,370,372,374,377,380,381,384,387,394,396,397,398,399,400,401,404,405,406,408,410,416,417,418,419,421,423,428,429,430,431,433,435,449,450,452,453,454,456,457,458,459,460,467,469,470,471,474,475,478,479,481,483,485,486,489,490,492,497,498,500,502,503,504,506,509,510,516,517,518,521,522,526,527,528,531,532,533,536,540,541,542,543,544,545,546,547,549,560,566,572,573,575,577,578,580,581,583,585,587,588,590,599,605,612,613,614,615,616,617,618,619,622,623,624,628,632,640,642,643,644,645,653,654,655,],[4,-6,27,-16,32,-15,-19,-17,-18,-20,-14,-7,-13,-21,-29,-30,-46,-39,-38,-34,-12,-11,-66,-65,-70,-71,-67,-72,-68,-69,-109,-58,-56,-54,-43,-44,-8,171,-22,172,-102,-99,-100,-193,-194,-189,-247,-253,-249,-254,-252,-156,-28,-32,-190,-250,-251,-158,-248,-31,-110,-60,-104,-108,-105,-106,-103,-155,-57,-47,261,-53,-35,265,-40,-41,-27,-159,-256,-260,-261,-262,-196,-197,-195,-198,-199,-255,-62,-63,-25,-76,-111,-59,-296,-50,-51,-55,-45,-101,-275,-266,-33,-192,-157,-191,-211,-200,-137,393,-141,403,-86,-96,-77,-73,-74,-107,-292,-282,-291,417,-285,-294,-293,-333,-317,-332,-279,-290,-283,-296,-277,-286,-287,-321,-323,-296,-276,-190,-297,-319,-280,-284,-278,-289,-288,-295,-296,-281,-152,-42,-265,-244,-240,-241,-246,-263,-205,-201,-216,-212,-224,-140,-64,-26,-143,-144,-146,-147,-93,-98,-94,-83,-84,-315,-154,-324,-316,504,-190,-297,-361,-320,511,-190,-158,-296,-300,-299,-318,-322,520,-190,-297,-52,-264,-243,-245,-257,-258,-203,-204,-218,-217,-213,-214,-226,-225,-208,-209,-142,-97,-88,-90,-75,-325,548,-360,-359,-358,-301,-314,-298,-326,-242,-202,-219,-220,-215,-227,-228,-232,-145,-148,-149,-150,-95,-80,-81,-85,592,-334,-367,-259,-207,-222,-221,-230,-229,-233,-234,-210,-87,-89,-92,-343,-155,-155,-327,-328,-329,-206,-223,-231,-236,-235,-151,-82,-335,-155,-238,-237,-91,-342,-336,-331,-330,-239,]),'RANGE':([337,505,508,],[425,550,551,]),'FALLTHROUGH':([158,259,417,449,605,612,632,],[-155,342,-154,342,-155,-155,-155,]),'SHR_ASSIGN':([95,98,100,104,105,107,109,111,112,118,121,122,124,125,176,178,180,184,218,222,223,225,226,227,230,269,271,280,283,285,287,291,296,345,346,347,359,363,367,369,370,372,374,377,380,381,384,387,423,426,428,433,435,457,458,460,467,469,470,471,474,475,478,479,481,483,485,486,489,490,522,526,527,528,531,532,533,536,572,573,575,577,578,580,581,583,585,616,617,618,619,622,640,642,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,-190,-250,-251,-158,-248,-159,-256,-260,-261,-262,-196,-197,-195,-198,-199,-255,-275,-266,-33,-192,-157,-191,-211,-200,441,-190,-32,-152,-265,-244,-240,-241,-246,-263,-205,-201,-216,-212,-224,-190,441,-32,-190,-158,-190,-32,-264,-243,-245,-257,-258,-203,-204,-218,-217,-213,-214,-226,-225,-208,-209,-242,-202,-219,-220,-215,-227,-228,-232,-259,-207,-222,-221,-230,-229,-233,-234,-210,-206,-223,-231,-236,-235,-238,-237,-239,]),'MOD':([95,98,100,104,105,107,109,111,112,117,118,121,122,124,125,135,176,178,180,184,192,193,218,222,223,225,226,227,230,269,271,274,275,277,280,283,285,286,287,290,291,294,296,346,347,359,363,367,369,370,371,372,374,377,378,380,381,384,387,416,418,423,428,433,435,457,458,460,464,467,469,470,471,474,475,476,478,479,481,483,485,486,488,489,490,507,518,522,524,526,527,528,531,532,533,536,549,553,554,556,570,572,573,574,575,577,578,580,581,583,585,593,594,611,616,617,618,619,622,640,642,651,652,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,217,-190,-250,-251,-158,-248,217,-159,-256,-260,-261,217,-190,-262,-196,-197,-195,-198,-199,-255,-275,-266,217,-190,217,217,-192,-157,217,-191,217,-211,-190,-200,-190,217,-152,-265,-244,-240,-241,-191,-246,-263,-205,217,-201,-216,-212,-224,217,217,-190,217,-190,-158,-190,217,-264,217,-243,-245,-257,-258,-203,-204,217,-218,-217,-213,-214,-226,-225,-191,-208,-209,217,217,-242,217,-202,-219,-220,-215,-227,-228,-232,217,217,-190,-158,217,-259,-207,217,-222,-221,-230,-229,-233,-234,-210,217,217,217,-206,-223,-231,-236,-235,-238,-237,217,217,-239,]),'SWITCH':([158,259,417,449,605,612,632,],[-155,343,-154,343,-155,-155,-155,]),'LTN':([95,98,100,104,105,107,109,111,112,117,118,121,122,124,125,135,176,178,180,184,192,193,218,222,223,225,226,227,230,269,271,274,275,277,280,283,285,286,287,290,291,294,296,346,347,359,363,367,369,370,371,372,374,377,378,380,381,384,387,416,418,423,428,433,435,457,458,460,464,467,469,470,471,474,475,476,478,479,481,483,485,486,488,489,490,507,518,522,524,526,527,528,531,532,533,536,549,553,554,556,570,572,573,574,575,577,578,580,581,583,585,593,594,611,616,617,618,619,622,640,642,651,652,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,212,-190,-250,-251,-158,-248,212,-159,-256,-260,-261,212,-190,-262,-196,-197,-195,-198,-199,-255,-275,-266,212,-190,212,212,-192,-157,212,-191,212,-211,-190,-200,-190,212,-152,-265,-244,-240,-241,-191,-246,-263,-205,212,-201,-216,-212,-224,212,212,-190,212,-190,-158,-190,212,-264,212,-243,-245,-257,-258,-203,-204,212,-218,-217,-213,-214,-226,-225,-191,-208,-209,212,212,-242,212,-202,-219,-220,-215,-227,-228,-232,212,212,-190,-158,212,-259,-207,212,-222,-221,-230,-229,-233,-234,-210,212,212,212,-206,-223,-231,-236,-235,-238,-237,212,212,-239,]),'AND_NOT':([95,98,100,104,105,107,109,111,112,117,118,121,122,124,125,135,176,178,180,184,192,193,218,222,223,225,226,227,230,269,271,274,275,277,280,283,285,286,287,290,291,294,296,346,347,359,363,367,369,370,371,372,374,377,378,380,381,384,387,416,418,423,428,433,435,457,458,460,464,467,469,470,471,474,475,476,478,479,481,483,485,486,488,489,490,507,518,522,524,526,527,528,531,532,533,536,549,553,554,556,570,572,573,574,575,577,578,580,581,583,585,593,594,611,616,617,618,619,622,640,642,651,652,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,202,-190,-250,-251,-158,-248,202,-159,-256,-260,-261,202,-190,-262,-196,-197,-195,-198,-199,-255,-275,-266,202,-190,202,202,-192,-157,202,-191,202,-211,-190,-200,-190,202,-152,-265,-244,-240,-241,-191,-246,-263,-205,202,-201,-216,-212,-224,202,202,-190,202,-190,-158,-190,202,-264,202,-243,-245,-257,-258,-203,-204,202,-218,-217,-213,-214,-226,-225,-191,-208,-209,202,202,-242,202,-202,-219,-220,-215,-227,-228,-232,202,202,-190,-158,202,-259,-207,202,-222,-221,-230,-229,-233,-234,-210,202,202,202,-206,-223,-231,-236,-235,-238,-237,202,202,-239,]),'AND_ASSIGN':([95,98,100,104,105,107,109,111,112,118,121,122,124,125,176,178,180,184,218,222,223,225,226,227,230,269,271,280,283,285,287,291,296,345,346,347,359,363,367,369,370,372,374,377,380,381,384,387,423,426,428,433,435,457,458,460,467,469,470,471,474,475,478,479,481,483,485,486,489,490,522,526,527,528,531,532,533,536,572,573,575,577,578,580,581,583,585,616,617,618,619,622,640,642,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,-190,-250,-251,-158,-248,-159,-256,-260,-261,-262,-196,-197,-195,-198,-199,-255,-275,-266,-33,-192,-157,-191,-211,-200,445,-190,-32,-152,-265,-244,-240,-241,-246,-263,-205,-201,-216,-212,-224,-190,445,-32,-190,-158,-190,-32,-264,-243,-245,-257,-258,-203,-204,-218,-217,-213,-214,-226,-225,-208,-209,-242,-202,-219,-220,-215,-227,-228,-232,-259,-207,-222,-221,-230,-229,-233,-234,-210,-206,-223,-231,-236,-235,-238,-237,-239,]),'COMMA':([31,50,52,54,56,57,59,65,66,68,70,72,73,74,90,91,92,95,98,100,104,105,107,109,111,112,114,117,118,121,122,124,125,137,138,140,141,142,145,147,150,152,153,154,156,157,163,174,176,178,180,184,186,188,189,190,218,222,223,225,226,227,230,232,234,235,240,242,243,245,247,248,249,251,252,253,254,257,262,263,268,269,270,271,272,273,274,275,276,277,280,281,283,285,286,287,291,292,293,294,296,297,308,309,310,311,312,314,316,318,320,345,346,347,359,363,367,369,370,372,374,377,380,381,382,384,386,387,388,396,397,398,399,400,401,412,413,414,415,419,423,426,428,433,435,457,458,459,460,461,462,463,464,465,466,467,469,470,471,474,475,478,479,480,481,483,485,486,487,488,489,490,502,503,516,522,526,527,528,529,531,532,533,534,536,538,540,541,542,543,572,573,575,577,578,580,581,582,583,585,604,609,611,616,617,618,619,620,622,623,630,631,640,642,646,647,655,657,659,660,661,663,],[67,-66,-65,-70,-71,-67,-72,-68,-69,-109,139,143,-112,148,-102,-99,-100,-193,-194,-189,-247,-253,-249,-254,-252,-156,183,-32,-190,-250,-251,-158,-248,-115,-110,-126,-131,-123,-128,-125,-130,-104,-108,-105,-106,-103,183,183,-159,-256,-260,-261,-66,-71,-67,-72,-262,-196,-197,-195,-198,-199,-255,-62,-63,183,-76,-111,-119,148,-121,-122,-127,-114,-120,-124,-129,148,183,183,-101,-275,362,-266,-272,-274,-273,-190,-267,368,-33,-102,-192,-157,373,-191,-211,383,385,389,-200,-137,409,-77,-73,-74,-118,-136,-133,-135,-107,183,67,-32,-152,-265,-244,-240,-241,-246,-263,-205,-201,-216,477,-212,482,-224,484,-64,183,-143,-144,-146,-147,-117,-132,-134,-114,183,67,183,-32,67,-158,67,-32,183,-264,-268,-271,-274,-273,-270,-269,-243,-245,-257,-258,-203,-204,-218,-217,530,-213,-214,-226,-225,535,537,-208,-209,-75,183,183,-242,-202,-219,-220,576,-215,-227,-228,579,-232,584,-145,-148,-149,-150,-259,-207,-222,-221,-230,-229,-233,621,-234,-210,183,183,-32,-206,-223,-231,-236,641,-235,-151,-357,-357,-238,-237,656,656,-239,-357,-354,-355,656,-356,]),'AND_NOT_ASSIGN':([95,98,100,104,105,107,109,111,112,118,121,122,124,125,176,178,180,184,218,222,223,225,226,227,230,269,271,280,283,285,287,291,296,345,346,347,359,363,367,369,370,372,374,377,380,381,384,387,423,426,428,433,435,457,458,460,467,469,470,471,474,475,478,479,481,483,485,486,489,490,522,526,527,528,531,532,533,536,572,573,575,577,578,580,581,583,585,616,617,618,619,622,640,642,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,-190,-250,-251,-158,-248,-159,-256,-260,-261,-262,-196,-197,-195,-198,-199,-255,-275,-266,-33,-192,-157,-191,-211,-200,448,-190,-32,-152,-265,-244,-240,-241,-246,-263,-205,-201,-216,-212,-224,-190,448,-32,-190,-158,-190,-32,-264,-243,-245,-257,-258,-203,-204,-218,-217,-213,-214,-226,-225,-208,-209,-242,-202,-219,-220,-215,-227,-228,-232,-259,-207,-222,-221,-230,-229,-233,-234,-210,-206,-223,-231,-236,-235,-238,-237,-239,]),'INC':([95,98,100,104,105,107,109,111,112,118,121,122,124,125,176,178,180,184,218,222,223,225,226,227,230,269,271,283,285,287,291,296,346,347,359,363,367,369,370,372,374,377,380,381,384,387,423,428,433,435,457,458,460,467,469,470,471,474,475,478,479,481,483,485,486,489,490,522,526,527,528,531,532,533,536,572,573,575,577,578,580,581,583,585,616,617,618,619,622,640,642,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,-190,-250,-251,-158,-248,-159,-256,-260,-261,-262,-196,-197,-195,-198,-199,-255,-275,-266,-192,-157,-191,-211,-200,-190,452,-152,-265,-244,-240,-241,-246,-263,-205,-201,-216,-212,-224,-190,452,-190,-158,-190,452,-264,-243,-245,-257,-258,-203,-204,-218,-217,-213,-214,-226,-225,-208,-209,-242,-202,-219,-220,-215,-227,-228,-232,-259,-207,-222,-221,-230,-229,-233,-234,-210,-206,-223,-231,-236,-235,-238,-237,-239,]),'IMPORT':([4,6,27,],[-5,8,-4,]),'NEQ':([95,98,100,104,105,107,109,111,112,117,118,121,122,124,125,135,176,178,180,184,192,193,218,222,223,225,226,227,230,269,271,274,275,277,280,283,285,286,287,290,291,294,296,346,347,359,363,367,369,370,371,372,374,377,378,380,381,384,387,416,418,423,428,433,435,457,458,460,464,467,469,470,471,474,475,476,478,479,481,483,485,486,488,489,490,507,518,522,524,526,527,528,531,532,533,536,549,553,554,556,570,572,573,574,575,577,578,580,581,583,585,593,594,611,616,617,618,619,622,640,642,651,652,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,199,-190,-250,-251,-158,-248,199,-159,-256,-260,-261,199,-190,-262,-196,-197,-195,-198,-199,-255,-275,-266,199,-190,199,199,-192,-157,199,-191,199,-211,-190,-200,-190,199,-152,-265,-244,-240,-241,-191,-246,-263,-205,199,-201,-216,-212,-224,199,199,-190,199,-190,-158,-190,199,-264,199,-243,-245,-257,-258,-203,-204,199,-218,-217,-213,-214,-226,-225,-191,-208,-209,199,199,-242,199,-202,-219,-220,-215,-227,-228,-232,199,199,-190,-158,199,-259,-207,199,-222,-221,-230,-229,-233,-234,-210,199,199,199,-206,-223,-231,-236,-235,-238,-237,199,199,-239,]),'ASSIGN':([30,31,39,44,50,52,53,54,56,57,59,61,65,66,68,79,81,90,91,92,95,98,100,104,105,107,109,111,112,118,121,122,124,125,136,138,152,153,154,156,157,176,178,180,184,218,222,223,225,226,227,230,232,234,236,240,242,264,268,269,271,280,283,285,287,291,296,297,309,310,311,320,345,346,347,359,363,367,369,370,372,374,377,380,381,384,387,396,398,399,400,401,423,426,428,433,435,457,458,460,467,469,470,471,474,475,478,479,481,483,485,486,489,490,502,522,526,527,528,531,532,533,536,540,541,542,543,572,573,575,577,578,580,581,583,585,609,611,616,617,618,619,622,623,640,642,655,],[55,-30,80,84,-66,-65,93,-70,-71,-67,-72,130,-68,-69,-109,162,164,-102,-99,-100,-193,-194,-189,-247,-253,-249,-254,-252,-156,-190,-250,-251,-158,-248,-31,-110,-104,-108,-105,-106,-103,-159,-256,-260,-261,-262,-196,-197,-195,-198,-199,-255,-62,-63,301,-76,-111,360,-101,-275,-266,-33,-192,-157,-191,-211,-200,-137,-77,-73,-74,-107,440,-190,-32,-152,-265,-244,-240,-241,-246,-263,-205,-201,-216,-212,-224,-64,-143,-144,-146,-147,-190,508,-32,-190,-158,-190,-32,-264,-243,-245,-257,-258,-203,-204,-218,-217,-213,-214,-226,-225,-208,-209,-75,-242,-202,-219,-220,-215,-227,-228,-232,-145,-148,-149,-150,-259,-207,-222,-221,-230,-229,-233,-234,-210,637,-32,-206,-223,-231,-236,-235,-151,-238,-237,-239,]),'DEFINE':([31,136,333,346,422,423,433,457,554,608,],[-30,-31,420,-30,505,-30,513,-30,513,636,]),'SUB_ASSIGN':([95,98,100,104,105,107,109,111,112,118,121,122,124,125,176,178,180,184,218,222,223,225,226,227,230,269,271,280,283,285,287,291,296,345,346,347,359,363,367,369,370,372,374,377,380,381,384,387,423,426,428,433,435,457,458,460,467,469,470,471,474,475,478,479,481,483,485,486,489,490,522,526,527,528,531,532,533,536,572,573,575,577,578,580,581,583,585,616,617,618,619,622,640,642,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,-190,-250,-251,-158,-248,-159,-256,-260,-261,-262,-196,-197,-195,-198,-199,-255,-275,-266,-33,-192,-157,-191,-211,-200,436,-190,-32,-152,-265,-244,-240,-241,-246,-263,-205,-201,-216,-212,-224,-190,436,-32,-190,-158,-190,-32,-264,-243,-245,-257,-258,-203,-204,-218,-217,-213,-214,-226,-225,-208,-209,-242,-202,-219,-220,-215,-227,-228,-232,-259,-207,-222,-221,-230,-229,-233,-234,-210,-206,-223,-231,-236,-235,-238,-237,-239,]),'SHR':([95,98,100,104,105,107,109,111,112,117,118,121,122,124,125,135,176,178,180,184,192,193,218,222,223,225,226,227,230,269,271,274,275,277,280,283,285,286,287,290,291,294,296,346,347,359,363,367,369,370,371,372,374,377,378,380,381,384,387,416,418,423,428,433,435,457,458,460,464,467,469,470,471,474,475,476,478,479,481,483,485,486,488,489,490,507,518,522,524,526,527,528,531,532,533,536,549,553,554,556,570,572,573,574,575,577,578,580,581,583,585,593,594,611,616,617,618,619,622,640,642,651,652,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,205,-190,-250,-251,-158,-248,205,-159,-256,-260,-261,205,-190,-262,-196,-197,-195,-198,-199,-255,-275,-266,205,-190,205,205,-192,-157,205,-191,205,-211,-190,-200,-190,205,-152,-265,-244,-240,-241,-191,-246,-263,-205,205,-201,-216,-212,-224,205,205,-190,205,-190,-158,-190,205,-264,205,-243,-245,-257,-258,-203,-204,205,-218,-217,-213,-214,-226,-225,-191,-208,-209,205,205,-242,205,-202,-219,-220,-215,-227,-228,-232,205,205,-190,-158,205,-259,-207,205,-222,-221,-230,-229,-233,-234,-210,205,205,205,-206,-223,-231,-236,-235,-238,-237,205,205,-239,]),'XOR':([55,64,80,93,95,98,100,104,105,107,109,111,112,116,117,118,121,122,123,124,125,130,135,158,162,164,176,177,178,179,180,183,184,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,222,223,224,225,226,227,228,230,259,269,271,274,275,277,280,283,285,286,287,289,290,291,294,296,301,323,327,331,337,343,346,347,357,359,360,362,363,364,365,366,367,369,370,371,372,374,377,378,379,380,381,383,384,385,387,389,416,417,418,420,423,425,428,433,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,457,458,460,464,467,469,470,471,473,474,475,476,478,479,481,483,485,486,488,489,490,504,505,507,508,511,518,520,522,524,525,526,527,528,530,531,532,533,535,536,537,548,549,550,551,553,554,556,559,565,570,572,573,574,575,577,578,580,581,583,585,592,593,594,605,611,612,616,617,618,619,621,622,632,636,637,640,642,651,652,655,],[108,108,108,108,-193,-194,-189,-247,-253,-249,-254,-252,-156,108,206,-190,-250,-251,108,-158,-248,108,206,-155,108,108,-159,108,-256,108,-260,108,-261,108,206,-190,108,-172,-160,-175,-176,-166,-170,-161,-181,108,-163,-179,-174,-164,-169,-171,-165,-178,-167,-180,-162,-168,-173,-177,-262,108,-196,-197,108,-195,-198,-199,108,-255,108,-275,-266,206,-190,206,206,-192,-157,206,-191,108,206,-211,-190,-200,108,108,108,108,108,108,-190,206,108,-152,108,108,-265,108,108,108,-244,-240,-241,-191,-246,-263,-205,206,108,-201,-216,108,-212,108,-224,108,206,-154,206,108,-190,108,206,-190,-158,-303,108,-304,-310,-313,-312,-309,-306,-311,-307,-305,-302,-308,108,108,-190,206,-264,206,-243,-245,-257,-258,108,-203,-204,206,-218,-217,-213,-214,-226,-225,-191,-208,-209,108,108,206,-313,108,206,108,-242,206,108,-202,-219,-220,108,-215,-227,-228,108,-232,108,108,206,108,108,206,-190,-158,108,108,206,-259,-207,206,-222,-221,-230,-229,-233,-234,-210,108,206,206,-155,206,-155,-206,-223,-231,-236,108,-235,-155,108,108,-238,-237,206,206,-239,]),'STRING':([8,24,25,26,45,50,52,54,55,56,57,59,64,65,66,68,80,90,91,92,93,96,97,101,103,108,113,116,119,120,123,130,138,152,153,154,156,157,158,162,164,171,177,179,183,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,224,228,232,234,240,242,259,268,282,289,297,301,306,308,309,310,311,320,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,396,398,399,400,401,406,408,410,417,420,425,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,473,497,502,504,505,508,511,513,520,525,530,535,537,540,541,542,543,544,545,546,547,548,550,551,559,565,592,605,612,621,623,624,632,636,637,],[21,-10,21,21,21,-66,-65,-70,109,-71,-67,-72,109,-68,-69,-109,109,-102,-99,-100,109,-183,109,-186,-184,-185,-182,109,-187,-188,109,109,-110,-104,-108,-105,-106,-103,-155,109,109,-9,109,109,109,109,109,-172,-160,-175,-176,-166,-170,-161,-181,109,-163,-179,-174,-164,-169,-171,-165,-178,-167,-180,-162,-168,-173,-177,109,109,109,-62,-63,-76,-111,109,-101,-186,109,-137,109,405,-96,-77,-73,-74,-107,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-64,-143,-144,-146,-147,-94,405,405,-154,109,109,-303,109,-304,-310,-313,-312,-309,-306,-311,-307,-305,-302,-308,109,109,109,-97,-75,109,109,-313,109,109,109,109,109,109,109,-145,-148,-149,-150,-95,405,405,405,109,109,109,109,109,109,-155,-155,109,-151,405,-155,109,109,]),'FOR':([158,259,417,449,605,612,632,],[-155,337,-154,337,-155,-155,-155,]),'PACKAGE':([0,],[3,]),'IMAG':([55,64,80,93,96,97,101,103,108,113,116,119,120,123,130,158,162,164,177,179,183,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,224,228,259,282,289,301,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,417,420,425,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,473,504,505,508,511,513,520,525,530,535,537,548,550,551,559,565,592,605,612,621,632,636,637,],[111,111,111,111,-183,111,-186,-184,-185,-182,111,-187,-188,111,111,-155,111,111,111,111,111,111,111,-172,-160,-175,-176,-166,-170,-161,-181,111,-163,-179,-174,-164,-169,-171,-165,-178,-167,-180,-162,-168,-173,-177,111,111,111,111,-186,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,-154,111,111,-303,111,-304,-310,-313,-312,-309,-306,-311,-307,-305,-302,-308,111,111,111,111,111,-313,111,111,111,111,111,111,111,111,111,111,111,111,111,-155,-155,111,-155,111,111,]),'RBRACK':([50,52,54,56,57,59,64,65,66,68,90,91,92,95,98,100,104,105,107,109,111,112,118,121,122,123,124,125,135,138,152,153,154,156,157,176,178,180,184,194,218,221,222,223,225,226,227,230,232,234,237,238,240,242,268,269,271,283,285,287,289,290,291,296,297,309,310,311,320,359,363,367,369,370,372,374,377,378,379,380,381,384,387,396,398,399,400,401,402,460,467,469,470,471,474,475,476,478,479,481,483,485,486,489,490,502,522,524,526,527,528,531,532,533,536,540,541,542,543,572,573,574,575,577,578,580,581,583,585,616,617,618,619,622,623,640,642,655,],[-66,-65,-70,-71,-67,-72,134,-68,-69,-109,-102,-99,-100,-193,-194,-189,-247,-253,-249,-254,-252,-156,-190,-250,-251,134,-158,-248,241,-110,-104,-108,-105,-106,-103,-159,-256,-260,-261,134,-262,288,-196,-197,-195,-198,-199,-255,-62,-63,302,303,-76,-111,-101,-275,-266,-192,-157,-191,377,380,-211,-200,-137,-77,-73,-74,-107,-152,-265,-244,-240,-241,-246,-263,-205,474,475,-201,-216,-212,-224,-64,-143,-144,-146,-147,495,-264,-243,-245,-257,-258,-203,-204,526,-218,-217,-213,-214,-226,-225,-208,-209,-75,-242,573,-202,-219,-220,-215,-227,-228,-232,-145,-148,-149,-150,-259,-207,616,-222,-221,-230,-229,-233,-234,-210,-206,-223,-231,-236,-235,-151,-238,-237,-239,]),'SELECT':([158,259,417,449,605,612,632,],[-155,355,-154,355,-155,-155,-155,]),'RBRACE':([95,98,100,104,105,107,109,111,112,118,121,122,124,125,127,133,158,176,177,178,180,184,218,222,223,225,226,227,230,231,239,259,260,269,270,271,272,273,274,275,276,283,285,287,291,296,359,362,363,367,369,370,372,374,377,380,381,384,387,393,403,417,434,455,460,461,462,463,464,465,466,467,469,470,471,474,475,478,479,481,483,485,486,489,490,512,514,519,522,526,527,528,531,532,533,536,555,557,563,568,572,573,575,577,578,580,581,583,585,595,596,597,601,605,612,616,617,618,619,622,626,627,632,634,638,640,642,649,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,-190,-250,-251,-158,-248,-139,-79,-155,-159,271,-256,-260,-261,-262,-196,-197,-195,-198,-199,-255,297,309,-153,359,-275,363,-266,-272,-274,-273,-190,-267,-192,-157,-191,-211,-200,-152,460,-265,-244,-240,-241,-246,-263,-205,-201,-216,-212,-224,-138,-78,-154,-338,-369,-264,-268,-271,-274,-273,-270,-269,-243,-245,-257,-258,-203,-204,-218,-217,-213,-214,-226,-225,-208,-209,-345,560,566,-242,-202,-219,-220,-215,-227,-228,-232,-338,599,-337,-368,-259,-207,-222,-221,-230,-229,-233,-234,-210,-345,-338,628,-344,-155,-155,-206,-223,-231,-236,-235,644,645,-155,-339,-370,-238,-237,-346,-239,]),'ELSE':([359,521,613,],[-152,571,639,]),'NOT':([55,64,80,93,116,123,130,158,162,164,177,179,183,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,224,228,259,289,301,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,417,420,425,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,473,504,505,508,511,520,525,530,535,537,548,550,551,559,565,592,605,612,621,632,636,637,],[103,103,103,103,103,103,103,-155,103,103,103,103,103,103,103,-172,-160,-175,-176,-166,-170,-161,-181,103,-163,-179,-174,-164,-169,-171,-165,-178,-167,-180,-162,-168,-173,-177,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-154,103,103,-303,103,-304,-310,-313,-312,-309,-306,-311,-307,-305,-302,-308,103,103,103,103,103,-313,103,103,103,103,103,103,103,103,103,103,103,103,-155,-155,103,-155,103,103,]),'ADD':([55,64,80,93,95,98,100,104,105,107,109,111,112,116,117,118,121,122,123,124,125,130,135,158,162,164,176,177,178,179,180,183,184,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,222,223,224,225,226,227,228,230,259,269,271,274,275,277,280,283,285,286,287,289,290,291,294,296,301,323,327,331,337,343,346,347,357,359,360,362,363,364,365,366,367,369,370,371,372,374,377,378,379,380,381,383,384,385,387,389,416,417,418,420,423,425,428,433,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,457,458,460,464,467,469,470,471,473,474,475,476,478,479,481,483,485,486,488,489,490,504,505,507,508,511,518,520,522,524,525,526,527,528,530,531,532,533,535,536,537,548,549,550,551,553,554,556,559,565,570,572,573,574,575,577,578,580,581,583,585,592,593,594,605,611,612,616,617,618,619,621,622,632,636,637,640,642,651,652,655,],[113,113,113,113,-193,-194,-189,-247,-253,-249,-254,-252,-156,113,209,-190,-250,-251,113,-158,-248,113,209,-155,113,113,-159,113,-256,113,-260,113,-261,113,209,-190,113,-172,-160,-175,-176,-166,-170,-161,-181,113,-163,-179,-174,-164,-169,-171,-165,-178,-167,-180,-162,-168,-173,-177,-262,113,-196,-197,113,-195,-198,-199,113,-255,113,-275,-266,209,-190,209,209,-192,-157,209,-191,113,209,-211,-190,-200,113,113,113,113,113,113,-190,209,113,-152,113,113,-265,113,113,113,-244,-240,-241,-191,-246,-263,-205,209,113,-201,-216,113,-212,113,-224,113,209,-154,209,113,-190,113,209,-190,-158,-303,113,-304,-310,-313,-312,-309,-306,-311,-307,-305,-302,-308,113,113,-190,209,-264,209,-243,-245,-257,-258,113,-203,-204,209,-218,-217,-213,-214,-226,-225,-191,-208,-209,113,113,209,-313,113,209,113,-242,209,113,-202,-219,-220,113,-215,-227,-228,113,-232,113,113,209,113,113,209,-190,-158,113,113,209,-259,-207,209,-222,-221,-230,-229,-233,-234,-210,113,209,209,-155,209,-155,-206,-223,-231,-236,113,-235,-155,113,113,-238,-237,209,209,-239,]),'LAND':([95,98,100,104,105,107,109,111,112,117,118,121,122,124,125,135,176,178,180,184,192,193,218,222,223,225,226,227,230,269,271,274,275,277,280,283,285,286,287,290,291,294,296,346,347,359,363,367,369,370,371,372,374,377,378,380,381,384,387,416,418,423,428,433,435,457,458,460,464,467,469,470,471,474,475,476,478,479,481,483,485,486,488,489,490,507,518,522,524,526,527,528,531,532,533,536,549,553,554,556,570,572,573,574,575,577,578,580,581,583,585,593,594,611,616,617,618,619,622,640,642,651,652,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,201,-190,-250,-251,-158,-248,201,-159,-256,-260,-261,201,-190,-262,-196,-197,-195,-198,-199,-255,-275,-266,201,-190,201,201,-192,-157,201,-191,201,-211,-190,-200,-190,201,-152,-265,-244,-240,-241,-191,-246,-263,-205,201,-201,-216,-212,-224,201,201,-190,201,-190,-158,-190,201,-264,201,-243,-245,-257,-258,-203,-204,201,-218,-217,-213,-214,-226,-225,-191,-208,-209,201,201,-242,201,-202,-219,-220,-215,-227,-228,-232,201,201,-190,-158,201,-259,-207,201,-222,-221,-230,-229,-233,-234,-210,201,201,201,-206,-223,-231,-236,-235,-238,-237,201,201,-239,]),'GTN':([95,98,100,104,105,107,109,111,112,117,118,121,122,124,125,135,176,178,180,184,192,193,218,222,223,225,226,227,230,269,271,274,275,277,280,283,285,286,287,290,291,294,296,346,347,359,363,367,369,370,371,372,374,377,378,380,381,384,387,416,418,423,428,433,435,457,458,460,464,467,469,470,471,474,475,476,478,479,481,483,485,486,488,489,490,507,518,522,524,526,527,528,531,532,533,536,549,553,554,556,570,572,573,574,575,577,578,580,581,583,585,593,594,611,616,617,618,619,622,640,642,651,652,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,208,-190,-250,-251,-158,-248,208,-159,-256,-260,-261,208,-190,-262,-196,-197,-195,-198,-199,-255,-275,-266,208,-190,208,208,-192,-157,208,-191,208,-211,-190,-200,-190,208,-152,-265,-244,-240,-241,-191,-246,-263,-205,208,-201,-216,-212,-224,208,208,-190,208,-190,-158,-190,208,-264,208,-243,-245,-257,-258,-203,-204,208,-218,-217,-213,-214,-226,-225,-191,-208,-209,208,208,-242,208,-202,-219,-220,-215,-227,-228,-232,208,208,-190,-158,208,-259,-207,208,-222,-221,-230,-229,-233,-234,-210,208,208,208,-206,-223,-231,-236,-235,-238,-237,208,208,-239,]),'LPAREN':([8,10,15,16,20,30,31,36,39,44,49,50,51,52,54,55,56,57,59,60,64,65,66,68,69,71,72,74,75,76,80,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,115,116,118,119,120,121,122,123,124,125,126,130,132,134,136,138,144,149,152,153,154,155,156,157,158,162,164,175,176,177,178,179,180,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,222,223,224,225,226,227,228,229,230,232,234,240,241,242,244,245,247,252,257,259,268,269,271,275,281,282,283,287,288,289,291,292,294,295,296,297,299,301,302,303,308,309,310,311,320,323,327,331,337,343,346,357,359,360,362,363,364,365,366,367,369,370,371,372,374,377,379,380,381,383,384,385,387,389,396,398,399,400,401,417,420,423,425,433,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,457,460,467,469,470,471,473,474,475,478,479,481,483,485,486,488,489,490,495,499,502,504,505,508,511,513,515,520,522,525,526,527,528,530,531,532,533,535,536,537,540,541,542,543,548,550,551,554,556,558,559,564,565,572,573,575,577,578,580,581,583,585,592,598,603,605,612,616,617,618,619,621,622,623,632,633,636,637,640,642,655,656,],[24,29,33,38,42,60,-30,33,60,60,33,-66,60,-65,-70,116,-71,-67,-72,60,116,-68,-69,-109,60,60,60,60,33,155,116,60,-102,-99,-100,116,33,-193,-183,116,-194,-66,-189,-186,179,-184,-247,-253,-71,-249,-185,-254,60,-252,-182,-72,191,219,-187,-188,-250,-251,116,228,-248,-67,116,60,60,-31,-110,60,60,-104,-108,-105,60,-106,-103,-155,116,116,-102,228,116,-256,116,-260,116,-261,33,-66,179,-71,-67,-72,191,219,116,-172,-160,-175,-176,-166,-170,-161,-181,116,-163,-179,-174,-164,-169,-171,-165,-178,-167,-180,-162,-168,-173,-177,-262,116,-196,-197,116,-195,-198,-199,191,295,-255,-62,-63,-76,60,-111,60,60,-121,-120,60,116,-101,-275,-266,219,-102,-186,-192,-191,60,116,-211,179,219,60,-200,-137,33,116,60,60,60,-77,-73,-74,-107,116,116,116,116,116,219,116,-152,116,116,-265,116,116,116,-244,-240,-241,-191,-246,-263,-205,116,-201,-216,116,-212,116,-224,116,-64,-143,-144,-146,-147,-154,116,219,116,219,228,-303,116,-304,-310,-313,-312,-309,-306,-311,-307,-305,-302,-308,116,116,219,-264,-243,-245,-257,-258,116,-203,-204,-218,-217,-213,-214,-226,-225,-191,-208,-209,60,60,-75,116,116,-313,116,116,564,116,-242,116,-202,-219,-220,116,-215,-227,-228,116,-232,116,-145,-148,-149,-150,116,116,116,219,228,228,116,60,116,-259,-207,-222,-221,-230,-229,-233,-234,-210,116,60,633,-155,-155,-206,-223,-231,-236,116,-235,-151,-155,60,116,116,-238,-237,-239,60,]),'ELLIPSIS':([33,50,52,54,56,57,59,65,66,68,72,74,90,91,92,95,98,100,104,105,107,109,111,112,117,118,121,122,123,124,125,138,139,152,153,154,155,156,157,176,178,180,184,186,188,189,190,194,218,222,223,225,226,227,230,232,234,240,242,245,247,252,257,268,269,271,280,281,283,285,287,291,292,293,294,296,297,309,310,311,320,359,363,367,369,370,372,374,377,380,381,384,387,396,398,399,400,401,460,467,469,470,471,474,475,478,479,480,481,483,485,486,487,488,489,490,502,522,526,527,528,531,532,533,536,540,541,542,543,572,573,575,577,578,580,581,582,583,585,616,617,618,619,622,623,640,642,655,],[71,-66,-65,-70,-71,-67,-72,-68,-69,-109,144,149,-102,-99,-100,-193,-194,-189,-247,-253,-249,-254,-252,-156,-32,-190,-250,-251,221,-158,-248,-110,71,-104,-108,-105,71,-106,-103,-159,-256,-260,-261,-66,-71,-67,-72,221,-262,-196,-197,-195,-198,-199,-255,-62,-63,-76,-111,149,-121,-120,149,-101,-275,-266,-33,-102,-192,-157,-191,-211,382,386,388,-200,-137,-77,-73,-74,-107,-152,-265,-244,-240,-241,-246,-263,-205,-201,-216,-212,-224,-64,-143,-144,-146,-147,-264,-243,-245,-257,-258,-203,-204,-218,-217,529,-213,-214,-226,-225,534,538,-208,-209,-75,-242,-202,-219,-220,-215,-227,-228,-232,-145,-148,-149,-150,-259,-207,-222,-221,-230,-229,-233,620,-234,-210,-206,-223,-231,-236,-235,-151,-238,-237,-239,]),'VAR':([4,6,7,27,32,158,259,417,449,605,612,632,],[-5,-3,16,-4,-2,-155,16,-154,16,-155,-155,-155,]),'SHL':([95,98,100,104,105,107,109,111,112,117,118,121,122,124,125,135,176,178,180,184,192,193,218,222,223,225,226,227,230,269,271,274,275,277,280,283,285,286,287,290,291,294,296,346,347,359,363,367,369,370,371,372,374,377,378,380,381,384,387,416,418,423,428,433,435,457,458,460,464,467,469,470,471,474,475,476,478,479,481,483,485,486,488,489,490,507,518,522,524,526,527,528,531,532,533,536,549,553,554,556,570,572,573,574,575,577,578,580,581,583,585,593,594,611,616,617,618,619,622,640,642,651,652,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,211,-190,-250,-251,-158,-248,211,-159,-256,-260,-261,211,-190,-262,-196,-197,-195,-198,-199,-255,-275,-266,211,-190,211,211,-192,-157,211,-191,211,-211,-190,-200,-190,211,-152,-265,-244,-240,-241,-191,-246,-263,-205,211,-201,-216,-212,-224,211,211,-190,211,-190,-158,-190,211,-264,211,-243,-245,-257,-258,-203,-204,211,-218,-217,-213,-214,-226,-225,-191,-208,-209,211,211,-242,211,-202,-219,-220,-215,-227,-228,-232,211,211,-190,-158,211,-259,-207,211,-222,-221,-230,-229,-233,-234,-210,211,211,211,-206,-223,-231,-236,-235,-238,-237,211,211,-239,]),'ID':([3,8,10,15,16,20,24,29,30,31,33,34,35,38,39,42,44,45,48,51,55,60,64,67,68,71,72,74,76,78,80,82,84,93,96,97,101,103,108,110,113,116,119,120,123,127,130,131,132,133,136,138,139,143,144,146,148,149,155,158,162,164,165,170,171,172,173,177,179,183,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,224,228,229,231,233,239,241,242,245,246,247,250,252,255,257,258,259,261,265,266,278,279,282,284,288,289,295,301,302,303,304,307,308,313,315,317,319,323,327,331,337,341,343,348,354,357,360,362,364,365,366,379,383,385,389,390,393,395,403,407,409,411,417,420,425,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,468,472,473,491,493,494,495,496,499,501,504,505,508,511,513,515,520,525,530,535,537,548,550,551,559,564,565,586,589,592,598,603,605,612,621,632,633,636,637,648,656,662,],[5,25,31,36,31,44,-10,-24,61,-30,74,-61,75,-49,81,-37,85,25,31,92,118,129,118,31,-109,141,145,150,156,31,118,44,169,118,-183,118,-186,-184,-185,182,-182,193,-187,-188,118,-139,118,236,238,-79,-31,-110,245,247,249,251,252,254,257,-155,118,118,264,267,-9,-23,268,275,118,118,193,118,-172,-160,-175,-176,-166,-170,-161,-181,118,-163,-179,-174,-164,-169,-171,-165,-178,-167,-180,-162,-168,-173,-177,118,287,118,294,296,299,300,308,311,-111,150,314,-121,316,-120,318,150,320,346,-48,-36,361,369,370,-186,371,376,118,392,118,399,401,402,406,410,412,413,414,415,118,118,118,423,430,433,453,454,457,118,275,118,118,118,118,118,118,118,488,-138,492,-78,497,31,502,-154,118,118,-303,118,-304,-310,-313,-312,-309,-306,-311,-307,-305,-302,-308,346,118,522,523,118,539,540,541,543,544,546,547,118,118,-313,554,118,296,118,118,118,118,118,423,118,118,118,392,423,623,624,423,631,296,-155,-155,118,-155,392,118,118,657,660,663,]),'IF':([158,259,417,449,571,605,612,632,639,],[-155,357,-154,357,357,-155,-155,-155,357,]),'AND':([55,64,80,93,95,98,100,104,105,107,109,111,112,116,117,118,121,122,123,124,125,130,135,158,162,164,176,177,178,179,180,183,184,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,222,223,224,225,226,227,228,230,259,269,271,274,275,277,280,283,285,286,287,289,290,291,294,296,301,323,327,331,337,343,346,347,357,359,360,362,363,364,365,366,367,369,370,371,372,374,377,378,379,380,381,383,384,385,387,389,416,417,418,420,423,425,428,433,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,457,458,460,464,467,469,470,471,473,474,475,476,478,479,481,483,485,486,488,489,490,504,505,507,508,511,518,520,522,524,525,526,527,528,530,531,532,533,535,536,537,548,549,550,551,553,554,556,559,565,570,572,573,574,575,577,578,580,581,583,585,592,593,594,605,611,612,616,617,618,619,621,622,632,636,637,640,642,651,652,655,],[119,119,119,119,-193,-194,-189,-247,-253,-249,-254,-252,-156,119,213,-190,-250,-251,119,-158,-248,119,213,-155,119,119,-159,119,-256,119,-260,119,-261,119,213,-190,119,-172,-160,-175,-176,-166,-170,-161,-181,119,-163,-179,-174,-164,-169,-171,-165,-178,-167,-180,-162,-168,-173,-177,-262,119,-196,-197,119,-195,-198,-199,119,-255,119,-275,-266,213,-190,213,213,-192,-157,213,-191,119,213,-211,-190,-200,119,119,119,119,119,119,-190,213,119,-152,119,119,-265,119,119,119,-244,-240,-241,-191,-246,-263,-205,213,119,-201,-216,119,-212,119,-224,119,213,-154,213,119,-190,119,213,-190,-158,-303,119,-304,-310,-313,-312,-309,-306,-311,-307,-305,-302,-308,119,119,-190,213,-264,213,-243,-245,-257,-258,119,-203,-204,213,-218,-217,-213,-214,-226,-225,-191,-208,-209,119,119,213,-313,119,213,119,-242,213,119,-202,-219,-220,119,-215,-227,-228,119,-232,119,119,213,119,119,213,-190,-158,119,119,213,-259,-207,213,-222,-221,-230,-229,-233,-234,-210,119,213,213,-155,213,-155,-206,-223,-231,-236,119,-235,-155,119,119,-238,-237,213,213,-239,]),'MAP':([30,31,39,44,51,55,60,64,68,69,71,72,74,76,80,84,93,96,97,101,103,108,110,113,116,119,120,123,130,132,134,136,138,144,149,155,158,162,164,177,179,183,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,224,228,241,242,244,245,247,252,257,259,282,288,289,295,301,302,303,308,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,417,420,425,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,473,495,499,504,505,508,511,513,520,525,530,535,537,548,550,551,559,564,565,592,598,605,612,621,632,633,636,637,656,],[62,-30,62,62,62,62,62,62,-109,62,62,62,62,62,62,62,62,-183,62,-186,-184,-185,62,-182,62,-187,-188,62,62,62,62,-31,-110,62,62,62,-155,62,62,62,62,62,62,62,-172,-160,-175,-176,-166,-170,-161,-181,62,-163,-179,-174,-164,-169,-171,-165,-178,-167,-180,-162,-168,-173,-177,62,62,62,62,-111,62,62,-121,-120,62,62,-186,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-154,62,62,-303,62,-304,-310,-313,-312,-309,-306,-311,-307,-305,-302,-308,62,62,62,62,62,62,62,-313,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-155,-155,62,-155,62,62,62,62,]),'MOD_ASSIGN':([95,98,100,104,105,107,109,111,112,118,121,122,124,125,176,178,180,184,218,222,223,225,226,227,230,269,271,280,283,285,287,291,296,345,346,347,359,363,367,369,370,372,374,377,380,381,384,387,423,426,428,433,435,457,458,460,467,469,470,471,474,475,478,479,481,483,485,486,489,490,522,526,527,528,531,532,533,536,572,573,575,577,578,580,581,583,585,616,617,618,619,622,640,642,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,-190,-250,-251,-158,-248,-159,-256,-260,-261,-262,-196,-197,-195,-198,-199,-255,-275,-266,-33,-192,-157,-191,-211,-200,443,-190,-32,-152,-265,-244,-240,-241,-246,-263,-205,-201,-216,-212,-224,-190,443,-32,-190,-158,-190,-32,-264,-243,-245,-257,-258,-203,-204,-218,-217,-213,-214,-226,-225,-208,-209,-242,-202,-219,-220,-215,-227,-228,-232,-259,-207,-222,-221,-230,-229,-233,-234,-210,-206,-223,-231,-236,-235,-238,-237,-239,]),'LBRACE':([50,52,54,56,57,58,59,63,65,66,68,77,90,91,92,95,98,99,100,104,105,106,107,109,111,112,115,117,118,121,122,124,125,126,138,151,152,153,154,156,157,158,175,176,177,178,180,184,186,188,189,190,193,218,222,223,225,226,227,230,232,234,240,242,259,268,269,271,275,280,281,283,285,287,291,294,296,297,309,310,311,320,321,324,328,329,337,343,346,347,355,356,359,362,363,364,365,366,367,369,370,371,372,374,375,376,377,380,381,384,387,396,398,399,400,401,417,423,424,427,428,432,433,449,450,452,457,458,460,467,469,470,471,474,475,478,479,481,483,485,486,488,489,490,502,503,507,511,516,518,522,523,526,527,528,531,532,533,536,540,541,542,543,548,552,553,554,556,570,571,572,573,575,577,578,580,581,583,585,591,592,593,594,605,612,616,617,618,619,622,623,625,632,635,639,640,642,655,658,],[-66,-65,-70,-71,-67,127,-72,133,-68,-69,-109,158,-102,-99,-100,-193,-194,177,-189,-247,-253,177,-249,-254,-252,-156,177,-32,177,-250,-251,-158,-248,177,-110,158,-104,-108,-105,-106,-103,-155,158,-159,177,-256,-260,-261,177,177,177,177,177,-262,-196,-197,-195,-198,-199,-255,-62,-63,-76,-111,158,-101,-275,-266,177,-33,158,-192,-157,177,-211,177,-200,-137,-77,-73,-74,-107,-292,-291,-294,-293,158,434,177,-297,455,-295,-152,177,-265,177,177,177,-244,-240,-241,177,-246,-263,177,177,-205,-201,-216,-212,-224,-64,-143,-144,-146,-147,-154,177,158,158,158,512,177,158,-300,-299,177,158,-264,-243,-245,-257,-258,-203,-204,-218,-217,-213,-214,-226,-225,177,-208,-209,-75,-325,-366,555,-301,-298,-242,177,-202,-219,-220,-215,-227,-228,-232,-145,-148,-149,-150,-296,595,596,177,-158,158,158,-259,-207,-222,-221,-230,-229,-233,-234,-210,-362,-296,-364,-365,-155,-155,-206,-223,-231,-236,-235,-151,-363,-155,-348,158,-238,-237,-239,-347,]),'ARROW':([55,64,80,93,95,98,100,104,105,107,109,111,112,116,118,121,122,123,124,125,130,158,162,164,176,177,178,179,180,183,184,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,222,223,224,225,226,227,228,230,259,269,271,283,285,287,289,291,296,301,323,327,331,337,343,346,347,357,359,360,362,363,364,365,366,367,369,370,372,374,377,379,380,381,383,384,385,387,389,417,420,423,425,428,433,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,457,458,460,467,469,470,471,473,474,475,478,479,481,483,485,486,489,490,504,505,508,511,520,522,525,526,527,528,530,531,532,533,535,536,537,548,550,551,559,565,572,573,575,577,578,580,581,583,585,592,605,611,612,616,617,618,619,621,622,632,636,637,640,642,655,],[120,120,120,120,-193,-194,-189,-247,-253,-249,-254,-252,-156,120,-190,-250,-251,120,-158,-248,120,-155,120,120,-159,120,-256,120,-260,120,-261,120,120,-172,-160,-175,-176,-166,-170,-161,-181,120,-163,-179,-174,-164,-169,-171,-165,-178,-167,-180,-162,-168,-173,-177,-262,120,-196,-197,120,-195,-198,-199,120,-255,120,-275,-266,-192,-157,-191,120,-211,-200,120,120,120,120,120,120,-190,451,120,-152,120,120,-265,120,120,120,-244,-240,-241,-246,-263,-205,120,-201,-216,120,-212,120,-224,120,-154,120,-190,120,451,-190,-158,-303,120,-304,-310,-313,-312,-309,-306,-311,-307,-305,-302,-308,120,120,-190,451,-264,-243,-245,-257,-258,120,-203,-204,-218,-217,-213,-214,-226,-225,-208,-209,120,120,-313,120,120,-242,120,-202,-219,-220,120,-215,-227,-228,120,-232,120,120,120,120,120,120,-259,-207,-222,-221,-230,-229,-233,-234,-210,120,-155,451,-155,-206,-223,-231,-236,120,-235,-155,120,120,-238,-237,-239,]),'STRUCT':([30,31,39,44,51,55,60,64,68,69,71,72,74,76,80,84,93,96,97,101,103,108,110,113,116,119,120,123,130,132,134,136,138,144,149,155,158,162,164,177,179,183,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,224,228,241,242,244,245,247,252,257,259,282,288,289,295,301,302,303,308,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,417,420,425,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,473,495,499,504,505,508,511,513,520,525,530,535,537,548,550,551,559,564,565,592,598,605,612,621,632,633,636,637,656,],[63,-30,63,63,63,63,63,63,-109,63,63,63,63,63,63,63,63,-183,63,-186,-184,-185,63,-182,63,-187,-188,63,63,63,63,-31,-110,63,63,63,-155,63,63,63,63,63,63,63,-172,-160,-175,-176,-166,-170,-161,-181,63,-163,-179,-174,-164,-169,-171,-165,-178,-167,-180,-162,-168,-173,-177,63,63,63,63,-111,63,63,-121,-120,63,63,-186,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-154,63,63,-303,63,-304,-310,-313,-312,-309,-306,-311,-307,-305,-302,-308,63,63,63,63,63,63,63,-313,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-155,-155,63,-155,63,63,63,63,]),'XOR_ASSIGN':([95,98,100,104,105,107,109,111,112,118,121,122,124,125,176,178,180,184,218,222,223,225,226,227,230,269,271,280,283,285,287,291,296,345,346,347,359,363,367,369,370,372,374,377,380,381,384,387,423,426,428,433,435,457,458,460,467,469,470,471,474,475,478,479,481,483,485,486,489,490,522,526,527,528,531,532,533,536,572,573,575,577,578,580,581,583,585,616,617,618,619,622,640,642,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,-190,-250,-251,-158,-248,-159,-256,-260,-261,-262,-196,-197,-195,-198,-199,-255,-275,-266,-33,-192,-157,-191,-211,-200,439,-190,-32,-152,-265,-244,-240,-241,-246,-263,-205,-201,-216,-212,-224,-190,439,-32,-190,-158,-190,-32,-264,-243,-245,-257,-258,-203,-204,-218,-217,-213,-214,-226,-225,-208,-209,-242,-202,-219,-220,-215,-227,-228,-232,-259,-207,-222,-221,-230,-229,-233,-234,-210,-206,-223,-231,-236,-235,-238,-237,-239,]),'INT':([55,64,80,93,96,97,101,103,108,113,116,119,120,123,130,158,162,164,177,179,183,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,224,228,259,282,289,301,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,417,420,425,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,473,504,505,508,511,513,520,525,530,535,537,548,550,551,559,565,592,605,612,621,632,636,637,],[121,121,121,121,-183,121,-186,-184,-185,-182,121,-187,-188,121,121,-155,121,121,121,121,121,121,121,-172,-160,-175,-176,-166,-170,-161,-181,121,-163,-179,-174,-164,-169,-171,-165,-178,-167,-180,-162,-168,-173,-177,121,121,121,121,-186,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,-154,121,121,-303,121,-304,-310,-313,-312,-309,-306,-311,-307,-305,-302,-308,121,121,121,121,121,-313,121,121,121,121,121,121,121,121,121,121,121,121,121,-155,-155,121,-155,121,121,]),'FLOAT':([55,64,80,93,96,97,101,103,108,113,116,119,120,123,130,158,162,164,177,179,183,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,224,228,259,282,289,301,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,417,420,425,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,473,504,505,508,511,513,520,525,530,535,537,548,550,551,559,565,592,605,612,621,632,636,637,],[122,122,122,122,-183,122,-186,-184,-185,-182,122,-187,-188,122,122,-155,122,122,122,122,122,122,122,-172,-160,-175,-176,-166,-170,-161,-181,122,-163,-179,-174,-164,-169,-171,-165,-178,-167,-180,-162,-168,-173,-177,122,122,122,122,-186,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,-154,122,122,-303,122,-304,-310,-313,-312,-309,-306,-311,-307,-305,-302,-308,122,122,122,122,122,-313,122,122,122,122,122,122,122,122,122,122,122,122,122,-155,-155,122,-155,122,122,]),'OR_ASSIGN':([95,98,100,104,105,107,109,111,112,118,121,122,124,125,176,178,180,184,218,222,223,225,226,227,230,269,271,280,283,285,287,291,296,345,346,347,359,363,367,369,370,372,374,377,380,381,384,387,423,426,428,433,435,457,458,460,467,469,470,471,474,475,478,479,481,483,485,486,489,490,522,526,527,528,531,532,533,536,572,573,575,577,578,580,581,583,585,616,617,618,619,622,640,642,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,-190,-250,-251,-158,-248,-159,-256,-260,-261,-262,-196,-197,-195,-198,-199,-255,-275,-266,-33,-192,-157,-191,-211,-200,442,-190,-32,-152,-265,-244,-240,-241,-246,-263,-205,-201,-216,-212,-224,-190,442,-32,-190,-158,-190,-32,-264,-243,-245,-257,-258,-203,-204,-218,-217,-213,-214,-226,-225,-208,-209,-242,-202,-219,-220,-215,-227,-228,-232,-259,-207,-222,-221,-230,-229,-233,-234,-210,-206,-223,-231,-236,-235,-238,-237,-239,]),'LBRACK':([30,31,39,44,51,55,60,62,64,68,69,71,72,74,76,80,84,93,95,96,97,98,100,101,103,104,105,107,108,109,110,111,113,116,118,119,120,121,122,123,124,125,130,132,134,136,138,144,149,155,158,162,164,176,177,178,179,180,183,184,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,222,223,224,225,226,227,228,230,241,242,244,245,247,252,257,259,269,271,275,282,283,287,288,289,291,294,295,296,301,302,303,308,323,327,331,337,343,346,357,359,360,362,363,364,365,366,367,369,370,371,372,374,377,379,380,381,383,384,385,387,389,417,420,423,425,433,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,457,460,467,469,470,471,473,474,475,478,479,481,483,485,486,488,489,490,495,499,504,505,508,511,513,520,522,525,526,527,528,530,531,532,533,535,536,537,548,550,551,554,556,558,559,564,565,572,573,575,577,578,580,581,583,585,592,598,605,612,616,617,618,619,621,622,632,633,636,637,640,642,655,656,],[64,-30,64,64,64,123,64,132,123,-109,64,64,64,64,64,123,64,123,-193,-183,123,-194,-189,-186,-184,-247,-253,-249,-185,-254,64,-252,-182,194,-190,-187,-188,-250,-251,123,224,-248,123,64,64,-31,-110,64,64,64,-155,123,123,224,123,-256,123,-260,123,-261,194,-190,123,-172,-160,-175,-176,-166,-170,-161,-181,123,-163,-179,-174,-164,-169,-171,-165,-178,-167,-180,-162,-168,-173,-177,-262,123,-196,-197,123,-195,-198,-199,194,-255,64,-111,64,64,-121,-120,64,123,-275,-266,-190,-186,-192,-191,64,123,-211,-190,64,-200,123,64,64,64,123,123,123,123,123,-190,123,-152,123,123,-265,123,123,123,-244,-240,-241,-191,-246,-263,-205,123,-201,-216,123,-212,123,-224,123,-154,123,-190,123,-190,224,-303,123,-304,-310,-313,-312,-309,-306,-311,-307,-305,-302,-308,123,123,-190,-264,-243,-245,-257,-258,123,-203,-204,-218,-217,-213,-214,-226,-225,-191,-208,-209,64,64,123,123,-313,123,123,123,-242,123,-202,-219,-220,123,-215,-227,-228,123,-232,123,123,123,123,-190,224,224,123,64,123,-259,-207,-222,-221,-230,-229,-233,-234,-210,123,64,-155,-155,-206,-223,-231,-236,123,-235,-155,64,123,123,-238,-237,-239,64,]),'ADD_ASSIGN':([95,98,100,104,105,107,109,111,112,118,121,122,124,125,176,178,180,184,218,222,223,225,226,227,230,269,271,280,283,285,287,291,296,345,346,347,359,363,367,369,370,372,374,377,380,381,384,387,423,426,428,433,435,457,458,460,467,469,470,471,474,475,478,479,481,483,485,486,489,490,522,526,527,528,531,532,533,536,572,573,575,577,578,580,581,583,585,616,617,618,619,622,640,642,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,-190,-250,-251,-158,-248,-159,-256,-260,-261,-262,-196,-197,-195,-198,-199,-255,-275,-266,-33,-192,-157,-191,-211,-200,447,-190,-32,-152,-265,-244,-240,-241,-246,-263,-205,-201,-216,-212,-224,-190,447,-32,-190,-158,-190,-32,-264,-243,-245,-257,-258,-203,-204,-218,-217,-213,-214,-226,-225,-208,-209,-242,-202,-219,-220,-215,-227,-228,-232,-259,-207,-222,-221,-230,-229,-233,-234,-210,-206,-223,-231,-236,-235,-238,-237,-239,]),'BREAK':([158,259,417,449,605,612,632,],[-155,348,-154,348,-155,-155,-155,]),'LEQ':([95,98,100,104,105,107,109,111,112,117,118,121,122,124,125,135,176,178,180,184,192,193,218,222,223,225,226,227,230,269,271,274,275,277,280,283,285,286,287,290,291,294,296,346,347,359,363,367,369,370,371,372,374,377,378,380,381,384,387,416,418,423,428,433,435,457,458,460,464,467,469,470,471,474,475,476,478,479,481,483,485,486,488,489,490,507,518,522,524,526,527,528,531,532,533,536,549,553,554,556,570,572,573,574,575,577,578,580,581,583,585,593,594,611,616,617,618,619,622,640,642,651,652,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,215,-190,-250,-251,-158,-248,215,-159,-256,-260,-261,215,-190,-262,-196,-197,-195,-198,-199,-255,-275,-266,215,-190,215,215,-192,-157,215,-191,215,-211,-190,-200,-190,215,-152,-265,-244,-240,-241,-191,-246,-263,-205,215,-201,-216,-212,-224,215,215,-190,215,-190,-158,-190,215,-264,215,-243,-245,-257,-258,-203,-204,215,-218,-217,-213,-214,-226,-225,-191,-208,-209,215,215,-242,215,-202,-219,-220,-215,-227,-228,-232,215,215,-190,-158,215,-259,-207,215,-222,-221,-230,-229,-233,-234,-210,215,215,215,-206,-223,-231,-236,-235,-238,-237,215,215,-239,]),'CONTINUE':([158,259,417,449,605,612,632,],[-155,341,-154,341,-155,-155,-155,]),'MUL_ASSIGN':([95,98,100,104,105,107,109,111,112,118,121,122,124,125,176,178,180,184,218,222,223,225,226,227,230,269,271,280,283,285,287,291,296,345,346,347,359,363,367,369,370,372,374,377,380,381,384,387,423,426,428,433,435,457,458,460,467,469,470,471,474,475,478,479,481,483,485,486,489,490,522,526,527,528,531,532,533,536,572,573,575,577,578,580,581,583,585,616,617,618,619,622,640,642,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,-190,-250,-251,-158,-248,-159,-256,-260,-261,-262,-196,-197,-195,-198,-199,-255,-275,-266,-33,-192,-157,-191,-211,-200,438,-190,-32,-152,-265,-244,-240,-241,-246,-263,-205,-201,-216,-212,-224,-190,438,-32,-190,-158,-190,-32,-264,-243,-245,-257,-258,-203,-204,-218,-217,-213,-214,-226,-225,-208,-209,-242,-202,-219,-220,-215,-227,-228,-232,-259,-207,-222,-221,-230,-229,-233,-234,-210,-206,-223,-231,-236,-235,-238,-237,-239,]),'INTERFACE':([30,31,39,44,51,55,60,64,68,69,71,72,74,76,80,84,93,96,97,101,103,108,110,113,116,119,120,123,130,132,134,136,138,144,149,155,158,162,164,177,179,183,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,224,228,241,242,244,245,247,252,257,259,282,288,289,295,301,302,303,308,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,417,420,425,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,473,495,499,504,505,508,511,513,520,525,530,535,537,548,550,551,559,564,565,592,598,605,612,621,632,633,636,637,656,],[58,-30,58,58,58,58,58,58,-109,58,58,58,58,58,58,58,58,-183,58,-186,-184,-185,58,-182,58,-187,-188,58,58,58,58,-31,-110,58,58,58,-155,58,58,58,58,58,58,58,-172,-160,-175,-176,-166,-170,-161,-181,58,-163,-179,-174,-164,-169,-171,-165,-178,-167,-180,-162,-168,-173,-177,58,58,58,58,-111,58,58,-121,-120,58,58,-186,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-154,58,58,-303,58,-304,-310,-313,-312,-309,-306,-311,-307,-305,-302,-308,58,58,58,58,58,58,58,-313,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-155,-155,58,-155,58,58,58,58,]),'$end':([2,4,6,7,27,32,],[0,-5,-3,-1,-4,-2,]),'TYPE':([4,6,7,27,32,158,259,417,449,564,605,612,632,633,],[-5,-3,20,-4,-2,-155,20,-154,20,606,-155,-155,-155,650,]),'OR':([95,98,100,104,105,107,109,111,112,117,118,121,122,124,125,135,176,178,180,184,192,193,218,222,223,225,226,227,230,269,271,274,275,277,280,283,285,286,287,290,291,294,296,346,347,359,363,367,369,370,371,372,374,377,378,380,381,384,387,416,418,423,428,433,435,457,458,460,464,467,469,470,471,474,475,476,478,479,481,483,485,486,488,489,490,507,518,522,524,526,527,528,531,532,533,536,549,553,554,556,570,572,573,574,575,577,578,580,581,583,585,593,594,611,616,617,618,619,622,640,642,651,652,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,216,-190,-250,-251,-158,-248,216,-159,-256,-260,-261,216,-190,-262,-196,-197,-195,-198,-199,-255,-275,-266,216,-190,216,216,-192,-157,216,-191,216,-211,-190,-200,-190,216,-152,-265,-244,-240,-241,-191,-246,-263,-205,216,-201,-216,-212,-224,216,216,-190,216,-190,-158,-190,216,-264,216,-243,-245,-257,-258,-203,-204,216,-218,-217,-213,-214,-226,-225,-191,-208,-209,216,216,-242,216,-202,-219,-220,-215,-227,-228,-232,216,216,-190,-158,216,-259,-207,216,-222,-221,-230,-229,-233,-234,-210,216,216,216,-206,-223,-231,-236,-235,-238,-237,216,216,-239,]),'EQL':([95,98,100,104,105,107,109,111,112,117,118,121,122,124,125,135,176,178,180,184,192,193,218,222,223,225,226,227,230,269,271,274,275,277,280,283,285,286,287,290,291,294,296,346,347,359,363,367,369,370,371,372,374,377,378,380,381,384,387,416,418,423,428,433,435,457,458,460,464,467,469,470,471,474,475,476,478,479,481,483,485,486,488,489,490,507,518,522,524,526,527,528,531,532,533,536,549,553,554,556,570,572,573,574,575,577,578,580,581,583,585,593,594,611,616,617,618,619,622,640,642,651,652,655,],[-193,-194,-189,-247,-253,-249,-254,-252,-156,210,-190,-250,-251,-158,-248,210,-159,-256,-260,-261,210,-190,-262,-196,-197,-195,-198,-199,-255,-275,-266,210,-190,210,210,-192,-157,210,-191,210,-211,-190,-200,-190,210,-152,-265,-244,-240,-241,-191,-246,-263,-205,210,-201,-216,-212,-224,210,210,-190,210,-190,-158,-190,210,-264,210,-243,-245,-257,-258,-203,-204,210,-218,-217,-213,-214,-226,-225,-191,-208,-209,210,210,-242,210,-202,-219,-220,-215,-227,-228,-232,210,210,-190,-158,210,-259,-207,210,-222,-221,-230,-229,-233,-234,-210,210,210,210,-206,-223,-231,-236,-235,-238,-237,210,210,-239,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'SendStmt':([259,337,343,357,449,548,565,592,],[321,321,321,321,321,321,607,321,]),'Conversion':([55,64,80,93,97,116,123,130,162,164,177,179,183,191,194,203,219,224,228,259,289,301,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,420,425,437,449,451,473,504,505,511,513,520,525,530,535,537,548,550,551,559,565,592,621,636,637,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'ContinueStmt':([259,449,],[322,322,]),'Receiver':([15,],[35,]),'ExpressionStmt':([259,337,343,357,449,548,592,],[324,324,324,324,324,324,324,]),'CommClause':([519,],[568,]),'Statement':([259,449,],[325,517,]),'IfStmt':([259,449,571,639,],[326,326,614,653,]),'AliasDecl':([20,82,],[41,41,]),'TypeSwitchGuard':([343,511,],[432,552,]),'InterfaceType':([30,39,44,51,55,60,64,69,71,72,74,76,80,84,93,97,101,110,116,123,130,132,134,144,149,155,162,164,177,179,183,191,194,203,219,224,228,241,244,245,257,259,282,288,289,295,301,302,303,308,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,420,425,437,449,451,473,495,499,504,505,511,513,520,525,530,535,537,548,550,551,559,564,565,592,598,621,633,636,637,656,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'BinaryOp':([117,135,192,274,277,280,286,290,347,378,416,418,428,458,464,476,507,518,524,549,553,570,574,593,594,611,651,652,],[203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,]),'ExprCaseClause':([514,597,627,],[563,563,563,]),'ParameterDecl':([33,139,155,],[73,243,73,]),'StatementList':([158,605,612,632,],[260,634,638,649,]),'TypeAssertion':([124,176,435,556,558,],[226,226,226,226,226,]),'TypeSpec_curl':([42,],[82,]),'TypeSwitchStmt':([259,449,],[330,330,]),'RelOp':([117,135,192,274,277,280,286,290,347,378,416,418,428,458,464,476,507,518,524,549,553,570,574,593,594,611,651,652,],[214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,]),'VarDecl':([7,259,449,],[19,19,19,]),'Tag':([306,408,410,545,546,547,624,],[404,498,500,587,588,590,643,]),'PrimaryExpr':([55,64,80,93,97,116,123,130,162,164,177,179,183,191,194,203,219,224,228,259,289,301,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,420,425,437,449,451,473,504,505,511,513,520,525,530,535,537,548,550,551,559,565,592,621,636,637,],[124,124,124,124,176,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,435,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,556,558,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'TypeSpec':([20,82,],[43,167,]),'FunctionDecl':([7,],[11,]),'Index':([124,176,435,556,558,],[222,222,222,222,222,]),'Parameters':([15,36,49,75,76,94,185,299,],[34,76,76,76,152,76,76,76,]),'UnaryOp':([55,64,80,93,116,123,130,162,164,177,179,183,191,194,203,219,224,228,259,289,301,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,420,425,437,449,451,473,504,505,511,520,525,530,535,537,548,550,551,559,565,592,621,636,637,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'SourceFile':([0,],[2,]),'MethodExpr':([55,64,80,93,97,116,123,130,162,164,177,179,183,191,194,203,219,224,228,259,289,301,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,420,425,437,449,451,473,504,505,511,513,520,525,530,535,537,548,550,551,559,565,592,621,636,637,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'ImportPath':([8,25,26,45,],[23,46,47,23,]),'TopLevelDecl':([7,],[12,]),'ExprSwitchStmt':([259,449,],[332,332,]),'IdentifierList':([10,16,48,67,78,259,337,343,357,409,449,548,565,592,],[30,39,30,136,39,333,422,333,333,499,333,333,608,333,]),'MethodSpec_curl':([127,],[231,]),'TypeLit':([30,39,44,51,55,60,64,69,71,72,74,76,80,84,93,97,101,110,116,123,130,132,134,144,149,155,162,164,177,179,183,191,194,203,219,224,228,241,244,245,257,259,282,288,289,295,301,302,303,308,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,420,425,437,449,451,473,495,499,504,505,511,513,520,525,530,535,537,548,550,551,559,564,565,592,598,621,633,636,637,656,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'GoStmt':([259,449,],[334,334,]),'DeferStmt':([259,449,],[335,335,]),'PackageClause':([0,],[1,]),'ExprCaseClause_curl':([434,555,596,],[514,597,627,]),'Selector':([124,176,435,556,558,],[225,225,225,225,225,]),'RangeClause':([337,],[424,]),'IncDecStmt':([259,337,343,357,449,548,592,],[329,329,329,329,329,329,329,]),'GotoStmt':([259,449,],[336,336,]),'AddOp':([117,135,192,274,277,280,286,290,347,378,416,418,428,458,464,476,507,518,524,549,553,570,574,593,594,611,651,652,],[204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,]),'PointerType':([30,39,44,51,55,60,64,69,71,72,74,76,80,84,93,97,101,110,116,123,130,132,134,144,149,155,162,164,177,179,183,191,194,203,219,224,228,241,244,245,257,259,282,288,289,295,301,302,303,308,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,420,425,437,449,451,473,495,499,504,505,511,513,520,525,530,535,537,548,550,551,559,564,565,592,598,621,633,636,637,656,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'ConstSpec_curl':([29,],[48,]),'CompositeLit':([55,64,80,93,97,116,123,130,162,164,177,179,183,191,194,203,219,224,228,259,289,301,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,420,425,437,449,451,473,504,505,511,513,520,525,530,535,537,548,550,551,559,565,592,621,636,637,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'Signature':([36,49,75,94,185,299,],[77,90,151,175,281,394,]),'Block':([77,151,175,259,281,337,424,427,428,449,458,570,571,639,],[159,256,269,339,269,429,506,509,510,339,521,613,615,654,]),'ConstDecl':([7,259,449,],[18,18,18,]),'SwitchStmt':([259,449,],[340,340,]),'VarSpec':([16,78,],[37,161,]),'Result':([76,],[157,]),'Assignment':([259,337,343,357,449,548,592,],[328,328,328,328,328,328,328,]),'ImportSpec_curl':([24,],[45,]),'TopLevelDecl_curl':([6,],[7,]),'LabelledStmt':([259,449,],[338,338,]),'TypeCaseClause':([557,626,],[601,601,]),'Literal':([55,64,80,93,97,116,123,130,162,164,177,179,183,191,194,203,219,224,228,259,289,301,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,420,425,437,449,451,473,504,505,511,513,520,525,530,535,537,548,550,551,559,565,592,621,636,637,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'Statement_curl':([158,605,612,632,],[259,259,259,259,]),'CommClause_curl':([455,],[519,]),'ImportDecl':([6,],[9,]),'AssignOp':([345,426,],[437,437,]),'TypeCaseClause_curl':([512,595,],[557,626,]),'CommCase':([519,],[569,]),'Declaration':([7,259,449,],[13,344,344,]),'StructType':([30,39,44,51,55,60,64,69,71,72,74,76,80,84,93,97,101,110,116,123,130,132,134,144,149,155,162,164,177,179,183,191,194,203,219,224,228,241,244,245,257,259,282,288,289,295,301,302,303,308,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,420,425,437,449,451,473,495,499,504,505,511,513,520,525,530,535,537,548,550,551,559,564,565,592,598,621,633,636,637,656,],[57,57,57,57,126,57,126,57,57,57,57,57,126,57,126,126,57,57,189,126,126,57,57,57,57,57,126,126,126,126,126,189,126,126,126,126,189,57,57,57,57,126,57,57,126,57,126,57,57,57,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,57,57,126,126,126,126,126,126,126,126,126,126,126,126,126,57,126,126,57,126,57,126,126,57,]),'MulOp':([117,135,192,274,277,280,286,290,347,378,416,418,428,458,464,476,507,518,524,549,553,570,574,593,594,611,651,652,],[207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,]),'EmbeddedField':([239,],[306,]),'LiteralValue':([99,106,115,118,126,177,186,188,189,190,193,275,287,294,346,362,364,365,366,371,375,376,423,433,457,488,523,554,],[178,180,184,218,230,273,178,180,230,184,218,218,374,218,218,273,463,463,463,374,470,471,218,218,218,374,572,218,]),'ExpressionList':([55,80,93,130,162,164,228,259,301,331,337,343,357,360,383,389,420,437,449,505,537,548,559,565,592,],[114,163,174,235,262,263,293,345,397,419,426,345,345,459,480,487,503,516,345,503,582,345,604,609,345,]),'SimpleStmt':([259,337,343,357,449,548,592,],[351,421,431,456,351,591,625,]),'RecvStmt':([565,],[610,]),'Expression':([55,64,80,93,116,123,130,162,164,177,179,183,191,194,219,224,228,259,289,301,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,420,425,437,449,451,473,504,505,511,520,525,530,535,537,548,550,551,559,565,592,621,636,637,],[117,135,117,117,192,135,117,117,117,274,277,280,192,135,286,290,117,347,378,117,416,418,117,428,347,458,117,274,464,464,464,476,117,280,117,117,507,117,347,518,524,549,117,553,570,574,280,280,117,347,593,594,117,611,347,280,651,652,]),'FieldDecl_curl':([133,],[239,]),'MethodDecl':([7,],[17,]),'ExprSwitchCase':([514,597,627,],[561,561,561,]),'ReturnStmt':([259,449,],[349,349,]),'ParaIdList':([33,139,155,],[72,72,72,]),'FunctionType':([30,39,44,51,55,60,64,69,71,72,74,76,80,84,93,97,101,110,116,123,130,132,134,144,149,155,162,164,177,179,183,191,194,203,219,224,228,241,244,245,257,259,282,288,289,295,301,302,303,308,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,420,425,437,449,451,473,495,499,504,505,511,513,520,525,530,535,537,548,550,551,559,564,565,592,598,621,633,636,637,656,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'FallthroughStmt':([259,449,],[350,350,]),'Slice':([124,176,435,556,558,],[223,223,223,223,223,]),'C_Type_curl':([630,631,657,],[646,647,661,]),'ArrayType':([30,39,44,51,55,60,64,69,71,72,74,76,80,84,93,97,101,110,116,123,130,132,134,144,149,155,162,164,177,179,183,191,194,203,219,224,228,241,244,245,257,259,282,288,289,295,301,302,303,308,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,420,425,437,449,451,473,495,499,504,505,511,513,520,525,530,535,537,548,550,551,559,564,565,592,598,621,633,636,637,656,],[50,50,50,50,99,50,99,50,50,50,50,50,99,50,99,99,50,50,186,99,99,50,50,50,50,50,99,99,99,99,99,186,99,99,99,99,186,50,50,50,50,99,50,50,99,50,99,50,50,50,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,50,50,99,99,99,99,99,99,99,99,99,99,99,99,99,50,99,99,50,99,50,99,99,50,]),'ImportDecl_curl':([4,],[6,]),'ParameterList':([33,155,],[70,70,]),'ForStmt':([259,449,],[352,352,]),'Arguments':([124,176,435,556,558,],[227,227,227,227,227,]),'SelectStmt':([259,449,],[353,353,]),'VarSpec_curl':([38,],[78,]),'ConstSpec':([10,48,],[28,89,]),'ElementList':([177,],[270,]),'ImportSpec':([8,45,],[22,87,]),'Type':([30,39,44,51,55,60,64,69,71,72,74,76,80,84,93,97,101,110,116,123,130,132,134,144,149,155,162,164,177,179,183,191,194,203,219,224,228,241,244,245,257,259,282,288,289,295,301,302,303,308,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,420,425,437,449,451,473,495,499,504,505,511,513,520,525,530,535,537,548,550,551,559,564,565,592,598,621,633,636,637,656,],[53,79,83,91,102,128,102,137,140,142,147,154,102,168,102,102,91,181,187,102,102,237,240,248,253,128,102,102,102,102,102,187,102,102,102,102,292,310,312,147,147,102,91,375,102,391,102,398,400,408,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,542,545,102,102,102,102,102,102,102,102,102,102,102,102,102,391,102,102,630,102,391,102,102,659,]),'SliceType':([30,39,44,51,55,60,64,69,71,72,74,76,80,84,93,97,101,110,116,123,130,132,134,144,149,155,162,164,177,179,183,191,194,203,219,224,228,241,244,245,257,259,282,288,289,295,301,302,303,308,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,420,425,437,449,451,473,495,499,504,505,511,513,520,525,530,535,537,548,550,551,559,564,565,592,598,621,633,636,637,656,],[56,56,56,56,106,56,106,56,56,56,56,56,106,56,106,106,56,56,188,106,106,56,56,56,56,56,106,106,106,106,106,188,106,106,106,106,188,56,56,56,56,106,56,56,106,56,106,56,56,56,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,56,56,106,106,106,106,106,106,106,106,106,106,106,106,106,56,106,106,56,106,56,106,106,56,]),'TypeDecl':([7,259,449,],[14,14,14,]),'TypeSwitchCase':([557,626,],[600,600,]),'UnaryExpr':([55,64,80,93,116,123,130,162,164,177,179,183,191,194,203,219,224,228,259,289,301,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,420,425,437,449,451,473,504,505,511,520,525,530,535,537,548,550,551,559,565,592,621,636,637,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,285,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'Element':([177,362,364,365,366,],[272,272,462,465,466,]),'MapType':([30,39,44,51,55,60,64,69,71,72,74,76,80,84,93,97,101,110,116,123,130,132,134,144,149,155,162,164,177,179,183,191,194,203,219,224,228,241,244,245,257,259,282,288,289,295,301,302,303,308,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,420,425,437,449,451,473,495,499,504,505,511,513,520,525,530,535,537,548,550,551,559,564,565,592,598,621,633,636,637,656,],[59,59,59,59,115,59,115,59,59,59,59,59,115,59,115,115,59,59,190,115,115,59,59,59,59,59,115,115,115,115,115,190,115,115,115,115,190,59,59,59,59,115,59,59,115,59,115,59,59,59,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,59,59,115,115,115,115,115,115,115,115,115,115,115,115,115,59,115,115,59,115,59,115,115,59,]),'ForClause':([337,],[427,]),'ShortVarDecl':([259,337,343,357,449,548,592,],[356,356,356,356,356,356,356,]),'FunctionLit':([55,64,80,93,97,116,123,130,162,164,177,179,183,191,194,203,219,224,228,259,289,301,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,420,425,437,449,451,473,504,505,511,513,520,525,530,535,537,548,550,551,559,565,592,621,636,637,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'TypeDef':([20,82,],[40,40,]),'FieldDecl':([239,],[305,]),'BreakStmt':([259,449,],[358,358,]),'KeyedElement':([177,362,],[276,461,]),'TypeList':([598,],[629,]),'BasicLit':([55,64,80,93,97,116,123,130,162,164,177,179,183,191,194,203,219,224,228,259,289,301,323,327,331,337,343,357,360,362,364,365,366,379,383,385,389,420,425,437,449,451,473,504,505,511,513,520,525,530,535,537,548,550,551,559,565,592,621,636,637,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'MethodSpec':([231,],[298,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> SourceFile","S'",1,None,None,None),
  ('SourceFile -> PackageClause SEMICOLON ImportDecl_curl TopLevelDecl_curl','SourceFile',4,'p_SourceFile','parsertest.py',35),
  ('TopLevelDecl_curl -> TopLevelDecl_curl TopLevelDecl SEMICOLON','TopLevelDecl_curl',3,'p_TopLevelDecl_curl','parsertest.py',41),
  ('TopLevelDecl_curl -> <empty>','TopLevelDecl_curl',0,'p_TopLevelDecl_curl','parsertest.py',42),
  ('ImportDecl_curl -> ImportDecl_curl ImportDecl SEMICOLON','ImportDecl_curl',3,'p_ImportDecl_curl','parsertest.py',51),
  ('ImportDecl_curl -> <empty>','ImportDecl_curl',0,'p_ImportDecl_curl','parsertest.py',52),
  ('PackageClause -> PACKAGE ID','PackageClause',2,'p_PackageClause','parsertest.py',60),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_ImportDecl','parsertest.py',66),
  ('ImportDecl -> IMPORT LPAREN ImportSpec_curl RPAREN','ImportDecl',4,'p_ImportDecl','parsertest.py',67),
  ('ImportSpec_curl -> ImportSpec_curl ImportSpec SEMICOLON','ImportSpec_curl',3,'p_ImportSpec_curl','parsertest.py',76),
  ('ImportSpec_curl -> <empty>','ImportSpec_curl',0,'p_ImportSpec_curl','parsertest.py',77),
  ('ImportSpec -> DOT ImportPath','ImportSpec',2,'p_ImportSpec','parsertest.py',85),
  ('ImportSpec -> ID ImportPath','ImportSpec',2,'p_ImportSpec','parsertest.py',86),
  ('ImportSpec -> ImportPath','ImportSpec',1,'p_ImportSpec','parsertest.py',87),
  ('ImportPath -> STRING','ImportPath',1,'p_ImportPath','parsertest.py',96),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_TopLevelDecl','parsertest.py',102),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_TopLevelDecl','parsertest.py',103),
  ('TopLevelDecl -> MethodDecl','TopLevelDecl',1,'p_TopLevelDecl','parsertest.py',104),
  ('Declaration -> ConstDecl','Declaration',1,'p_Declaration','parsertest.py',110),
  ('Declaration -> TypeDecl','Declaration',1,'p_Declaration','parsertest.py',111),
  ('Declaration -> VarDecl','Declaration',1,'p_Declaration','parsertest.py',112),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_ConstDecl','parsertest.py',118),
  ('ConstDecl -> CONST LPAREN ConstSpec_curl RPAREN','ConstDecl',4,'p_ConstDecl','parsertest.py',119),
  ('ConstSpec_curl -> ConstSpec_curl ConstSpec SEMICOLON','ConstSpec_curl',3,'p_ConstSpec_curl','parsertest.py',128),
  ('ConstSpec_curl -> <empty>','ConstSpec_curl',0,'p_ConstSpec_curl','parsertest.py',129),
  ('ConstSpec -> IdentifierList ID ASSIGN ExpressionList','ConstSpec',4,'p_ConstSpec','parsertest.py',138),
  ('ConstSpec -> IdentifierList ID DOT ID ASSIGN ExpressionList','ConstSpec',6,'p_ConstSpec','parsertest.py',139),
  ('ConstSpec -> IdentifierList Type ASSIGN ExpressionList','ConstSpec',4,'p_ConstSpec','parsertest.py',140),
  ('ConstSpec -> IdentifierList ASSIGN ExpressionList','ConstSpec',3,'p_ConstSpec','parsertest.py',141),
  ('ConstSpec -> IdentifierList','ConstSpec',1,'p_ConstSpec','parsertest.py',142),
  ('IdentifierList -> ID','IdentifierList',1,'p_IdentifierList','parsertest.py',157),
  ('IdentifierList -> ID COMMA IdentifierList','IdentifierList',3,'p_IdentifierList','parsertest.py',158),
  ('ExpressionList -> Expression','ExpressionList',1,'p_ExpressionList','parsertest.py',167),
  ('ExpressionList -> ExpressionList COMMA Expression','ExpressionList',3,'p_ExpressionList','parsertest.py',168),
  ('TypeDecl -> TYPE TypeSpec','TypeDecl',2,'p_TypeDecl','parsertest.py',177),
  ('TypeDecl -> TYPE LPAREN TypeSpec_curl RPAREN','TypeDecl',4,'p_TypeDecl','parsertest.py',178),
  ('TypeSpec_curl -> TypeSpec_curl TypeSpec SEMICOLON','TypeSpec_curl',3,'p_TypeSpec_curl','parsertest.py',187),
  ('TypeSpec_curl -> <empty>','TypeSpec_curl',0,'p_TypeSpec_curl','parsertest.py',188),
  ('TypeSpec -> AliasDecl','TypeSpec',1,'p_TypeSpec','parsertest.py',197),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_TypeSpec','parsertest.py',198),
  ('AliasDecl -> ID ASSIGN Type','AliasDecl',3,'p_AliasDecl','parsertest.py',204),
  ('AliasDecl -> ID ASSIGN ID','AliasDecl',3,'p_AliasDecl','parsertest.py',205),
  ('AliasDecl -> ID ASSIGN ID DOT ID','AliasDecl',5,'p_AliasDecl','parsertest.py',206),
  ('TypeDef -> ID Type','TypeDef',2,'p_TypeDef','parsertest.py',218),
  ('TypeDef -> ID ID','TypeDef',2,'p_TypeDef','parsertest.py',219),
  ('TypeDef -> ID ID DOT ID','TypeDef',4,'p_TypeDef','parsertest.py',220),
  ('VarDecl -> VAR VarSpec','VarDecl',2,'p_VarDecl','parsertest.py',231),
  ('VarDecl -> VAR LPAREN VarSpec_curl RPAREN','VarDecl',4,'p_VarDecl','parsertest.py',232),
  ('VarSpec_curl -> VarSpec_curl VarSpec SEMICOLON','VarSpec_curl',3,'p_VarSpec_curl','parsertest.py',241),
  ('VarSpec_curl -> <empty>','VarSpec_curl',0,'p_VarSpec_curl','parsertest.py',242),
  ('VarSpec -> IdentifierList Type ASSIGN ExpressionList','VarSpec',4,'p_VarSpec','parsertest.py',251),
  ('VarSpec -> IdentifierList ID ASSIGN ExpressionList','VarSpec',4,'p_VarSpec','parsertest.py',252),
  ('VarSpec -> IdentifierList ID DOT ID ASSIGN ExpressionList','VarSpec',6,'p_VarSpec','parsertest.py',253),
  ('VarSpec -> IdentifierList ASSIGN ExpressionList','VarSpec',3,'p_VarSpec','parsertest.py',254),
  ('VarSpec -> IdentifierList ID','VarSpec',2,'p_VarSpec','parsertest.py',255),
  ('VarSpec -> IdentifierList ID DOT ID','VarSpec',4,'p_VarSpec','parsertest.py',256),
  ('VarSpec -> IdentifierList Type','VarSpec',2,'p_VarSpec','parsertest.py',257),
  ('FunctionDecl -> FUNC ID Signature Block','FunctionDecl',4,'p_FunctionDecl','parsertest.py',268),
  ('FunctionDecl -> FUNC ID Signature','FunctionDecl',3,'p_FunctionDecl','parsertest.py',269),
  ('MethodDecl -> FUNC Receiver ID Signature Block','MethodDecl',5,'p_MethodDecl','parsertest.py',278),
  ('MethodDecl -> FUNC Receiver ID Signature','MethodDecl',4,'p_MethodDecl','parsertest.py',279),
  ('Receiver -> Parameters','Receiver',1,'p_Receiver','parsertest.py',292),
  ('Type -> LPAREN Type RPAREN','Type',3,'p_Type','parsertest.py',298),
  ('Type -> LPAREN ID RPAREN','Type',3,'p_Type','parsertest.py',299),
  ('Type -> LPAREN ID DOT ID RPAREN','Type',5,'p_Type','parsertest.py',300),
  ('Type -> TypeLit','Type',1,'p_Type','parsertest.py',301),
  ('TypeLit -> ArrayType','TypeLit',1,'p_TypeLit','parsertest.py',319),
  ('TypeLit -> StructType','TypeLit',1,'p_TypeLit','parsertest.py',320),
  ('TypeLit -> PointerType','TypeLit',1,'p_TypeLit','parsertest.py',321),
  ('TypeLit -> FunctionType','TypeLit',1,'p_TypeLit','parsertest.py',322),
  ('TypeLit -> InterfaceType','TypeLit',1,'p_TypeLit','parsertest.py',323),
  ('TypeLit -> SliceType','TypeLit',1,'p_TypeLit','parsertest.py',324),
  ('TypeLit -> MapType','TypeLit',1,'p_TypeLit','parsertest.py',325),
  ('ArrayType -> LBRACK Expression RBRACK Type','ArrayType',4,'p_ArrayType','parsertest.py',331),
  ('ArrayType -> LBRACK Expression RBRACK ID','ArrayType',4,'p_ArrayType','parsertest.py',332),
  ('ArrayType -> LBRACK Expression RBRACK ID DOT ID','ArrayType',6,'p_ArrayType','parsertest.py',333),
  ('SliceType -> LBRACK RBRACK Type','SliceType',3,'p_SliceType','parsertest.py',344),
  ('StructType -> STRUCT LBRACE FieldDecl_curl RBRACE','StructType',4,'p_StructType','parsertest.py',350),
  ('FieldDecl_curl -> FieldDecl_curl FieldDecl SEMICOLON','FieldDecl_curl',3,'p_FieldDecl_curl','parsertest.py',361),
  ('FieldDecl_curl -> <empty>','FieldDecl_curl',0,'p_FieldDecl_curl','parsertest.py',362),
  ('FieldDecl -> ID COMMA IdentifierList Type','FieldDecl',4,'p_FieldDecl','parsertest.py',371),
  ('FieldDecl -> ID COMMA IdentifierList ID','FieldDecl',4,'p_FieldDecl','parsertest.py',372),
  ('FieldDecl -> ID COMMA IdentifierList ID DOT ID','FieldDecl',6,'p_FieldDecl','parsertest.py',373),
  ('FieldDecl -> ID Type','FieldDecl',2,'p_FieldDecl','parsertest.py',374),
  ('FieldDecl -> ID ID','FieldDecl',2,'p_FieldDecl','parsertest.py',375),
  ('FieldDecl -> ID ID DOT ID','FieldDecl',4,'p_FieldDecl','parsertest.py',376),
  ('FieldDecl -> EmbeddedField','FieldDecl',1,'p_FieldDecl','parsertest.py',377),
  ('FieldDecl -> ID COMMA IdentifierList Type Tag','FieldDecl',5,'p_FieldDecl','parsertest.py',378),
  ('FieldDecl -> ID Type Tag','FieldDecl',3,'p_FieldDecl','parsertest.py',379),
  ('FieldDecl -> ID COMMA IdentifierList ID Tag','FieldDecl',5,'p_FieldDecl','parsertest.py',380),
  ('FieldDecl -> ID ID Tag','FieldDecl',3,'p_FieldDecl','parsertest.py',381),
  ('FieldDecl -> ID COMMA IdentifierList ID DOT ID Tag','FieldDecl',7,'p_FieldDecl','parsertest.py',382),
  ('FieldDecl -> ID ID DOT ID Tag','FieldDecl',5,'p_FieldDecl','parsertest.py',383),
  ('FieldDecl -> EmbeddedField Tag','FieldDecl',2,'p_FieldDecl','parsertest.py',384),
  ('EmbeddedField -> MUL ID','EmbeddedField',2,'p_EmbeddedField','parsertest.py',398),
  ('EmbeddedField -> MUL ID DOT ID','EmbeddedField',4,'p_EmbeddedField','parsertest.py',399),
  ('EmbeddedField -> ID','EmbeddedField',1,'p_EmbeddedField','parsertest.py',400),
  ('EmbeddedField -> ID DOT ID','EmbeddedField',3,'p_EmbeddedField','parsertest.py',401),
  ('Tag -> STRING','Tag',1,'p_Tag','parsertest.py',415),
  ('PointerType -> MUL Type','PointerType',2,'p_PointerType','parsertest.py',421),
  ('PointerType -> MUL ID','PointerType',2,'p_PointerType','parsertest.py',422),
  ('PointerType -> MUL ID DOT ID','PointerType',4,'p_PointerType','parsertest.py',423),
  ('FunctionType -> FUNC Signature','FunctionType',2,'p_FunctionType','parsertest.py',434),
  ('Signature -> Parameters Result','Signature',2,'p_Signature','parsertest.py',440),
  ('Result -> Parameters','Result',1,'p_Result','parsertest.py',447),
  ('Result -> Type','Result',1,'p_Result','parsertest.py',448),
  ('Result -> ID','Result',1,'p_Result','parsertest.py',449),
  ('Result -> ID DOT ID','Result',3,'p_Result','parsertest.py',450),
  ('Result -> CHAN','Result',1,'p_Result','parsertest.py',451),
  ('Parameters -> LPAREN RPAREN','Parameters',2,'p_Parameters','parsertest.py',465),
  ('Parameters -> LPAREN ParameterList RPAREN','Parameters',3,'p_Parameters','parsertest.py',466),
  ('Parameters -> LPAREN ParameterList COMMA RPAREN','Parameters',4,'p_Parameters','parsertest.py',467),
  ('ParameterList -> ParameterDecl','ParameterList',1,'p_ParameterList','parsertest.py',478),
  ('ParameterList -> ID','ParameterList',1,'p_ParameterList','parsertest.py',479),
  ('ParameterList -> ID DOT ID','ParameterList',3,'p_ParameterList','parsertest.py',480),
  ('ParameterList -> CHAN Type','ParameterList',2,'p_ParameterList','parsertest.py',481),
  ('ParameterList -> ParameterList COMMA ID','ParameterList',3,'p_ParameterList','parsertest.py',482),
  ('ParameterList -> ParameterList COMMA ID DOT ID','ParameterList',5,'p_ParameterList','parsertest.py',483),
  ('ParameterList -> ParameterList COMMA CHAN Type','ParameterList',4,'p_ParameterList','parsertest.py',484),
  ('ParameterList -> ParameterList COMMA ParameterDecl','ParameterList',3,'p_ParameterList','parsertest.py',485),
  ('ParaIdList -> ID COMMA ID','ParaIdList',3,'p_ParaIdList','parsertest.py',506),
  ('ParaIdList -> ParaIdList COMMA ID','ParaIdList',3,'p_ParaIdList','parsertest.py',507),
  ('ParameterDecl -> ParaIdList ELLIPSIS Type','ParameterDecl',3,'p_ParameterDecl','parsertest.py',516),
  ('ParameterDecl -> ParaIdList Type','ParameterDecl',2,'p_ParameterDecl','parsertest.py',517),
  ('ParameterDecl -> ID ELLIPSIS Type','ParameterDecl',3,'p_ParameterDecl','parsertest.py',518),
  ('ParameterDecl -> ID Type','ParameterDecl',2,'p_ParameterDecl','parsertest.py',519),
  ('ParameterDecl -> ELLIPSIS Type','ParameterDecl',2,'p_ParameterDecl','parsertest.py',520),
  ('ParameterDecl -> ParaIdList ELLIPSIS ID','ParameterDecl',3,'p_ParameterDecl','parsertest.py',521),
  ('ParameterDecl -> ParaIdList ID','ParameterDecl',2,'p_ParameterDecl','parsertest.py',522),
  ('ParameterDecl -> ID ELLIPSIS ID','ParameterDecl',3,'p_ParameterDecl','parsertest.py',523),
  ('ParameterDecl -> ID ID','ParameterDecl',2,'p_ParameterDecl','parsertest.py',524),
  ('ParameterDecl -> ELLIPSIS ID','ParameterDecl',2,'p_ParameterDecl','parsertest.py',525),
  ('ParameterDecl -> ParaIdList ELLIPSIS ID DOT ID','ParameterDecl',5,'p_ParameterDecl','parsertest.py',526),
  ('ParameterDecl -> ParaIdList ID DOT ID','ParameterDecl',4,'p_ParameterDecl','parsertest.py',527),
  ('ParameterDecl -> ID ELLIPSIS ID DOT ID','ParameterDecl',5,'p_ParameterDecl','parsertest.py',528),
  ('ParameterDecl -> ID ID DOT ID','ParameterDecl',4,'p_ParameterDecl','parsertest.py',529),
  ('ParameterDecl -> ELLIPSIS ID DOT ID','ParameterDecl',4,'p_ParameterDecl','parsertest.py',530),
  ('InterfaceType -> INTERFACE LBRACE MethodSpec_curl RBRACE','InterfaceType',4,'p_InterfaceType','parsertest.py',542),
  ('MethodSpec_curl -> MethodSpec_curl MethodSpec SEMICOLON','MethodSpec_curl',3,'p_MethodSpec_curl','parsertest.py',548),
  ('MethodSpec_curl -> <empty>','MethodSpec_curl',0,'p_MethodSpec_curl','parsertest.py',549),
  ('MethodSpec -> ID Signature','MethodSpec',2,'p_MethodSpec','parsertest.py',558),
  ('MethodSpec -> ID','MethodSpec',1,'p_MethodSpec','parsertest.py',559),
  ('MethodSpec -> ID DOT ID','MethodSpec',3,'p_MethodSpec','parsertest.py',560),
  ('MapType -> MAP LBRACK Type RBRACK Type','MapType',5,'p_MapType','parsertest.py',571),
  ('MapType -> MAP LBRACK Type RBRACK ID','MapType',5,'p_MapType','parsertest.py',572),
  ('MapType -> MAP LBRACK Type RBRACK ID DOT ID','MapType',7,'p_MapType','parsertest.py',573),
  ('MapType -> MAP LBRACK ID RBRACK Type','MapType',5,'p_MapType','parsertest.py',574),
  ('MapType -> MAP LBRACK ID RBRACK ID','MapType',5,'p_MapType','parsertest.py',575),
  ('MapType -> MAP LBRACK ID RBRACK ID DOT ID','MapType',7,'p_MapType','parsertest.py',576),
  ('MapType -> MAP LBRACK ID DOT ID RBRACK Type','MapType',7,'p_MapType','parsertest.py',577),
  ('MapType -> MAP LBRACK ID DOT ID RBRACK ID','MapType',7,'p_MapType','parsertest.py',578),
  ('MapType -> MAP LBRACK ID DOT ID RBRACK ID DOT ID','MapType',9,'p_MapType','parsertest.py',579),
  ('Block -> LBRACE StatementList RBRACE','Block',3,'p_Block','parsertest.py',590),
  ('StatementList -> Statement_curl','StatementList',1,'p_StatementList','parsertest.py',596),
  ('Statement_curl -> Statement_curl Statement SEMICOLON','Statement_curl',3,'p_Statement_curl','parsertest.py',602),
  ('Statement_curl -> <empty>','Statement_curl',0,'p_Statement_curl','parsertest.py',603),
  ('Expression -> UnaryExpr','Expression',1,'p_Expression','parsertest.py',613),
  ('Expression -> Expression BinaryOp UnaryExpr','Expression',3,'p_Expression','parsertest.py',614),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_UnaryExpr','parsertest.py',623),
  ('UnaryExpr -> UnaryOp PrimaryExpr','UnaryExpr',2,'p_UnaryExpr','parsertest.py',624),
  ('BinaryOp -> LOR','BinaryOp',1,'p_BinaryOp','parsertest.py',634),
  ('BinaryOp -> LAND','BinaryOp',1,'p_BinaryOp','parsertest.py',635),
  ('BinaryOp -> RelOp','BinaryOp',1,'p_BinaryOp','parsertest.py',636),
  ('BinaryOp -> AddOp','BinaryOp',1,'p_BinaryOp','parsertest.py',637),
  ('BinaryOp -> MulOp','BinaryOp',1,'p_BinaryOp','parsertest.py',638),
  ('RelOp -> EQL','RelOp',1,'p_RelOp','parsertest.py',647),
  ('RelOp -> NEQ','RelOp',1,'p_RelOp','parsertest.py',648),
  ('RelOp -> LTN','RelOp',1,'p_RelOp','parsertest.py',649),
  ('RelOp -> LEQ','RelOp',1,'p_RelOp','parsertest.py',650),
  ('RelOp -> GTN','RelOp',1,'p_RelOp','parsertest.py',651),
  ('RelOp -> GEQ','RelOp',1,'p_RelOp','parsertest.py',652),
  ('AddOp -> ADD','AddOp',1,'p_AddOp','parsertest.py',658),
  ('AddOp -> SUB','AddOp',1,'p_AddOp','parsertest.py',659),
  ('AddOp -> OR','AddOp',1,'p_AddOp','parsertest.py',660),
  ('AddOp -> XOR','AddOp',1,'p_AddOp','parsertest.py',661),
  ('MulOp -> MUL','MulOp',1,'p_MulOp','parsertest.py',667),
  ('MulOp -> DIV','MulOp',1,'p_MulOp','parsertest.py',668),
  ('MulOp -> MOD','MulOp',1,'p_MulOp','parsertest.py',669),
  ('MulOp -> SHL','MulOp',1,'p_MulOp','parsertest.py',670),
  ('MulOp -> SHR','MulOp',1,'p_MulOp','parsertest.py',671),
  ('MulOp -> AND','MulOp',1,'p_MulOp','parsertest.py',672),
  ('MulOp -> AND_NOT','MulOp',1,'p_MulOp','parsertest.py',673),
  ('UnaryOp -> ADD','UnaryOp',1,'p_UnaryOp','parsertest.py',678),
  ('UnaryOp -> SUB','UnaryOp',1,'p_UnaryOp','parsertest.py',679),
  ('UnaryOp -> NOT','UnaryOp',1,'p_UnaryOp','parsertest.py',680),
  ('UnaryOp -> XOR','UnaryOp',1,'p_UnaryOp','parsertest.py',681),
  ('UnaryOp -> MUL','UnaryOp',1,'p_UnaryOp','parsertest.py',682),
  ('UnaryOp -> AND','UnaryOp',1,'p_UnaryOp','parsertest.py',683),
  ('UnaryOp -> ARROW','UnaryOp',1,'p_UnaryOp','parsertest.py',684),
  ('PrimaryExpr -> Literal','PrimaryExpr',1,'p_PrimaryExpr','parsertest.py',690),
  ('PrimaryExpr -> ID','PrimaryExpr',1,'p_PrimaryExpr','parsertest.py',691),
  ('PrimaryExpr -> ID DOT ID','PrimaryExpr',3,'p_PrimaryExpr','parsertest.py',692),
  ('PrimaryExpr -> LPAREN Expression RPAREN','PrimaryExpr',3,'p_PrimaryExpr','parsertest.py',693),
  ('PrimaryExpr -> Conversion','PrimaryExpr',1,'p_PrimaryExpr','parsertest.py',694),
  ('PrimaryExpr -> MethodExpr','PrimaryExpr',1,'p_PrimaryExpr','parsertest.py',695),
  ('PrimaryExpr -> PrimaryExpr Selector','PrimaryExpr',2,'p_PrimaryExpr','parsertest.py',696),
  ('PrimaryExpr -> PrimaryExpr Index','PrimaryExpr',2,'p_PrimaryExpr','parsertest.py',697),
  ('PrimaryExpr -> PrimaryExpr Slice','PrimaryExpr',2,'p_PrimaryExpr','parsertest.py',698),
  ('PrimaryExpr -> PrimaryExpr TypeAssertion','PrimaryExpr',2,'p_PrimaryExpr','parsertest.py',699),
  ('PrimaryExpr -> PrimaryExpr Arguments','PrimaryExpr',2,'p_PrimaryExpr','parsertest.py',700),
  ('Selector -> DOT ID','Selector',2,'p_Selector','parsertest.py',716),
  ('Index -> LBRACK Expression RBRACK','Index',3,'p_Index','parsertest.py',722),
  ('Slice -> LBRACK Expression COLON Expression RBRACK','Slice',5,'p_Slice','parsertest.py',728),
  ('Slice -> LBRACK COLON Expression RBRACK','Slice',4,'p_Slice','parsertest.py',729),
  ('Slice -> LBRACK Expression COLON RBRACK','Slice',4,'p_Slice','parsertest.py',730),
  ('Slice -> LBRACK COLON RBRACK','Slice',3,'p_Slice','parsertest.py',731),
  ('Slice -> LBRACK Expression COLON Expression COLON Expression RBRACK','Slice',7,'p_Slice','parsertest.py',732),
  ('Slice -> LBRACK COLON Expression COLON Expression RBRACK','Slice',6,'p_Slice','parsertest.py',733),
  ('TypeAssertion -> DOT LPAREN Type RPAREN','TypeAssertion',4,'p_TypeAssertion','parsertest.py',744),
  ('TypeAssertion -> DOT LPAREN ID RPAREN','TypeAssertion',4,'p_TypeAssertion','parsertest.py',745),
  ('TypeAssertion -> DOT LPAREN ID DOT ID RPAREN','TypeAssertion',6,'p_TypeAssertion','parsertest.py',746),
  ('Arguments -> LPAREN RPAREN','Arguments',2,'p_Arguments','parsertest.py',758),
  ('Arguments -> LPAREN ExpressionList RPAREN','Arguments',3,'p_Arguments','parsertest.py',759),
  ('Arguments -> LPAREN ExpressionList COMMA RPAREN','Arguments',4,'p_Arguments','parsertest.py',760),
  ('Arguments -> LPAREN ExpressionList ELLIPSIS RPAREN','Arguments',4,'p_Arguments','parsertest.py',761),
  ('Arguments -> LPAREN ExpressionList ELLIPSIS COMMA RPAREN','Arguments',5,'p_Arguments','parsertest.py',762),
  ('Arguments -> LPAREN Type RPAREN','Arguments',3,'p_Arguments','parsertest.py',763),
  ('Arguments -> LPAREN Type COMMA RPAREN','Arguments',4,'p_Arguments','parsertest.py',764),
  ('Arguments -> LPAREN Type ELLIPSIS RPAREN','Arguments',4,'p_Arguments','parsertest.py',765),
  ('Arguments -> LPAREN Type ELLIPSIS COMMA RPAREN','Arguments',5,'p_Arguments','parsertest.py',766),
  ('Arguments -> LPAREN Type COMMA ExpressionList RPAREN','Arguments',5,'p_Arguments','parsertest.py',767),
  ('Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN','Arguments',6,'p_Arguments','parsertest.py',768),
  ('Arguments -> LPAREN Type COMMA ExpressionList ELLIPSIS RPAREN','Arguments',6,'p_Arguments','parsertest.py',769),
  ('Arguments -> LPAREN Type COMMA ExpressionList ELLIPSIS COMMA RPAREN','Arguments',7,'p_Arguments','parsertest.py',770),
  ('Arguments -> LPAREN ID RPAREN','Arguments',3,'p_Arguments','parsertest.py',771),
  ('Arguments -> LPAREN ID COMMA RPAREN','Arguments',4,'p_Arguments','parsertest.py',772),
  ('Arguments -> LPAREN ID ELLIPSIS RPAREN','Arguments',4,'p_Arguments','parsertest.py',773),
  ('Arguments -> LPAREN ID ELLIPSIS COMMA RPAREN','Arguments',5,'p_Arguments','parsertest.py',774),
  ('Arguments -> LPAREN ID COMMA ExpressionList RPAREN','Arguments',5,'p_Arguments','parsertest.py',775),
  ('Arguments -> LPAREN ID COMMA ExpressionList COMMA RPAREN','Arguments',6,'p_Arguments','parsertest.py',776),
  ('Arguments -> LPAREN ID COMMA ExpressionList ELLIPSIS RPAREN','Arguments',6,'p_Arguments','parsertest.py',777),
  ('Arguments -> LPAREN ID COMMA ExpressionList ELLIPSIS COMMA RPAREN','Arguments',7,'p_Arguments','parsertest.py',778),
  ('Arguments -> LPAREN ID DOT ID RPAREN','Arguments',5,'p_Arguments','parsertest.py',779),
  ('Arguments -> LPAREN ID DOT ID COMMA RPAREN','Arguments',6,'p_Arguments','parsertest.py',780),
  ('Arguments -> LPAREN ID DOT ID ELLIPSIS RPAREN','Arguments',6,'p_Arguments','parsertest.py',781),
  ('Arguments -> LPAREN ID DOT ID ELLIPSIS COMMA RPAREN','Arguments',7,'p_Arguments','parsertest.py',782),
  ('Arguments -> LPAREN ID DOT ID COMMA ExpressionList RPAREN','Arguments',7,'p_Arguments','parsertest.py',783),
  ('Arguments -> LPAREN ID DOT ID COMMA ExpressionList COMMA RPAREN','Arguments',8,'p_Arguments','parsertest.py',784),
  ('Arguments -> LPAREN ID DOT ID COMMA ExpressionList ELLIPSIS RPAREN','Arguments',8,'p_Arguments','parsertest.py',785),
  ('Arguments -> LPAREN ID DOT ID COMMA ExpressionList ELLIPSIS COMMA RPAREN','Arguments',9,'p_Arguments','parsertest.py',786),
  ('MethodExpr -> CHAN Type DOT ID','MethodExpr',4,'p_MethodExpr','parsertest.py',798),
  ('MethodExpr -> CHAN ID DOT ID','MethodExpr',4,'p_MethodExpr','parsertest.py',799),
  ('MethodExpr -> CHAN ID DOT ID DOT ID','MethodExpr',6,'p_MethodExpr','parsertest.py',800),
  ('Conversion -> Type LPAREN Expression COMMA RPAREN','Conversion',5,'p_Conversion','parsertest.py',811),
  ('Conversion -> Type LPAREN Expression RPAREN','Conversion',4,'p_Conversion','parsertest.py',812),
  ('Conversion -> ID LPAREN Expression COMMA RPAREN','Conversion',5,'p_Conversion','parsertest.py',813),
  ('Conversion -> ID LPAREN Expression RPAREN','Conversion',4,'p_Conversion','parsertest.py',814),
  ('Literal -> BasicLit','Literal',1,'p_Literal','parsertest.py',825),
  ('Literal -> CompositeLit','Literal',1,'p_Literal','parsertest.py',826),
  ('Literal -> FunctionLit','Literal',1,'p_Literal','parsertest.py',827),
  ('BasicLit -> INT','BasicLit',1,'p_BasicLit','parsertest.py',833),
  ('BasicLit -> FLOAT','BasicLit',1,'p_BasicLit','parsertest.py',834),
  ('BasicLit -> IMAG','BasicLit',1,'p_BasicLit','parsertest.py',835),
  ('BasicLit -> RUNE','BasicLit',1,'p_BasicLit','parsertest.py',836),
  ('BasicLit -> STRING','BasicLit',1,'p_BasicLit','parsertest.py',837),
  ('CompositeLit -> StructType LiteralValue','CompositeLit',2,'p_CompositeLit','parsertest.py',843),
  ('CompositeLit -> ArrayType LiteralValue','CompositeLit',2,'p_CompositeLit','parsertest.py',844),
  ('CompositeLit -> LBRACK ELLIPSIS RBRACK Type LiteralValue','CompositeLit',5,'p_CompositeLit','parsertest.py',845),
  ('CompositeLit -> LBRACK ELLIPSIS RBRACK ID LiteralValue','CompositeLit',5,'p_CompositeLit','parsertest.py',846),
  ('CompositeLit -> LBRACK ELLIPSIS RBRACK ID DOT ID LiteralValue','CompositeLit',7,'p_CompositeLit','parsertest.py',847),
  ('CompositeLit -> SliceType LiteralValue','CompositeLit',2,'p_CompositeLit','parsertest.py',848),
  ('CompositeLit -> MapType LiteralValue','CompositeLit',2,'p_CompositeLit','parsertest.py',849),
  ('CompositeLit -> ID LiteralValue','CompositeLit',2,'p_CompositeLit','parsertest.py',850),
  ('CompositeLit -> ID DOT ID LiteralValue','CompositeLit',4,'p_CompositeLit','parsertest.py',851),
  ('LiteralValue -> LBRACE ElementList COMMA RBRACE','LiteralValue',4,'p_LiteralValue','parsertest.py',862),
  ('LiteralValue -> LBRACE ElementList RBRACE','LiteralValue',3,'p_LiteralValue','parsertest.py',863),
  ('LiteralValue -> LBRACE RBRACE','LiteralValue',2,'p_LiteralValue','parsertest.py',864),
  ('ElementList -> KeyedElement','ElementList',1,'p_ElementList','parsertest.py',874),
  ('ElementList -> ElementList COMMA KeyedElement','ElementList',3,'p_ElementList','parsertest.py',875),
  ('KeyedElement -> ID COLON Element','KeyedElement',3,'p_KeyedElement','parsertest.py',884),
  ('KeyedElement -> Expression COLON Element','KeyedElement',3,'p_KeyedElement','parsertest.py',885),
  ('KeyedElement -> LiteralValue COLON Element','KeyedElement',3,'p_KeyedElement','parsertest.py',886),
  ('KeyedElement -> Element','KeyedElement',1,'p_KeyedElement','parsertest.py',887),
  ('Element -> Expression','Element',1,'p_Element','parsertest.py',900),
  ('Element -> LiteralValue','Element',1,'p_Element','parsertest.py',901),
  ('FunctionLit -> FUNC Signature Block','FunctionLit',3,'p_FunctionLit','parsertest.py',907),
  ('Statement -> Declaration','Statement',1,'p_Statement','parsertest.py',913),
  ('Statement -> LabelledStmt','Statement',1,'p_Statement','parsertest.py',914),
  ('Statement -> SimpleStmt','Statement',1,'p_Statement','parsertest.py',915),
  ('Statement -> GoStmt','Statement',1,'p_Statement','parsertest.py',916),
  ('Statement -> ReturnStmt','Statement',1,'p_Statement','parsertest.py',917),
  ('Statement -> BreakStmt','Statement',1,'p_Statement','parsertest.py',918),
  ('Statement -> ContinueStmt','Statement',1,'p_Statement','parsertest.py',919),
  ('Statement -> GotoStmt','Statement',1,'p_Statement','parsertest.py',920),
  ('Statement -> FallthroughStmt','Statement',1,'p_Statement','parsertest.py',921),
  ('Statement -> IfStmt','Statement',1,'p_Statement','parsertest.py',922),
  ('Statement -> Block','Statement',1,'p_Statement','parsertest.py',923),
  ('Statement -> SwitchStmt','Statement',1,'p_Statement','parsertest.py',924),
  ('Statement -> SelectStmt','Statement',1,'p_Statement','parsertest.py',925),
  ('Statement -> ForStmt','Statement',1,'p_Statement','parsertest.py',926),
  ('Statement -> DeferStmt','Statement',1,'p_Statement','parsertest.py',927),
  ('SimpleStmt -> ExpressionStmt','SimpleStmt',1,'p_SimpleStmt','parsertest.py',933),
  ('SimpleStmt -> SendStmt','SimpleStmt',1,'p_SimpleStmt','parsertest.py',934),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_SimpleStmt','parsertest.py',935),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_SimpleStmt','parsertest.py',936),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_SimpleStmt','parsertest.py',937),
  ('SimpleStmt -> <empty>','SimpleStmt',0,'p_SimpleStmt','parsertest.py',938),
  ('ExpressionStmt -> Expression','ExpressionStmt',1,'p_ExpressionStmt','parsertest.py',944),
  ('SendStmt -> Expression ARROW Expression','SendStmt',3,'p_SendStmt','parsertest.py',950),
  ('IncDecStmt -> Expression INC','IncDecStmt',2,'p_IncDecStmt','parsertest.py',956),
  ('IncDecStmt -> Expression DEC','IncDecStmt',2,'p_IncDecStmt','parsertest.py',957),
  ('Assignment -> ExpressionList AssignOp ExpressionList','Assignment',3,'p_Assignment','parsertest.py',963),
  ('AssignOp -> ADD_ASSIGN','AssignOp',1,'p_AssignOp','parsertest.py',969),
  ('AssignOp -> SUB_ASSIGN','AssignOp',1,'p_AssignOp','parsertest.py',970),
  ('AssignOp -> MUL_ASSIGN','AssignOp',1,'p_AssignOp','parsertest.py',971),
  ('AssignOp -> DIV_ASSIGN','AssignOp',1,'p_AssignOp','parsertest.py',972),
  ('AssignOp -> MOD_ASSIGN','AssignOp',1,'p_AssignOp','parsertest.py',973),
  ('AssignOp -> AND_ASSIGN','AssignOp',1,'p_AssignOp','parsertest.py',974),
  ('AssignOp -> AND_NOT_ASSIGN','AssignOp',1,'p_AssignOp','parsertest.py',975),
  ('AssignOp -> OR_ASSIGN','AssignOp',1,'p_AssignOp','parsertest.py',976),
  ('AssignOp -> XOR_ASSIGN','AssignOp',1,'p_AssignOp','parsertest.py',977),
  ('AssignOp -> SHL_ASSIGN','AssignOp',1,'p_AssignOp','parsertest.py',978),
  ('AssignOp -> SHR_ASSIGN','AssignOp',1,'p_AssignOp','parsertest.py',979),
  ('AssignOp -> ASSIGN','AssignOp',1,'p_AssignOp','parsertest.py',980),
  ('LabelledStmt -> ID COLON Statement','LabelledStmt',3,'p_LabelledStmt','parsertest.py',986),
  ('GoStmt -> GO Expression','GoStmt',2,'p_GoStmt','parsertest.py',992),
  ('ReturnStmt -> RETURN ExpressionList','ReturnStmt',2,'p_ReturnStmt','parsertest.py',999),
  ('ReturnStmt -> RETURN','ReturnStmt',1,'p_ReturnStmt','parsertest.py',1000),
  ('BreakStmt -> BREAK ID','BreakStmt',2,'p_BreakStmt','parsertest.py',1009),
  ('BreakStmt -> BREAK','BreakStmt',1,'p_BreakStmt','parsertest.py',1010),
  ('ContinueStmt -> CONTINUE ID','ContinueStmt',2,'p_ContinueStmt','parsertest.py',1019),
  ('ContinueStmt -> CONTINUE','ContinueStmt',1,'p_ContinueStmt','parsertest.py',1020),
  ('GotoStmt -> GOTO ID','GotoStmt',2,'p_GotoStmt','parsertest.py',1029),
  ('FallthroughStmt -> FALLTHROUGH','FallthroughStmt',1,'p_FallthroughStmt','parsertest.py',1035),
  ('DeferStmt -> DEFER Expression','DeferStmt',2,'p_DeferStmt','parsertest.py',1041),
  ('ShortVarDecl -> IdentifierList DEFINE ExpressionList','ShortVarDecl',3,'p_ShortVarDecl','parsertest.py',1047),
  ('IfStmt -> IF Expression Block','IfStmt',3,'p_IfStmt','parsertest.py',1053),
  ('IfStmt -> IF SimpleStmt SEMICOLON Expression Block','IfStmt',5,'p_IfStmt','parsertest.py',1054),
  ('IfStmt -> IF Expression Block ELSE IfStmt','IfStmt',5,'p_IfStmt','parsertest.py',1055),
  ('IfStmt -> IF Expression Block ELSE Block','IfStmt',5,'p_IfStmt','parsertest.py',1056),
  ('IfStmt -> IF SimpleStmt SEMICOLON Expression Block ELSE Block','IfStmt',7,'p_IfStmt','parsertest.py',1057),
  ('IfStmt -> IF SimpleStmt SEMICOLON Expression Block ELSE IfStmt','IfStmt',7,'p_IfStmt','parsertest.py',1058),
  ('SwitchStmt -> ExprSwitchStmt','SwitchStmt',1,'p_SwitchStmt','parsertest.py',1069),
  ('SwitchStmt -> TypeSwitchStmt','SwitchStmt',1,'p_SwitchStmt','parsertest.py',1070),
  ('ExprSwitchStmt -> SWITCH LBRACE ExprCaseClause_curl RBRACE','ExprSwitchStmt',4,'p_ExprSwitchStmt','parsertest.py',1083),
  ('ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON LBRACE ExprCaseClause_curl RBRACE','ExprSwitchStmt',6,'p_ExprSwitchStmt','parsertest.py',1084),
  ('ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON Expression LBRACE ExprCaseClause_curl RBRACE','ExprSwitchStmt',7,'p_ExprSwitchStmt','parsertest.py',1085),
  ('ExprCaseClause_curl -> ExprCaseClause_curl ExprCaseClause','ExprCaseClause_curl',2,'p_ExprCaseClause_curl','parsertest.py',1096),
  ('ExprCaseClause_curl -> <empty>','ExprCaseClause_curl',0,'p_ExprCaseClause_curl','parsertest.py',1097),
  ('ExprCaseClause -> ExprSwitchCase COLON StatementList','ExprCaseClause',3,'p_ExprCaseClause','parsertest.py',1106),
  ('ExprSwitchCase -> CASE ExpressionList','ExprSwitchCase',2,'p_ExprSwitchCase','parsertest.py',1112),
  ('ExprSwitchCase -> DEFAULT','ExprSwitchCase',1,'p_ExprSwitchCase','parsertest.py',1113),
  ('TypeSwitchStmt -> SWITCH SimpleStmt SEMICOLON TypeSwitchGuard LBRACE TypeCaseClause_curl RBRACE','TypeSwitchStmt',7,'p_TypeSwitchStmt','parsertest.py',1123),
  ('TypeSwitchStmt -> SWITCH TypeSwitchGuard LBRACE TypeCaseClause_curl RBRACE','TypeSwitchStmt',5,'p_TypeSwitchStmt','parsertest.py',1124),
  ('TypeCaseClause_curl -> TypeCaseClause_curl TypeCaseClause','TypeCaseClause_curl',2,'p_TypeCaseClause_curl','parsertest.py',1135),
  ('TypeCaseClause_curl -> <empty>','TypeCaseClause_curl',0,'p_TypeCaseClause_curl','parsertest.py',1136),
  ('TypeCaseClause -> TypeSwitchCase COLON StatementList','TypeCaseClause',3,'p_TypeCaseClause','parsertest.py',1145),
  ('TypeSwitchGuard -> ID DEFINE PrimaryExpr DOT LPAREN TYPE RPAREN','TypeSwitchGuard',7,'p_TypeSwitchGuard','parsertest.py',1151),
  ('TypeSwitchGuard -> PrimaryExpr DOT LPAREN TYPE RPAREN','TypeSwitchGuard',5,'p_TypeSwitchGuard','parsertest.py',1152),
  ('TypeSwitchCase -> CASE TypeList','TypeSwitchCase',2,'p_TypeSwitchCase','parsertest.py',1163),
  ('TypeSwitchCase -> DEFAULT','TypeSwitchCase',1,'p_TypeSwitchCase','parsertest.py',1164),
  ('TypeList -> Type C_Type_curl','TypeList',2,'p_TypeList','parsertest.py',1173),
  ('TypeList -> ID C_Type_curl','TypeList',2,'p_TypeList','parsertest.py',1174),
  ('TypeList -> ID DOT ID C_Type_curl','TypeList',4,'p_TypeList','parsertest.py',1175),
  ('C_Type_curl -> C_Type_curl COMMA Type','C_Type_curl',3,'p_C_Type_curl','parsertest.py',1186),
  ('C_Type_curl -> C_Type_curl COMMA ID','C_Type_curl',3,'p_C_Type_curl','parsertest.py',1187),
  ('C_Type_curl -> C_Type_curl COMMA ID DOT ID','C_Type_curl',5,'p_C_Type_curl','parsertest.py',1188),
  ('C_Type_curl -> <empty>','C_Type_curl',0,'p_C_Type_curl','parsertest.py',1189),
  ('ForStmt -> FOR Expression Block','ForStmt',3,'p_ForStmt','parsertest.py',1201),
  ('ForStmt -> FOR ForClause Block','ForStmt',3,'p_ForStmt','parsertest.py',1202),
  ('ForStmt -> FOR RangeClause Block','ForStmt',3,'p_ForStmt','parsertest.py',1203),
  ('ForStmt -> FOR Block','ForStmt',2,'p_ForStmt','parsertest.py',1204),
  ('ForClause -> SimpleStmt SEMICOLON SEMICOLON SimpleStmt','ForClause',4,'p_ForClause','parsertest.py',1215),
  ('ForClause -> SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt','ForClause',5,'p_ForClause','parsertest.py',1216),
  ('RangeClause -> IdentifierList DEFINE RANGE Expression','RangeClause',4,'p_RangeClause','parsertest.py',1227),
  ('RangeClause -> ExpressionList ASSIGN RANGE Expression','RangeClause',4,'p_RangeClause','parsertest.py',1228),
  ('RangeClause -> RANGE Expression','RangeClause',2,'p_RangeClause','parsertest.py',1229),
  ('SelectStmt -> SELECT LBRACE CommClause_curl RBRACE','SelectStmt',4,'p_SelectStmt','parsertest.py',1240),
  ('CommClause_curl -> CommClause_curl CommClause','CommClause_curl',2,'p_CommClause_curl','parsertest.py',1246),
  ('CommClause_curl -> <empty>','CommClause_curl',0,'p_CommClause_curl','parsertest.py',1247),
  ('CommClause -> CommCase COLON StatementList','CommClause',3,'p_CommClause','parsertest.py',1256),
  ('CommCase -> CASE SendStmt','CommCase',2,'p_CommCase','parsertest.py',1262),
  ('CommCase -> CASE RecvStmt','CommCase',2,'p_CommCase','parsertest.py',1263),
  ('CommCase -> DEFAULT','CommCase',1,'p_CommCase','parsertest.py',1264),
  ('RecvStmt -> IdentifierList DEFINE Expression','RecvStmt',3,'p_RecvStmt','parsertest.py',1273),
  ('RecvStmt -> ExpressionList ASSIGN Expression','RecvStmt',3,'p_RecvStmt','parsertest.py',1274),
  ('RecvStmt -> Expression','RecvStmt',1,'p_RecvStmt','parsertest.py',1275),
]
